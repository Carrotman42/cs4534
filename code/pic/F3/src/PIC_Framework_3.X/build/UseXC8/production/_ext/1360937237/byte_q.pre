
# 1 "../src/byte_q.c"

# 7 "../src/byte_q.h"
typedef struct {
unsigned char write;
unsigned char read;
unsigned char data[(1 << 7)];
} byte_queue;

void vqInit(byte_queue *q);
int vqSend(byte_queue *q, unsigned len, unsigned char *data);



inline unsigned char vqPop(byte_queue*q, char *ok);

# 4 "../src/byte_q.c"
void vqInit(byte_queue *q) {
q->write = q->read = 0;
}

# 12
int vqSend(byte_queue *q, unsigned len, unsigned char *data) {

unsigned char w = q->write, r = q->read;
unsigned char cap;

if (r > w) {
cap = r - w;
} else {
cap = (1 << 7) - (w - r);
}
if (cap <= len) return 1;

unsigned char* dest = &q->data[0];
unsigned char last = (w + len) & ((1 << 7) - 1);
while (w != last) {
dest[w] = *data++;
w = (w + 1) & ((1 << 7) - 1);
}

q->write = w;
return 0;
}

inline unsigned char vqPop(byte_queue *q, char *ok) {

register unsigned char r = q->read;
if (*ok = (q->write != r)) {
unsigned char ret = q->data[r];
q->read = (r + 1) & ((1 << 7) - 1);
return ret;
}
return 0;
}

