

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 10 17:57:31 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           	psect	idataCOMRAM
    69  0018F8                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _sample1
    73  0018F8  01                 	db	1
    74                           
    75                           ;initializer for _sample2
    76  0018F9  05                 	db	5
    77                           
    78                           ;initializer for _sample3
    79  0018FA  10                 	db	16
    80                           
    81                           ;initializer for _sample4
    82  0018FB  D8                 	db	216
    83                           
    84                           ;initializer for _sample5
    85  0018FC  FE                 	db	254
    86  0000                     _INTCONbits	set	4082
    87  0000                     _IPR1bits	set	3999
    88  0000                     _LATB	set	3978
    89  0000                     _LATBbits	set	3978
    90  0000                     _OSCCON	set	4051
    91  0000                     _OSCCONbits	set	4051
    92  0000                     _OSCTUNEbits	set	3995
    93  0000                     _PIE1bits	set	3997
    94  0000                     _PIR1bits	set	3998
    95  0000                     _RCONbits	set	4048
    96  0000                     _RCREG	set	4014
    97  0000                     _RCSTA	set	4011
    98  0000                     _RCSTAbits	set	4011
    99  0000                     _SPBRG	set	4015
   100  0000                     _SPBRGH	set	4016
   101  0000                     _SSPADD	set	4040
   102  0000                     _SSPBUF	set	4041
   103  0000                     _SSPCON1	set	4038
   104  0000                     _SSPCON1bits	set	4038
   105  0000                     _SSPCON2	set	4037
   106  0000                     _SSPCON2bits	set	4037
   107  0000                     _SSPSTAT	set	4039
   108  0000                     _SSPSTATbits	set	4039
   109  0000                     _T0CON	set	4053
   110  0000                     _T0CONbits	set	4053
   111  0000                     _TMR0H	set	4055
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR1H	set	4047
   114  0000                     _TMR1L	set	4046
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISCbits	set	3988
   117  0000                     _TXSTA	set	4012
   118  0000                     _TXSTAbits	set	4012
   119                           
   120                           ; #config settings
   121  0000                     
   122                           	psect	cinit
   123  001342                     __pcinit:
   124                           	opt stack 0
   125  001342                     start_initialization:
   126                           	opt stack 0
   127  001342                     __initialization:
   128                           	opt stack 0
   129                           
   130                           ; Clear objects allocated to BANK2 (54 bytes)
   131  001342  EE02  F000         	lfsr	0,__pbssBANK2
   132  001346  0E36               	movlw	54
   133  001348                     clear_0:
   134  001348  6AEE               	clrf	postinc0,c
   135  00134A  06E8               	decf	wreg,f,c
   136  00134C  E1FD               	bnz	clear_0
   137                           
   138                           ; Clear objects allocated to BANK1 (164 bytes)
   139  00134E  EE01  F000         	lfsr	0,__pbssBANK1
   140  001352  0EA4               	movlw	164
   141  001354                     clear_1:
   142  001354  6AEE               	clrf	postinc0,c
   143  001356  06E8               	decf	wreg,f,c
   144  001358  E1FD               	bnz	clear_1
   145                           
   146                           ; Clear objects allocated to BANK0 (11 bytes)
   147  00135A  EE00  F0E6         	lfsr	0,__pbssBANK0
   148  00135E  0E0B               	movlw	11
   149  001360                     clear_2:
   150  001360  6AEE               	clrf	postinc0,c
   151  001362  06E8               	decf	wreg,f,c
   152  001364  E1FD               	bnz	clear_2
   153                           
   154                           ; Clear objects allocated to COMRAM (7 bytes)
   155  001366  EE00  F054         	lfsr	0,__pbssCOMRAM
   156  00136A  0E07               	movlw	7
   157  00136C                     clear_3:
   158  00136C  6AEE               	clrf	postinc0,c
   159  00136E  06E8               	decf	wreg,f,c
   160  001370  E1FD               	bnz	clear_3
   161                           
   162                           ; Initialize objects allocated to COMRAM (5 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  001372  0EF8               	movlw	low __pidataCOMRAM
   165  001374  6EF6               	movwf	tblptrl,c
   166  001376  0E18               	movlw	high __pidataCOMRAM
   167  001378  6EF7               	movwf	tblptrh,c
   168  00137A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  00137C  6EF8               	movwf	tblptru,c
   170  00137E  EE00  F05B         	lfsr	0,__pdataCOMRAM
   171  001382  EE10 F005          	lfsr	1,5
   172  001386                     copy_data0:
   173  001386  0009               	tblrd		*+
   174  001388  CFF5 FFEE          	movff	tablat,postinc0
   175  00138C  50E5               	movf	postdec1,w,c
   176  00138E  50E1               	movf	fsr1l,w,c
   177  001390  E1FA               	bnz	copy_data0
   178  001392                     end_of_initialization:
   179                           	opt stack 0
   180  001392                     __end_of__initialization:
   181                           	opt stack 0
   182  001392  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  001394  6EF8               	movwf	tblptru,c
   184  001396  0100               	movlb	0
   185  001398  EFF3  F002         	goto	_main	;jump to C main() function
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195                           	psect	bssCOMRAM
   196  000054                     __pbssCOMRAM:
   197                           	opt stack 0
   198  000054                     _BrainMsgRecv:
   199                           	opt stack 0
   200  000054                     	ds	2
   201  000056                     _uc_ptr:
   202                           	opt stack 0
   203  000056                     	ds	2
   204  000058                     _MQ_Main_Willing_to_block:
   205                           	opt stack 0
   206  000058                     	ds	1
   207  000059                     _USART_Status:
   208                           	opt stack 0
   209  000059                     	ds	1
   210  00005A                     _timesreq:
   211                           	opt stack 0
   212  00005A                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	dataCOMRAM
   223  00005B                     __pdataCOMRAM:
   224                           	opt stack 0
   225  00005B                     _sample1:
   226                           	opt stack 0
   227  00005B                     	ds	1
   228  00005C                     _sample2:
   229                           	opt stack 0
   230  00005C                     	ds	1
   231  00005D                     _sample3:
   232                           	opt stack 0
   233  00005D                     	ds	1
   234  00005E                     _sample4:
   235                           	opt stack 0
   236  00005E                     	ds	1
   237  00005F                     _sample5:
   238                           	opt stack 0
   239  00005F                     	ds	1
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           postdec1	equ	0xFE5
   247                           fsr1l	equ	0xFE1
   248                           
   249                           	psect	bssBANK0
   250  0000E6                     __pbssBANK0:
   251                           	opt stack 0
   252  0000E6                     _ADacc:
   253                           	opt stack 0
   254  0000E6                     	ds	11
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           postdec1	equ	0xFE5
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	bssBANK1
   265  000100                     __pbssBANK1:
   266                           	opt stack 0
   267  000100                     _ic_ptr:
   268                           	opt stack 0
   269  000100                     	ds	2
   270  000102                     _FromMainLow_MQ:
   271                           	opt stack 0
   272  000102                     	ds	54
   273  000138                     _ToMainHigh_MQ:
   274                           	opt stack 0
   275  000138                     	ds	54
   276  00016E                     _ToMainLow_MQ:
   277                           	opt stack 0
   278  00016E                     	ds	54
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           postdec1	equ	0xFE5
   286                           fsr1l	equ	0xFE1
   287                           
   288                           	psect	bssBANK2
   289  000200                     __pbssBANK2:
   290                           	opt stack 0
   291  000200                     _FromMainHigh_MQ:
   292                           	opt stack 0
   293  000200                     	ds	54
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	cstackBANK1
   304  0001A4                     __pcstackBANK1:
   305                           	opt stack 0
   306  0001A4                     ??_resetADacc:
   307  0001A4                     ?_in_high_int:
   308                           	opt stack 0
   309  0001A4                     i2c_configure_slave@addr:
   310                           	opt stack 0
   311  0001A4                     OpenTimer0@config:
   312                           	opt stack 0
   313  0001A4                     Delay1KTCYx@unit:
   314                           	opt stack 0
   315  0001A4                     init_queue@qptr:
   316                           	opt stack 0
   317  0001A4                     check_msg@qptr:
   318                           	opt stack 0
   319  0001A4                     start_i2c_slave_reply@msg:
   320                           	opt stack 0
   321  0001A4                     init_i2c@ic:
   322                           	opt stack 0
   323  0001A4                     addADDataPoints@data:
   324                           	opt stack 0
   325  0001A4                     OpenUSART@spbrg:
   326                           	opt stack 0
   327  0001A4                     memcpy@d1:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331  0001A4                     	ds	2
   332  0001A6                     ??_OpenUSART:
   333  0001A6                     ??_start_i2c_slave_reply:
   334  0001A6                     ??_init_queue:
   335  0001A6                     ??_check_msg:
   336  0001A6                     ?_in_low_int:
   337                           	opt stack 0
   338  0001A6                     addADDataPoints@len:
   339                           	opt stack 0
   340  0001A6                     memcpy@s1:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344  0001A6                     	ds	1
   345  0001A7                     init_queue@i:
   346                           	opt stack 0
   347  0001A7                     resetADacc@i:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x3
   351  0001A7                     	ds	1
   352  0001A8                     ??_init_queues:
   353  0001A8                     ??_addADDataPoints:
   354  0001A8                     ?_in_main:
   355                           	opt stack 0
   356  0001A8                     start_i2c_slave_reply@length:
   357                           	opt stack 0
   358  0001A8                     memcpy@n:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x4
   362  0001A8                     	ds	1
   363  0001A9                     OpenUSART@config:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x5
   367  0001A9                     	ds	1
   368  0001AA                     ??_block_on_To_msgqueues:
   369  0001AA                     addADDataPoints@i:
   370                           	opt stack 0
   371  0001AA                     memcpy@d:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x6
   375  0001AA                     	ds	2
   376  0001AC                     addDataPoints@sensorid:
   377                           	opt stack 0
   378  0001AC                     memcpy@s:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x8
   382  0001AC                     	ds	2
   383  0001AE                     recv_msg@qptr:
   384                           	opt stack 0
   385  0001AE                     addDataPoints@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xA
   389  0001AE                     	ds	2
   390  0001B0                     recv_msg@maxlength:
   391                           	opt stack 0
   392  0001B0                     addDataPoints@len:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0xC
   396  0001B0                     	ds	1
   397  0001B1                     recv_msg@msgtype:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0xD
   401  0001B1                     	ds	1
   402  0001B2                     
   403                           ; 0 bytes @ 0xE
   404  0001B2                     	ds	1
   405  0001B3                     recv_msg@data:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0xF
   409  0001B3                     	ds	2
   410  0001B5                     ??_recv_msg:
   411                           
   412                           ; 0 bytes @ 0x11
   413  0001B5                     	ds	2
   414  0001B7                     recv_msg@slot:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x13
   418  0001B7                     	ds	1
   419  0001B8                     recv_msg@tlength:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x14
   423  0001B8                     	ds	2
   424  0001BA                     recv_msg@qmsg:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x16
   428  0001BA                     	ds	2
   429  0001BC                     ToMainLow_recvmsg@msgtype:
   430                           	opt stack 0
   431  0001BC                     ToMainHigh_recvmsg@msgtype:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x18
   435  0001BC                     	ds	2
   436  0001BE                     ToMainLow_recvmsg@data:
   437                           	opt stack 0
   438  0001BE                     ToMainHigh_recvmsg@data:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x1A
   442  0001BE                     	ds	2
   443  0001C0                     ToMainLow_recvmsg@maxlength:
   444                           	opt stack 0
   445  0001C0                     ToMainHigh_recvmsg@maxlength:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x1C
   449  0001C0                     	ds	1
   450  0001C1                     ??_main:
   451                           
   452                           ; 0 bytes @ 0x1D
   453  0001C1                     	ds	1
   454  0001C2                     main@to_send_buffer:
   455                           	opt stack 0
   456                           
   457                           ; 11 bytes @ 0x1E
   458  0001C2                     	ds	11
   459  0001CD                     main@msgbuffer:
   460                           	opt stack 0
   461                           
   462                           ; 11 bytes @ 0x29
   463  0001CD                     	ds	11
   464  0001D8                     main@last_reg_recvd:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x34
   468  0001D8                     	ds	1
   469  0001D9                     main@j:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x35
   473  0001D9                     	ds	2
   474  0001DB                     main@j_434:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x37
   478  0001DB                     	ds	2
   479  0001DD                     main@msgtype:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x39
   483  0001DD                     	ds	1
   484  0001DE                     main@data_points_count:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x3A
   488  0001DE                     	ds	2
   489  0001E0                     main@length:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x3C
   493  0001E0                     	ds	1
   494  0001E1                     main@ic:
   495                           	opt stack 0
   496                           
   497                           ; 28 bytes @ 0x3D
   498  0001E1                     	ds	28
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackBANK0
   509  000080                     __pcstackBANK0:
   510                           	opt stack 0
   511  000080                     sendADdata@outBuff:
   512                           	opt stack 0
   513                           
   514                           ; 100 bytes @ 0x0
   515  000080                     	ds	100
   516  0000E4                     sendADdata@bytes_packed:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x64
   520  0000E4                     	ds	2
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           
   530                           	psect	cstackCOMRAM
   531  000001                     __pcstackCOMRAM:
   532                           	opt stack 0
   533  000001                     ??_InterruptHandlerLow:
   534  000001                     
   535                           ; 0 bytes @ 0x0
   536  000001                     	ds	17
   537  000012                     ??i2_resetADacc:
   538  000012                     ?_packReturnData:
   539                           	opt stack 0
   540  000012                     ?_unpackBrainMsg:
   541                           	opt stack 0
   542  000012                     ?i2_in_high_int:
   543                           	opt stack 0
   544  000012                     handle_start@data_read:
   545                           	opt stack 0
   546  000012                     setDBG@b:
   547                           	opt stack 0
   548  000012                     resetDBG@b:
   549                           	opt stack 0
   550  000012                     packReturnData@data:
   551                           	opt stack 0
   552  000012                     unpackBrainMsg@buf:
   553                           	opt stack 0
   554  000012                     WriteTimer0@timer0:
   555                           	opt stack 0
   556  000012                     i2check_msg@qptr:
   557                           	opt stack 0
   558  000012                     i2start_i2c_slave_reply@msg:
   559                           	opt stack 0
   560  000012                     i2memcpy@d1:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x11
   564  000012                     	ds	1
   565  000013                     readNum@num:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x12
   569  000013                     	ds	1
   570  000014                     ??i2_check_msg:
   571  000014                     ??i2_start_i2c_slave_reply:
   572  000014                     ?i2_in_low_int:
   573                           	opt stack 0
   574  000014                     packReturnData@payloadLen:
   575                           	opt stack 0
   576  000014                     WriteTimer0@timer:
   577                           	opt stack 0
   578  000014                     i2memcpy@s1:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x13
   582  000014                     	ds	1
   583  000015                     i2resetADacc@i:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  000015                     	ds	1
   588  000016                     i2start_i2c_slave_reply@length:
   589                           	opt stack 0
   590  000016                     packReturnData@msg:
   591                           	opt stack 0
   592  000016                     i2memcpy@n:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x15
   596  000016                     	ds	2
   597  000018                     packReturnData@maxout:
   598                           	opt stack 0
   599  000018                     i2memcpy@d:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x17
   603  000018                     	ds	2
   604  00001A                     packReturnData@sensorID:
   605                           	opt stack 0
   606  00001A                     i2memcpy@s:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x19
   610  00001A                     	ds	2
   611  00001C                     ??_packReturnData:
   612  00001C                     send_msg@qptr:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x1B
   616  00001C                     	ds	2
   617  00001E                     send_msg@length:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x1D
   621  00001E                     	ds	1
   622  00001F                     send_msg@msgtype:
   623                           	opt stack 0
   624  00001F                     packReturnData@end:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x1E
   628  00001F                     	ds	1
   629  000020                     send_msg@data:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x1F
   633  000020                     	ds	1
   634  000021                     packReturnData@dest:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x20
   638  000021                     	ds	1
   639  000022                     ??_send_msg:
   640                           
   641                           ; 0 bytes @ 0x21
   642  000022                     	ds	1
   643  000023                     ?_packADData:
   644                           	opt stack 0
   645  000023                     send_msg@tlength:
   646                           	opt stack 0
   647  000023                     packADData@data:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x22
   651  000023                     	ds	2
   652  000025                     send_msg@slot:
   653                           	opt stack 0
   654  000025                     packADData@len:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x24
   658  000025                     	ds	1
   659  000026                     send_msg@qmsg:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x25
   663  000026                     	ds	1
   664  000027                     packADData@out:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x26
   668  000027                     	ds	1
   669  000028                     ToMainHigh_sendmsg@msgtype:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x27
   673  000028                     	ds	1
   674  000029                     ToMainHigh_sendmsg@data:
   675                           	opt stack 0
   676  000029                     packADData@maxout:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x28
   680  000029                     	ds	2
   681  00002B                     ToMainHigh_sendmsg@length:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x2A
   685  00002B                     	ds	1
   686  00002C                     ??_reqADData:
   687                           
   688                           ; 0 bytes @ 0x2B
   689  00002C                     	ds	1
   690  00002D                     reqADData@buf:
   691                           	opt stack 0
   692                           
   693                           ; 10 bytes @ 0x2C
   694  00002D                     	ds	10
   695  000037                     reqADData@numSamples:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x36
   699  000037                     	ds	1
   700  000038                     setBrainReqData@buf:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x37
   704  000038                     	ds	2
   705  00003A                     setBrainReqData@tempBrain:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x39
   709  00003A                     	ds	2
   710  00003C                     ??_i2c_int_handler:
   711                           
   712                           ; 0 bytes @ 0x3B
   713  00003C                     	ds	1
   714  00003D                     i2c_int_handler@error_buf:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x3C
   718  00003D                     	ds	3
   719  000040                     i2c_int_handler@data_written:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x3F
   723  000040                     	ds	1
   724  000041                     i2c_int_handler@overrun_error:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x40
   728  000041                     	ds	1
   729  000042                     i2c_int_handler@i2c_data:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x41
   733  000042                     	ds	1
   734  000043                     i2c_int_handler@msg_to_send:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x42
   738  000043                     	ds	1
   739  000044                     i2c_int_handler@msg_ready:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x43
   743  000044                     	ds	1
   744  000045                     i2c_int_handler@data_read:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x44
   748  000045                     	ds	1
   749  000046                     ??_InterruptHandlerHigh:
   750                           
   751                           ; 0 bytes @ 0x45
   752  000046                     	ds	14
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           postdec1	equ	0xFE5
   760                           fsr1l	equ	0xFE1
   761                           
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 187 in file "../src/main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  j               2   53[BANK1 ] int 
   772 ;;  j               2   55[BANK1 ] int 
   773 ;;  ic             28   61[BANK1 ] struct __i2c_comm
   774 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
   775 ;;  to_send_buff   11   30[BANK1 ] unsigned char [11]
   776 ;;  data_points_    2   58[BANK1 ] int 
   777 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   778 ;;  length          1   60[BANK1 ] char 
   779 ;;  msgtype         1   57[BANK1 ] unsigned char 
   780 ;;  last_reg_rec    1   52[BANK1 ] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;		None               void
   783 ;; Registers used:
   784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0      59       0       0
   792 ;;      Temps:          0       0       1       0       0
   793 ;;      Totals:         0       0      60       0       0
   794 ;;Total ram usage:       60 bytes
   795 ;; Hardware stack levels required when called:   12
   796 ;; This function calls:
   797 ;;		_OpenTimer0
   798 ;;		_OpenUSART
   799 ;;		_ToMainHigh_recvmsg
   800 ;;		_ToMainLow_recvmsg
   801 ;;		_addDataPoints
   802 ;;		_block_on_To_msgqueues
   803 ;;		_enable_interrupts
   804 ;;		_i2c_configure_slave
   805 ;;		_init_i2c
   806 ;;		_init_queues
   807 ;;		_resetAccumulators
   808 ;;		_start_i2c_slave_reply
   809 ;; This function is called by:
   810 ;;		Startup code after reset
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text0
   815  0005E6                     __ptext0:
   816                           	opt stack 0
   817  0005E6                     _main:
   818                           	opt stack 18
   819                           
   820                           ;main.c: 189: signed char length;
   821                           ;main.c: 190: unsigned char msgtype;
   822                           ;main.c: 191: unsigned char last_reg_recvd;
   823                           ;main.c: 193: i2c_comm ic;
   824                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   825                           ;main.c: 195: unsigned char to_send_buffer[10+1];
   826                           ;main.c: 196: int data_points_count = 0;
   827                           
   828                           ;incstack = 0
   829  0005E6  0E00               	movlw	0
   830  0005E8  0101               	movlb	1	; () banked
   831  0005EA  0101               	movlb	1	; () banked
   832  0005EC  6FDF               	movwf	(main@data_points_count+1)& (0+255),b
   833  0005EE  0E00               	movlw	0
   834  0005F0  0101               	movlb	1	; () banked
   835  0005F2  6FDE               	movwf	main@data_points_count& (0+255),b
   836                           
   837                           ;main.c: 200: timer0_thread_struct t0thread_data;
   838                           ;main.c: 208: OSCCON = 0x82;
   839  0005F4  0E82               	movlw	130
   840  0005F6  6ED3               	movwf	4051,c	;volatile
   841                           
   842                           ; BSR set to: 1
   843                           ;main.c: 209: OSCTUNEbits.PLLEN = 0;
   844  0005F8  9C9B               	bcf	3995,6,c	;volatile
   845                           
   846                           ; BSR set to: 1
   847                           ;main.c: 226: resetAccumulators();
   848  0005FA  EC76  F00C         	call	_resetAccumulators	;wreg free
   849                           
   850                           ;main.c: 231: init_i2c(&ic);
   851  0005FE  0101               	movlb	1	; () banked
   852  000600  0E01               	movlw	high main@ic
   853  000602  0101               	movlb	1	; () banked
   854  000604  0101               	movlb	1	; () banked
   855  000606  6FA5               	movwf	(init_i2c@ic+1)& (0+255),b
   856  000608  0101               	movlb	1	; () banked
   857  00060A  0EE1               	movlw	low main@ic
   858  00060C  0101               	movlb	1	; () banked
   859  00060E  0101               	movlb	1	; () banked
   860  000610  6FA4               	movwf	init_i2c@ic& (0+255),b
   861  000612  EC3D  F009         	call	_init_i2c	;wreg free
   862                           
   863                           ;main.c: 237: init_queues();
   864  000616  ECCF  F008         	call	_init_queues	;wreg free
   865                           
   866                           ;main.c: 241: TRISB = 0x0;
   867  00061A  0E00               	movlw	0
   868  00061C  6E93               	movwf	3987,c	;volatile
   869                           
   870                           ;main.c: 242: LATB = 0x0;
   871  00061E  0E00               	movlw	0
   872  000620  6E8A               	movwf	3978,c	;volatile
   873                           
   874                           ;main.c: 255: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
   875  000622  0E90               	movlw	144
   876  000624  ECF5  F00B         	call	_OpenTimer0
   877                           
   878                           ;main.c: 275: IPR1bits.SSPIP = 1;
   879  000628  869F               	bsf	3999,3,c	;volatile
   880                           
   881                           ;main.c: 284: i2c_configure_slave(0x9E);
   882  00062A  0E9E               	movlw	158
   883  00062C  EC0A  F00C         	call	_i2c_configure_slave
   884                           
   885                           ;main.c: 299: PIE1bits.SSPIE = 1;
   886  000630  869D               	bsf	3997,3,c	;volatile
   887                           
   888                           ;main.c: 310: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   889                           ;main.c: 311: 0b11111111 & 0b11101111, 0x19);
   890  000632  0E00               	movlw	0
   891  000634  0101               	movlb	1	; () banked
   892  000636  0101               	movlb	1	; () banked
   893  000638  6FA5               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   894  00063A  0E19               	movlw	25
   895  00063C  0101               	movlb	1	; () banked
   896  00063E  6FA4               	movwf	OpenUSART@spbrg& (0+255),b
   897  000640  0E6C               	movlw	108
   898  000642  EC8F  F007         	call	_OpenUSART
   899                           
   900                           ;main.c: 317: enable_interrupts();
   901  000646  EC72  F00C         	call	_enable_interrupts	;wreg free
   902  00064A                     l2394:
   903                           
   904                           ;main.c: 341: block_on_To_msgqueues();
   905  00064A  EC19  F008         	call	_block_on_To_msgqueues	;wreg free
   906                           
   907                           ;main.c: 348: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   908  00064E  0101               	movlb	1	; () banked
   909  000650  0E01               	movlw	high main@msgtype
   910  000652  0101               	movlb	1	; () banked
   911  000654  0101               	movlb	1	; () banked
   912  000656  6FBD               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   913  000658  0101               	movlb	1	; () banked
   914  00065A  0EDD               	movlw	low main@msgtype
   915  00065C  0101               	movlb	1	; () banked
   916  00065E  0101               	movlb	1	; () banked
   917  000660  6FBC               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   918  000662  0101               	movlb	1	; () banked
   919  000664  0E01               	movlw	high main@msgbuffer
   920  000666  0101               	movlb	1	; () banked
   921  000668  0101               	movlb	1	; () banked
   922  00066A  6FBF               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   923  00066C  0101               	movlb	1	; () banked
   924  00066E  0ECD               	movlw	low main@msgbuffer
   925  000670  0101               	movlb	1	; () banked
   926  000672  0101               	movlb	1	; () banked
   927  000674  6FBE               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   928  000676  0E0A               	movlw	10
   929  000678  ECFA  F00A         	call	_ToMainHigh_recvmsg
   930  00067C  0101               	movlb	1	; () banked
   931  00067E  0101               	movlb	1	; () banked
   932  000680  6FE0               	movwf	main@length& (0+255),b
   933                           
   934                           ; BSR set to: 1
   935                           ;main.c: 349: if (length < 0) {
   936  000682  0101               	movlb	1	; () banked
   937  000684  0101               	movlb	1	; () banked
   938  000686  BFE0               	btfsc	main@length& (0+255),7,b
   939  000688  D104               	goto	l2446
   940  00068A  D0F1               	goto	l2444
   941  00068C                     l88:
   942                           
   943                           ; BSR set to: 1
   944                           ;main.c: 362: case 41:
   945                           ;main.c: 363: {
   946                           ;main.c: 366: last_reg_recvd = msgbuffer[0];
   947  00068C  C1CD  F1D8         	movff	main@msgbuffer,main@last_reg_recvd
   948                           
   949                           ;main.c: 367: break;
   950  000690  D100               	goto	l2446
   951  000692                     l2402:
   952                           
   953                           ; BSR set to: 1
   954                           ;main.c: 400: {
   955                           ;main.c: 401: if(data_points_count == 0){
   956  000692  0101               	movlb	1	; () banked
   957  000694  0101               	movlb	1	; () banked
   958  000696  51DF               	movf	(main@data_points_count+1)& (0+255),w,b
   959  000698  11DE               	iorwf	main@data_points_count& (0+255),w,b
   960  00069A  A4D8               	btfss	status,2,c
   961  00069C  D00C               	goto	l2408
   962                           
   963                           ; BSR set to: 1
   964                           ;main.c: 402: msgbuffer[0] = 0xff;
   965  00069E  0101               	movlb	1	; () banked
   966  0006A0  0101               	movlb	1	; () banked
   967  0006A2  69CD               	setf	main@msgbuffer& (0+255),b
   968                           
   969                           ; BSR set to: 1
   970                           ;main.c: 403: length = 1;
   971  0006A4  0101               	movlb	1	; () banked
   972  0006A6  6FC1               	movwf	??_main& (0+255),b
   973  0006A8  0E01               	movlw	1
   974  0006AA  0101               	movlb	1	; () banked
   975  0006AC  0101               	movlb	1	; () banked
   976  0006AE  6FE0               	movwf	main@length& (0+255),b
   977  0006B0  0101               	movlb	1	; () banked
   978  0006B2  51C1               	movf	??_main& (0+255),w,b
   979                           
   980                           ;main.c: 404: }
   981  0006B4  D09D               	goto	l2436
   982  0006B6                     l2408:
   983                           
   984                           ; BSR set to: 1
   985                           ;main.c: 405: else{
   986                           ;main.c: 406: for(int j = 0; j < data_points_count; j++){
   987  0006B6  0E00               	movlw	0
   988  0006B8  0101               	movlb	1	; () banked
   989  0006BA  0101               	movlb	1	; () banked
   990  0006BC  6FDA               	movwf	(main@j+1)& (0+255),b
   991  0006BE  0E00               	movlw	0
   992  0006C0  0101               	movlb	1	; () banked
   993  0006C2  6FD9               	movwf	main@j& (0+255),b
   994  0006C4  D01E               	goto	l2414
   995  0006C6                     l2410:
   996                           
   997                           ; BSR set to: 1
   998                           ;main.c: 407: msgbuffer[j] = to_send_buffer[j];
   999  0006C6  0101               	movlb	1	; () banked
  1000  0006C8  0EC2               	movlw	low main@to_send_buffer
  1001  0006CA  0101               	movlb	1	; () banked
  1002  0006CC  0101               	movlb	1	; () banked
  1003  0006CE  25D9               	addwf	main@j& (0+255),w,b
  1004  0006D0  6ED9               	movwf	fsr2l,c
  1005  0006D2  0101               	movlb	1	; () banked
  1006  0006D4  0E01               	movlw	high main@to_send_buffer
  1007  0006D6  0101               	movlb	1	; () banked
  1008  0006D8  0101               	movlb	1	; () banked
  1009  0006DA  21DA               	addwfc	(main@j+1)& (0+255),w,b
  1010  0006DC  6EDA               	movwf	fsr2h,c
  1011  0006DE  0101               	movlb	1	; () banked
  1012  0006E0  0ECD               	movlw	low main@msgbuffer
  1013  0006E2  0101               	movlb	1	; () banked
  1014  0006E4  0101               	movlb	1	; () banked
  1015  0006E6  25D9               	addwf	main@j& (0+255),w,b
  1016  0006E8  6EE1               	movwf	fsr1l,c
  1017  0006EA  0101               	movlb	1	; () banked
  1018  0006EC  0E01               	movlw	high main@msgbuffer
  1019  0006EE  0101               	movlb	1	; () banked
  1020  0006F0  0101               	movlb	1	; () banked
  1021  0006F2  21DA               	addwfc	(main@j+1)& (0+255),w,b
  1022  0006F4  6EE2               	movwf	fsr1h,c
  1023  0006F6  CFDF FFE7          	movff	indf2,indf1
  1024                           
  1025                           ; BSR set to: 1
  1026  0006FA  0101               	movlb	1	; () banked
  1027  0006FC  0101               	movlb	1	; () banked
  1028  0006FE  4BD9               	infsnz	main@j& (0+255),f,b
  1029  000700  2BDA               	incf	(main@j+1)& (0+255),f,b
  1030  000702                     l2414:
  1031                           
  1032                           ; BSR set to: 1
  1033  000702  0101               	movlb	1	; () banked
  1034  000704  0101               	movlb	1	; () banked
  1035  000706  51DA               	movf	(main@j+1)& (0+255),w,b
  1036  000708  0A80               	xorlw	128
  1037  00070A  0101               	movlb	1	; () banked
  1038  00070C  6FC1               	movwf	??_main& (0+255),b
  1039  00070E  0101               	movlb	1	; () banked
  1040  000710  51DE               	movf	main@data_points_count& (0+255),w,b
  1041  000712  0101               	movlb	1	; () banked
  1042  000714  0101               	movlb	1	; () banked
  1043  000716  5DD9               	subwf	main@j& (0+255),w,b
  1044  000718  0101               	movlb	1	; () banked
  1045  00071A  0101               	movlb	1	; () banked
  1046  00071C  51DF               	movf	(main@data_points_count+1)& (0+255),w,b
  1047  00071E  0A80               	xorlw	128
  1048  000720  0101               	movlb	1	; () banked
  1049  000722  59C1               	subwfb	??_main& (0+255),w,b
  1050  000724  A0D8               	btfss	status,0,c
  1051  000726  D7CF               	goto	l2410
  1052  000728  D050               	goto	u1430
  1053  00072A                     l2418:
  1054                           
  1055                           ; BSR set to: 1
  1056                           ;main.c: 415: {
  1057                           ;main.c: 416: to_send_buffer[0] = 0x04;
  1058  00072A  0101               	movlb	1	; () banked
  1059  00072C  6FC1               	movwf	??_main& (0+255),b
  1060  00072E  0E04               	movlw	4
  1061  000730  0101               	movlb	1	; () banked
  1062  000732  0101               	movlb	1	; () banked
  1063  000734  6FC2               	movwf	main@to_send_buffer& (0+255),b
  1064  000736  0101               	movlb	1	; () banked
  1065  000738  51C1               	movf	??_main& (0+255),w,b
  1066                           
  1067                           ;main.c: 417: to_send_buffer[1] = 0x0d;
  1068  00073A  0101               	movlb	1	; () banked
  1069  00073C  6FC1               	movwf	??_main& (0+255),b
  1070  00073E  0E0D               	movlw	13
  1071  000740  0101               	movlb	1	; () banked
  1072  000742  0101               	movlb	1	; () banked
  1073  000744  6FC3               	movwf	(main@to_send_buffer+1)& (0+255),b
  1074  000746  0101               	movlb	1	; () banked
  1075  000748  51C1               	movf	??_main& (0+255),w,b
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;main.c: 418: data_points_count = 2;
  1079  00074A  0E00               	movlw	0
  1080  00074C  0101               	movlb	1	; () banked
  1081  00074E  0101               	movlb	1	; () banked
  1082  000750  6FDF               	movwf	(main@data_points_count+1)& (0+255),b
  1083  000752  0E02               	movlw	2
  1084  000754  0101               	movlb	1	; () banked
  1085  000756  6FDE               	movwf	main@data_points_count& (0+255),b
  1086                           
  1087                           ; BSR set to: 1
  1088                           ;main.c: 419: for(int j = 0; j < data_points_count; j++){
  1089  000758  0E00               	movlw	0
  1090  00075A  0101               	movlb	1	; () banked
  1091  00075C  0101               	movlb	1	; () banked
  1092  00075E  6FDC               	movwf	(main@j_434+1)& (0+255),b
  1093  000760  0E00               	movlw	0
  1094  000762  0101               	movlb	1	; () banked
  1095  000764  6FDB               	movwf	main@j_434& (0+255),b
  1096  000766  D01E               	goto	l2428
  1097  000768                     l2424:
  1098                           
  1099                           ; BSR set to: 1
  1100                           ;main.c: 420: msgbuffer[j] = to_send_buffer[j];
  1101  000768  0101               	movlb	1	; () banked
  1102  00076A  0EC2               	movlw	low main@to_send_buffer
  1103  00076C  0101               	movlb	1	; () banked
  1104  00076E  0101               	movlb	1	; () banked
  1105  000770  25DB               	addwf	main@j_434& (0+255),w,b
  1106  000772  6ED9               	movwf	fsr2l,c
  1107  000774  0101               	movlb	1	; () banked
  1108  000776  0E01               	movlw	high main@to_send_buffer
  1109  000778  0101               	movlb	1	; () banked
  1110  00077A  0101               	movlb	1	; () banked
  1111  00077C  21DC               	addwfc	(main@j_434+1)& (0+255),w,b
  1112  00077E  6EDA               	movwf	fsr2h,c
  1113  000780  0101               	movlb	1	; () banked
  1114  000782  0ECD               	movlw	low main@msgbuffer
  1115  000784  0101               	movlb	1	; () banked
  1116  000786  0101               	movlb	1	; () banked
  1117  000788  25DB               	addwf	main@j_434& (0+255),w,b
  1118  00078A  6EE1               	movwf	fsr1l,c
  1119  00078C  0101               	movlb	1	; () banked
  1120  00078E  0E01               	movlw	high main@msgbuffer
  1121  000790  0101               	movlb	1	; () banked
  1122  000792  0101               	movlb	1	; () banked
  1123  000794  21DC               	addwfc	(main@j_434+1)& (0+255),w,b
  1124  000796  6EE2               	movwf	fsr1h,c
  1125  000798  CFDF FFE7          	movff	indf2,indf1
  1126                           
  1127                           ; BSR set to: 1
  1128  00079C  0101               	movlb	1	; () banked
  1129  00079E  0101               	movlb	1	; () banked
  1130  0007A0  4BDB               	infsnz	main@j_434& (0+255),f,b
  1131  0007A2  2BDC               	incf	(main@j_434+1)& (0+255),f,b
  1132  0007A4                     l2428:
  1133                           
  1134                           ; BSR set to: 1
  1135  0007A4  0101               	movlb	1	; () banked
  1136  0007A6  0101               	movlb	1	; () banked
  1137  0007A8  51DC               	movf	(main@j_434+1)& (0+255),w,b
  1138  0007AA  0A80               	xorlw	128
  1139  0007AC  0101               	movlb	1	; () banked
  1140  0007AE  6FC1               	movwf	??_main& (0+255),b
  1141  0007B0  0101               	movlb	1	; () banked
  1142  0007B2  51DE               	movf	main@data_points_count& (0+255),w,b
  1143  0007B4  0101               	movlb	1	; () banked
  1144  0007B6  0101               	movlb	1	; () banked
  1145  0007B8  5DDB               	subwf	main@j_434& (0+255),w,b
  1146  0007BA  0101               	movlb	1	; () banked
  1147  0007BC  0101               	movlb	1	; () banked
  1148  0007BE  51DF               	movf	(main@data_points_count+1)& (0+255),w,b
  1149  0007C0  0A80               	xorlw	128
  1150  0007C2  0101               	movlb	1	; () banked
  1151  0007C4  59C1               	subwfb	??_main& (0+255),w,b
  1152  0007C6  A0D8               	btfss	status,0,c
  1153  0007C8  D7CF               	goto	l2424
  1154  0007CA                     u1430:
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;main.c: 421: }
  1158                           ;main.c: 422: length = data_points_count;
  1159  0007CA  C1DE  F1E0         	movff	main@data_points_count,main@length
  1160                           
  1161                           ; BSR set to: 1
  1162                           ;main.c: 423: data_points_count = 0;
  1163  0007CE  0E00               	movlw	0
  1164  0007D0  0101               	movlb	1	; () banked
  1165  0007D2  0101               	movlb	1	; () banked
  1166  0007D4  6FDF               	movwf	(main@data_points_count+1)& (0+255),b
  1167  0007D6  0E00               	movlw	0
  1168  0007D8  0101               	movlb	1	; () banked
  1169  0007DA  6FDE               	movwf	main@data_points_count& (0+255),b
  1170                           
  1171                           ;main.c: 424: break;
  1172  0007DC  D009               	goto	l2436
  1173  0007DE                     l2434:
  1174                           
  1175                           ; BSR set to: 1
  1176  0007DE  0101               	movlb	1	; () banked
  1177  0007E0  0101               	movlb	1	; () banked
  1178  0007E2  51D8               	movf	main@last_reg_recvd& (0+255),w,b
  1179                           
  1180                           ; Switch size 1, requested type "space"
  1181                           ; Number of cases is 2, Range of values is 170 to 171
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte            7     4 (average)
  1185                           ;	Chosen strategy is simple_byte
  1186  0007E4  0AAA               	xorlw	170	; case 170
  1187  0007E6  B4D8               	btfsc	status,2,c
  1188  0007E8  D754               	goto	l2402
  1189  0007EA  0A01               	xorlw	1	; case 171
  1190  0007EC  B4D8               	btfsc	status,2,c
  1191  0007EE  D79D               	goto	l2418
  1192  0007F0                     l2436:
  1193                           
  1194                           ; BSR set to: 1
  1195                           ;main.c: 427: msgbuffer[0] = 0xaa;
  1196  0007F0  0101               	movlb	1	; () banked
  1197  0007F2  6FC1               	movwf	??_main& (0+255),b
  1198  0007F4  0EAA               	movlw	170
  1199  0007F6  0101               	movlb	1	; () banked
  1200  0007F8  0101               	movlb	1	; () banked
  1201  0007FA  6FCD               	movwf	main@msgbuffer& (0+255),b
  1202  0007FC  0101               	movlb	1	; () banked
  1203  0007FE  51C1               	movf	??_main& (0+255),w,b
  1204                           
  1205                           ;main.c: 428: length = 1;
  1206  000800  0101               	movlb	1	; () banked
  1207  000802  6FC1               	movwf	??_main& (0+255),b
  1208  000804  0E01               	movlw	1
  1209  000806  0101               	movlb	1	; () banked
  1210  000808  0101               	movlb	1	; () banked
  1211  00080A  6FE0               	movwf	main@length& (0+255),b
  1212  00080C  0101               	movlb	1	; () banked
  1213  00080E  51C1               	movf	??_main& (0+255),w,b
  1214                           
  1215                           ; BSR set to: 1
  1216                           ;main.c: 429: start_i2c_slave_reply(length, msgbuffer);
  1217  000810  0101               	movlb	1	; () banked
  1218  000812  0E01               	movlw	high main@msgbuffer
  1219  000814  0101               	movlb	1	; () banked
  1220  000816  0101               	movlb	1	; () banked
  1221  000818  6FA5               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1222  00081A  0101               	movlb	1	; () banked
  1223  00081C  0ECD               	movlw	low main@msgbuffer
  1224  00081E  0101               	movlb	1	; () banked
  1225  000820  0101               	movlb	1	; () banked
  1226  000822  6FA4               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1227  000824  0101               	movlb	1	; () banked
  1228  000826  0101               	movlb	1	; () banked
  1229  000828  51E0               	movf	main@length& (0+255),w,b
  1230  00082A  EC29  F005         	call	_start_i2c_slave_reply
  1231                           
  1232                           ;main.c: 430: break;
  1233  00082E  D031               	goto	l2446
  1234  000830                     l2440:
  1235                           
  1236                           ;main.c: 433: {
  1237                           ;main.c: 434: addDataPoints(0, msgbuffer, length);
  1238  000830  0E00               	movlw	0
  1239  000832  0101               	movlb	1	; () banked
  1240  000834  0101               	movlb	1	; () banked
  1241  000836  6FAD               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1242  000838  0E00               	movlw	0
  1243  00083A  0101               	movlb	1	; () banked
  1244  00083C  6FAC               	movwf	addDataPoints@sensorid& (0+255),b
  1245  00083E  0101               	movlb	1	; () banked
  1246  000840  0E01               	movlw	high main@msgbuffer
  1247  000842  0101               	movlb	1	; () banked
  1248  000844  0101               	movlb	1	; () banked
  1249  000846  6FAF               	movwf	(addDataPoints@data+1)& (0+255),b
  1250  000848  0101               	movlb	1	; () banked
  1251  00084A  0ECD               	movlw	low main@msgbuffer
  1252  00084C  0101               	movlb	1	; () banked
  1253  00084E  0101               	movlb	1	; () banked
  1254  000850  6FAE               	movwf	addDataPoints@data& (0+255),b
  1255  000852  0101               	movlb	1	; () banked
  1256  000854  0101               	movlb	1	; () banked
  1257  000856  51E0               	movf	main@length& (0+255),w,b
  1258  000858  0101               	movlb	1	; () banked
  1259  00085A  0101               	movlb	1	; () banked
  1260  00085C  6FB0               	movwf	addDataPoints@len& (0+255),b
  1261  00085E  0101               	movlb	1	; () banked
  1262  000860  6BB1               	clrf	(addDataPoints@len+1)& (0+255),b
  1263  000862  0101               	movlb	1	; () banked
  1264  000864  BFB0               	btfsc	addDataPoints@len& (0+255),7,b
  1265  000866  07B1               	decf	(addDataPoints@len+1)& (0+255),f,b
  1266  000868  ECE0  F00B         	call	_addDataPoints	;wreg free
  1267                           
  1268                           ;main.c: 435: break;
  1269  00086C  D012               	goto	l2446
  1270  00086E                     l2444:
  1271  00086E  0101               	movlb	1	; () banked
  1272  000870  0101               	movlb	1	; () banked
  1273  000872  51DD               	movf	main@msgtype& (0+255),w,b
  1274                           
  1275                           ; Switch size 1, requested type "space"
  1276                           ; Number of cases is 5, Range of values is 10 to 50
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte           16     9 (average)
  1280                           ;	Chosen strategy is simple_byte
  1281  000874  0A0A               	xorlw	10	; case 10
  1282  000876  B4D8               	btfsc	status,2,c
  1283  000878  D00C               	goto	l2446
  1284  00087A  0A22               	xorlw	34	; case 40
  1285  00087C  B4D8               	btfsc	status,2,c
  1286  00087E  D706               	goto	l88
  1287  000880  0A01               	xorlw	1	; case 41
  1288  000882  B4D8               	btfsc	status,2,c
  1289  000884  D703               	goto	l88
  1290  000886  0A03               	xorlw	3	; case 42
  1291  000888  B4D8               	btfsc	status,2,c
  1292  00088A  D7A9               	goto	l2434
  1293  00088C  0A18               	xorlw	24	; case 50
  1294  00088E  B4D8               	btfsc	status,2,c
  1295  000890  D7CF               	goto	l2440
  1296  000892                     l2446:
  1297                           
  1298                           ;main.c: 444: }
  1299                           ;main.c: 447: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1300  000892  0101               	movlb	1	; () banked
  1301  000894  0E01               	movlw	high main@msgtype
  1302  000896  0101               	movlb	1	; () banked
  1303  000898  0101               	movlb	1	; () banked
  1304  00089A  6FBD               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1305  00089C  0101               	movlb	1	; () banked
  1306  00089E  0EDD               	movlw	low main@msgtype
  1307  0008A0  0101               	movlb	1	; () banked
  1308  0008A2  0101               	movlb	1	; () banked
  1309  0008A4  6FBC               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1310  0008A6  0101               	movlb	1	; () banked
  1311  0008A8  0E01               	movlw	high main@msgbuffer
  1312  0008AA  0101               	movlb	1	; () banked
  1313  0008AC  0101               	movlb	1	; () banked
  1314  0008AE  6FBF               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1315  0008B0  0101               	movlb	1	; () banked
  1316  0008B2  0ECD               	movlw	low main@msgbuffer
  1317  0008B4  0101               	movlb	1	; () banked
  1318  0008B6  0101               	movlb	1	; () banked
  1319  0008B8  6FBE               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1320  0008BA  0E0A               	movlw	10
  1321  0008BC  ECD9  F00A         	call	_ToMainLow_recvmsg
  1322  0008C0  0101               	movlb	1	; () banked
  1323  0008C2  0101               	movlb	1	; () banked
  1324  0008C4  6FE0               	movwf	main@length& (0+255),b
  1325                           
  1326                           ; BSR set to: 1
  1327                           ;main.c: 448: if (length < 0) {
  1328  0008C6  0101               	movlb	1	; () banked
  1329  0008C8  0101               	movlb	1	; () banked
  1330  0008CA  BFE0               	btfsc	main@length& (0+255),7,b
  1331  0008CC  D6BE               	goto	l2394
  1332  0008CE  D01F               	goto	l2456
  1333  0008D0                     l2452:
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;main.c: 456: {
  1337                           ;main.c: 457: addDataPoints(0, msgbuffer, length);
  1338  0008D0  0E00               	movlw	0
  1339  0008D2  0101               	movlb	1	; () banked
  1340  0008D4  0101               	movlb	1	; () banked
  1341  0008D6  6FAD               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1342  0008D8  0E00               	movlw	0
  1343  0008DA  0101               	movlb	1	; () banked
  1344  0008DC  6FAC               	movwf	addDataPoints@sensorid& (0+255),b
  1345  0008DE  0101               	movlb	1	; () banked
  1346  0008E0  0E01               	movlw	high main@msgbuffer
  1347  0008E2  0101               	movlb	1	; () banked
  1348  0008E4  0101               	movlb	1	; () banked
  1349  0008E6  6FAF               	movwf	(addDataPoints@data+1)& (0+255),b
  1350  0008E8  0101               	movlb	1	; () banked
  1351  0008EA  0ECD               	movlw	low main@msgbuffer
  1352  0008EC  0101               	movlb	1	; () banked
  1353  0008EE  0101               	movlb	1	; () banked
  1354  0008F0  6FAE               	movwf	addDataPoints@data& (0+255),b
  1355  0008F2  0101               	movlb	1	; () banked
  1356  0008F4  0101               	movlb	1	; () banked
  1357  0008F6  51E0               	movf	main@length& (0+255),w,b
  1358  0008F8  0101               	movlb	1	; () banked
  1359  0008FA  0101               	movlb	1	; () banked
  1360  0008FC  6FB0               	movwf	addDataPoints@len& (0+255),b
  1361  0008FE  0101               	movlb	1	; () banked
  1362  000900  6BB1               	clrf	(addDataPoints@len+1)& (0+255),b
  1363  000902  0101               	movlb	1	; () banked
  1364  000904  BFB0               	btfsc	addDataPoints@len& (0+255),7,b
  1365  000906  07B1               	decf	(addDataPoints@len+1)& (0+255),f,b
  1366  000908  ECE0  F00B         	call	_addDataPoints	;wreg free
  1367                           
  1368                           ;main.c: 463: break;
  1369  00090C  D69E               	goto	l2394
  1370  00090E                     l2456:
  1371  00090E  0101               	movlb	1	; () banked
  1372  000910  0101               	movlb	1	; () banked
  1373  000912  51DD               	movf	main@msgtype& (0+255),w,b
  1374                           
  1375                           ; Switch size 1, requested type "space"
  1376                           ; Number of cases is 1, Range of values is 50 to 50
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte            4     3 (average)
  1380                           ;	Chosen strategy is simple_byte
  1381  000914  0A32               	xorlw	50	; case 50
  1382  000916  B4D8               	btfsc	status,2,c
  1383  000918  D7DB               	goto	l2452
  1384  00091A  D697               	goto	l2394
  1385  00091C                     __end_of_main:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           postinc0	equ	0xFEE
  1392                           wreg	equ	0xFE8
  1393                           indf1	equ	0xFE7
  1394                           postdec1	equ	0xFE5
  1395                           fsr1h	equ	0xFE2
  1396                           fsr1l	equ	0xFE1
  1397                           indf2	equ	0xFDF
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _start_i2c_slave_reply *****************
  1403 ;; Defined at:
  1404 ;;		line 60 in file "../src/my_i2c.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  length          1    wreg     unsigned char 
  1407 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  1408 ;;		 -> sendADdata@outBuff(100), main@msgbuffer(11), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  length          1    4[BANK1 ] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;		None               void
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1420 ;;      Params:         0       0       2       0       0
  1421 ;;      Locals:         0       0       1       0       0
  1422 ;;      Temps:          0       0       2       0       0
  1423 ;;      Totals:         0       0       5       0       0
  1424 ;;Total ram usage:        5 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    8
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text1
  1435  000A52                     __ptext1:
  1436                           	opt stack 0
  1437  000A52                     _start_i2c_slave_reply:
  1438                           	opt stack 21
  1439                           
  1440                           ; BSR set to: 1
  1441                           ;incstack = 0
  1442                           ;start_i2c_slave_reply@length stored from wreg
  1443  000A52  CFE8 F1A8          	movff	wreg,start_i2c_slave_reply@length
  1444                           
  1445                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1446  000A56  0101               	movlb	1	; () banked
  1447  000A58  EE20 F019          	lfsr	2,25
  1448  000A5C  0101               	movlb	1	; () banked
  1449  000A5E  5100               	movf	_ic_ptr& (0+255),w,b
  1450  000A60  26D9               	addwf	fsr2l,f,c
  1451  000A62  0101               	movlb	1	; () banked
  1452  000A64  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1453  000A66  22DA               	addwfc	fsr2h,f,c
  1454  000A68  0E00               	movlw	0
  1455  000A6A  6EDF               	movwf	indf2,c
  1456  000A6C  D042               	goto	l2594
  1457  000A6E                     l2590:
  1458                           
  1459                           ; BSR set to: 1
  1460                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1461  000A6E  0101               	movlb	1	; () banked
  1462  000A70  EE20 F019          	lfsr	2,25
  1463  000A74  0101               	movlb	1	; () banked
  1464  000A76  5100               	movf	_ic_ptr& (0+255),w,b
  1465  000A78  26D9               	addwf	fsr2l,f,c
  1466  000A7A  0101               	movlb	1	; () banked
  1467  000A7C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1468  000A7E  22DA               	addwfc	fsr2h,f,c
  1469  000A80  50DF               	movf	indf2,w,c
  1470  000A82  0101               	movlb	1	; () banked
  1471  000A84  6FA6               	movwf	??_start_i2c_slave_reply& (0+255),b
  1472  000A86  0101               	movlb	1	; () banked
  1473  000A88  51A6               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1474  000A8A  0D01               	mullw	1
  1475  000A8C  50F3               	movf	prodl,w,c
  1476  000A8E  0101               	movlb	1	; () banked
  1477  000A90  0101               	movlb	1	; () banked
  1478  000A92  25A4               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1479  000A94  6ED9               	movwf	fsr2l,c
  1480  000A96  50F4               	movf	prodh,w,c
  1481  000A98  0101               	movlb	1	; () banked
  1482  000A9A  0101               	movlb	1	; () banked
  1483  000A9C  21A5               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1484  000A9E  6EDA               	movwf	fsr2h,c
  1485  000AA0  0101               	movlb	1	; () banked
  1486  000AA2  EE10 F019          	lfsr	1,25
  1487  000AA6  0101               	movlb	1	; () banked
  1488  000AA8  5100               	movf	_ic_ptr& (0+255),w,b
  1489  000AAA  26E1               	addwf	fsr1l,f,c
  1490  000AAC  0101               	movlb	1	; () banked
  1491  000AAE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1492  000AB0  22E2               	addwfc	fsr1h,f,c
  1493  000AB2  50E7               	movf	indf1,w,c
  1494  000AB4  0101               	movlb	1	; () banked
  1495  000AB6  6FA7               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1496  000AB8  0101               	movlb	1	; () banked
  1497  000ABA  51A7               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1498  000ABC  0D01               	mullw	1
  1499  000ABE  0E0F               	movlw	15
  1500  000AC0  26F3               	addwf	prodl,f,c
  1501  000AC2  0E00               	movlw	0
  1502  000AC4  22F4               	addwfc	prodh,f,c
  1503  000AC6  50F3               	movf	prodl,w,c
  1504  000AC8  0101               	movlb	1	; () banked
  1505  000ACA  0101               	movlb	1	; () banked
  1506  000ACC  2500               	addwf	_ic_ptr& (0+255),w,b
  1507  000ACE  6EE1               	movwf	fsr1l,c
  1508  000AD0  50F4               	movf	prodh,w,c
  1509  000AD2  0101               	movlb	1	; () banked
  1510  000AD4  0101               	movlb	1	; () banked
  1511  000AD6  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1512  000AD8  6EE2               	movwf	fsr1h,c
  1513  000ADA  CFDF FFE7          	movff	indf2,indf1
  1514                           
  1515                           ; BSR set to: 1
  1516  000ADE  0101               	movlb	1	; () banked
  1517  000AE0  EE20 F019          	lfsr	2,25
  1518  000AE4  0101               	movlb	1	; () banked
  1519  000AE6  5100               	movf	_ic_ptr& (0+255),w,b
  1520  000AE8  26D9               	addwf	fsr2l,f,c
  1521  000AEA  0101               	movlb	1	; () banked
  1522  000AEC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1523  000AEE  22DA               	addwfc	fsr2h,f,c
  1524  000AF0  2ADF               	incf	indf2,f,c
  1525  000AF2                     l2594:
  1526                           
  1527                           ; BSR set to: 1
  1528  000AF2  0101               	movlb	1	; () banked
  1529  000AF4  EE20 F019          	lfsr	2,25
  1530  000AF8  0101               	movlb	1	; () banked
  1531  000AFA  5100               	movf	_ic_ptr& (0+255),w,b
  1532  000AFC  26D9               	addwf	fsr2l,f,c
  1533  000AFE  0101               	movlb	1	; () banked
  1534  000B00  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1535  000B02  22DA               	addwfc	fsr2h,f,c
  1536  000B04  50DF               	movf	indf2,w,c
  1537  000B06  0101               	movlb	1	; () banked
  1538  000B08  6FA6               	movwf	??_start_i2c_slave_reply& (0+255),b
  1539  000B0A  0101               	movlb	1	; () banked
  1540  000B0C  0101               	movlb	1	; () banked
  1541  000B0E  51A8               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1542  000B10  0101               	movlb	1	; () banked
  1543  000B12  5DA6               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1544  000B14  A0D8               	btfss	status,0,c
  1545  000B16  D7AB               	goto	l2590
  1546                           
  1547                           ; BSR set to: 1
  1548                           ;my_i2c.c: 64: }
  1549                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  1550                           
  1551                           ; BSR set to: 1
  1552  000B18  0101               	movlb	1	; () banked
  1553  000B1A  EE20 F019          	lfsr	2,25
  1554  000B1E  0101               	movlb	1	; () banked
  1555  000B20  5100               	movf	_ic_ptr& (0+255),w,b
  1556  000B22  26D9               	addwf	fsr2l,f,c
  1557  000B24  0101               	movlb	1	; () banked
  1558  000B26  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1559  000B28  22DA               	addwfc	fsr2h,f,c
  1560  000B2A  0101               	movlb	1	; () banked
  1561  000B2C  C1A8  FFDF         	movff	start_i2c_slave_reply@length,indf2
  1562                           
  1563                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  1564  000B30  0101               	movlb	1	; () banked
  1565  000B32  EE20 F01A          	lfsr	2,26
  1566  000B36  0101               	movlb	1	; () banked
  1567  000B38  5100               	movf	_ic_ptr& (0+255),w,b
  1568  000B3A  26D9               	addwf	fsr2l,f,c
  1569  000B3C  0101               	movlb	1	; () banked
  1570  000B3E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1571  000B40  22DA               	addwfc	fsr2h,f,c
  1572  000B42  0E01               	movlw	1
  1573  000B44  6EDF               	movwf	indf2,c
  1574                           
  1575                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  1576  000B46  0101               	movlb	1	; () banked
  1577  000B48  EE20 F00F          	lfsr	2,15
  1578  000B4C  0101               	movlb	1	; () banked
  1579  000B4E  5100               	movf	_ic_ptr& (0+255),w,b
  1580  000B50  26D9               	addwf	fsr2l,f,c
  1581  000B52  0101               	movlb	1	; () banked
  1582  000B54  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1583  000B56  22DA               	addwfc	fsr2h,f,c
  1584  000B58  50DF               	movf	indf2,w,c
  1585  000B5A  6EC9               	movwf	4041,c	;volatile
  1586                           
  1587                           ; BSR set to: 1
  1588                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  1589  000B5C  88C6               	bsf	4038,4,c	;volatile
  1590                           
  1591                           ; BSR set to: 1
  1592  000B5E  0012               	return	
  1593  000B60                     __end_of_start_i2c_slave_reply:
  1594                           	opt stack 0
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           prodh	equ	0xFF4
  1600                           prodl	equ	0xFF3
  1601                           postinc0	equ	0xFEE
  1602                           wreg	equ	0xFE8
  1603                           indf1	equ	0xFE7
  1604                           postdec1	equ	0xFE5
  1605                           fsr1h	equ	0xFE2
  1606                           fsr1l	equ	0xFE1
  1607                           indf2	equ	0xFDF
  1608                           fsr2h	equ	0xFDA
  1609                           fsr2l	equ	0xFD9
  1610                           status	equ	0xFD8
  1611                           
  1612 ;; *************** function _resetAccumulators *****************
  1613 ;; Defined at:
  1614 ;;		line 87 in file "../src/sensorcomm.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;		None               void
  1621 ;; Registers used:
  1622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    9
  1635 ;; This function calls:
  1636 ;;		_resetADacc
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text2
  1643  0018EC                     __ptext2:
  1644                           	opt stack 0
  1645  0018EC                     _resetAccumulators:
  1646                           	opt stack 20
  1647                           
  1648                           ;sensorcomm.c: 88: resetADacc();
  1649                           
  1650                           ; BSR set to: 1
  1651                           ;incstack = 0
  1652  0018EC  EC95  F008         	call	_resetADacc	;wreg free
  1653  0018F0  0012               	return	
  1654  0018F2                     __end_of_resetAccumulators:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           indf1	equ	0xFE7
  1665                           postdec1	equ	0xFE5
  1666                           fsr1h	equ	0xFE2
  1667                           fsr1l	equ	0xFE1
  1668                           indf2	equ	0xFDF
  1669                           fsr2h	equ	0xFDA
  1670                           fsr2l	equ	0xFD9
  1671                           status	equ	0xFD8
  1672                           
  1673 ;; *************** function _resetADacc *****************
  1674 ;; Defined at:
  1675 ;;		line 79 in file "../src/sensorcomm.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  i               2    3[BANK1 ] int 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;		None               void
  1682 ;; Registers used:
  1683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       0       2       0       0
  1691 ;;      Temps:          0       0       3       0       0
  1692 ;;      Totals:         0       0       5       0       0
  1693 ;;Total ram usage:        5 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    8
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_resetAccumulators
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text3
  1704  00112A                     __ptext3:
  1705                           	opt stack 0
  1706  00112A                     _resetADacc:
  1707                           	opt stack 20
  1708                           
  1709                           ;sensorcomm.c: 80: int i = 0;
  1710                           
  1711                           ;incstack = 0
  1712  00112A  0E00               	movlw	0
  1713  00112C  0101               	movlb	1	; () banked
  1714  00112E  0101               	movlb	1	; () banked
  1715  001130  6FA8               	movwf	(resetADacc@i+1)& (0+255),b
  1716  001132  0E00               	movlw	0
  1717  001134  0101               	movlb	1	; () banked
  1718  001136  6FA7               	movwf	resetADacc@i& (0+255),b
  1719  001138  D012               	goto	l2886
  1720  00113A                     l2882:
  1721                           
  1722                           ; BSR set to: 1
  1723                           ;sensorcomm.c: 82: ADacc.data[i].data = 0;
  1724  00113A  0100               	movlb	0	; () banked
  1725  00113C  0EE7               	movlw	low (_ADacc+1)
  1726  00113E  0101               	movlb	1	; () banked
  1727  001140  0101               	movlb	1	; () banked
  1728  001142  25A7               	addwf	resetADacc@i& (0+255),w,b
  1729  001144  6ED9               	movwf	fsr2l,c
  1730  001146  0100               	movlb	0	; () banked
  1731  001148  0E00               	movlw	high (_ADacc+1)
  1732  00114A  0101               	movlb	1	; () banked
  1733  00114C  0101               	movlb	1	; () banked
  1734  00114E  21A8               	addwfc	(resetADacc@i+1)& (0+255),w,b
  1735  001150  6EDA               	movwf	fsr2h,c
  1736  001152  0E00               	movlw	0
  1737  001154  6EDF               	movwf	indf2,c
  1738                           
  1739                           ; BSR set to: 1
  1740  001156  0101               	movlb	1	; () banked
  1741  001158  0101               	movlb	1	; () banked
  1742  00115A  4BA7               	infsnz	resetADacc@i& (0+255),f,b
  1743  00115C  2BA8               	incf	(resetADacc@i+1)& (0+255),f,b
  1744  00115E                     l2886:
  1745                           
  1746                           ; BSR set to: 1
  1747  00115E  0100               	movlb	0	; () banked
  1748  001160  0100               	movlb	0	; () banked
  1749  001162  51E6               	movf	_ADacc& (0+255),w,b
  1750  001164  0101               	movlb	1	; () banked
  1751  001166  6FA4               	movwf	??_resetADacc& (0+255),b
  1752  001168  6BA5               	clrf	(??_resetADacc+1)& (0+255),b
  1753  00116A  0101               	movlb	1	; () banked
  1754  00116C  0101               	movlb	1	; () banked
  1755  00116E  51A8               	movf	(resetADacc@i+1)& (0+255),w,b
  1756  001170  0A80               	xorlw	128
  1757  001172  0101               	movlb	1	; () banked
  1758  001174  6FA6               	movwf	(??_resetADacc+2)& (0+255),b
  1759  001176  51A4               	movf	??_resetADacc& (0+255),w,b
  1760  001178  0101               	movlb	1	; () banked
  1761  00117A  0101               	movlb	1	; () banked
  1762  00117C  5DA7               	subwf	resetADacc@i& (0+255),w,b
  1763  00117E  0101               	movlb	1	; () banked
  1764  001180  51A5               	movf	(??_resetADacc+1)& (0+255),w,b
  1765  001182  0A80               	xorlw	128
  1766  001184  0101               	movlb	1	; () banked
  1767  001186  59A6               	subwfb	(??_resetADacc+2)& (0+255),w,b
  1768  001188  A0D8               	btfss	status,0,c
  1769  00118A  D7D7               	goto	l2882
  1770                           
  1771                           ; BSR set to: 1
  1772                           ;sensorcomm.c: 83: }
  1773                           ;sensorcomm.c: 84: ADacc.len = 0;
  1774                           
  1775                           ; BSR set to: 1
  1776  00118C  0101               	movlb	1	; () banked
  1777  00118E  6FA4               	movwf	??_resetADacc& (0+255),b
  1778  001190  0E00               	movlw	0
  1779  001192  0100               	movlb	0	; () banked
  1780  001194  0100               	movlb	0	; () banked
  1781  001196  6FE6               	movwf	_ADacc& (0+255),b
  1782  001198  0101               	movlb	1	; () banked
  1783  00119A  51A4               	movf	??_resetADacc& (0+255),w,b
  1784                           
  1785                           ; BSR set to: 1
  1786  00119C  0012               	return	
  1787  00119E                     __end_of_resetADacc:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           prodh	equ	0xFF4
  1794                           prodl	equ	0xFF3
  1795                           postinc0	equ	0xFEE
  1796                           wreg	equ	0xFE8
  1797                           indf1	equ	0xFE7
  1798                           postdec1	equ	0xFE5
  1799                           fsr1h	equ	0xFE2
  1800                           fsr1l	equ	0xFE1
  1801                           indf2	equ	0xFDF
  1802                           fsr2h	equ	0xFDA
  1803                           fsr2l	equ	0xFD9
  1804                           status	equ	0xFD8
  1805                           
  1806 ;; *************** function _init_queues *****************
  1807 ;; Defined at:
  1808 ;;		line 195 in file "../src/messages.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;		None               void
  1815 ;; Registers used:
  1816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0
  1824 ;;      Temps:          0       0       1       0       0
  1825 ;;      Totals:         0       0       1       0       0
  1826 ;;Total ram usage:        1 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    9
  1829 ;; This function calls:
  1830 ;;		_init_queue
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text4
  1837  00119E                     __ptext4:
  1838                           	opt stack 0
  1839  00119E                     _init_queues:
  1840                           	opt stack 20
  1841                           
  1842                           ;messages.c: 196: MQ_Main_Willing_to_block = 0;
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;incstack = 0
  1846  00119E  0101               	movlb	1	; () banked
  1847  0011A0  6FA8               	movwf	??_init_queues& (0+255),b
  1848  0011A2  0E00               	movlw	0
  1849  0011A4  6E58               	movwf	_MQ_Main_Willing_to_block,c
  1850  0011A6  0101               	movlb	1	; () banked
  1851  0011A8  51A8               	movf	??_init_queues& (0+255),w,b
  1852                           
  1853                           ; BSR set to: 1
  1854                           ;messages.c: 197: init_queue(&ToMainLow_MQ);
  1855  0011AA  0101               	movlb	1	; () banked
  1856  0011AC  0E01               	movlw	high _ToMainLow_MQ
  1857  0011AE  0101               	movlb	1	; () banked
  1858  0011B0  0101               	movlb	1	; () banked
  1859  0011B2  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  1860  0011B4  0101               	movlb	1	; () banked
  1861  0011B6  0E6E               	movlw	low _ToMainLow_MQ
  1862  0011B8  0101               	movlb	1	; () banked
  1863  0011BA  0101               	movlb	1	; () banked
  1864  0011BC  6FA4               	movwf	init_queue@qptr& (0+255),b
  1865  0011BE  EC58  F008         	call	_init_queue	;wreg free
  1866                           
  1867                           ;messages.c: 198: init_queue(&ToMainHigh_MQ);
  1868  0011C2  0101               	movlb	1	; () banked
  1869  0011C4  0E01               	movlw	high _ToMainHigh_MQ
  1870  0011C6  0101               	movlb	1	; () banked
  1871  0011C8  0101               	movlb	1	; () banked
  1872  0011CA  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  1873  0011CC  0101               	movlb	1	; () banked
  1874  0011CE  0E38               	movlw	low _ToMainHigh_MQ
  1875  0011D0  0101               	movlb	1	; () banked
  1876  0011D2  0101               	movlb	1	; () banked
  1877  0011D4  6FA4               	movwf	init_queue@qptr& (0+255),b
  1878  0011D6  EC58  F008         	call	_init_queue	;wreg free
  1879                           
  1880                           ;messages.c: 199: init_queue(&FromMainLow_MQ);
  1881  0011DA  0101               	movlb	1	; () banked
  1882  0011DC  0E01               	movlw	high _FromMainLow_MQ
  1883  0011DE  0101               	movlb	1	; () banked
  1884  0011E0  0101               	movlb	1	; () banked
  1885  0011E2  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  1886  0011E4  0101               	movlb	1	; () banked
  1887  0011E6  0E02               	movlw	low _FromMainLow_MQ
  1888  0011E8  0101               	movlb	1	; () banked
  1889  0011EA  0101               	movlb	1	; () banked
  1890  0011EC  6FA4               	movwf	init_queue@qptr& (0+255),b
  1891  0011EE  EC58  F008         	call	_init_queue	;wreg free
  1892                           
  1893                           ;messages.c: 200: init_queue(&FromMainHigh_MQ);
  1894  0011F2  0102               	movlb	2	; () banked
  1895  0011F4  0E02               	movlw	high _FromMainHigh_MQ
  1896  0011F6  0101               	movlb	1	; () banked
  1897  0011F8  0101               	movlb	1	; () banked
  1898  0011FA  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  1899  0011FC  0102               	movlb	2	; () banked
  1900  0011FE  0E00               	movlw	low _FromMainHigh_MQ
  1901  001200  0101               	movlb	1	; () banked
  1902  001202  0101               	movlb	1	; () banked
  1903  001204  6FA4               	movwf	init_queue@qptr& (0+255),b
  1904  001206  EC58  F008         	call	_init_queue	;wreg free
  1905  00120A  0012               	return	
  1906  00120C                     __end_of_init_queues:
  1907                           	opt stack 0
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           prodh	equ	0xFF4
  1913                           prodl	equ	0xFF3
  1914                           postinc0	equ	0xFEE
  1915                           wreg	equ	0xFE8
  1916                           indf1	equ	0xFE7
  1917                           postdec1	equ	0xFE5
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           indf2	equ	0xFDF
  1921                           fsr2h	equ	0xFDA
  1922                           fsr2l	equ	0xFD9
  1923                           status	equ	0xFD8
  1924                           
  1925 ;; *************** function _init_queue *****************
  1926 ;; Defined at:
  1927 ;;		line 15 in file "../src/messages.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  1930 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  i               1    3[BANK1 ] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1942 ;;      Params:         0       0       2       0       0
  1943 ;;      Locals:         0       0       1       0       0
  1944 ;;      Temps:          0       0       1       0       0
  1945 ;;      Totals:         0       0       4       0       0
  1946 ;;Total ram usage:        4 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    8
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_init_queues
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text5
  1957  0010B0                     __ptext5:
  1958                           	opt stack 0
  1959  0010B0                     _init_queue:
  1960                           	opt stack 20
  1961                           
  1962                           ;messages.c: 16: unsigned char i;
  1963                           ;messages.c: 18: qptr->cur_write_ind = 0;
  1964                           
  1965                           ;incstack = 0
  1966  0010B0  0101               	movlb	1	; () banked
  1967  0010B2  EE20 F034          	lfsr	2,52
  1968  0010B6  0101               	movlb	1	; () banked
  1969  0010B8  51A4               	movf	init_queue@qptr& (0+255),w,b
  1970  0010BA  26D9               	addwf	fsr2l,f,c
  1971  0010BC  0101               	movlb	1	; () banked
  1972  0010BE  51A5               	movf	(init_queue@qptr+1)& (0+255),w,b
  1973  0010C0  22DA               	addwfc	fsr2h,f,c
  1974  0010C2  0E00               	movlw	0
  1975  0010C4  6EDF               	movwf	indf2,c
  1976                           
  1977                           ;messages.c: 19: qptr->cur_read_ind = 0;
  1978  0010C6  0101               	movlb	1	; () banked
  1979  0010C8  EE20 F035          	lfsr	2,53
  1980  0010CC  0101               	movlb	1	; () banked
  1981  0010CE  51A4               	movf	init_queue@qptr& (0+255),w,b
  1982  0010D0  26D9               	addwf	fsr2l,f,c
  1983  0010D2  0101               	movlb	1	; () banked
  1984  0010D4  51A5               	movf	(init_queue@qptr+1)& (0+255),w,b
  1985  0010D6  22DA               	addwfc	fsr2h,f,c
  1986  0010D8  0E00               	movlw	0
  1987  0010DA  6EDF               	movwf	indf2,c
  1988                           
  1989                           ; BSR set to: 1
  1990                           ;messages.c: 20: for (i = 0; i < 4; i++) {
  1991  0010DC  0101               	movlb	1	; () banked
  1992  0010DE  6FA6               	movwf	??_init_queue& (0+255),b
  1993  0010E0  0E00               	movlw	0
  1994  0010E2  0101               	movlb	1	; () banked
  1995  0010E4  0101               	movlb	1	; () banked
  1996  0010E6  6FA7               	movwf	init_queue@i& (0+255),b
  1997  0010E8  0101               	movlb	1	; () banked
  1998  0010EA  51A6               	movf	??_init_queue& (0+255),w,b
  1999                           
  2000                           ; BSR set to: 1
  2001  0010EC  0E03               	movlw	3
  2002  0010EE  0101               	movlb	1	; () banked
  2003  0010F0  0101               	movlb	1	; () banked
  2004  0010F2  65A7               	cpfsgt	init_queue@i& (0+255),b
  2005  0010F4  D001               	goto	l2616
  2006  0010F6  0012               	return	
  2007  0010F8                     l2616:
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;messages.c: 21: qptr->queue[i].full = 0;
  2011  0010F8  0101               	movlb	1	; () banked
  2012  0010FA  0101               	movlb	1	; () banked
  2013  0010FC  51A7               	movf	init_queue@i& (0+255),w,b
  2014  0010FE  0D0D               	mullw	13
  2015  001100  50F3               	movf	prodl,w,c
  2016  001102  0101               	movlb	1	; () banked
  2017  001104  0101               	movlb	1	; () banked
  2018  001106  25A4               	addwf	init_queue@qptr& (0+255),w,b
  2019  001108  6ED9               	movwf	fsr2l,c
  2020  00110A  50F4               	movf	prodh,w,c
  2021  00110C  0101               	movlb	1	; () banked
  2022  00110E  0101               	movlb	1	; () banked
  2023  001110  21A5               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2024  001112  6EDA               	movwf	fsr2h,c
  2025  001114  0E00               	movlw	0
  2026  001116  6EDF               	movwf	indf2,c
  2027                           
  2028                           ; BSR set to: 1
  2029  001118  0101               	movlb	1	; () banked
  2030  00111A  0101               	movlb	1	; () banked
  2031  00111C  2BA7               	incf	init_queue@i& (0+255),f,b
  2032                           
  2033                           ; BSR set to: 1
  2034  00111E  0E03               	movlw	3
  2035  001120  0101               	movlb	1	; () banked
  2036  001122  0101               	movlb	1	; () banked
  2037  001124  65A7               	cpfsgt	init_queue@i& (0+255),b
  2038  001126  D7E8               	goto	l2616
  2039  001128  0012               	return	
  2040  00112A                     __end_of_init_queue:
  2041                           	opt stack 0
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           prodh	equ	0xFF4
  2047                           prodl	equ	0xFF3
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           indf1	equ	0xFE7
  2051                           postdec1	equ	0xFE5
  2052                           fsr1h	equ	0xFE2
  2053                           fsr1l	equ	0xFE1
  2054                           indf2	equ	0xFDF
  2055                           fsr2h	equ	0xFDA
  2056                           fsr2l	equ	0xFD9
  2057                           status	equ	0xFD8
  2058                           
  2059 ;; *************** function _init_i2c *****************
  2060 ;; Defined at:
  2061 ;;		line 294 in file "../src/my_i2c.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2064 ;;		 -> main@ic(28), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2076 ;;      Params:         0       0       2       0       0
  2077 ;;      Locals:         0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0
  2079 ;;      Totals:         0       0       2       0       0
  2080 ;;Total ram usage:        2 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    8
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text6
  2091  00127A                     __ptext6:
  2092                           	opt stack 0
  2093  00127A                     _init_i2c:
  2094                           	opt stack 21
  2095                           
  2096                           ;my_i2c.c: 295: ic_ptr = ic;
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;incstack = 0
  2100  00127A  0101               	movlb	1	; () banked
  2101  00127C  0101               	movlb	1	; () banked
  2102  00127E  C1A5  F101         	movff	init_i2c@ic+1,_ic_ptr+1
  2103  001282  0101               	movlb	1	; () banked
  2104  001284  0101               	movlb	1	; () banked
  2105  001286  C1A4  F100         	movff	init_i2c@ic,_ic_ptr
  2106                           
  2107                           ; BSR set to: 1
  2108                           ;my_i2c.c: 296: ic_ptr->buflen = 0;
  2109  00128A  0101               	movlb	1	; () banked
  2110  00128C  EE20 F00A          	lfsr	2,10
  2111  001290  0101               	movlb	1	; () banked
  2112  001292  5100               	movf	_ic_ptr& (0+255),w,b
  2113  001294  26D9               	addwf	fsr2l,f,c
  2114  001296  0101               	movlb	1	; () banked
  2115  001298  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2116  00129A  22DA               	addwfc	fsr2h,f,c
  2117  00129C  0E00               	movlw	0
  2118  00129E  6EDF               	movwf	indf2,c
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;my_i2c.c: 297: ic_ptr->event_count = 0;
  2122  0012A0  0101               	movlb	1	; () banked
  2123  0012A2  EE20 F00B          	lfsr	2,11
  2124  0012A6  0101               	movlb	1	; () banked
  2125  0012A8  5100               	movf	_ic_ptr& (0+255),w,b
  2126  0012AA  26D9               	addwf	fsr2l,f,c
  2127  0012AC  0101               	movlb	1	; () banked
  2128  0012AE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2129  0012B0  22DA               	addwfc	fsr2h,f,c
  2130  0012B2  0E00               	movlw	0
  2131  0012B4  6EDF               	movwf	indf2,c
  2132                           
  2133                           ; BSR set to: 1
  2134                           ;my_i2c.c: 298: ic_ptr->status = 0x5;
  2135  0012B6  0101               	movlb	1	; () banked
  2136  0012B8  EE20 F00C          	lfsr	2,12
  2137  0012BC  0101               	movlb	1	; () banked
  2138  0012BE  5100               	movf	_ic_ptr& (0+255),w,b
  2139  0012C0  26D9               	addwf	fsr2l,f,c
  2140  0012C2  0101               	movlb	1	; () banked
  2141  0012C4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2142  0012C6  22DA               	addwfc	fsr2h,f,c
  2143  0012C8  0E05               	movlw	5
  2144  0012CA  6EDF               	movwf	indf2,c
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;my_i2c.c: 299: ic_ptr->error_count = 0;
  2148  0012CC  0101               	movlb	1	; () banked
  2149  0012CE  EE20 F00E          	lfsr	2,14
  2150  0012D2  0101               	movlb	1	; () banked
  2151  0012D4  5100               	movf	_ic_ptr& (0+255),w,b
  2152  0012D6  26D9               	addwf	fsr2l,f,c
  2153  0012D8  0101               	movlb	1	; () banked
  2154  0012DA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2155  0012DC  22DA               	addwfc	fsr2h,f,c
  2156  0012DE  0E00               	movlw	0
  2157  0012E0  6EDF               	movwf	indf2,c
  2158                           
  2159                           ; BSR set to: 1
  2160  0012E2  0012               	return	
  2161  0012E4                     __end_of_init_i2c:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           prodh	equ	0xFF4
  2168                           prodl	equ	0xFF3
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           indf1	equ	0xFE7
  2172                           postdec1	equ	0xFE5
  2173                           fsr1h	equ	0xFE2
  2174                           fsr1l	equ	0xFE1
  2175                           indf2	equ	0xFDF
  2176                           fsr2h	equ	0xFDA
  2177                           fsr2l	equ	0xFD9
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _i2c_configure_slave *****************
  2181 ;; Defined at:
  2182 ;;		line 305 in file "../src/my_i2c.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  addr            1    wreg     unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  addr            1    0[BANK1 ] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;		None               void
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2196 ;;      Params:         0       0       0       0       0
  2197 ;;      Locals:         0       0       1       0       0
  2198 ;;      Temps:          0       0       0       0       0
  2199 ;;      Totals:         0       0       1       0       0
  2200 ;;Total ram usage:        1 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    8
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text7
  2211  001814                     __ptext7:
  2212                           	opt stack 0
  2213  001814                     _i2c_configure_slave:
  2214                           	opt stack 21
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;incstack = 0
  2218                           ;i2c_configure_slave@addr stored from wreg
  2219  001814  CFE8 F1A4          	movff	wreg,i2c_configure_slave@addr
  2220                           
  2221                           ;my_i2c.c: 317: TRISCbits.TRISC3 = 1;
  2222  001818  8694               	bsf	3988,3,c	;volatile
  2223                           
  2224                           ;my_i2c.c: 318: TRISCbits.TRISC4 = 1;
  2225  00181A  8894               	bsf	3988,4,c	;volatile
  2226                           
  2227                           ;my_i2c.c: 323: SSPADD = addr;
  2228  00181C  C1A4  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2229                           
  2230                           ;my_i2c.c: 325: SSPSTAT = 0x0;
  2231  001820  0E00               	movlw	0
  2232  001822  6EC7               	movwf	4039,c	;volatile
  2233                           
  2234                           ;my_i2c.c: 326: SSPCON1 = 0x0;
  2235  001824  0E00               	movlw	0
  2236  001826  6EC6               	movwf	4038,c	;volatile
  2237                           
  2238                           ;my_i2c.c: 327: SSPCON2 = 0x0;
  2239  001828  0E00               	movlw	0
  2240  00182A  6EC5               	movwf	4037,c	;volatile
  2241                           
  2242                           ;my_i2c.c: 328: SSPCON1 |= 0x0E;
  2243  00182C  0E0E               	movlw	14
  2244  00182E  12C6               	iorwf	4038,f,c	;volatile
  2245                           
  2246                           ;my_i2c.c: 329: SSPSTAT |= 0b10000000;
  2247  001830  8EC7               	bsf	4039,7,c	;volatile
  2248                           
  2249                           ;my_i2c.c: 332: TRISCbits.TRISC3 = 1;
  2250  001832  8694               	bsf	3988,3,c	;volatile
  2251                           
  2252                           ;my_i2c.c: 333: TRISCbits.TRISC4 = 1;
  2253  001834  8894               	bsf	3988,4,c	;volatile
  2254                           
  2255                           ;my_i2c.c: 354: SSPCON2bits.SEN = 1;
  2256  001836  80C5               	bsf	4037,0,c	;volatile
  2257                           
  2258                           ;my_i2c.c: 355: SSPCON1 |= 0b00100000;
  2259  001838  8AC6               	bsf	4038,5,c	;volatile
  2260  00183A  0012               	return	
  2261  00183C                     __end_of_i2c_configure_slave:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           prodh	equ	0xFF4
  2268                           prodl	equ	0xFF3
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           indf1	equ	0xFE7
  2272                           postdec1	equ	0xFE5
  2273                           fsr1h	equ	0xFE2
  2274                           fsr1l	equ	0xFE1
  2275                           indf2	equ	0xFDF
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _enable_interrupts *****************
  2281 ;; Defined at:
  2282 ;;		line 14 in file "../src/interrupts.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;		None               void
  2289 ;; Registers used:
  2290 ;;		None
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    8
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text8
  2311  0018E4                     __ptext8:
  2312                           	opt stack 0
  2313  0018E4                     _enable_interrupts:
  2314                           	opt stack 21
  2315                           
  2316                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2317                           
  2318                           ;incstack = 0
  2319  0018E4  8ED0               	bsf	4048,7,c	;volatile
  2320                           
  2321                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2322  0018E6  8EF2               	bsf	intcon,7,c	;volatile
  2323                           
  2324                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2325  0018E8  8CF2               	bsf	intcon,6,c	;volatile
  2326  0018EA  0012               	return	
  2327  0018EC                     __end_of_enable_interrupts:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon	equ	0xFF2
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           indf1	equ	0xFE7
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           indf2	equ	0xFDF
  2343                           fsr2h	equ	0xFDA
  2344                           fsr2l	equ	0xFD9
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _block_on_To_msgqueues *****************
  2348 ;; Defined at:
  2349 ;;		line 259 in file "../src/messages.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;		None               void
  2356 ;; Registers used:
  2357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0
  2365 ;;      Temps:          0       0       1       0       0
  2366 ;;      Totals:         0       0       1       0       0
  2367 ;;Total ram usage:        1 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:   11
  2370 ;; This function calls:
  2371 ;;		_Delay1KTCYx
  2372 ;;		_check_msg
  2373 ;;		_in_main
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text9
  2380  001032                     __ptext9:
  2381                           	opt stack 0
  2382  001032                     _block_on_To_msgqueues:
  2383                           	opt stack 18
  2384                           
  2385                           ;messages.c: 260: if (!in_main()) {
  2386                           
  2387                           ;incstack = 0
  2388  001032  ECB7  F00A         	call	_in_main	;wreg free
  2389  001036  0101               	movlb	1	; () banked
  2390  001038  0101               	movlb	1	; () banked
  2391  00103A  51A9               	movf	(?_in_main+1)& (0+255),w,b
  2392  00103C  0101               	movlb	1	; () banked
  2393  00103E  11A8               	iorwf	?_in_main& (0+255),w,b
  2394  001040  B4D8               	btfsc	status,2,c
  2395  001042  0012               	return	
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;messages.c: 262: }
  2399                           ;messages.c: 264: MQ_Main_Willing_to_block = 1;
  2400                           
  2401                           ; BSR set to: 1
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;messages.c: 261: return;
  2405  001044  0101               	movlb	1	; () banked
  2406  001046  6FAA               	movwf	??_block_on_To_msgqueues& (0+255),b
  2407  001048  0E01               	movlw	1
  2408  00104A  6E58               	movwf	_MQ_Main_Willing_to_block,c
  2409  00104C  0101               	movlb	1	; () banked
  2410  00104E  51AA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2411  001050                     l2570:
  2412                           
  2413                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  2414  001050  0101               	movlb	1	; () banked
  2415  001052  0E01               	movlw	high _ToMainHigh_MQ
  2416  001054  0101               	movlb	1	; () banked
  2417  001056  0101               	movlb	1	; () banked
  2418  001058  6FA5               	movwf	(check_msg@qptr+1)& (0+255),b
  2419  00105A  0101               	movlb	1	; () banked
  2420  00105C  0E38               	movlw	low _ToMainHigh_MQ
  2421  00105E  0101               	movlb	1	; () banked
  2422  001060  0101               	movlb	1	; () banked
  2423  001062  6FA4               	movwf	check_msg@qptr& (0+255),b
  2424  001064  EC93  F00B         	call	_check_msg	;wreg free
  2425  001068  0900               	iorlw	0
  2426  00106A  B4D8               	btfsc	status,2,c
  2427  00106C  D007               	goto	l2576
  2428                           
  2429                           ;messages.c: 267: MQ_Main_Willing_to_block = 0;
  2430  00106E  0101               	movlb	1	; () banked
  2431  001070  6FAA               	movwf	??_block_on_To_msgqueues& (0+255),b
  2432  001072  0E00               	movlw	0
  2433  001074  6E58               	movwf	_MQ_Main_Willing_to_block,c
  2434  001076  0101               	movlb	1	; () banked
  2435  001078  51AA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2436  00107A  0012               	return	
  2437  00107C                     l2576:
  2438                           
  2439                           ;messages.c: 272: }
  2440                           ;messages.c: 273: if (check_msg(&ToMainLow_MQ)) {
  2441  00107C  0101               	movlb	1	; () banked
  2442  00107E  0E01               	movlw	high _ToMainLow_MQ
  2443  001080  0101               	movlb	1	; () banked
  2444  001082  0101               	movlb	1	; () banked
  2445  001084  6FA5               	movwf	(check_msg@qptr+1)& (0+255),b
  2446  001086  0101               	movlb	1	; () banked
  2447  001088  0E6E               	movlw	low _ToMainLow_MQ
  2448  00108A  0101               	movlb	1	; () banked
  2449  00108C  0101               	movlb	1	; () banked
  2450  00108E  6FA4               	movwf	check_msg@qptr& (0+255),b
  2451  001090  EC93  F00B         	call	_check_msg	;wreg free
  2452  001094  0900               	iorlw	0
  2453  001096  B4D8               	btfsc	status,2,c
  2454  001098  D007               	goto	l2582
  2455                           
  2456                           ;messages.c: 274: MQ_Main_Willing_to_block = 0;
  2457  00109A  0101               	movlb	1	; () banked
  2458  00109C  6FAA               	movwf	??_block_on_To_msgqueues& (0+255),b
  2459  00109E  0E00               	movlw	0
  2460  0010A0  6E58               	movwf	_MQ_Main_Willing_to_block,c
  2461  0010A2  0101               	movlb	1	; () banked
  2462  0010A4  51AA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2463  0010A6  0012               	return	
  2464  0010A8                     l2582:
  2465                           
  2466                           ;messages.c: 279: }
  2467                           ;messages.c: 280: Delay1KTCYx(10);
  2468  0010A8  0E0A               	movlw	10
  2469  0010AA  EC43  F00C         	call	_Delay1KTCYx
  2470  0010AE  D7D0               	goto	l2570
  2471  0010B0                     __end_of_block_on_To_msgqueues:
  2472                           	opt stack 0
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           prodh	equ	0xFF4
  2478                           prodl	equ	0xFF3
  2479                           intcon	equ	0xFF2
  2480                           postinc0	equ	0xFEE
  2481                           wreg	equ	0xFE8
  2482                           indf1	equ	0xFE7
  2483                           postdec1	equ	0xFE5
  2484                           fsr1h	equ	0xFE2
  2485                           fsr1l	equ	0xFE1
  2486                           indf2	equ	0xFDF
  2487                           fsr2h	equ	0xFDA
  2488                           fsr2l	equ	0xFD9
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _in_main *****************
  2492 ;; Defined at:
  2493 ;;		line 40 in file "../src/interrupts.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2    4[BANK1 ] int 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2507 ;;      Params:         0       0       2       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0
  2510 ;;      Totals:         0       0       2       0       0
  2511 ;;Total ram usage:        2 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:   10
  2514 ;; This function calls:
  2515 ;;		_in_high_int
  2516 ;;		_in_low_int
  2517 ;; This function is called by:
  2518 ;;		_block_on_To_msgqueues
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text10
  2523  00156E                     __ptext10:
  2524                           	opt stack 0
  2525  00156E                     _in_main:
  2526                           	opt stack 18
  2527                           
  2528                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  2529                           
  2530                           ;incstack = 0
  2531  00156E  EC71  F00A         	call	_in_low_int	;wreg free
  2532  001572  0101               	movlb	1	; () banked
  2533  001574  0101               	movlb	1	; () banked
  2534  001576  51A7               	movf	(?_in_low_int+1)& (0+255),w,b
  2535  001578  0101               	movlb	1	; () banked
  2536  00157A  11A6               	iorwf	?_in_low_int& (0+255),w,b
  2537  00157C  A4D8               	btfss	status,2,c
  2538  00157E  D011               	goto	l2182
  2539                           
  2540                           ; BSR set to: 1
  2541  001580  EC4E  F00C         	call	_in_high_int	;wreg free
  2542  001584  0101               	movlb	1	; () banked
  2543  001586  0101               	movlb	1	; () banked
  2544  001588  51A5               	movf	(?_in_high_int+1)& (0+255),w,b
  2545  00158A  0101               	movlb	1	; () banked
  2546  00158C  11A4               	iorwf	?_in_high_int& (0+255),w,b
  2547  00158E  A4D8               	btfss	status,2,c
  2548  001590  D008               	goto	l2182
  2549                           
  2550                           ; BSR set to: 1
  2551                           ;interrupts.c: 42: return (1);
  2552  001592  0E00               	movlw	0
  2553  001594  0101               	movlb	1	; () banked
  2554  001596  0101               	movlb	1	; () banked
  2555  001598  6FA9               	movwf	(?_in_main+1)& (0+255),b
  2556  00159A  0E01               	movlw	1
  2557  00159C  0101               	movlb	1	; () banked
  2558  00159E  6FA8               	movwf	?_in_main& (0+255),b
  2559  0015A0  0012               	return	
  2560  0015A2                     l2182:
  2561                           
  2562                           ; BSR set to: 1
  2563                           ;interrupts.c: 44: return (0);
  2564  0015A2  0E00               	movlw	0
  2565  0015A4  0101               	movlb	1	; () banked
  2566  0015A6  0101               	movlb	1	; () banked
  2567  0015A8  6FA9               	movwf	(?_in_main+1)& (0+255),b
  2568  0015AA  0E00               	movlw	0
  2569  0015AC  0101               	movlb	1	; () banked
  2570  0015AE  6FA8               	movwf	?_in_main& (0+255),b
  2571  0015B0  0012               	return	
  2572  0015B2                     __end_of_in_main:
  2573                           	opt stack 0
  2574                           tblptru	equ	0xFF8
  2575                           tblptrh	equ	0xFF7
  2576                           tblptrl	equ	0xFF6
  2577                           tablat	equ	0xFF5
  2578                           prodh	equ	0xFF4
  2579                           prodl	equ	0xFF3
  2580                           intcon	equ	0xFF2
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           indf1	equ	0xFE7
  2584                           postdec1	equ	0xFE5
  2585                           fsr1h	equ	0xFE2
  2586                           fsr1l	equ	0xFE1
  2587                           indf2	equ	0xFDF
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           
  2592 ;; *************** function _in_low_int *****************
  2593 ;; Defined at:
  2594 ;;		line 30 in file "../src/interrupts.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  2    2[BANK1 ] int 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2608 ;;      Params:         0       0       2       0       0
  2609 ;;      Locals:         0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0
  2611 ;;      Totals:         0       0       2       0       0
  2612 ;;Total ram usage:        2 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    9
  2615 ;; This function calls:
  2616 ;;		_in_high_int
  2617 ;; This function is called by:
  2618 ;;		_in_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text11
  2623  0014E2                     __ptext11:
  2624                           	opt stack 0
  2625  0014E2                     _in_low_int:
  2626                           	opt stack 18
  2627                           
  2628                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  2629                           
  2630                           ; BSR set to: 1
  2631                           ;incstack = 0
  2632  0014E2  ACF2               	btfss	intcon,6,c	;volatile
  2633  0014E4  D008               	goto	l2160
  2634                           
  2635                           ;interrupts.c: 32: return (0);
  2636  0014E6  0E00               	movlw	0
  2637  0014E8  0101               	movlb	1	; () banked
  2638  0014EA  0101               	movlb	1	; () banked
  2639  0014EC  6FA7               	movwf	(?_in_low_int+1)& (0+255),b
  2640  0014EE  0E00               	movlw	0
  2641  0014F0  0101               	movlb	1	; () banked
  2642  0014F2  6FA6               	movwf	?_in_low_int& (0+255),b
  2643  0014F4  0012               	return	
  2644  0014F6                     l2160:
  2645  0014F6  EC4E  F00C         	call	_in_high_int	;wreg free
  2646  0014FA  0101               	movlb	1	; () banked
  2647  0014FC  0101               	movlb	1	; () banked
  2648  0014FE  51A5               	movf	(?_in_high_int+1)& (0+255),w,b
  2649  001500  0101               	movlb	1	; () banked
  2650  001502  11A4               	iorwf	?_in_high_int& (0+255),w,b
  2651  001504  B4D8               	btfsc	status,2,c
  2652  001506  D008               	goto	l2168
  2653                           
  2654                           ; BSR set to: 1
  2655                           ;interrupts.c: 34: return (0);
  2656  001508  0E00               	movlw	0
  2657  00150A  0101               	movlb	1	; () banked
  2658  00150C  0101               	movlb	1	; () banked
  2659  00150E  6FA7               	movwf	(?_in_low_int+1)& (0+255),b
  2660  001510  0E00               	movlw	0
  2661  001512  0101               	movlb	1	; () banked
  2662  001514  6FA6               	movwf	?_in_low_int& (0+255),b
  2663  001516  0012               	return	
  2664  001518                     l2168:
  2665                           
  2666                           ; BSR set to: 1
  2667                           ;interrupts.c: 36: return (1);
  2668  001518  0E00               	movlw	0
  2669  00151A  0101               	movlb	1	; () banked
  2670  00151C  0101               	movlb	1	; () banked
  2671  00151E  6FA7               	movwf	(?_in_low_int+1)& (0+255),b
  2672  001520  0E01               	movlw	1
  2673  001522  0101               	movlb	1	; () banked
  2674  001524  6FA6               	movwf	?_in_low_int& (0+255),b
  2675  001526  0012               	return	
  2676  001528                     __end_of_in_low_int:
  2677                           	opt stack 0
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           prodh	equ	0xFF4
  2683                           prodl	equ	0xFF3
  2684                           intcon	equ	0xFF2
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           indf1	equ	0xFE7
  2688                           postdec1	equ	0xFE5
  2689                           fsr1h	equ	0xFE2
  2690                           fsr1l	equ	0xFE1
  2691                           indf2	equ	0xFDF
  2692                           fsr2h	equ	0xFDA
  2693                           fsr2l	equ	0xFD9
  2694                           status	equ	0xFD8
  2695                           
  2696 ;; *************** function _in_high_int *****************
  2697 ;; Defined at:
  2698 ;;		line 22 in file "../src/interrupts.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2    0[BANK1 ] int 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2712 ;;      Params:         0       0       2       0       0
  2713 ;;      Locals:         0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0
  2715 ;;      Totals:         0       0       2       0       0
  2716 ;;Total ram usage:        2 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    8
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_in_low_int
  2723 ;;		_in_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text12
  2728  00189C                     __ptext12:
  2729                           	opt stack 0
  2730  00189C                     _in_high_int:
  2731                           	opt stack 18
  2732                           
  2733                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  2734                           
  2735                           ; BSR set to: 1
  2736                           ;incstack = 0
  2737  00189C  0E00               	movlw	0
  2738  00189E  AEF2               	btfss	intcon,7,c	;volatile
  2739  0018A0  0E01               	movlw	1
  2740  0018A2  0101               	movlb	1	; () banked
  2741  0018A4  0101               	movlb	1	; () banked
  2742  0018A6  6FA4               	movwf	?_in_high_int& (0+255),b
  2743  0018A8  0101               	movlb	1	; () banked
  2744  0018AA  6BA5               	clrf	(?_in_high_int+1)& (0+255),b
  2745  0018AC  0012               	return	
  2746  0018AE                     __end_of_in_high_int:
  2747                           	opt stack 0
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           prodh	equ	0xFF4
  2753                           prodl	equ	0xFF3
  2754                           intcon	equ	0xFF2
  2755                           postinc0	equ	0xFEE
  2756                           wreg	equ	0xFE8
  2757                           indf1	equ	0xFE7
  2758                           postdec1	equ	0xFE5
  2759                           fsr1h	equ	0xFE2
  2760                           fsr1l	equ	0xFE1
  2761                           indf2	equ	0xFDF
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _check_msg *****************
  2767 ;; Defined at:
  2768 ;;		line 223 in file "../src/messages.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2771 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2783 ;;      Params:         0       0       2       0       0
  2784 ;;      Locals:         0       0       0       0       0
  2785 ;;      Temps:          0       0       1       0       0
  2786 ;;      Totals:         0       0       3       0       0
  2787 ;;Total ram usage:        3 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    8
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_block_on_To_msgqueues
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text13
  2798  001726                     __ptext13:
  2799                           	opt stack 0
  2800  001726                     _check_msg:
  2801                           	opt stack 20
  2802                           
  2803                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  2804                           
  2805                           ; BSR set to: 1
  2806                           ;incstack = 0
  2807  001726  0101               	movlb	1	; () banked
  2808  001728  EE20 F035          	lfsr	2,53
  2809  00172C  0101               	movlb	1	; () banked
  2810  00172E  51A4               	movf	check_msg@qptr& (0+255),w,b
  2811  001730  26D9               	addwf	fsr2l,f,c
  2812  001732  0101               	movlb	1	; () banked
  2813  001734  51A5               	movf	(check_msg@qptr+1)& (0+255),w,b
  2814  001736  22DA               	addwfc	fsr2h,f,c
  2815  001738  50DF               	movf	indf2,w,c
  2816  00173A  0101               	movlb	1	; () banked
  2817  00173C  6FA6               	movwf	??_check_msg& (0+255),b
  2818  00173E  0101               	movlb	1	; () banked
  2819  001740  51A6               	movf	??_check_msg& (0+255),w,b
  2820  001742  0D0D               	mullw	13
  2821  001744  50F3               	movf	prodl,w,c
  2822  001746  0101               	movlb	1	; () banked
  2823  001748  0101               	movlb	1	; () banked
  2824  00174A  25A4               	addwf	check_msg@qptr& (0+255),w,b
  2825  00174C  6ED9               	movwf	fsr2l,c
  2826  00174E  50F4               	movf	prodh,w,c
  2827  001750  0101               	movlb	1	; () banked
  2828  001752  0101               	movlb	1	; () banked
  2829  001754  21A5               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2830  001756  6EDA               	movwf	fsr2h,c
  2831  001758  50DF               	movf	indf2,w,c
  2832  00175A  0012               	return	
  2833  00175C                     __end_of_check_msg:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           prodh	equ	0xFF4
  2840                           prodl	equ	0xFF3
  2841                           intcon	equ	0xFF2
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           indf1	equ	0xFE7
  2845                           postdec1	equ	0xFE5
  2846                           fsr1h	equ	0xFE2
  2847                           fsr1l	equ	0xFE1
  2848                           indf2	equ	0xFDF
  2849                           fsr2h	equ	0xFDA
  2850                           fsr2l	equ	0xFD9
  2851                           status	equ	0xFD8
  2852                           
  2853 ;; *************** function _Delay1KTCYx *****************
  2854 ;; Defined at:
  2855 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  unit            1    wreg     unsigned char 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  unit            1    0[BANK1 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;		None               void
  2862 ;; Registers used:
  2863 ;;		wreg
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       0       1       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         0       0       1       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    8
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_block_on_To_msgqueues
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text14
  2884  001886                     __ptext14:
  2885                           	opt stack 0
  2886  001886                     _Delay1KTCYx:
  2887                           	opt stack 20
  2888                           
  2889                           ; BSR set to: 1
  2890                           ;incstack = 0
  2891                           ;Delay1KTCYx@unit stored from wreg
  2892  001886  CFE8 F1A4          	movff	wreg,Delay1KTCYx@unit
  2893  00188A                     l800:
  2894  00188A  0EFA               	movlw	250
  2895  00188C                     u1937:
  2896  00188C  F000               	nop	
  2897  00188E  2EE8               	decfsz	wreg,f,c
  2898  001890  D7FD               	goto	u1937
  2899  001892  0101               	movlb	1	; () banked
  2900  001894  0101               	movlb	1	; () banked
  2901  001896  2FA4               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2902  001898  D7F8               	goto	l800
  2903  00189A  0012               	return	
  2904  00189C                     __end_of_Delay1KTCYx:
  2905                           	opt stack 0
  2906                           tblptru	equ	0xFF8
  2907                           tblptrh	equ	0xFF7
  2908                           tblptrl	equ	0xFF6
  2909                           tablat	equ	0xFF5
  2910                           prodh	equ	0xFF4
  2911                           prodl	equ	0xFF3
  2912                           intcon	equ	0xFF2
  2913                           postinc0	equ	0xFEE
  2914                           wreg	equ	0xFE8
  2915                           indf1	equ	0xFE7
  2916                           postdec1	equ	0xFE5
  2917                           fsr1h	equ	0xFE2
  2918                           fsr1l	equ	0xFE1
  2919                           indf2	equ	0xFDF
  2920                           fsr2h	equ	0xFDA
  2921                           fsr2l	equ	0xFD9
  2922                           status	equ	0xFD8
  2923                           
  2924 ;; *************** function _addDataPoints *****************
  2925 ;; Defined at:
  2926 ;;		line 55 in file "../src/sensorcomm.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  sensorid        2    8[BANK1 ] int 
  2929 ;;  data            2   10[BANK1 ] PTR void 
  2930 ;;		 -> main@msgbuffer(11), 
  2931 ;;  len             2   12[BANK1 ] int 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2943 ;;      Params:         0       0       6       0       0
  2944 ;;      Locals:         0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0
  2946 ;;      Totals:         0       0       6       0       0
  2947 ;;Total ram usage:        6 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    9
  2950 ;; This function calls:
  2951 ;;		_addADDataPoints
  2952 ;; This function is called by:
  2953 ;;		_main
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text15
  2958  0017C0                     __ptext15:
  2959                           	opt stack 0
  2960  0017C0                     _addDataPoints:
  2961                           	opt stack 20
  2962                           
  2963                           ;sensorcomm.c: 58: if(sensorid == 0){
  2964                           
  2965                           ; BSR set to: 1
  2966                           ;incstack = 0
  2967  0017C0  0101               	movlb	1	; () banked
  2968  0017C2  0101               	movlb	1	; () banked
  2969  0017C4  51AD               	movf	(addDataPoints@sensorid+1)& (0+255),w,b
  2970  0017C6  11AC               	iorwf	addDataPoints@sensorid& (0+255),w,b
  2971  0017C8  A4D8               	btfss	status,2,c
  2972  0017CA  0012               	return	
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;sensorcomm.c: 59: addADDataPoints((sensorADData*) data, len);
  2976  0017CC  0101               	movlb	1	; () banked
  2977  0017CE  0101               	movlb	1	; () banked
  2978  0017D0  C1AF  F1A5         	movff	addDataPoints@data+1,addADDataPoints@data+1
  2979  0017D4  0101               	movlb	1	; () banked
  2980  0017D6  0101               	movlb	1	; () banked
  2981  0017D8  C1AE  F1A4         	movff	addDataPoints@data,addADDataPoints@data
  2982  0017DC  C1B0  F1A6         	movff	addDataPoints@len,addADDataPoints@len
  2983  0017E0  C1B1  F1A7         	movff	addDataPoints@len+1,addADDataPoints@len+1
  2984  0017E4  EC8E  F006         	call	_addADDataPoints	;wreg free
  2985  0017E8  0012               	return	
  2986  0017EA                     __end_of_addDataPoints:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           intcon	equ	0xFF2
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           indf1	equ	0xFE7
  2998                           postdec1	equ	0xFE5
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _addADDataPoints *****************
  3007 ;; Defined at:
  3008 ;;		line 64 in file "../src/sensorcomm.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  data            2    0[BANK1 ] PTR struct .
  3011 ;;		 -> main@msgbuffer(11), 
  3012 ;;  len             2    2[BANK1 ] int 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  i               2    6[BANK1 ] int 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;		None               void
  3017 ;; Registers used:
  3018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3024 ;;      Params:         0       0       4       0       0
  3025 ;;      Locals:         0       0       2       0       0
  3026 ;;      Temps:          0       0       2       0       0
  3027 ;;      Totals:         0       0       8       0       0
  3028 ;;Total ram usage:        8 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    8
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_addDataPoints
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text16
  3039  000D1C                     __ptext16:
  3040                           	opt stack 0
  3041  000D1C                     _addADDataPoints:
  3042                           	opt stack 20
  3043                           
  3044                           ;sensorcomm.c: 66: if(ADacc.len + len < 10){
  3045                           
  3046                           ;incstack = 0
  3047  000D1C  0100               	movlb	0	; () banked
  3048  000D1E  0100               	movlb	0	; () banked
  3049  000D20  51E6               	movf	_ADacc& (0+255),w,b
  3050  000D22  0101               	movlb	1	; () banked
  3051  000D24  0101               	movlb	1	; () banked
  3052  000D26  25A6               	addwf	addADDataPoints@len& (0+255),w,b
  3053  000D28  0101               	movlb	1	; () banked
  3054  000D2A  6FA8               	movwf	??_addADDataPoints& (0+255),b
  3055  000D2C  0E00               	movlw	0
  3056  000D2E  0101               	movlb	1	; () banked
  3057  000D30  0101               	movlb	1	; () banked
  3058  000D32  21A7               	addwfc	(addADDataPoints@len+1)& (0+255),w,b
  3059  000D34  0101               	movlb	1	; () banked
  3060  000D36  6FA9               	movwf	(??_addADDataPoints+1)& (0+255),b
  3061  000D38  0101               	movlb	1	; () banked
  3062  000D3A  51A9               	movf	(??_addADDataPoints+1)& (0+255),w,b
  3063  000D3C  0A80               	xorlw	128
  3064  000D3E  6EF3               	movwf	prodl,c
  3065  000D40  0E80               	movlw	128
  3066  000D42  5CF3               	subwf	prodl,w,c
  3067  000D44  0E0A               	movlw	10
  3068  000D46  B4D8               	btfsc	status,2,c
  3069  000D48  5DA8               	subwf	??_addADDataPoints& (0+255),w,b
  3070  000D4A  B0D8               	btfsc	status,0,c
  3071  000D4C  0012               	return	
  3072                           
  3073                           ; BSR set to: 1
  3074                           ;sensorcomm.c: 67: int i = 0;
  3075  000D4E  0E00               	movlw	0
  3076  000D50  0101               	movlb	1	; () banked
  3077  000D52  0101               	movlb	1	; () banked
  3078  000D54  6FAB               	movwf	(addADDataPoints@i+1)& (0+255),b
  3079  000D56  0E00               	movlw	0
  3080  000D58  0101               	movlb	1	; () banked
  3081  000D5A  6FAA               	movwf	addADDataPoints@i& (0+255),b
  3082  000D5C  D023               	goto	l2900
  3083  000D5E                     l2894:
  3084                           
  3085                           ; BSR set to: 1
  3086                           ;sensorcomm.c: 69: ADacc.data[ADacc.len++] = data[i];
  3087  000D5E  0101               	movlb	1	; () banked
  3088  000D60  0101               	movlb	1	; () banked
  3089  000D62  51AA               	movf	addADDataPoints@i& (0+255),w,b
  3090  000D64  0101               	movlb	1	; () banked
  3091  000D66  0101               	movlb	1	; () banked
  3092  000D68  25A4               	addwf	addADDataPoints@data& (0+255),w,b
  3093  000D6A  6ED9               	movwf	fsr2l,c
  3094  000D6C  0101               	movlb	1	; () banked
  3095  000D6E  0101               	movlb	1	; () banked
  3096  000D70  51AB               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3097  000D72  0101               	movlb	1	; () banked
  3098  000D74  0101               	movlb	1	; () banked
  3099  000D76  21A5               	addwfc	(addADDataPoints@data+1)& (0+255),w,b
  3100  000D78  6EDA               	movwf	fsr2h,c
  3101  000D7A  0100               	movlb	0	; () banked
  3102  000D7C  0100               	movlb	0	; () banked
  3103  000D7E  51E6               	movf	_ADacc& (0+255),w,b
  3104  000D80  0D01               	mullw	1
  3105  000D82  0100               	movlb	0	; () banked
  3106  000D84  0EE7               	movlw	low (_ADacc+1)
  3107  000D86  24F3               	addwf	prodl,w,c
  3108  000D88  6EE1               	movwf	fsr1l,c
  3109  000D8A  0100               	movlb	0	; () banked
  3110  000D8C  0E00               	movlw	high (_ADacc+1)
  3111  000D8E  20F4               	addwfc	prodh,w,c
  3112  000D90  6EE2               	movwf	fsr1h,c
  3113  000D92  CFDF FFE7          	movff	indf2,indf1
  3114                           
  3115                           ; BSR set to: 0
  3116  000D96  0100               	movlb	0	; () banked
  3117  000D98  0100               	movlb	0	; () banked
  3118  000D9A  2BE6               	incf	_ADacc& (0+255),f,b
  3119                           
  3120                           ; BSR set to: 0
  3121  000D9C  0101               	movlb	1	; () banked
  3122  000D9E  0101               	movlb	1	; () banked
  3123  000DA0  4BAA               	infsnz	addADDataPoints@i& (0+255),f,b
  3124  000DA2  2BAB               	incf	(addADDataPoints@i+1)& (0+255),f,b
  3125  000DA4                     l2900:
  3126                           
  3127                           ; BSR set to: 1
  3128  000DA4  0101               	movlb	1	; () banked
  3129  000DA6  0101               	movlb	1	; () banked
  3130  000DA8  51AB               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3131  000DAA  0A80               	xorlw	128
  3132  000DAC  0101               	movlb	1	; () banked
  3133  000DAE  6FA8               	movwf	??_addADDataPoints& (0+255),b
  3134  000DB0  0101               	movlb	1	; () banked
  3135  000DB2  51A6               	movf	addADDataPoints@len& (0+255),w,b
  3136  000DB4  0101               	movlb	1	; () banked
  3137  000DB6  0101               	movlb	1	; () banked
  3138  000DB8  5DAA               	subwf	addADDataPoints@i& (0+255),w,b
  3139  000DBA  0101               	movlb	1	; () banked
  3140  000DBC  0101               	movlb	1	; () banked
  3141  000DBE  51A7               	movf	(addADDataPoints@len+1)& (0+255),w,b
  3142  000DC0  0A80               	xorlw	128
  3143  000DC2  0101               	movlb	1	; () banked
  3144  000DC4  59A8               	subwfb	??_addADDataPoints& (0+255),w,b
  3145  000DC6  B0D8               	btfsc	status,0,c
  3146                           
  3147                           ; BSR set to: 1
  3148                           
  3149                           ; BSR set to: 1
  3150                           
  3151                           ; BSR set to: 1
  3152  000DC8  0012               	return	
  3153  000DCA  D7C9               	goto	l2894
  3154  000DCC                     __end_of_addADDataPoints:
  3155                           	opt stack 0
  3156                           tblptru	equ	0xFF8
  3157                           tblptrh	equ	0xFF7
  3158                           tblptrl	equ	0xFF6
  3159                           tablat	equ	0xFF5
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           intcon	equ	0xFF2
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           indf1	equ	0xFE7
  3166                           postdec1	equ	0xFE5
  3167                           fsr1h	equ	0xFE2
  3168                           fsr1l	equ	0xFE1
  3169                           indf2	equ	0xFDF
  3170                           fsr2h	equ	0xFDA
  3171                           fsr2l	equ	0xFD9
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _ToMainLow_recvmsg *****************
  3175 ;; Defined at:
  3176 ;;		line 113 in file "../src/messages.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  maxlength       1    wreg     unsigned char 
  3179 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3180 ;;		 -> main@msgtype(1), 
  3181 ;;  data            2   26[BANK1 ] PTR void 
  3182 ;;		 -> main@msgbuffer(11), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      char 
  3187 ;; Registers used:
  3188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3194 ;;      Params:         0       0       4       0       0
  3195 ;;      Locals:         0       0       1       0       0
  3196 ;;      Temps:          0       0       0       0       0
  3197 ;;      Totals:         0       0       5       0       0
  3198 ;;Total ram usage:        5 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:   10
  3201 ;; This function calls:
  3202 ;;		_recv_msg
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text17
  3209  0015B2                     __ptext17:
  3210                           	opt stack 0
  3211  0015B2                     _ToMainLow_recvmsg:
  3212                           	opt stack 19
  3213                           
  3214                           ; BSR set to: 1
  3215                           ;incstack = 0
  3216                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3217  0015B2  CFE8 F1C0          	movff	wreg,ToMainLow_recvmsg@maxlength
  3218                           
  3219                           ;messages.c: 119: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3220  0015B6  0101               	movlb	1	; () banked
  3221  0015B8  0E01               	movlw	high _ToMainLow_MQ
  3222  0015BA  0101               	movlb	1	; () banked
  3223  0015BC  0101               	movlb	1	; () banked
  3224  0015BE  6FAF               	movwf	(recv_msg@qptr+1)& (0+255),b
  3225  0015C0  0101               	movlb	1	; () banked
  3226  0015C2  0E6E               	movlw	low _ToMainLow_MQ
  3227  0015C4  0101               	movlb	1	; () banked
  3228  0015C6  0101               	movlb	1	; () banked
  3229  0015C8  6FAE               	movwf	recv_msg@qptr& (0+255),b
  3230  0015CA  C1C0  F1B0         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3231  0015CE  0101               	movlb	1	; () banked
  3232  0015D0  0101               	movlb	1	; () banked
  3233  0015D2  C1BD  F1B2         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3234  0015D6  0101               	movlb	1	; () banked
  3235  0015D8  0101               	movlb	1	; () banked
  3236  0015DA  C1BC  F1B1         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3237  0015DE  0101               	movlb	1	; () banked
  3238  0015E0  0101               	movlb	1	; () banked
  3239  0015E2  C1BF  F1B4         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3240  0015E6  0101               	movlb	1	; () banked
  3241  0015E8  0101               	movlb	1	; () banked
  3242  0015EA  C1BE  F1B3         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3243  0015EE  EC8E  F004         	call	_recv_msg	;wreg free
  3244  0015F2  0012               	return	
  3245  0015F4                     __end_of_ToMainLow_recvmsg:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           indf1	equ	0xFE7
  3257                           postdec1	equ	0xFE5
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _ToMainHigh_recvmsg *****************
  3266 ;; Defined at:
  3267 ;;		line 136 in file "../src/messages.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  maxlength       1    wreg     unsigned char 
  3270 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3271 ;;		 -> main@msgtype(1), 
  3272 ;;  data            2   26[BANK1 ] PTR void 
  3273 ;;		 -> main@msgbuffer(11), 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      char 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3285 ;;      Params:         0       0       4       0       0
  3286 ;;      Locals:         0       0       1       0       0
  3287 ;;      Temps:          0       0       0       0       0
  3288 ;;      Totals:         0       0       5       0       0
  3289 ;;Total ram usage:        5 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:   10
  3292 ;; This function calls:
  3293 ;;		_recv_msg
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text18
  3300  0015F4                     __ptext18:
  3301                           	opt stack 0
  3302  0015F4                     _ToMainHigh_recvmsg:
  3303                           	opt stack 19
  3304                           
  3305                           ;incstack = 0
  3306                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3307  0015F4  CFE8 F1C0          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3308                           
  3309                           ;messages.c: 142: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3310  0015F8  0101               	movlb	1	; () banked
  3311  0015FA  0E01               	movlw	high _ToMainHigh_MQ
  3312  0015FC  0101               	movlb	1	; () banked
  3313  0015FE  0101               	movlb	1	; () banked
  3314  001600  6FAF               	movwf	(recv_msg@qptr+1)& (0+255),b
  3315  001602  0101               	movlb	1	; () banked
  3316  001604  0E38               	movlw	low _ToMainHigh_MQ
  3317  001606  0101               	movlb	1	; () banked
  3318  001608  0101               	movlb	1	; () banked
  3319  00160A  6FAE               	movwf	recv_msg@qptr& (0+255),b
  3320  00160C  C1C0  F1B0         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3321  001610  0101               	movlb	1	; () banked
  3322  001612  0101               	movlb	1	; () banked
  3323  001614  C1BD  F1B2         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3324  001618  0101               	movlb	1	; () banked
  3325  00161A  0101               	movlb	1	; () banked
  3326  00161C  C1BC  F1B1         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3327  001620  0101               	movlb	1	; () banked
  3328  001622  0101               	movlb	1	; () banked
  3329  001624  C1BF  F1B4         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3330  001628  0101               	movlb	1	; () banked
  3331  00162A  0101               	movlb	1	; () banked
  3332  00162C  C1BE  F1B3         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3333  001630  EC8E  F004         	call	_recv_msg	;wreg free
  3334  001634  0012               	return	
  3335  001636                     __end_of_ToMainHigh_recvmsg:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodh	equ	0xFF4
  3342                           prodl	equ	0xFF3
  3343                           intcon	equ	0xFF2
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           indf1	equ	0xFE7
  3347                           postdec1	equ	0xFE5
  3348                           fsr1h	equ	0xFE2
  3349                           fsr1l	equ	0xFE1
  3350                           indf2	equ	0xFDF
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function _recv_msg *****************
  3356 ;; Defined at:
  3357 ;;		line 64 in file "../src/messages.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3360 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3361 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3362 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3363 ;;		 -> main@msgtype(1), 
  3364 ;;  data            2   15[BANK1 ] PTR void 
  3365 ;;		 -> main@msgbuffer(11), 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3368 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3369 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3370 ;;  tlength         2   20[BANK1 ] unsigned int 
  3371 ;;  slot            1   19[BANK1 ] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      char 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3381 ;;      Params:         0       0       7       0       0
  3382 ;;      Locals:         0       0       5       0       0
  3383 ;;      Temps:          0       0       2       0       0
  3384 ;;      Totals:         0       0      14       0       0
  3385 ;;Total ram usage:       14 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    9
  3388 ;; This function calls:
  3389 ;;		_memcpy
  3390 ;; This function is called by:
  3391 ;;		_ToMainLow_recvmsg
  3392 ;;		_ToMainHigh_recvmsg
  3393 ;;		_FromMainLow_recvmsg
  3394 ;;		_FromMainHigh_recvmsg
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text19
  3399  00091C                     __ptext19:
  3400                           	opt stack 0
  3401  00091C                     _recv_msg:
  3402                           	opt stack 19
  3403                           
  3404                           ;messages.c: 65: unsigned char slot;
  3405                           ;messages.c: 69: msg *qmsg;
  3406                           ;messages.c: 70: size_t tlength;
  3407                           ;messages.c: 73: slot = qptr->cur_read_ind;
  3408                           
  3409                           ;incstack = 0
  3410  00091C  0101               	movlb	1	; () banked
  3411  00091E  EE20 F035          	lfsr	2,53
  3412  000922  0101               	movlb	1	; () banked
  3413  000924  51AE               	movf	recv_msg@qptr& (0+255),w,b
  3414  000926  26D9               	addwf	fsr2l,f,c
  3415  000928  0101               	movlb	1	; () banked
  3416  00092A  51AF               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3417  00092C  22DA               	addwfc	fsr2h,f,c
  3418  00092E  50DF               	movf	indf2,w,c
  3419  000930  0101               	movlb	1	; () banked
  3420  000932  0101               	movlb	1	; () banked
  3421  000934  6FB7               	movwf	recv_msg@slot& (0+255),b
  3422                           
  3423                           ; BSR set to: 1
  3424                           ;messages.c: 74: qmsg = &(qptr->queue[slot]);
  3425  000936  0101               	movlb	1	; () banked
  3426  000938  0101               	movlb	1	; () banked
  3427  00093A  51B7               	movf	recv_msg@slot& (0+255),w,b
  3428  00093C  0D0D               	mullw	13
  3429  00093E  50F3               	movf	prodl,w,c
  3430  000940  0101               	movlb	1	; () banked
  3431  000942  0101               	movlb	1	; () banked
  3432  000944  25AE               	addwf	recv_msg@qptr& (0+255),w,b
  3433  000946  0101               	movlb	1	; () banked
  3434  000948  0101               	movlb	1	; () banked
  3435  00094A  6FBA               	movwf	recv_msg@qmsg& (0+255),b
  3436  00094C  50F4               	movf	prodh,w,c
  3437  00094E  0101               	movlb	1	; () banked
  3438  000950  0101               	movlb	1	; () banked
  3439  000952  21AF               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3440  000954  0101               	movlb	1	; () banked
  3441  000956  6FBB               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;messages.c: 75: if (qmsg->full == 1) {
  3445  000958  0E01               	movlw	1
  3446  00095A  C1BA  FFD9         	movff	recv_msg@qmsg,fsr2l
  3447  00095E  C1BB  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3448  000962  62DF               	cpfseq	indf2,c
  3449  000964  D074               	goto	l2684
  3450                           
  3451                           ; BSR set to: 1
  3452                           ;messages.c: 77: if (qmsg->length > maxlength) {
  3453  000966  0101               	movlb	1	; () banked
  3454  000968  EE20 F001          	lfsr	2,1
  3455  00096C  0101               	movlb	1	; () banked
  3456  00096E  51BA               	movf	recv_msg@qmsg& (0+255),w,b
  3457  000970  26D9               	addwf	fsr2l,f,c
  3458  000972  0101               	movlb	1	; () banked
  3459  000974  51BB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3460  000976  22DA               	addwfc	fsr2h,f,c
  3461  000978  50DF               	movf	indf2,w,c
  3462  00097A  0101               	movlb	1	; () banked
  3463  00097C  0101               	movlb	1	; () banked
  3464  00097E  5DB0               	subwf	recv_msg@maxlength& (0+255),w,b
  3465  000980  B0D8               	btfsc	status,0,c
  3466  000982  D002               	goto	l2668
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;messages.c: 78: return (-3);
  3470  000984  0EFD               	movlw	253
  3471  000986  0012               	return	
  3472  000988                     l2668:
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;messages.c: 79: }
  3476                           ;messages.c: 81: tlength = qmsg->length;
  3477  000988  0101               	movlb	1	; () banked
  3478  00098A  EE20 F001          	lfsr	2,1
  3479  00098E  0101               	movlb	1	; () banked
  3480  000990  51BA               	movf	recv_msg@qmsg& (0+255),w,b
  3481  000992  26D9               	addwf	fsr2l,f,c
  3482  000994  0101               	movlb	1	; () banked
  3483  000996  51BB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3484  000998  22DA               	addwfc	fsr2h,f,c
  3485  00099A  50DF               	movf	indf2,w,c
  3486  00099C  0101               	movlb	1	; () banked
  3487  00099E  6FB5               	movwf	??_recv_msg& (0+255),b
  3488  0009A0  0101               	movlb	1	; () banked
  3489  0009A2  51B5               	movf	??_recv_msg& (0+255),w,b
  3490  0009A4  0101               	movlb	1	; () banked
  3491  0009A6  0101               	movlb	1	; () banked
  3492  0009A8  6FB8               	movwf	recv_msg@tlength& (0+255),b
  3493  0009AA  0101               	movlb	1	; () banked
  3494  0009AC  6BB9               	clrf	(recv_msg@tlength+1)& (0+255),b
  3495                           
  3496                           ; BSR set to: 1
  3497                           ;messages.c: 82: memcpy(data, qmsg->data, tlength);
  3498  0009AE  0101               	movlb	1	; () banked
  3499  0009B0  0101               	movlb	1	; () banked
  3500  0009B2  C1B4  F1A5         	movff	recv_msg@data+1,memcpy@d1+1
  3501  0009B6  0101               	movlb	1	; () banked
  3502  0009B8  0101               	movlb	1	; () banked
  3503  0009BA  C1B3  F1A4         	movff	recv_msg@data,memcpy@d1
  3504  0009BE  0E03               	movlw	3
  3505  0009C0  0101               	movlb	1	; () banked
  3506  0009C2  0101               	movlb	1	; () banked
  3507  0009C4  25BA               	addwf	recv_msg@qmsg& (0+255),w,b
  3508  0009C6  0101               	movlb	1	; () banked
  3509  0009C8  6FB5               	movwf	??_recv_msg& (0+255),b
  3510  0009CA  0E00               	movlw	0
  3511  0009CC  0101               	movlb	1	; () banked
  3512  0009CE  0101               	movlb	1	; () banked
  3513  0009D0  21BB               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3514  0009D2  0101               	movlb	1	; () banked
  3515  0009D4  6FB6               	movwf	(??_recv_msg+1)& (0+255),b
  3516  0009D6  C1B5  F1A6         	movff	??_recv_msg,memcpy@s1
  3517  0009DA  C1B6  F1A7         	movff	??_recv_msg+1,memcpy@s1+1
  3518  0009DE  C1B8  F1A8         	movff	recv_msg@tlength,memcpy@n
  3519  0009E2  C1B9  F1A9         	movff	recv_msg@tlength+1,memcpy@n+1
  3520  0009E6  EC72  F009         	call	_memcpy	;wreg free
  3521                           
  3522                           ;messages.c: 88: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3523  0009EA  0101               	movlb	1	; () banked
  3524  0009EC  EE20 F035          	lfsr	2,53
  3525  0009F0  0101               	movlb	1	; () banked
  3526  0009F2  51AE               	movf	recv_msg@qptr& (0+255),w,b
  3527  0009F4  26D9               	addwf	fsr2l,f,c
  3528  0009F6  0101               	movlb	1	; () banked
  3529  0009F8  51AF               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3530  0009FA  22DA               	addwfc	fsr2h,f,c
  3531  0009FC  0101               	movlb	1	; () banked
  3532  0009FE  EE10 F035          	lfsr	1,53
  3533  000A02  0101               	movlb	1	; () banked
  3534  000A04  51AE               	movf	recv_msg@qptr& (0+255),w,b
  3535  000A06  26E1               	addwf	fsr1l,f,c
  3536  000A08  0101               	movlb	1	; () banked
  3537  000A0A  51AF               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3538  000A0C  22E2               	addwfc	fsr1h,f,c
  3539  000A0E  50E7               	movf	indf1,w,c
  3540  000A10  0101               	movlb	1	; () banked
  3541  000A12  6FB5               	movwf	??_recv_msg& (0+255),b
  3542  000A14  0101               	movlb	1	; () banked
  3543  000A16  29B5               	incf	??_recv_msg& (0+255),w,b
  3544  000A18  0B03               	andlw	3
  3545  000A1A  6EDF               	movwf	indf2,c
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;messages.c: 90: (*msgtype) = qmsg->msgtype;
  3549  000A1C  0101               	movlb	1	; () banked
  3550  000A1E  EE20 F002          	lfsr	2,2
  3551  000A22  0101               	movlb	1	; () banked
  3552  000A24  51BA               	movf	recv_msg@qmsg& (0+255),w,b
  3553  000A26  26D9               	addwf	fsr2l,f,c
  3554  000A28  0101               	movlb	1	; () banked
  3555  000A2A  51BB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3556  000A2C  22DA               	addwfc	fsr2h,f,c
  3557  000A2E  C1B1  FFE1         	movff	recv_msg@msgtype,fsr1l
  3558  000A32  C1B2  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3559  000A36  CFDF FFE7          	movff	indf2,indf1
  3560                           
  3561                           ; BSR set to: 1
  3562                           ;messages.c: 92: qmsg->full = 0;
  3563  000A3A  C1BA  FFD9         	movff	recv_msg@qmsg,fsr2l
  3564  000A3E  C1BB  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3565  000A42  0E00               	movlw	0
  3566  000A44  6EDF               	movwf	indf2,c
  3567                           
  3568                           ; BSR set to: 1
  3569                           ;messages.c: 93: return (tlength);
  3570  000A46  0101               	movlb	1	; () banked
  3571  000A48  0101               	movlb	1	; () banked
  3572  000A4A  51B8               	movf	recv_msg@tlength& (0+255),w,b
  3573  000A4C  0012               	return	
  3574  000A4E                     l2684:
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;messages.c: 95: return (-4);
  3578  000A4E  0EFC               	movlw	252
  3579  000A50  0012               	return	
  3580  000A52                     __end_of_recv_msg:
  3581                           	opt stack 0
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           intcon	equ	0xFF2
  3589                           postinc0	equ	0xFEE
  3590                           wreg	equ	0xFE8
  3591                           indf1	equ	0xFE7
  3592                           postdec1	equ	0xFE5
  3593                           fsr1h	equ	0xFE2
  3594                           fsr1l	equ	0xFE1
  3595                           indf2	equ	0xFDF
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _memcpy *****************
  3601 ;; Defined at:
  3602 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  d1              2    0[BANK1 ] PTR void 
  3605 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3606 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3607 ;;		 -> main@msgbuffer(11), 
  3608 ;;  s1              2    2[BANK1 ] PTR const void 
  3609 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3610 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3611 ;;		 -> reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3612 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3613 ;;  n               2    4[BANK1 ] unsigned int 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  3616 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3617 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3618 ;;		 -> reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3619 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3620 ;;  d               2    6[BANK1 ] PTR unsigned char 
  3621 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3622 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3623 ;;		 -> main@msgbuffer(11), 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    0[BANK1 ] PTR void 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3633 ;;      Params:         0       0       6       0       0
  3634 ;;      Locals:         0       0       4       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         0       0      10       0       0
  3637 ;;Total ram usage:       10 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    8
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_recv_msg
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text20
  3648  0012E4                     __ptext20:
  3649                           	opt stack 0
  3650  0012E4                     _memcpy:
  3651                           	opt stack 19
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;incstack = 0
  3655  0012E4  0101               	movlb	1	; () banked
  3656  0012E6  0101               	movlb	1	; () banked
  3657  0012E8  C1A7  F1AD         	movff	memcpy@s1+1,memcpy@s+1
  3658  0012EC  0101               	movlb	1	; () banked
  3659  0012EE  0101               	movlb	1	; () banked
  3660  0012F0  C1A6  F1AC         	movff	memcpy@s1,memcpy@s
  3661  0012F4  0101               	movlb	1	; () banked
  3662  0012F6  0101               	movlb	1	; () banked
  3663  0012F8  C1A5  F1AB         	movff	memcpy@d1+1,memcpy@d+1
  3664  0012FC  0101               	movlb	1	; () banked
  3665  0012FE  0101               	movlb	1	; () banked
  3666  001300  C1A4  F1AA         	movff	memcpy@d1,memcpy@d
  3667  001304  D012               	goto	l2654
  3668  001306                     l2648:
  3669                           
  3670                           ; BSR set to: 1
  3671  001306  C1AC  FFD9         	movff	memcpy@s,fsr2l
  3672  00130A  C1AD  FFDA         	movff	memcpy@s+1,fsr2h
  3673  00130E  C1AA  FFE1         	movff	memcpy@d,fsr1l
  3674  001312  C1AB  FFE2         	movff	memcpy@d+1,fsr1h
  3675  001316  CFDF FFE7          	movff	indf2,indf1
  3676                           
  3677                           ; BSR set to: 1
  3678  00131A  0101               	movlb	1	; () banked
  3679  00131C  0101               	movlb	1	; () banked
  3680  00131E  4BAC               	infsnz	memcpy@s& (0+255),f,b
  3681  001320  2BAD               	incf	(memcpy@s+1)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 1
  3684  001322  0101               	movlb	1	; () banked
  3685  001324  0101               	movlb	1	; () banked
  3686  001326  4BAA               	infsnz	memcpy@d& (0+255),f,b
  3687  001328  2BAB               	incf	(memcpy@d+1)& (0+255),f,b
  3688  00132A                     l2654:
  3689                           
  3690                           ; BSR set to: 1
  3691  00132A  0101               	movlb	1	; () banked
  3692  00132C  0101               	movlb	1	; () banked
  3693  00132E  07A8               	decf	memcpy@n& (0+255),f,b
  3694  001330  A0D8               	btfss	status,0,c
  3695  001332  07A9               	decf	(memcpy@n+1)& (0+255),f,b
  3696  001334  0101               	movlb	1	; () banked
  3697  001336  29A8               	incf	memcpy@n& (0+255),w,b
  3698  001338  B4D8               	btfsc	status,2,c
  3699  00133A  29A9               	incf	(memcpy@n+1)& (0+255),w,b
  3700  00133C  B4D8               	btfsc	status,2,c
  3701                           
  3702                           ; BSR set to: 1
  3703                           
  3704                           ; BSR set to: 1
  3705                           ;	Return value of _memcpy is never used
  3706  00133E  0012               	return	
  3707  001340  D7E2               	goto	l2648
  3708  001342                     __end_of_memcpy:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           indf1	equ	0xFE7
  3720                           postdec1	equ	0xFE5
  3721                           fsr1h	equ	0xFE2
  3722                           fsr1l	equ	0xFE1
  3723                           indf2	equ	0xFDF
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _OpenUSART *****************
  3729 ;; Defined at:
  3730 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  config          1    wreg     unsigned char 
  3733 ;;  spbrg           2    0[BANK1 ] unsigned int 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  config          1    5[BANK1 ] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;		None               void
  3738 ;; Registers used:
  3739 ;;		wreg, status,2
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3745 ;;      Params:         0       0       2       0       0
  3746 ;;      Locals:         0       0       1       0       0
  3747 ;;      Temps:          0       0       3       0       0
  3748 ;;      Totals:         0       0       6       0       0
  3749 ;;Total ram usage:        6 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    8
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text21
  3760  000F1E                     __ptext21:
  3761                           	opt stack 0
  3762  000F1E                     _OpenUSART:
  3763                           	opt stack 21
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;incstack = 0
  3767                           ;OpenUSART@config stored from wreg
  3768  000F1E  CFE8 F1A9          	movff	wreg,OpenUSART@config
  3769  000F22  0E00               	movlw	0
  3770  000F24  6EAC               	movwf	4012,c	;volatile
  3771  000F26  0E00               	movlw	0
  3772  000F28  6EAB               	movwf	4011,c	;volatile
  3773  000F2A  0101               	movlb	1	; () banked
  3774  000F2C  0101               	movlb	1	; () banked
  3775  000F2E  B1A9               	btfsc	OpenUSART@config& (0+255),0,b
  3776                           
  3777                           ; BSR set to: 1
  3778  000F30  88AC               	bsf	4012,4,c	;volatile
  3779                           
  3780                           ; BSR set to: 1
  3781                           
  3782                           ; BSR set to: 1
  3783  000F32  0101               	movlb	1	; () banked
  3784  000F34  0101               	movlb	1	; () banked
  3785  000F36  A3A9               	btfss	OpenUSART@config& (0+255),1,b
  3786  000F38  D002               	goto	l2524
  3787                           
  3788                           ; BSR set to: 1
  3789  000F3A  8CAC               	bsf	4012,6,c	;volatile
  3790  000F3C  8CAB               	bsf	4011,6,c	;volatile
  3791  000F3E                     l2524:
  3792                           
  3793                           ; BSR set to: 1
  3794  000F3E  0101               	movlb	1	; () banked
  3795  000F40  0101               	movlb	1	; () banked
  3796  000F42  B5A9               	btfsc	OpenUSART@config& (0+255),2,b
  3797                           
  3798                           ; BSR set to: 1
  3799  000F44  8EAC               	bsf	4012,7,c	;volatile
  3800                           
  3801                           ; BSR set to: 1
  3802                           
  3803                           ; BSR set to: 1
  3804  000F46  0101               	movlb	1	; () banked
  3805  000F48  0101               	movlb	1	; () banked
  3806  000F4A  A7A9               	btfss	OpenUSART@config& (0+255),3,b
  3807  000F4C  D002               	goto	l567
  3808                           
  3809                           ; BSR set to: 1
  3810  000F4E  88AB               	bsf	4011,4,c	;volatile
  3811  000F50  D001               	goto	l2532
  3812  000F52                     l567:
  3813                           
  3814                           ; BSR set to: 1
  3815  000F52  8AAB               	bsf	4011,5,c	;volatile
  3816  000F54                     l2532:
  3817                           
  3818                           ; BSR set to: 1
  3819  000F54  0101               	movlb	1	; () banked
  3820  000F56  0101               	movlb	1	; () banked
  3821  000F58  B9A9               	btfsc	OpenUSART@config& (0+255),4,b
  3822                           
  3823                           ; BSR set to: 1
  3824  000F5A  84AC               	bsf	4012,2,c	;volatile
  3825                           
  3826                           ; BSR set to: 1
  3827  000F5C  989E               	bcf	3998,4,c	;volatile
  3828                           
  3829                           ; BSR set to: 1
  3830  000F5E  0101               	movlb	1	; () banked
  3831  000F60  0101               	movlb	1	; () banked
  3832  000F62  BBA9               	btfsc	OpenUSART@config& (0+255),5,b
  3833                           
  3834                           ; BSR set to: 1
  3835  000F64  86AB               	bsf	4011,3,c	;volatile
  3836                           
  3837                           ; BSR set to: 1
  3838                           
  3839                           ; BSR set to: 1
  3840  000F66  0101               	movlb	1	; () banked
  3841  000F68  0101               	movlb	1	; () banked
  3842  000F6A  ADA9               	btfss	OpenUSART@config& (0+255),6,b
  3843  000F6C  D002               	goto	l571
  3844                           
  3845                           ; BSR set to: 1
  3846  000F6E  8A9D               	bsf	3997,5,c	;volatile
  3847  000F70  D001               	goto	l572
  3848  000F72                     l571:
  3849                           
  3850                           ; BSR set to: 1
  3851  000F72  9A9D               	bcf	3997,5,c	;volatile
  3852  000F74                     l572:
  3853                           
  3854                           ; BSR set to: 1
  3855  000F74  9A9E               	bcf	3998,5,c	;volatile
  3856                           
  3857                           ; BSR set to: 1
  3858  000F76  0101               	movlb	1	; () banked
  3859  000F78  0101               	movlb	1	; () banked
  3860  000F7A  AFA9               	btfss	OpenUSART@config& (0+255),7,b
  3861  000F7C  D002               	goto	l573
  3862                           
  3863                           ; BSR set to: 1
  3864  000F7E  889D               	bsf	3997,4,c	;volatile
  3865  000F80  D001               	goto	l574
  3866  000F82                     l573:
  3867                           
  3868                           ; BSR set to: 1
  3869  000F82  989D               	bcf	3997,4,c	;volatile
  3870  000F84                     l574:
  3871                           
  3872                           ; BSR set to: 1
  3873  000F84  C1A4  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3874                           
  3875                           ; BSR set to: 1
  3876  000F88  0101               	movlb	1	; () banked
  3877  000F8A  C1A5  F1A6         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3878  000F8E  C1A6  F1A7         	movff	??_OpenUSART,??_OpenUSART+1
  3879  000F92  0101               	movlb	1	; () banked
  3880  000F94  6BA8               	clrf	(??_OpenUSART+2)& (0+255),b
  3881  000F96  0101               	movlb	1	; () banked
  3882  000F98  51A7               	movf	(??_OpenUSART+1)& (0+255),w,b
  3883  000F9A  6EB0               	movwf	4016,c	;volatile
  3884                           
  3885                           ; BSR set to: 1
  3886  000F9C  8AAC               	bsf	4012,5,c	;volatile
  3887                           
  3888                           ; BSR set to: 1
  3889  000F9E  8EAB               	bsf	4011,7,c	;volatile
  3890                           
  3891                           ; BSR set to: 1
  3892  000FA0  9C94               	bcf	3988,6,c	;volatile
  3893                           
  3894                           ; BSR set to: 1
  3895  000FA2  8E94               	bsf	3988,7,c	;volatile
  3896                           
  3897                           ; BSR set to: 1
  3898  000FA4  A8AC               	btfss	4012,4,c	;volatile
  3899  000FA6  0012               	return	
  3900                           
  3901                           ; BSR set to: 1
  3902  000FA8  BEAC               	btfsc	4012,7,c	;volatile
  3903  000FAA  0012               	return	
  3904                           
  3905                           ; BSR set to: 1
  3906  000FAC  8C94               	bsf	3988,6,c	;volatile
  3907  000FAE  0012               	return	
  3908  000FB0                     __end_of_OpenUSART:
  3909                           	opt stack 0
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           prodh	equ	0xFF4
  3915                           prodl	equ	0xFF3
  3916                           intcon	equ	0xFF2
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           indf1	equ	0xFE7
  3920                           postdec1	equ	0xFE5
  3921                           fsr1h	equ	0xFE2
  3922                           fsr1l	equ	0xFE1
  3923                           indf2	equ	0xFDF
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _OpenTimer0 *****************
  3929 ;; Defined at:
  3930 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  config          1    wreg     unsigned char 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  config          1    0[BANK1 ] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;		None               void
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3944 ;;      Params:         0       0       0       0       0
  3945 ;;      Locals:         0       0       1       0       0
  3946 ;;      Temps:          0       0       0       0       0
  3947 ;;      Totals:         0       0       1       0       0
  3948 ;;Total ram usage:        1 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    8
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text22
  3959  0017EA                     __ptext22:
  3960                           	opt stack 0
  3961  0017EA                     _OpenTimer0:
  3962                           	opt stack 21
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;incstack = 0
  3966                           ;OpenTimer0@config stored from wreg
  3967  0017EA  CFE8 F1A4          	movff	wreg,OpenTimer0@config
  3968  0017EE  0101               	movlb	1	; () banked
  3969  0017F0  0101               	movlb	1	; () banked
  3970  0017F2  51A4               	movf	OpenTimer0@config& (0+255),w,b
  3971  0017F4  0B7F               	andlw	127
  3972  0017F6  6ED5               	movwf	4053,c	;volatile
  3973                           
  3974                           ; BSR set to: 1
  3975  0017F8  0E00               	movlw	0
  3976  0017FA  6ED7               	movwf	4055,c	;volatile
  3977                           
  3978                           ; BSR set to: 1
  3979  0017FC  0E00               	movlw	0
  3980  0017FE  6ED6               	movwf	4054,c	;volatile
  3981                           
  3982                           ; BSR set to: 1
  3983  001800  94F2               	bcf	intcon,2,c	;volatile
  3984                           
  3985                           ; BSR set to: 1
  3986  001802  0101               	movlb	1	; () banked
  3987  001804  0101               	movlb	1	; () banked
  3988  001806  AFA4               	btfss	OpenTimer0@config& (0+255),7,b
  3989  001808  D002               	goto	l518
  3990                           
  3991                           ; BSR set to: 1
  3992  00180A  8AF2               	bsf	intcon,5,c	;volatile
  3993  00180C  D001               	goto	l519
  3994  00180E                     l518:
  3995                           
  3996                           ; BSR set to: 1
  3997  00180E  9AF2               	bcf	intcon,5,c	;volatile
  3998  001810                     l519:
  3999                           
  4000                           ; BSR set to: 1
  4001  001810  8ED5               	bsf	4053,7,c	;volatile
  4002                           
  4003                           ; BSR set to: 1
  4004  001812  0012               	return	
  4005  001814                     __end_of_OpenTimer0:
  4006                           	opt stack 0
  4007                           tblptru	equ	0xFF8
  4008                           tblptrh	equ	0xFF7
  4009                           tblptrl	equ	0xFF6
  4010                           tablat	equ	0xFF5
  4011                           prodh	equ	0xFF4
  4012                           prodl	equ	0xFF3
  4013                           intcon	equ	0xFF2
  4014                           postinc0	equ	0xFEE
  4015                           wreg	equ	0xFE8
  4016                           indf1	equ	0xFE7
  4017                           postdec1	equ	0xFE5
  4018                           fsr1h	equ	0xFE2
  4019                           fsr1l	equ	0xFE1
  4020                           indf2	equ	0xFDF
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function _InterruptHandlerLow *****************
  4026 ;; Defined at:
  4027 ;;		line 122 in file "../src/interrupts.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;		None               void
  4034 ;; Registers used:
  4035 ;;		None
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4041 ;;      Params:         0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0
  4043 ;;      Temps:         17       0       0       0       0
  4044 ;;      Totals:        17       0       0       0       0
  4045 ;;Total ram usage:       17 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    7
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		Interrupt level 1
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	intcodelo
  4056  000018                     __pintcodelo:
  4057                           	opt stack 0
  4058  000018                     _InterruptHandlerLow:
  4059                           	opt stack 18
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;incstack = 0
  4063  000018  CFD8 F001          	movff	status,??_InterruptHandlerLow
  4064  00001C  CFE8 F002          	movff	wreg,??_InterruptHandlerLow+1
  4065  000020  CFE0 F003          	movff	bsr,??_InterruptHandlerLow+2
  4066  000024  CFFA F004          	movff	pclath,??_InterruptHandlerLow+3
  4067  000028  CFFB F005          	movff	pclatu,??_InterruptHandlerLow+4
  4068  00002C  CFE9 F006          	movff	fsr0l,??_InterruptHandlerLow+5
  4069  000030  CFEA F007          	movff	fsr0h,??_InterruptHandlerLow+6
  4070  000034  CFE1 F008          	movff	fsr1l,??_InterruptHandlerLow+7
  4071  000038  CFE2 F009          	movff	fsr1h,??_InterruptHandlerLow+8
  4072  00003C  CFD9 F00A          	movff	fsr2l,??_InterruptHandlerLow+9
  4073  000040  CFDA F00B          	movff	fsr2h,??_InterruptHandlerLow+10
  4074  000044  CFF3 F00C          	movff	prodl,??_InterruptHandlerLow+11
  4075  000048  CFF4 F00D          	movff	prodh,??_InterruptHandlerLow+12
  4076  00004C  CFF6 F00E          	movff	tblptrl,??_InterruptHandlerLow+13
  4077  000050  CFF7 F00F          	movff	tblptrh,??_InterruptHandlerLow+14
  4078  000054  CFF8 F010          	movff	tblptru,??_InterruptHandlerLow+15
  4079  000058  CFF5 F011          	movff	tablat,??_InterruptHandlerLow+16
  4080  00005C  C011  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4081  000060  C010  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4082  000064  C00F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4083  000068  C00E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4084  00006C  C00D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4085  000070  C00C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4086  000074  C00B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4087  000078  C00A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4088  00007C  C009  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4089  000080  C008  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4090  000084  C007  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4091  000088  C006  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4092  00008C  C005  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4093  000090  C004  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4094  000094  C003  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4095  000098  C002  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4096  00009C  C001  FFD8         	movff	??_InterruptHandlerLow,status
  4097  0000A0  0010               	retfie	
  4098  0000A2                     __end_of_InterruptHandlerLow:
  4099                           	opt stack 0
  4100                           pclatu	equ	0xFFB
  4101                           pclath	equ	0xFFA
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           prodh	equ	0xFF4
  4107                           prodl	equ	0xFF3
  4108                           intcon	equ	0xFF2
  4109                           postinc0	equ	0xFEE
  4110                           fsr0h	equ	0xFEA
  4111                           fsr0l	equ	0xFE9
  4112                           wreg	equ	0xFE8
  4113                           indf1	equ	0xFE7
  4114                           postdec1	equ	0xFE5
  4115                           fsr1h	equ	0xFE2
  4116                           fsr1l	equ	0xFE1
  4117                           bsr	equ	0xFE0
  4118                           indf2	equ	0xFDF
  4119                           fsr2h	equ	0xFDA
  4120                           fsr2l	equ	0xFD9
  4121                           status	equ	0xFD8
  4122                           
  4123 ;; *************** function _InterruptHandlerHigh *****************
  4124 ;; Defined at:
  4125 ;;		line 83 in file "../src/interrupts.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;		None               void
  4132 ;; Registers used:
  4133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4139 ;;      Params:         0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0
  4141 ;;      Temps:         14       0       0       0       0
  4142 ;;      Totals:        14       0       0       0       0
  4143 ;;Total ram usage:       14 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    6
  4146 ;; This function calls:
  4147 ;;		_SleepIfOkay
  4148 ;;		_i2c_int_handler
  4149 ;;		_timer0_int_handler
  4150 ;; This function is called by:
  4151 ;;		Interrupt level 2
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	intcode
  4156  000008                     __pintcode:
  4157                           	opt stack 0
  4158  000008                     _InterruptHandlerHigh:
  4159                           	opt stack 18
  4160                           
  4161                           ;incstack = 0
  4162  000008  CFFA F046          	movff	pclath,??_InterruptHandlerHigh
  4163  00000C  CFFB F047          	movff	pclatu,??_InterruptHandlerHigh+1
  4164  000010  EFD8  F007         	goto	int_func
  4165                           pclatu	equ	0xFFB
  4166                           pclath	equ	0xFFA
  4167                           tblptru	equ	0xFF8
  4168                           tblptrh	equ	0xFF7
  4169                           tblptrl	equ	0xFF6
  4170                           tablat	equ	0xFF5
  4171                           prodh	equ	0xFF4
  4172                           prodl	equ	0xFF3
  4173                           intcon	equ	0xFF2
  4174                           postinc0	equ	0xFEE
  4175                           fsr0h	equ	0xFEA
  4176                           fsr0l	equ	0xFE9
  4177                           wreg	equ	0xFE8
  4178                           indf1	equ	0xFE7
  4179                           postdec1	equ	0xFE5
  4180                           fsr1h	equ	0xFE2
  4181                           fsr1l	equ	0xFE1
  4182                           bsr	equ	0xFE0
  4183                           indf2	equ	0xFDF
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8
  4187                           
  4188                           	psect	intcode_body
  4189  000FB0                     __pintcode_body:
  4190                           	opt stack 18
  4191  000FB0                     int_func:
  4192                           	opt stack 18
  4193  000FB0  CFE9 F048          	movff	fsr0l,??_InterruptHandlerHigh+2
  4194  000FB4  CFEA F049          	movff	fsr0h,??_InterruptHandlerHigh+3
  4195  000FB8  CFE1 F04A          	movff	fsr1l,??_InterruptHandlerHigh+4
  4196  000FBC  CFE2 F04B          	movff	fsr1h,??_InterruptHandlerHigh+5
  4197  000FC0  CFD9 F04C          	movff	fsr2l,??_InterruptHandlerHigh+6
  4198  000FC4  CFDA F04D          	movff	fsr2h,??_InterruptHandlerHigh+7
  4199  000FC8  CFF3 F04E          	movff	prodl,??_InterruptHandlerHigh+8
  4200  000FCC  CFF4 F04F          	movff	prodh,??_InterruptHandlerHigh+9
  4201  000FD0  CFF6 F050          	movff	tblptrl,??_InterruptHandlerHigh+10
  4202  000FD4  CFF7 F051          	movff	tblptrh,??_InterruptHandlerHigh+11
  4203  000FD8  CFF8 F052          	movff	tblptru,??_InterruptHandlerHigh+12
  4204  000FDC  CFF5 F053          	movff	tablat,??_InterruptHandlerHigh+13
  4205                           
  4206                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  4207  000FE0  A69E               	btfss	3998,3,c	;volatile
  4208  000FE2  D003               	goto	i2l2192
  4209                           
  4210                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  4211  000FE4  969E               	bcf	3998,3,c	;volatile
  4212                           
  4213                           ;interrupts.c: 92: i2c_int_handler();
  4214  000FE6  EC53  F000         	call	_i2c_int_handler	;wreg free
  4215  000FEA                     i2l2192:
  4216                           
  4217                           ;interrupts.c: 93: }
  4218                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  4219  000FEA  A4F2               	btfss	intcon,2,c	;volatile
  4220  000FEC  D003               	goto	i2l37
  4221                           
  4222                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  4223  000FEE  94F2               	bcf	intcon,2,c	;volatile
  4224                           
  4225                           ;interrupts.c: 99: timer0_int_handler();
  4226  000FF0  EC60  F00C         	call	_timer0_int_handler	;wreg free
  4227  000FF4                     i2l37:
  4228                           
  4229                           ;interrupts.c: 100: }
  4230                           ;interrupts.c: 109: SleepIfOkay();
  4231  000FF4  EC4A  F00A         	call	_SleepIfOkay	;wreg free
  4232  000FF8  C053  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  4233  000FFC  C052  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  4234  001000  C051  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  4235  001004  C050  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  4236  001008  C04F  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  4237  00100C  C04E  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  4238  001010  C04D  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  4239  001014  C04C  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  4240  001018  C04B  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  4241  00101C  C04A  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  4242  001020  C049  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  4243  001024  C048  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  4244  001028  C047  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  4245  00102C  C046  FFFA         	movff	??_InterruptHandlerHigh,pclath
  4246  001030  0011               	retfie		f
  4247  001032                     __end_of_InterruptHandlerHigh:
  4248                           	opt stack 0
  4249                           pclatu	equ	0xFFB
  4250                           pclath	equ	0xFFA
  4251                           tblptru	equ	0xFF8
  4252                           tblptrh	equ	0xFF7
  4253                           tblptrl	equ	0xFF6
  4254                           tablat	equ	0xFF5
  4255                           prodh	equ	0xFF4
  4256                           prodl	equ	0xFF3
  4257                           intcon	equ	0xFF2
  4258                           postinc0	equ	0xFEE
  4259                           fsr0h	equ	0xFEA
  4260                           fsr0l	equ	0xFE9
  4261                           wreg	equ	0xFE8
  4262                           indf1	equ	0xFE7
  4263                           postdec1	equ	0xFE5
  4264                           fsr1h	equ	0xFE2
  4265                           fsr1l	equ	0xFE1
  4266                           bsr	equ	0xFE0
  4267                           indf2	equ	0xFDF
  4268                           fsr2h	equ	0xFDA
  4269                           fsr2l	equ	0xFD9
  4270                           status	equ	0xFD8
  4271                           
  4272 ;; *************** function _timer0_int_handler *****************
  4273 ;; Defined at:
  4274 ;;		line 17 in file "../src/user_interrupts.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  msgtype         2    0        int 
  4279 ;;  length          2    0        int 
  4280 ;;  val             2    0        unsigned int 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;		None               void
  4283 ;; Registers used:
  4284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4290 ;;      Params:         0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0
  4293 ;;      Totals:         0       0       0       0       0
  4294 ;;Total ram usage:        0 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    1
  4297 ;; This function calls:
  4298 ;;		_WriteTimer0
  4299 ;; This function is called by:
  4300 ;;		_InterruptHandlerHigh
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text25
  4305  0018C0                     __ptext25:
  4306                           	opt stack 0
  4307  0018C0                     _timer0_int_handler:
  4308                           	opt stack 22
  4309                           
  4310                           ;user_interrupts.c: 18: unsigned int val;
  4311                           ;user_interrupts.c: 19: int length, msgtype;
  4312                           ;user_interrupts.c: 27: WriteTimer0(0xFD00);
  4313                           
  4314                           ;incstack = 0
  4315  0018C0  0EFD               	movlw	253
  4316  0018C2  6E13               	movwf	WriteTimer0@timer0+1,c
  4317  0018C4  0E00               	movlw	0
  4318  0018C6  6E12               	movwf	WriteTimer0@timer0,c
  4319  0018C8  EC57  F00C         	call	_WriteTimer0	;wreg free
  4320  0018CC  0012               	return	
  4321  0018CE                     __end_of_timer0_int_handler:
  4322                           	opt stack 0
  4323                           pclatu	equ	0xFFB
  4324                           pclath	equ	0xFFA
  4325                           tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           prodh	equ	0xFF4
  4330                           prodl	equ	0xFF3
  4331                           intcon	equ	0xFF2
  4332                           postinc0	equ	0xFEE
  4333                           fsr0h	equ	0xFEA
  4334                           fsr0l	equ	0xFE9
  4335                           wreg	equ	0xFE8
  4336                           indf1	equ	0xFE7
  4337                           postdec1	equ	0xFE5
  4338                           fsr1h	equ	0xFE2
  4339                           fsr1l	equ	0xFE1
  4340                           bsr	equ	0xFE0
  4341                           indf2	equ	0xFDF
  4342                           fsr2h	equ	0xFDA
  4343                           fsr2l	equ	0xFD9
  4344                           status	equ	0xFD8
  4345                           
  4346 ;; *************** function _WriteTimer0 *****************
  4347 ;; Defined at:
  4348 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  timer0          2   17[COMRAM] unsigned int 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  timer           2   19[COMRAM] struct Timers
  4353 ;; Return value:  Size  Location     Type
  4354 ;;		None               void
  4355 ;; Registers used:
  4356 ;;		None
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4362 ;;      Params:         2       0       0       0       0
  4363 ;;      Locals:         2       0       0       0       0
  4364 ;;      Temps:          0       0       0       0       0
  4365 ;;      Totals:         4       0       0       0       0
  4366 ;;Total ram usage:        4 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_timer0_int_handler
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text26
  4376  0018AE                     __ptext26:
  4377                           	opt stack 0
  4378  0018AE                     _WriteTimer0:
  4379                           	opt stack 22
  4380                           
  4381                           ;incstack = 0
  4382  0018AE  C012  F014         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4383  0018B2  C013  F015         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4384  0018B6  C015  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4385  0018BA  C014  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4386  0018BE  0012               	return	
  4387  0018C0                     __end_of_WriteTimer0:
  4388                           	opt stack 0
  4389                           pclatu	equ	0xFFB
  4390                           pclath	equ	0xFFA
  4391                           tblptru	equ	0xFF8
  4392                           tblptrh	equ	0xFF7
  4393                           tblptrl	equ	0xFF6
  4394                           tablat	equ	0xFF5
  4395                           prodh	equ	0xFF4
  4396                           prodl	equ	0xFF3
  4397                           intcon	equ	0xFF2
  4398                           postinc0	equ	0xFEE
  4399                           fsr0h	equ	0xFEA
  4400                           fsr0l	equ	0xFE9
  4401                           wreg	equ	0xFE8
  4402                           indf1	equ	0xFE7
  4403                           postdec1	equ	0xFE5
  4404                           fsr1h	equ	0xFE2
  4405                           fsr1l	equ	0xFE1
  4406                           bsr	equ	0xFE0
  4407                           indf2	equ	0xFDF
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412 ;; *************** function _i2c_int_handler *****************
  4413 ;; Defined at:
  4414 ;;		line 107 in file "../src/my_i2c.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  error_buf       3   60[COMRAM] unsigned char [3]
  4419 ;;  data_read       1   68[COMRAM] unsigned char 
  4420 ;;  msg_ready       1   67[COMRAM] unsigned char 
  4421 ;;  msg_to_send     1   66[COMRAM] unsigned char 
  4422 ;;  i2c_data        1   65[COMRAM] unsigned char 
  4423 ;;  overrun_erro    1   64[COMRAM] unsigned char 
  4424 ;;  data_written    1   63[COMRAM] unsigned char 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;		None               void
  4427 ;; Registers used:
  4428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4434 ;;      Params:         0       0       0       0       0
  4435 ;;      Locals:         9       0       0       0       0
  4436 ;;      Temps:          1       0       0       0       0
  4437 ;;      Totals:        10       0       0       0       0
  4438 ;;Total ram usage:       10 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    5
  4441 ;; This function calls:
  4442 ;;		_ToMainHigh_sendmsg
  4443 ;;		_handle_start
  4444 ;;		_resetDBG
  4445 ;;		_sendRequestedData
  4446 ;;		_setBrainReqData
  4447 ;;		_setDBG
  4448 ;; This function is called by:
  4449 ;;		_InterruptHandlerHigh
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text27
  4454  0000A6                     __ptext27:
  4455                           	opt stack 0
  4456  0000A6                     _i2c_int_handler:
  4457                           	opt stack 18
  4458                           
  4459                           ;my_i2c.c: 109: unsigned char i2c_data;
  4460                           ;my_i2c.c: 110: unsigned char data_read = 0;
  4461                           
  4462                           ;incstack = 0
  4463  0000A6  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4464  0000A8  0E00               	movlw	0
  4465  0000AA  6E45               	movwf	i2c_int_handler@data_read,c
  4466  0000AC  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4467                           
  4468                           ;my_i2c.c: 111: unsigned char data_written = 0;
  4469  0000AE  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4470  0000B0  0E00               	movlw	0
  4471  0000B2  6E40               	movwf	i2c_int_handler@data_written,c
  4472  0000B4  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4473                           
  4474                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  4475  0000B6  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4476  0000B8  0E00               	movlw	0
  4477  0000BA  6E44               	movwf	i2c_int_handler@msg_ready,c
  4478  0000BC  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4479                           
  4480                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  4481  0000BE  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4482  0000C0  0E00               	movlw	0
  4483  0000C2  6E43               	movwf	i2c_int_handler@msg_to_send,c
  4484  0000C4  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4485                           
  4486                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  4487  0000C6  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4488  0000C8  0E00               	movlw	0
  4489  0000CA  6E41               	movwf	i2c_int_handler@overrun_error,c
  4490  0000CC  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4491                           
  4492                           ;my_i2c.c: 115: unsigned char error_buf[3];
  4493                           ;my_i2c.c: 118: if (SSPCON1bits.SSPOV == 1) {
  4494  0000CE  ACC6               	btfss	4038,6,c	;volatile
  4495  0000D0  D025               	goto	i2l2212
  4496                           
  4497                           ;my_i2c.c: 119: SSPCON1bits.SSPOV = 0;
  4498  0000D2  9CC6               	bcf	4038,6,c	;volatile
  4499                           
  4500                           ;my_i2c.c: 123: ic_ptr->status = 0x5;
  4501  0000D4  0101               	movlb	1	; () banked
  4502  0000D6  EE20 F00C          	lfsr	2,12
  4503  0000DA  0101               	movlb	1	; () banked
  4504  0000DC  5100               	movf	_ic_ptr& (0+255),w,b
  4505  0000DE  26D9               	addwf	fsr2l,f,c
  4506  0000E0  0101               	movlb	1	; () banked
  4507  0000E2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4508  0000E4  22DA               	addwfc	fsr2h,f,c
  4509  0000E6  0E05               	movlw	5
  4510  0000E8  6EDF               	movwf	indf2,c
  4511                           
  4512                           ; BSR set to: 1
  4513                           ;my_i2c.c: 124: overrun_error = 1;
  4514  0000EA  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4515  0000EC  0E01               	movlw	1
  4516  0000EE  6E41               	movwf	i2c_int_handler@overrun_error,c
  4517  0000F0  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4518                           
  4519                           ; BSR set to: 1
  4520                           ;my_i2c.c: 125: ic_ptr->error_count++;
  4521  0000F2  0101               	movlb	1	; () banked
  4522  0000F4  EE20 F00E          	lfsr	2,14
  4523  0000F8  0101               	movlb	1	; () banked
  4524  0000FA  5100               	movf	_ic_ptr& (0+255),w,b
  4525  0000FC  26D9               	addwf	fsr2l,f,c
  4526  0000FE  0101               	movlb	1	; () banked
  4527  000100  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4528  000102  22DA               	addwfc	fsr2h,f,c
  4529  000104  2ADF               	incf	indf2,f,c
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;my_i2c.c: 126: ic_ptr->error_code = 0x4;
  4533  000106  0101               	movlb	1	; () banked
  4534  000108  EE20 F00D          	lfsr	2,13
  4535  00010C  0101               	movlb	1	; () banked
  4536  00010E  5100               	movf	_ic_ptr& (0+255),w,b
  4537  000110  26D9               	addwf	fsr2l,f,c
  4538  000112  0101               	movlb	1	; () banked
  4539  000114  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4540  000116  22DA               	addwfc	fsr2h,f,c
  4541  000118  0E04               	movlw	4
  4542  00011A  6EDF               	movwf	indf2,c
  4543  00011C                     i2l2212:
  4544                           
  4545                           ;my_i2c.c: 127: }
  4546                           ;my_i2c.c: 129: if (SSPSTATbits.BF == 1) {
  4547  00011C  A0C7               	btfss	4039,0,c	;volatile
  4548  00011E  D006               	goto	i2l2218
  4549                           
  4550                           ;my_i2c.c: 130: i2c_data = SSPBUF;
  4551  000120  CFC9 F042          	movff	4041,i2c_int_handler@i2c_data	;volatile
  4552                           
  4553                           ;my_i2c.c: 131: data_read = 1;
  4554  000124  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4555  000126  0E01               	movlw	1
  4556  000128  6E45               	movwf	i2c_int_handler@data_read,c
  4557  00012A  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4558  00012C                     i2l2218:
  4559                           
  4560                           ;my_i2c.c: 132: }
  4561                           ;my_i2c.c: 134: if (!overrun_error) {
  4562  00012C  6641               	tstfsz	i2c_int_handler@overrun_error,c
  4563  00012E  D1A2               	goto	i2l259
  4564  000130  D18B               	goto	i2l2308
  4565  000132                     i2l261:
  4566                           
  4567                           ; BSR set to: 1
  4568                           ;my_i2c.c: 137: {
  4569                           ;my_i2c.c: 139: if (SSPSTATbits.S == 1) {
  4570  000132  A6C7               	btfss	4039,3,c	;volatile
  4571  000134  D19F               	goto	i2l259
  4572                           
  4573                           ; BSR set to: 1
  4574                           ;my_i2c.c: 140: handle_start(data_read);
  4575  000136  5045               	movf	i2c_int_handler@data_read,w,c
  4576  000138  EC2A  F006         	call	_handle_start
  4577                           
  4578                           ;my_i2c.c: 142: if (ic_ptr->status == 0x8) {
  4579  00013C  0101               	movlb	1	; () banked
  4580  00013E  EE20 F00C          	lfsr	2,12
  4581  000142  0101               	movlb	1	; () banked
  4582  000144  5100               	movf	_ic_ptr& (0+255),w,b
  4583  000146  26D9               	addwf	fsr2l,f,c
  4584  000148  0101               	movlb	1	; () banked
  4585  00014A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4586  00014C  22DA               	addwfc	fsr2h,f,c
  4587  00014E  0E08               	movlw	8
  4588  000150  62DF               	cpfseq	indf2,c
  4589  000152  D190               	goto	i2l259
  4590                           
  4591                           ; BSR set to: 1
  4592                           ;my_i2c.c: 143: data_read = 0;
  4593  000154  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4594  000156  0E00               	movlw	0
  4595  000158  6E45               	movwf	i2c_int_handler@data_read,c
  4596  00015A  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4597                           
  4598                           ;my_i2c.c: 144: msg_to_send = 1;
  4599  00015C  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4600  00015E  0E01               	movlw	1
  4601  000160  6E43               	movwf	i2c_int_handler@msg_to_send,c
  4602  000162  D165               	goto	L6
  4603  000164                     i2l265:
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;my_i2c.c: 150: {
  4607                           ;my_i2c.c: 152: if (SSPSTATbits.P == 1) {
  4608  000164  A8C7               	btfss	4039,4,c	;volatile
  4609  000166  D02A               	goto	i2l2238
  4610                           
  4611                           ; BSR set to: 1
  4612                           ;my_i2c.c: 155: ic_ptr->event_count++;
  4613  000168  0101               	movlb	1	; () banked
  4614  00016A  EE20 F00B          	lfsr	2,11
  4615  00016E  0101               	movlb	1	; () banked
  4616  000170  5100               	movf	_ic_ptr& (0+255),w,b
  4617  000172  26D9               	addwf	fsr2l,f,c
  4618  000174  0101               	movlb	1	; () banked
  4619  000176  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4620  000178  22DA               	addwfc	fsr2h,f,c
  4621  00017A  2ADF               	incf	indf2,f,c
  4622                           
  4623                           ; BSR set to: 1
  4624                           ;my_i2c.c: 156: if (data_read) {
  4625  00017C  5045               	movf	i2c_int_handler@data_read,w,c
  4626  00017E  B4D8               	btfsc	status,2,c
  4627  000180  D158               	goto	L8
  4628                           
  4629                           ; BSR set to: 1
  4630                           ;my_i2c.c: 157: if (SSPSTATbits.D_A == 0) {
  4631  000182  BAC7               	btfsc	4039,5,c	;volatile
  4632  000184  D005               	goto	i2l2236
  4633                           
  4634                           ; BSR set to: 1
  4635                           ;my_i2c.c: 158: msg_ready = 1;
  4636  000186  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4637  000188  0E01               	movlw	1
  4638  00018A  6E44               	movwf	i2c_int_handler@msg_ready,c
  4639  00018C  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4640                           
  4641                           ;my_i2c.c: 159: } else {
  4642  00018E  D151               	goto	L8
  4643  000190                     i2l2236:
  4644                           
  4645                           ; BSR set to: 1
  4646                           ;my_i2c.c: 160: ic_ptr->error_count++;
  4647  000190  0101               	movlb	1	; () banked
  4648  000192  EE20 F00E          	lfsr	2,14
  4649  000196  0101               	movlb	1	; () banked
  4650  000198  5100               	movf	_ic_ptr& (0+255),w,b
  4651  00019A  26D9               	addwf	fsr2l,f,c
  4652  00019C  0101               	movlb	1	; () banked
  4653  00019E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4654  0001A0  22DA               	addwfc	fsr2h,f,c
  4655  0001A2  2ADF               	incf	indf2,f,c
  4656                           
  4657                           ;my_i2c.c: 161: ic_ptr->error_code = 0x6;
  4658  0001A4  0101               	movlb	1	; () banked
  4659  0001A6  EE20 F00D          	lfsr	2,13
  4660  0001AA  0101               	movlb	1	; () banked
  4661  0001AC  5100               	movf	_ic_ptr& (0+255),w,b
  4662  0001AE  26D9               	addwf	fsr2l,f,c
  4663  0001B0  0101               	movlb	1	; () banked
  4664  0001B2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4665  0001B4  22DA               	addwfc	fsr2h,f,c
  4666  0001B6  0E06               	movlw	6
  4667  0001B8  6EDF               	movwf	indf2,c
  4668                           
  4669                           ; BSR set to: 1
  4670  0001BA  D13B               	goto	L8
  4671  0001BC                     i2l2238:
  4672                           
  4673                           ; BSR set to: 1
  4674  0001BC  5045               	movf	i2c_int_handler@data_read,w,c
  4675  0001BE  B4D8               	btfsc	status,2,c
  4676  0001C0  D159               	goto	i2l259
  4677                           
  4678                           ; BSR set to: 1
  4679                           ;my_i2c.c: 166: ic_ptr->event_count++;
  4680  0001C2  0101               	movlb	1	; () banked
  4681  0001C4  EE20 F00B          	lfsr	2,11
  4682  0001C8  0101               	movlb	1	; () banked
  4683  0001CA  5100               	movf	_ic_ptr& (0+255),w,b
  4684  0001CC  26D9               	addwf	fsr2l,f,c
  4685  0001CE  0101               	movlb	1	; () banked
  4686  0001D0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4687  0001D2  22DA               	addwfc	fsr2h,f,c
  4688  0001D4  2ADF               	incf	indf2,f,c
  4689                           
  4690                           ; BSR set to: 1
  4691                           ;my_i2c.c: 167: if (SSPSTATbits.D_A == 0) {
  4692  0001D6  BAC7               	btfsc	4039,5,c	;volatile
  4693  0001D8  D019               	goto	i2l2254
  4694                           
  4695                           ; BSR set to: 1
  4696                           ;my_i2c.c: 168: if (SSPSTATbits.R_W == 0) {
  4697  0001DA  B4C7               	btfsc	4039,2,c	;volatile
  4698  0001DC  D00B               	goto	i2l2248
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;my_i2c.c: 169: ic_ptr->status = 0x7;
  4702  0001DE  0101               	movlb	1	; () banked
  4703  0001E0  EE20 F00C          	lfsr	2,12
  4704  0001E4  0101               	movlb	1	; () banked
  4705  0001E6  5100               	movf	_ic_ptr& (0+255),w,b
  4706  0001E8  26D9               	addwf	fsr2l,f,c
  4707  0001EA  0101               	movlb	1	; () banked
  4708  0001EC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4709  0001EE  22DA               	addwfc	fsr2h,f,c
  4710  0001F0  0E07               	movlw	7
  4711  0001F2  D075               	goto	L5
  4712  0001F4                     i2l2248:
  4713                           
  4714                           ; BSR set to: 1
  4715                           ;my_i2c.c: 171: ic_ptr->status = 0x8;
  4716  0001F4  0101               	movlb	1	; () banked
  4717  0001F6  EE20 F00C          	lfsr	2,12
  4718  0001FA  0101               	movlb	1	; () banked
  4719  0001FC  5100               	movf	_ic_ptr& (0+255),w,b
  4720  0001FE  26D9               	addwf	fsr2l,f,c
  4721  000200  0101               	movlb	1	; () banked
  4722  000202  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4723  000204  22DA               	addwfc	fsr2h,f,c
  4724  000206  0E08               	movlw	8
  4725  000208  6EDF               	movwf	indf2,c
  4726  00020A  D10A               	goto	L9
  4727  00020C                     i2l2254:
  4728                           
  4729                           ; BSR set to: 1
  4730                           ;my_i2c.c: 177: ic_ptr->error_count++;
  4731  00020C  0101               	movlb	1	; () banked
  4732  00020E  EE20 F00E          	lfsr	2,14
  4733  000212  0101               	movlb	1	; () banked
  4734  000214  5100               	movf	_ic_ptr& (0+255),w,b
  4735  000216  26D9               	addwf	fsr2l,f,c
  4736  000218  0101               	movlb	1	; () banked
  4737  00021A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4738  00021C  22DA               	addwfc	fsr2h,f,c
  4739  00021E  2ADF               	incf	indf2,f,c
  4740                           
  4741                           ;my_i2c.c: 178: ic_ptr->status = 0x5;
  4742  000220  0101               	movlb	1	; () banked
  4743  000222  EE20 F00C          	lfsr	2,12
  4744  000226  0101               	movlb	1	; () banked
  4745  000228  5100               	movf	_ic_ptr& (0+255),w,b
  4746  00022A  26D9               	addwf	fsr2l,f,c
  4747  00022C  0101               	movlb	1	; () banked
  4748  00022E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4749  000230  22DA               	addwfc	fsr2h,f,c
  4750  000232  0E05               	movlw	5
  4751  000234  6EDF               	movwf	indf2,c
  4752                           
  4753                           ;my_i2c.c: 179: ic_ptr->error_code = 0x6;
  4754  000236  0101               	movlb	1	; () banked
  4755  000238  EE20 F00D          	lfsr	2,13
  4756  00023C  0101               	movlb	1	; () banked
  4757  00023E  5100               	movf	_ic_ptr& (0+255),w,b
  4758  000240  26D9               	addwf	fsr2l,f,c
  4759  000242  0101               	movlb	1	; () banked
  4760  000244  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4761  000246  22DA               	addwfc	fsr2h,f,c
  4762  000248  0E06               	movlw	6
  4763  00024A  D049               	goto	L5
  4764  00024C                     i2l2256:
  4765                           
  4766                           ; BSR set to: 1
  4767                           ;my_i2c.c: 185: {
  4768                           ;my_i2c.c: 186: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  4769  00024C  0101               	movlb	1	; () banked
  4770  00024E  EE20 F01A          	lfsr	2,26
  4771  000252  0101               	movlb	1	; () banked
  4772  000254  5100               	movf	_ic_ptr& (0+255),w,b
  4773  000256  26D9               	addwf	fsr2l,f,c
  4774  000258  0101               	movlb	1	; () banked
  4775  00025A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4776  00025C  22DA               	addwfc	fsr2h,f,c
  4777  00025E  50DF               	movf	indf2,w,c
  4778  000260  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4779  000262  0101               	movlb	1	; () banked
  4780  000264  EE20 F019          	lfsr	2,25
  4781  000268  0101               	movlb	1	; () banked
  4782  00026A  5100               	movf	_ic_ptr& (0+255),w,b
  4783  00026C  26D9               	addwf	fsr2l,f,c
  4784  00026E  0101               	movlb	1	; () banked
  4785  000270  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4786  000272  22DA               	addwfc	fsr2h,f,c
  4787  000274  50DF               	movf	indf2,w,c
  4788  000276  5C3C               	subwf	??_i2c_int_handler,w,c
  4789  000278  B0D8               	btfsc	status,0,c
  4790  00027A  D0DB               	goto	L8
  4791                           
  4792                           ; BSR set to: 1
  4793                           ;my_i2c.c: 187: setDBG(DBG2);
  4794  00027C  0E01               	movlw	1
  4795  00027E  EC3B  F00B         	call	_setDBG
  4796                           
  4797                           ;my_i2c.c: 188: resetDBG(DBG2);
  4798  000282  0E01               	movlw	1
  4799  000284  EC59  F00B         	call	_resetDBG
  4800                           
  4801                           ;my_i2c.c: 189: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  4802  000288  0101               	movlb	1	; () banked
  4803  00028A  EE20 F01A          	lfsr	2,26
  4804  00028E  0101               	movlb	1	; () banked
  4805  000290  5100               	movf	_ic_ptr& (0+255),w,b
  4806  000292  26D9               	addwf	fsr2l,f,c
  4807  000294  0101               	movlb	1	; () banked
  4808  000296  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4809  000298  22DA               	addwfc	fsr2h,f,c
  4810  00029A  50DF               	movf	indf2,w,c
  4811  00029C  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4812  00029E  503C               	movf	??_i2c_int_handler,w,c
  4813  0002A0  0D01               	mullw	1
  4814  0002A2  0E0F               	movlw	15
  4815  0002A4  26F3               	addwf	prodl,f,c
  4816  0002A6  0E00               	movlw	0
  4817  0002A8  22F4               	addwfc	prodh,f,c
  4818  0002AA  50F3               	movf	prodl,w,c
  4819  0002AC  0101               	movlb	1	; () banked
  4820  0002AE  0101               	movlb	1	; () banked
  4821  0002B0  2500               	addwf	_ic_ptr& (0+255),w,b
  4822  0002B2  6ED9               	movwf	fsr2l,c
  4823  0002B4  50F4               	movf	prodh,w,c
  4824  0002B6  0101               	movlb	1	; () banked
  4825  0002B8  0101               	movlb	1	; () banked
  4826  0002BA  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4827  0002BC  6EDA               	movwf	fsr2h,c
  4828  0002BE  50DF               	movf	indf2,w,c
  4829  0002C0  6EC9               	movwf	4041,c	;volatile
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;my_i2c.c: 190: ic_ptr->outbufind++;
  4833  0002C2  0101               	movlb	1	; () banked
  4834  0002C4  EE20 F01A          	lfsr	2,26
  4835  0002C8  0101               	movlb	1	; () banked
  4836  0002CA  5100               	movf	_ic_ptr& (0+255),w,b
  4837  0002CC  26D9               	addwf	fsr2l,f,c
  4838  0002CE  0101               	movlb	1	; () banked
  4839  0002D0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4840  0002D2  22DA               	addwfc	fsr2h,f,c
  4841  0002D4  2ADF               	incf	indf2,f,c
  4842                           
  4843                           ; BSR set to: 1
  4844                           ;my_i2c.c: 191: data_written = 1;
  4845  0002D6  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4846  0002D8  0E01               	movlw	1
  4847  0002DA  6E40               	movwf	i2c_int_handler@data_written,c
  4848  0002DC  D0A8               	goto	L6
  4849  0002DE                     L5:
  4850  0002DE  6EDF               	movwf	indf2,c
  4851  0002E0  D0C9               	goto	i2l259
  4852  0002E2                     i2l279:
  4853                           
  4854                           ; BSR set to: 1
  4855                           ;my_i2c.c: 199: {
  4856                           ;my_i2c.c: 201: if (SSPSTATbits.P == 1) {
  4857  0002E2  A8C7               	btfss	4039,4,c	;volatile
  4858  0002E4  D059               	goto	i2l2286
  4859                           
  4860                           ; BSR set to: 1
  4861                           ;my_i2c.c: 203: ic_ptr->event_count++;
  4862  0002E6  0101               	movlb	1	; () banked
  4863  0002E8  EE20 F00B          	lfsr	2,11
  4864  0002EC  0101               	movlb	1	; () banked
  4865  0002EE  5100               	movf	_ic_ptr& (0+255),w,b
  4866  0002F0  26D9               	addwf	fsr2l,f,c
  4867  0002F2  0101               	movlb	1	; () banked
  4868  0002F4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4869  0002F6  22DA               	addwfc	fsr2h,f,c
  4870  0002F8  2ADF               	incf	indf2,f,c
  4871                           
  4872                           ; BSR set to: 1
  4873                           ;my_i2c.c: 204: if (data_read) {
  4874  0002FA  5045               	movf	i2c_int_handler@data_read,w,c
  4875  0002FC  B4D8               	btfsc	status,2,c
  4876  0002FE  D047               	goto	i2l2282
  4877                           
  4878                           ; BSR set to: 1
  4879                           ;my_i2c.c: 205: if (SSPSTATbits.D_A == 1) {
  4880  000300  AAC7               	btfss	4039,5,c	;volatile
  4881  000302  D024               	goto	i2l2280
  4882                           
  4883                           ; BSR set to: 1
  4884                           ;my_i2c.c: 206: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  4885  000304  0101               	movlb	1	; () banked
  4886  000306  EE20 F00A          	lfsr	2,10
  4887  00030A  0101               	movlb	1	; () banked
  4888  00030C  5100               	movf	_ic_ptr& (0+255),w,b
  4889  00030E  26D9               	addwf	fsr2l,f,c
  4890  000310  0101               	movlb	1	; () banked
  4891  000312  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4892  000314  22DA               	addwfc	fsr2h,f,c
  4893  000316  50DF               	movf	indf2,w,c
  4894  000318  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4895  00031A  503C               	movf	??_i2c_int_handler,w,c
  4896  00031C  0D01               	mullw	1
  4897  00031E  50F3               	movf	prodl,w,c
  4898  000320  0101               	movlb	1	; () banked
  4899  000322  0101               	movlb	1	; () banked
  4900  000324  2500               	addwf	_ic_ptr& (0+255),w,b
  4901  000326  6ED9               	movwf	fsr2l,c
  4902  000328  50F4               	movf	prodh,w,c
  4903  00032A  0101               	movlb	1	; () banked
  4904  00032C  0101               	movlb	1	; () banked
  4905  00032E  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4906  000330  6EDA               	movwf	fsr2h,c
  4907  000332  C042  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  4908                           
  4909                           ; BSR set to: 1
  4910                           ;my_i2c.c: 207: ic_ptr->buflen++;
  4911  000336  0101               	movlb	1	; () banked
  4912  000338  EE20 F00A          	lfsr	2,10
  4913  00033C  0101               	movlb	1	; () banked
  4914  00033E  5100               	movf	_ic_ptr& (0+255),w,b
  4915  000340  26D9               	addwf	fsr2l,f,c
  4916  000342  0101               	movlb	1	; () banked
  4917  000344  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4918  000346  22DA               	addwfc	fsr2h,f,c
  4919  000348  2ADF               	incf	indf2,f,c
  4920  00034A  D021               	goto	i2l2282
  4921  00034C                     i2l2280:
  4922                           
  4923                           ; BSR set to: 1
  4924                           ;my_i2c.c: 210: ic_ptr->error_count++;
  4925  00034C  0101               	movlb	1	; () banked
  4926  00034E  EE20 F00E          	lfsr	2,14
  4927  000352  0101               	movlb	1	; () banked
  4928  000354  5100               	movf	_ic_ptr& (0+255),w,b
  4929  000356  26D9               	addwf	fsr2l,f,c
  4930  000358  0101               	movlb	1	; () banked
  4931  00035A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4932  00035C  22DA               	addwfc	fsr2h,f,c
  4933  00035E  2ADF               	incf	indf2,f,c
  4934                           
  4935                           ;my_i2c.c: 211: ic_ptr->error_code = 0x6;
  4936  000360  0101               	movlb	1	; () banked
  4937  000362  EE20 F00D          	lfsr	2,13
  4938  000366  0101               	movlb	1	; () banked
  4939  000368  5100               	movf	_ic_ptr& (0+255),w,b
  4940  00036A  26D9               	addwf	fsr2l,f,c
  4941  00036C  0101               	movlb	1	; () banked
  4942  00036E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4943  000370  22DA               	addwfc	fsr2h,f,c
  4944  000372  0E06               	movlw	6
  4945  000374  6EDF               	movwf	indf2,c
  4946                           
  4947                           ;my_i2c.c: 212: ic_ptr->status = 0x5;
  4948  000376  0101               	movlb	1	; () banked
  4949  000378  EE20 F00C          	lfsr	2,12
  4950  00037C  0101               	movlb	1	; () banked
  4951  00037E  5100               	movf	_ic_ptr& (0+255),w,b
  4952  000380  26D9               	addwf	fsr2l,f,c
  4953  000382  0101               	movlb	1	; () banked
  4954  000384  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4955  000386  22DA               	addwfc	fsr2h,f,c
  4956  000388  0E05               	movlw	5
  4957  00038A  6EDF               	movwf	indf2,c
  4958  00038C  D052               	goto	L8
  4959  00038E                     i2l2282:
  4960                           
  4961                           ; BSR set to: 1
  4962                           ;my_i2c.c: 215: msg_ready = 1;
  4963  00038E  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  4964  000390  0E01               	movlw	1
  4965  000392  6E44               	movwf	i2c_int_handler@msg_ready,c
  4966  000394  503C               	movf	??_i2c_int_handler& (0+255),w,c
  4967                           
  4968                           ; BSR set to: 1
  4969  000396  D04D               	goto	L8
  4970  000398                     i2l2286:
  4971                           
  4972                           ; BSR set to: 1
  4973  000398  5045               	movf	i2c_int_handler@data_read,w,c
  4974  00039A  B4D8               	btfsc	status,2,c
  4975  00039C  D06B               	goto	i2l259
  4976                           
  4977                           ; BSR set to: 1
  4978                           ;my_i2c.c: 219: ic_ptr->event_count++;
  4979  00039E  0101               	movlb	1	; () banked
  4980  0003A0  EE20 F00B          	lfsr	2,11
  4981  0003A4  0101               	movlb	1	; () banked
  4982  0003A6  5100               	movf	_ic_ptr& (0+255),w,b
  4983  0003A8  26D9               	addwf	fsr2l,f,c
  4984  0003AA  0101               	movlb	1	; () banked
  4985  0003AC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  4986  0003AE  22DA               	addwfc	fsr2h,f,c
  4987  0003B0  2ADF               	incf	indf2,f,c
  4988                           
  4989                           ; BSR set to: 1
  4990                           ;my_i2c.c: 220: if (SSPSTATbits.D_A == 1) {
  4991  0003B2  AAC7               	btfss	4039,5,c	;volatile
  4992  0003B4  D024               	goto	i2l287
  4993                           
  4994                           ; BSR set to: 1
  4995                           ;my_i2c.c: 221: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  4996  0003B6  0101               	movlb	1	; () banked
  4997  0003B8  EE20 F00A          	lfsr	2,10
  4998  0003BC  0101               	movlb	1	; () banked
  4999  0003BE  5100               	movf	_ic_ptr& (0+255),w,b
  5000  0003C0  26D9               	addwf	fsr2l,f,c
  5001  0003C2  0101               	movlb	1	; () banked
  5002  0003C4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5003  0003C6  22DA               	addwfc	fsr2h,f,c
  5004  0003C8  50DF               	movf	indf2,w,c
  5005  0003CA  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  5006  0003CC  503C               	movf	??_i2c_int_handler,w,c
  5007  0003CE  0D01               	mullw	1
  5008  0003D0  50F3               	movf	prodl,w,c
  5009  0003D2  0101               	movlb	1	; () banked
  5010  0003D4  0101               	movlb	1	; () banked
  5011  0003D6  2500               	addwf	_ic_ptr& (0+255),w,b
  5012  0003D8  6ED9               	movwf	fsr2l,c
  5013  0003DA  50F4               	movf	prodh,w,c
  5014  0003DC  0101               	movlb	1	; () banked
  5015  0003DE  0101               	movlb	1	; () banked
  5016  0003E0  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5017  0003E2  6EDA               	movwf	fsr2h,c
  5018  0003E4  C042  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5019                           
  5020                           ; BSR set to: 1
  5021                           ;my_i2c.c: 222: ic_ptr->buflen++;
  5022  0003E8  0101               	movlb	1	; () banked
  5023  0003EA  EE20 F00A          	lfsr	2,10
  5024  0003EE  0101               	movlb	1	; () banked
  5025  0003F0  5100               	movf	_ic_ptr& (0+255),w,b
  5026  0003F2  26D9               	addwf	fsr2l,f,c
  5027  0003F4  0101               	movlb	1	; () banked
  5028  0003F6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5029  0003F8  22DA               	addwfc	fsr2h,f,c
  5030  0003FA  2ADF               	incf	indf2,f,c
  5031                           
  5032                           ;my_i2c.c: 223: } else {
  5033  0003FC  D03B               	goto	i2l259
  5034  0003FE                     i2l287:
  5035                           
  5036                           ; BSR set to: 1
  5037                           ;my_i2c.c: 224: if (SSPSTATbits.R_W == 1) {
  5038  0003FE  A4C7               	btfss	4039,2,c	;volatile
  5039  000400  D6C7               	goto	i2l2236
  5040                           
  5041                           ; BSR set to: 1
  5042                           ;my_i2c.c: 225: ic_ptr->status = 0x8;
  5043  000402  0101               	movlb	1	; () banked
  5044  000404  EE20 F00C          	lfsr	2,12
  5045  000408  0101               	movlb	1	; () banked
  5046  00040A  5100               	movf	_ic_ptr& (0+255),w,b
  5047  00040C  26D9               	addwf	fsr2l,f,c
  5048  00040E  0101               	movlb	1	; () banked
  5049  000410  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5050  000412  22DA               	addwfc	fsr2h,f,c
  5051  000414  0E08               	movlw	8
  5052  000416  6EDF               	movwf	indf2,c
  5053                           
  5054                           ; BSR set to: 1
  5055                           ;my_i2c.c: 226: msg_ready = 1;
  5056  000418  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  5057  00041A  0E01               	movlw	1
  5058  00041C  6E44               	movwf	i2c_int_handler@msg_ready,c
  5059  00041E  503C               	movf	??_i2c_int_handler& (0+255),w,c
  5060  000420                     L9:
  5061                           
  5062                           ; BSR set to: 1
  5063                           ;my_i2c.c: 227: msg_to_send = 1;
  5064  000420  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  5065  000422  0E01               	movlw	1
  5066  000424  6E43               	movwf	i2c_int_handler@msg_to_send,c
  5067  000426  503C               	movf	??_i2c_int_handler& (0+255),w,c
  5068                           
  5069                           ; BSR set to: 1
  5070                           ;my_i2c.c: 229: data_read = 0;
  5071  000428  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  5072  00042A  0E00               	movlw	0
  5073  00042C  6E45               	movwf	i2c_int_handler@data_read,c
  5074  00042E                     L6:
  5075  00042E  503C               	movf	??_i2c_int_handler& (0+255),w,c
  5076                           
  5077                           ;my_i2c.c: 230: } else {
  5078  000430  D021               	goto	i2l259
  5079  000432                     L8:
  5080                           
  5081                           ;my_i2c.c: 233: ic_ptr->status = 0x5;
  5082  000432  0101               	movlb	1	; () banked
  5083  000434  EE20 F00C          	lfsr	2,12
  5084  000438  0101               	movlb	1	; () banked
  5085  00043A  5100               	movf	_ic_ptr& (0+255),w,b
  5086  00043C  26D9               	addwf	fsr2l,f,c
  5087  00043E  0101               	movlb	1	; () banked
  5088  000440  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5089  000442  22DA               	addwfc	fsr2h,f,c
  5090  000444  0E05               	movlw	5
  5091  000446  D74B               	goto	L5
  5092  000448                     i2l2308:
  5093  000448  0101               	movlb	1	; () banked
  5094  00044A  EE20 F00C          	lfsr	2,12
  5095  00044E  0101               	movlb	1	; () banked
  5096  000450  5100               	movf	_ic_ptr& (0+255),w,b
  5097  000452  26D9               	addwf	fsr2l,f,c
  5098  000454  0101               	movlb	1	; () banked
  5099  000456  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5100  000458  22DA               	addwfc	fsr2h,f,c
  5101  00045A  50DF               	movf	indf2,w,c
  5102                           
  5103                           ; Switch size 1, requested type "space"
  5104                           ; Number of cases is 4, Range of values is 5 to 8
  5105                           ; switch strategies available:
  5106                           ; Name         Instructions Cycles
  5107                           ; simple_byte           13     7 (average)
  5108                           ;	Chosen strategy is simple_byte
  5109  00045C  0A05               	xorlw	5	; case 5
  5110  00045E  B4D8               	btfsc	status,2,c
  5111  000460  D668               	goto	i2l261
  5112  000462  0A03               	xorlw	3	; case 6
  5113  000464  B4D8               	btfsc	status,2,c
  5114  000466  D67E               	goto	i2l265
  5115  000468  0A01               	xorlw	1	; case 7
  5116  00046A  B4D8               	btfsc	status,2,c
  5117  00046C  D73A               	goto	i2l279
  5118  00046E  0A0F               	xorlw	15	; case 8
  5119  000470  B4D8               	btfsc	status,2,c
  5120  000472  D6EC               	goto	i2l2256
  5121  000474                     i2l259:
  5122                           
  5123                           ;my_i2c.c: 240: }
  5124                           ;my_i2c.c: 243: if (data_read || data_written) {
  5125  000474  6645               	tstfsz	i2c_int_handler@data_read,c
  5126  000476  D003               	goto	i2l2312
  5127  000478  5040               	movf	i2c_int_handler@data_written,w,c
  5128  00047A  B4D8               	btfsc	status,2,c
  5129  00047C  D008               	goto	i2l2318
  5130  00047E                     i2l2312:
  5131                           
  5132                           ;my_i2c.c: 246: setDBG(DBG5);
  5133  00047E  0E04               	movlw	4
  5134  000480  EC3B  F00B         	call	_setDBG
  5135                           
  5136                           ;my_i2c.c: 247: resetDBG(DBG5);
  5137  000484  0E04               	movlw	4
  5138  000486  EC59  F00B         	call	_resetDBG
  5139                           
  5140                           ;my_i2c.c: 248: if (SSPCON1bits.CKP == 0) {
  5141  00048A  A8C6               	btfss	4038,4,c	;volatile
  5142                           
  5143                           ;my_i2c.c: 249: SSPCON1bits.CKP = 1;
  5144  00048C  88C6               	bsf	4038,4,c	;volatile
  5145  00048E                     i2l2318:
  5146                           
  5147                           ;my_i2c.c: 250: }
  5148                           ;my_i2c.c: 251: }
  5149                           ;my_i2c.c: 254: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  5150  00048E  0101               	movlb	1	; () banked
  5151  000490  EE20 F00A          	lfsr	2,10
  5152  000494  0101               	movlb	1	; () banked
  5153  000496  5100               	movf	_ic_ptr& (0+255),w,b
  5154  000498  26D9               	addwf	fsr2l,f,c
  5155  00049A  0101               	movlb	1	; () banked
  5156  00049C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5157  00049E  22DA               	addwfc	fsr2h,f,c
  5158  0004A0  0E08               	movlw	8
  5159  0004A2  64DF               	cpfsgt	indf2,c
  5160  0004A4  D022               	goto	i2l2324
  5161                           
  5162                           ; BSR set to: 1
  5163  0004A6  6644               	tstfsz	i2c_int_handler@msg_ready,c
  5164  0004A8  D020               	goto	i2l2324
  5165                           
  5166                           ; BSR set to: 1
  5167                           ;my_i2c.c: 255: ic_ptr->status = 0x5;
  5168  0004AA  0101               	movlb	1	; () banked
  5169  0004AC  EE20 F00C          	lfsr	2,12
  5170  0004B0  0101               	movlb	1	; () banked
  5171  0004B2  5100               	movf	_ic_ptr& (0+255),w,b
  5172  0004B4  26D9               	addwf	fsr2l,f,c
  5173  0004B6  0101               	movlb	1	; () banked
  5174  0004B8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5175  0004BA  22DA               	addwfc	fsr2h,f,c
  5176  0004BC  0E05               	movlw	5
  5177  0004BE  6EDF               	movwf	indf2,c
  5178                           
  5179                           ;my_i2c.c: 256: ic_ptr->error_count++;
  5180  0004C0  0101               	movlb	1	; () banked
  5181  0004C2  EE20 F00E          	lfsr	2,14
  5182  0004C6  0101               	movlb	1	; () banked
  5183  0004C8  5100               	movf	_ic_ptr& (0+255),w,b
  5184  0004CA  26D9               	addwf	fsr2l,f,c
  5185  0004CC  0101               	movlb	1	; () banked
  5186  0004CE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5187  0004D0  22DA               	addwfc	fsr2h,f,c
  5188  0004D2  2ADF               	incf	indf2,f,c
  5189                           
  5190                           ;my_i2c.c: 257: ic_ptr->error_code = 0x7;
  5191  0004D4  0101               	movlb	1	; () banked
  5192  0004D6  EE20 F00D          	lfsr	2,13
  5193  0004DA  0101               	movlb	1	; () banked
  5194  0004DC  5100               	movf	_ic_ptr& (0+255),w,b
  5195  0004DE  26D9               	addwf	fsr2l,f,c
  5196  0004E0  0101               	movlb	1	; () banked
  5197  0004E2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5198  0004E4  22DA               	addwfc	fsr2h,f,c
  5199  0004E6  0E07               	movlw	7
  5200  0004E8  6EDF               	movwf	indf2,c
  5201  0004EA                     i2l2324:
  5202                           
  5203                           ; BSR set to: 1
  5204                           ;my_i2c.c: 258: }
  5205                           ;my_i2c.c: 260: if (msg_ready) {
  5206  0004EA  5044               	movf	i2c_int_handler@msg_ready,w,c
  5207  0004EC  B4D8               	btfsc	status,2,c
  5208  0004EE  D02E               	goto	i2l2332
  5209                           
  5210                           ; BSR set to: 1
  5211                           ;my_i2c.c: 261: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  5212  0004F0  0101               	movlb	1	; () banked
  5213  0004F2  EE20 F00B          	lfsr	2,11
  5214  0004F6  0101               	movlb	1	; () banked
  5215  0004F8  5100               	movf	_ic_ptr& (0+255),w,b
  5216  0004FA  26D9               	addwf	fsr2l,f,c
  5217  0004FC  0101               	movlb	1	; () banked
  5218  0004FE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5219  000500  22DA               	addwfc	fsr2h,f,c
  5220  000502  0101               	movlb	1	; () banked
  5221  000504  EE10 F00A          	lfsr	1,10
  5222  000508  0101               	movlb	1	; () banked
  5223  00050A  5100               	movf	_ic_ptr& (0+255),w,b
  5224  00050C  26E1               	addwf	fsr1l,f,c
  5225  00050E  0101               	movlb	1	; () banked
  5226  000510  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5227  000512  22E2               	addwfc	fsr1h,f,c
  5228  000514  50E7               	movf	indf1,w,c
  5229  000516  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  5230  000518  503C               	movf	??_i2c_int_handler,w,c
  5231  00051A  0D01               	mullw	1
  5232  00051C  50F3               	movf	prodl,w,c
  5233  00051E  0101               	movlb	1	; () banked
  5234  000520  0101               	movlb	1	; () banked
  5235  000522  2500               	addwf	_ic_ptr& (0+255),w,b
  5236  000524  6EE1               	movwf	fsr1l,c
  5237  000526  50F4               	movf	prodh,w,c
  5238  000528  0101               	movlb	1	; () banked
  5239  00052A  0101               	movlb	1	; () banked
  5240  00052C  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5241  00052E  6EE2               	movwf	fsr1h,c
  5242  000530  CFDF FFE7          	movff	indf2,indf1
  5243                           
  5244                           ; BSR set to: 1
  5245                           ;my_i2c.c: 262: setBrainReqData(ic_ptr->buffer);
  5246  000534  0101               	movlb	1	; () banked
  5247  000536  C101  F039         	movff	_ic_ptr+1,setBrainReqData@buf+1
  5248  00053A  0101               	movlb	1	; () banked
  5249  00053C  C100  F038         	movff	_ic_ptr,setBrainReqData@buf
  5250  000540  EC94  F00A         	call	_setBrainReqData	;wreg free
  5251                           
  5252                           ;my_i2c.c: 265: ic_ptr->buflen = 0;
  5253  000544  0101               	movlb	1	; () banked
  5254  000546  EE20 F00A          	lfsr	2,10
  5255  00054A  D03B               	goto	L7
  5256  00054C                     i2l2332:
  5257                           
  5258                           ; BSR set to: 1
  5259  00054C  0101               	movlb	1	; () banked
  5260  00054E  EE20 F00E          	lfsr	2,14
  5261  000552  0101               	movlb	1	; () banked
  5262  000554  5100               	movf	_ic_ptr& (0+255),w,b
  5263  000556  26D9               	addwf	fsr2l,f,c
  5264  000558  0101               	movlb	1	; () banked
  5265  00055A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5266  00055C  22DA               	addwfc	fsr2h,f,c
  5267  00055E  50DF               	movf	indf2,w,c
  5268  000560  B4D8               	btfsc	status,2,c
  5269  000562  D037               	goto	i2l2340
  5270                           
  5271                           ; BSR set to: 1
  5272                           ;my_i2c.c: 267: error_buf[0] = ic_ptr->error_count;
  5273  000564  0101               	movlb	1	; () banked
  5274  000566  EE20 F00E          	lfsr	2,14
  5275  00056A  0101               	movlb	1	; () banked
  5276  00056C  5100               	movf	_ic_ptr& (0+255),w,b
  5277  00056E  26D9               	addwf	fsr2l,f,c
  5278  000570  0101               	movlb	1	; () banked
  5279  000572  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5280  000574  22DA               	addwfc	fsr2h,f,c
  5281  000576  50DF               	movf	indf2,w,c
  5282  000578  6E3D               	movwf	i2c_int_handler@error_buf,c
  5283                           
  5284                           ;my_i2c.c: 268: error_buf[1] = ic_ptr->error_code;
  5285  00057A  0101               	movlb	1	; () banked
  5286  00057C  EE20 F00D          	lfsr	2,13
  5287  000580  0101               	movlb	1	; () banked
  5288  000582  5100               	movf	_ic_ptr& (0+255),w,b
  5289  000584  26D9               	addwf	fsr2l,f,c
  5290  000586  0101               	movlb	1	; () banked
  5291  000588  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5292  00058A  22DA               	addwfc	fsr2h,f,c
  5293  00058C  50DF               	movf	indf2,w,c
  5294  00058E  6E3E               	movwf	i2c_int_handler@error_buf+1,c
  5295                           
  5296                           ;my_i2c.c: 269: error_buf[2] = ic_ptr->event_count;
  5297  000590  0101               	movlb	1	; () banked
  5298  000592  EE20 F00B          	lfsr	2,11
  5299  000596  0101               	movlb	1	; () banked
  5300  000598  5100               	movf	_ic_ptr& (0+255),w,b
  5301  00059A  26D9               	addwf	fsr2l,f,c
  5302  00059C  0101               	movlb	1	; () banked
  5303  00059E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5304  0005A0  22DA               	addwfc	fsr2h,f,c
  5305  0005A2  50DF               	movf	indf2,w,c
  5306  0005A4  6E3F               	movwf	i2c_int_handler@error_buf+2,c
  5307                           
  5308                           ; BSR set to: 1
  5309                           ;my_i2c.c: 270: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  5310  0005A6  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  5311  0005A8  0E29               	movlw	41
  5312  0005AA  6E28               	movwf	ToMainHigh_sendmsg@msgtype,c
  5313  0005AC  503C               	movf	??_i2c_int_handler& (0+255),w,c
  5314  0005AE  0E00               	movlw	high i2c_int_handler@error_buf
  5315  0005B0  6E2A               	movwf	ToMainHigh_sendmsg@data+1,c
  5316  0005B2  0E3D               	movlw	low i2c_int_handler@error_buf
  5317  0005B4  6E29               	movwf	ToMainHigh_sendmsg@data,c
  5318  0005B6  0E03               	movlw	3
  5319  0005B8  EC1E  F00C         	call	_ToMainHigh_sendmsg
  5320                           
  5321                           ;my_i2c.c: 271: ic_ptr->error_count = 0;
  5322  0005BC  0101               	movlb	1	; () banked
  5323  0005BE  EE20 F00E          	lfsr	2,14
  5324  0005C2                     L7:
  5325  0005C2  0101               	movlb	1	; () banked
  5326  0005C4  5100               	movf	_ic_ptr& (0+255),w,b
  5327  0005C6  26D9               	addwf	fsr2l,f,c
  5328  0005C8  0101               	movlb	1	; () banked
  5329  0005CA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5330  0005CC  22DA               	addwfc	fsr2h,f,c
  5331  0005CE  0E00               	movlw	0
  5332  0005D0  6EDF               	movwf	indf2,c
  5333  0005D2                     i2l2340:
  5334                           
  5335                           ; BSR set to: 1
  5336                           ;my_i2c.c: 272: }
  5337                           ;my_i2c.c: 273: if (msg_to_send) {
  5338  0005D2  5043               	movf	i2c_int_handler@msg_to_send,w,c
  5339  0005D4  B4D8               	btfsc	status,2,c
  5340  0005D6  0012               	return	
  5341                           
  5342                           ; BSR set to: 1
  5343                           ;my_i2c.c: 286: sendRequestedData();
  5344  0005D8  EC77  F00B         	call	_sendRequestedData	;wreg free
  5345                           
  5346                           ;my_i2c.c: 287: msg_to_send = 0;
  5347  0005DC  6E3C               	movwf	??_i2c_int_handler& (0+255),c
  5348  0005DE  0E00               	movlw	0
  5349  0005E0  6E43               	movwf	i2c_int_handler@msg_to_send,c
  5350  0005E2  503C               	movf	??_i2c_int_handler& (0+255),w,c
  5351  0005E4  0012               	return	
  5352  0005E6                     __end_of_i2c_int_handler:
  5353                           	opt stack 0
  5354                           pclatu	equ	0xFFB
  5355                           pclath	equ	0xFFA
  5356                           tblptru	equ	0xFF8
  5357                           tblptrh	equ	0xFF7
  5358                           tblptrl	equ	0xFF6
  5359                           tablat	equ	0xFF5
  5360                           prodh	equ	0xFF4
  5361                           prodl	equ	0xFF3
  5362                           intcon	equ	0xFF2
  5363                           postinc0	equ	0xFEE
  5364                           fsr0h	equ	0xFEA
  5365                           fsr0l	equ	0xFE9
  5366                           wreg	equ	0xFE8
  5367                           indf1	equ	0xFE7
  5368                           postdec1	equ	0xFE5
  5369                           fsr1h	equ	0xFE2
  5370                           fsr1l	equ	0xFE1
  5371                           bsr	equ	0xFE0
  5372                           indf2	equ	0xFDF
  5373                           fsr2h	equ	0xFDA
  5374                           fsr2l	equ	0xFD9
  5375                           status	equ	0xFD8
  5376                           
  5377 ;; *************** function _setBrainReqData *****************
  5378 ;; Defined at:
  5379 ;;		line 16 in file "../src/sensorcomm.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  buf             2   55[COMRAM] PTR unsigned char 
  5382 ;;		 -> NULL(0), main@ic(28), 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  tempBrain       2   57[COMRAM] PTR struct .
  5385 ;;		 -> NULL(0), main@ic(28), 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;		None               void
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5395 ;;      Params:         2       0       0       0       0
  5396 ;;      Locals:         2       0       0       0       0
  5397 ;;      Temps:          0       0       0       0       0
  5398 ;;      Totals:         4       0       0       0       0
  5399 ;;Total ram usage:        4 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    4
  5402 ;; This function calls:
  5403 ;;		_reqADData
  5404 ;;		_unpackBrainMsg
  5405 ;; This function is called by:
  5406 ;;		_i2c_int_handler
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text28
  5411  001528                     __ptext28:
  5412                           	opt stack 0
  5413  001528                     _setBrainReqData:
  5414                           	opt stack 18
  5415                           
  5416                           ;sensorcomm.c: 18: BrainMsg* tempBrain = unpackBrainMsg(buf);
  5417                           
  5418                           ;incstack = 0
  5419  001528  C039  F013         	movff	setBrainReqData@buf+1,unpackBrainMsg@buf+1
  5420  00152C  C038  F012         	movff	setBrainReqData@buf,unpackBrainMsg@buf
  5421  001530  EC6D  F00C         	call	_unpackBrainMsg	;wreg free
  5422  001534  C012  F03A         	movff	?_unpackBrainMsg,setBrainReqData@tempBrain
  5423  001538  C013  F03B         	movff	?_unpackBrainMsg+1,setBrainReqData@tempBrain+1
  5424                           
  5425                           ;sensorcomm.c: 20: if(tempBrain->flags == 0){
  5426  00153C  C03A  FFD9         	movff	setBrainReqData@tempBrain,fsr2l
  5427  001540  C03B  FFDA         	movff	setBrainReqData@tempBrain+1,fsr2h
  5428  001544  50DF               	movf	indf2,w,c
  5429  001546  A4D8               	btfss	status,2,c
  5430  001548  D003               	goto	i2l2754
  5431                           
  5432                           ;sensorcomm.c: 21: reqADData();
  5433  00154A  EC06  F009         	call	_reqADData	;wreg free
  5434                           
  5435                           ;sensorcomm.c: 22: }
  5436  00154E  0012               	return	
  5437  001550                     i2l2754:
  5438                           
  5439                           ;sensorcomm.c: 23: else{
  5440                           ;sensorcomm.c: 24: BrainMsgRecv.flags = tempBrain->flags;
  5441  001550  C03A  FFD9         	movff	setBrainReqData@tempBrain,fsr2l
  5442  001554  C03B  FFDA         	movff	setBrainReqData@tempBrain+1,fsr2h
  5443  001558  50DF               	movf	indf2,w,c
  5444  00155A  6E54               	movwf	_BrainMsgRecv,c
  5445                           
  5446                           ;sensorcomm.c: 25: BrainMsgRecv.sensorMask = tempBrain->sensorMask;
  5447  00155C  EE20 F001          	lfsr	2,1
  5448  001560  503A               	movf	setBrainReqData@tempBrain,w,c
  5449  001562  26D9               	addwf	fsr2l,f,c
  5450  001564  503B               	movf	setBrainReqData@tempBrain+1,w,c
  5451  001566  22DA               	addwfc	fsr2h,f,c
  5452  001568  50DF               	movf	indf2,w,c
  5453  00156A  6E55               	movwf	_BrainMsgRecv+1,c
  5454  00156C  0012               	return	
  5455  00156E                     __end_of_setBrainReqData:
  5456                           	opt stack 0
  5457                           pclatu	equ	0xFFB
  5458                           pclath	equ	0xFFA
  5459                           tblptru	equ	0xFF8
  5460                           tblptrh	equ	0xFF7
  5461                           tblptrl	equ	0xFF6
  5462                           tablat	equ	0xFF5
  5463                           prodh	equ	0xFF4
  5464                           prodl	equ	0xFF3
  5465                           intcon	equ	0xFF2
  5466                           postinc0	equ	0xFEE
  5467                           fsr0h	equ	0xFEA
  5468                           fsr0l	equ	0xFE9
  5469                           wreg	equ	0xFE8
  5470                           indf1	equ	0xFE7
  5471                           postdec1	equ	0xFE5
  5472                           fsr1h	equ	0xFE2
  5473                           fsr1l	equ	0xFE1
  5474                           bsr	equ	0xFE0
  5475                           indf2	equ	0xFDF
  5476                           fsr2h	equ	0xFDA
  5477                           fsr2l	equ	0xFD9
  5478                           status	equ	0xFD8
  5479                           
  5480 ;; *************** function _unpackBrainMsg *****************
  5481 ;; Defined at:
  5482 ;;		line 42 in file "../../../../common/communication/brain_rover.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  buf             2   17[COMRAM] PTR unsigned char 
  5485 ;;		 -> NULL(0), main@ic(28), 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  2   17[COMRAM] PTR struct .
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5497 ;;      Params:         2       0       0       0       0
  5498 ;;      Locals:         0       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0
  5500 ;;      Totals:         2       0       0       0       0
  5501 ;;Total ram usage:        2 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_setBrainReqData
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text29
  5511  0018DA                     __ptext29:
  5512                           	opt stack 0
  5513  0018DA                     _unpackBrainMsg:
  5514                           	opt stack 21
  5515                           
  5516                           ;brain_rover.c: 43: return (BrainMsg*) buf;
  5517                           
  5518                           ;incstack = 0
  5519  0018DA  C013  F013         	movff	unpackBrainMsg@buf+1,?_unpackBrainMsg+1
  5520  0018DE  C012  F012         	movff	unpackBrainMsg@buf,?_unpackBrainMsg
  5521  0018E2  0012               	return	
  5522  0018E4                     __end_of_unpackBrainMsg:
  5523                           	opt stack 0
  5524                           pclatu	equ	0xFFB
  5525                           pclath	equ	0xFFA
  5526                           tblptru	equ	0xFF8
  5527                           tblptrh	equ	0xFF7
  5528                           tblptrl	equ	0xFF6
  5529                           tablat	equ	0xFF5
  5530                           prodh	equ	0xFF4
  5531                           prodl	equ	0xFF3
  5532                           intcon	equ	0xFF2
  5533                           postinc0	equ	0xFEE
  5534                           fsr0h	equ	0xFEA
  5535                           fsr0l	equ	0xFE9
  5536                           wreg	equ	0xFE8
  5537                           indf1	equ	0xFE7
  5538                           postdec1	equ	0xFE5
  5539                           fsr1h	equ	0xFE2
  5540                           fsr1l	equ	0xFE1
  5541                           bsr	equ	0xFE0
  5542                           indf2	equ	0xFDF
  5543                           fsr2h	equ	0xFDA
  5544                           fsr2l	equ	0xFD9
  5545                           status	equ	0xFD8
  5546                           
  5547 ;; *************** function _reqADData *****************
  5548 ;; Defined at:
  5549 ;;		line 17 in file "../src/testAD.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  buf            10   44[COMRAM] struct .[10]
  5554 ;;  numSamples      1   54[COMRAM] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;		None               void
  5557 ;; Registers used:
  5558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5564 ;;      Params:         0       0       0       0       0
  5565 ;;      Locals:        11       0       0       0       0
  5566 ;;      Temps:          1       0       0       0       0
  5567 ;;      Totals:        12       0       0       0       0
  5568 ;;Total ram usage:       12 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    3
  5571 ;; This function calls:
  5572 ;;		_ToMainHigh_sendmsg
  5573 ;; This function is called by:
  5574 ;;		_setBrainReqData
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text30
  5579  00120C                     __ptext30:
  5580                           	opt stack 0
  5581  00120C                     _reqADData:
  5582                           	opt stack 18
  5583                           
  5584                           ;testAD.c: 18: sensorADData buf[10];
  5585                           ;testAD.c: 19: uint8 numSamples = 0;
  5586                           
  5587                           ;incstack = 0
  5588  00120C  6E2C               	movwf	??_reqADData& (0+255),c
  5589  00120E  0E00               	movlw	0
  5590  001210  6E37               	movwf	reqADData@numSamples,c
  5591  001212  502C               	movf	??_reqADData& (0+255),w,c
  5592                           
  5593                           ;testAD.c: 20: switch(timesreq){
  5594  001214  D015               	goto	i2l2864
  5595  001216                     i2l500:
  5596                           
  5597                           ;testAD.c: 22: buf[0].data = sample1;
  5598  001216  C05B  F02D         	movff	_sample1,reqADData@buf
  5599  00121A                     
  5600                           ;testAD.c: 23: numSamples = 1;
  5601  00121A  6E2C               	movwf	??_reqADData& (0+255),c
  5602  00121C  0E01               	movlw	1
  5603  00121E  D00A               	goto	L11
  5604  001220                     i2l502:
  5605                           
  5606                           ;testAD.c: 26: buf[0].data = sample2;
  5607  001220  C05C  F02D         	movff	_sample2,reqADData@buf
  5608                           
  5609                           ;testAD.c: 27: buf[1].data = sample3;
  5610  001224  C05D  F02E         	movff	_sample3,reqADData@buf+1
  5611                           
  5612                           ;testAD.c: 28: numSamples = 2;
  5613  001228  6E2C               	movwf	??_reqADData& (0+255),c
  5614  00122A  0E02               	movlw	2
  5615  00122C  D003               	goto	L11
  5616  00122E                     i2l503:
  5617                           
  5618                           ;testAD.c: 31: buf[0].data = sample4;
  5619  00122E  C05E  F02D         	movff	_sample4,reqADData@buf
  5620  001232  D7F3               	goto	L13
  5621  001234                     L11:
  5622  001234  6E37               	movwf	reqADData@numSamples,c
  5623  001236  502C               	movf	??_reqADData& (0+255),w,c
  5624                           
  5625                           ;testAD.c: 33: break;
  5626  001238  D010               	goto	i2l2866
  5627  00123A                     i2l504:
  5628                           
  5629                           ;testAD.c: 35: buf[0].data = sample5;
  5630  00123A  C05F  F02D         	movff	_sample5,reqADData@buf
  5631  00123E  D7ED               	goto	L13
  5632  001240                     i2l2864:
  5633  001240  505A               	movf	_timesreq,w,c
  5634                           
  5635                           ; Switch size 1, requested type "space"
  5636                           ; Number of cases is 4, Range of values is 0 to 3
  5637                           ; switch strategies available:
  5638                           ; Name         Instructions Cycles
  5639                           ; simple_byte           13     7 (average)
  5640                           ;	Chosen strategy is simple_byte
  5641  001242  0A00               	xorlw	0	; case 0
  5642  001244  B4D8               	btfsc	status,2,c
  5643  001246  D7E7               	goto	i2l500
  5644  001248  0A01               	xorlw	1	; case 1
  5645  00124A  B4D8               	btfsc	status,2,c
  5646  00124C  D7E9               	goto	i2l502
  5647  00124E  0A03               	xorlw	3	; case 2
  5648  001250  B4D8               	btfsc	status,2,c
  5649  001252  D7ED               	goto	i2l503
  5650  001254  0A01               	xorlw	1	; case 3
  5651  001256  B4D8               	btfsc	status,2,c
  5652  001258  D7F0               	goto	i2l504
  5653  00125A                     i2l2866:
  5654                           
  5655                           ;testAD.c: 39: timesreq++;
  5656  00125A  2A5A               	incf	_timesreq,f,c
  5657                           
  5658                           ;testAD.c: 40: timesreq = timesreq %4;
  5659  00125C  505A               	movf	_timesreq,w,c
  5660  00125E  0B03               	andlw	3
  5661  001260  6E5A               	movwf	_timesreq,c
  5662                           
  5663                           ;testAD.c: 41: ToMainHigh_sendmsg(numSamples, 50, (char*) buf);
  5664  001262  6E2C               	movwf	??_reqADData& (0+255),c
  5665  001264  0E32               	movlw	50
  5666  001266  6E28               	movwf	ToMainHigh_sendmsg@msgtype,c
  5667  001268  502C               	movf	??_reqADData& (0+255),w,c
  5668  00126A  0E00               	movlw	high reqADData@buf
  5669  00126C  6E2A               	movwf	ToMainHigh_sendmsg@data+1,c
  5670  00126E  0E2D               	movlw	low reqADData@buf
  5671  001270  6E29               	movwf	ToMainHigh_sendmsg@data,c
  5672  001272  5037               	movf	reqADData@numSamples,w,c
  5673  001274  EC1E  F00C         	call	_ToMainHigh_sendmsg
  5674  001278  0012               	return	
  5675  00127A                     __end_of_reqADData:
  5676                           	opt stack 0
  5677                           pclatu	equ	0xFFB
  5678                           pclath	equ	0xFFA
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           prodh	equ	0xFF4
  5684                           prodl	equ	0xFF3
  5685                           intcon	equ	0xFF2
  5686                           postinc0	equ	0xFEE
  5687                           fsr0h	equ	0xFEA
  5688                           fsr0l	equ	0xFE9
  5689                           wreg	equ	0xFE8
  5690                           indf1	equ	0xFE7
  5691                           postdec1	equ	0xFE5
  5692                           fsr1h	equ	0xFE2
  5693                           fsr1l	equ	0xFE1
  5694                           bsr	equ	0xFE0
  5695                           indf2	equ	0xFDF
  5696                           fsr2h	equ	0xFDA
  5697                           fsr2l	equ	0xFD9
  5698                           status	equ	0xFD8
  5699                           
  5700 ;; *************** function _ToMainHigh_sendmsg *****************
  5701 ;; Defined at:
  5702 ;;		line 127 in file "../src/messages.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  length          1    wreg     unsigned char 
  5705 ;;  msgtype         1   39[COMRAM] unsigned char 
  5706 ;;  data            2   40[COMRAM] PTR void 
  5707 ;;		 -> reqADData@buf(10), i2c_int_handler@error_buf(3), 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  length          1   42[COMRAM] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      char 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5719 ;;      Params:         3       0       0       0       0
  5720 ;;      Locals:         1       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0
  5722 ;;      Totals:         4       0       0       0       0
  5723 ;;Total ram usage:        4 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    2
  5726 ;; This function calls:
  5727 ;;		_send_msg
  5728 ;; This function is called by:
  5729 ;;		_i2c_int_handler
  5730 ;;		_reqADData
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text31
  5735  00183C                     __ptext31:
  5736                           	opt stack 0
  5737  00183C                     _ToMainHigh_sendmsg:
  5738                           	opt stack 18
  5739                           
  5740                           ;incstack = 0
  5741                           ;ToMainHigh_sendmsg@length stored from wreg
  5742  00183C  CFE8 F02B          	movff	wreg,ToMainHigh_sendmsg@length
  5743                           
  5744                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5745                           ;	Return value of _ToMainHigh_sendmsg is never used
  5746  001840  0101               	movlb	1	; () banked
  5747  001842  0E01               	movlw	high _ToMainHigh_MQ
  5748  001844  6E1D               	movwf	send_msg@qptr+1,c
  5749  001846  0101               	movlb	1	; () banked
  5750  001848  0E38               	movlw	low _ToMainHigh_MQ
  5751  00184A  6E1C               	movwf	send_msg@qptr,c
  5752  00184C  C02B  F01E         	movff	ToMainHigh_sendmsg@length,send_msg@length
  5753  001850  C028  F01F         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  5754  001854  C02A  F021         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  5755  001858  C029  F020         	movff	ToMainHigh_sendmsg@data,send_msg@data
  5756  00185C  ECE6  F006         	call	_send_msg	;wreg free
  5757  001860  0012               	return	
  5758  001862                     __end_of_ToMainHigh_sendmsg:
  5759                           	opt stack 0
  5760                           pclatu	equ	0xFFB
  5761                           pclath	equ	0xFFA
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodh	equ	0xFF4
  5767                           prodl	equ	0xFF3
  5768                           intcon	equ	0xFF2
  5769                           postinc0	equ	0xFEE
  5770                           fsr0h	equ	0xFEA
  5771                           fsr0l	equ	0xFE9
  5772                           wreg	equ	0xFE8
  5773                           indf1	equ	0xFE7
  5774                           postdec1	equ	0xFE5
  5775                           fsr1h	equ	0xFE2
  5776                           fsr1l	equ	0xFE1
  5777                           bsr	equ	0xFE0
  5778                           indf2	equ	0xFDF
  5779                           fsr2h	equ	0xFDA
  5780                           fsr2l	equ	0xFD9
  5781                           status	equ	0xFD8
  5782                           
  5783 ;; *************** function _send_msg *****************
  5784 ;; Defined at:
  5785 ;;		line 25 in file "../src/messages.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  qptr            2   27[COMRAM] PTR struct __msg_queue
  5788 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5789 ;;  length          1   29[COMRAM] unsigned char 
  5790 ;;  msgtype         1   30[COMRAM] unsigned char 
  5791 ;;  data            2   31[COMRAM] PTR void 
  5792 ;;		 -> reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  qmsg            2   37[COMRAM] PTR struct __msg
  5795 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5796 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5797 ;;  tlength         2   34[COMRAM] unsigned int 
  5798 ;;  slot            1   36[COMRAM] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      char 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5808 ;;      Params:         6       0       0       0       0
  5809 ;;      Locals:         5       0       0       0       0
  5810 ;;      Temps:          1       0       0       0       0
  5811 ;;      Totals:        12       0       0       0       0
  5812 ;;Total ram usage:       12 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    1
  5815 ;; This function calls:
  5816 ;;		i2_memcpy
  5817 ;; This function is called by:
  5818 ;;		_ToMainHigh_sendmsg
  5819 ;;		_ToMainLow_sendmsg
  5820 ;;		_FromMainLow_sendmsg
  5821 ;;		_FromMainHigh_sendmsg
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text32
  5826  000DCC                     __ptext32:
  5827                           	opt stack 0
  5828  000DCC                     _send_msg:
  5829                           	opt stack 18
  5830                           
  5831                           ;messages.c: 26: unsigned char slot;
  5832                           ;messages.c: 28: msg *qmsg;
  5833                           ;messages.c: 29: size_t tlength = length;
  5834                           
  5835                           ;incstack = 0
  5836  000DCC  C01E  F023         	movff	send_msg@length,send_msg@tlength
  5837  000DD0  6A24               	clrf	send_msg@tlength+1,c
  5838                           
  5839                           ;messages.c: 39: slot = qptr->cur_write_ind;
  5840  000DD2  EE20 F034          	lfsr	2,52
  5841  000DD6  501C               	movf	send_msg@qptr,w,c
  5842  000DD8  26D9               	addwf	fsr2l,f,c
  5843  000DDA  501D               	movf	send_msg@qptr+1,w,c
  5844  000DDC  22DA               	addwfc	fsr2h,f,c
  5845  000DDE  50DF               	movf	indf2,w,c
  5846  000DE0  6E25               	movwf	send_msg@slot,c
  5847                           
  5848                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  5849  000DE2  5025               	movf	send_msg@slot,w,c
  5850  000DE4  0D0D               	mullw	13
  5851  000DE6  50F3               	movf	prodl,w,c
  5852  000DE8  241C               	addwf	send_msg@qptr,w,c
  5853  000DEA  6E26               	movwf	send_msg@qmsg,c
  5854  000DEC  50F4               	movf	prodh,w,c
  5855  000DEE  201D               	addwfc	send_msg@qptr+1,w,c
  5856  000DF0  6E27               	movwf	send_msg@qmsg+1,c
  5857                           
  5858                           ;messages.c: 42: if (qmsg->full != 0) {
  5859  000DF2  C026  FFD9         	movff	send_msg@qmsg,fsr2l
  5860  000DF6  C027  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5861  000DFA  50DF               	movf	indf2,w,c
  5862  000DFC  B4D8               	btfsc	status,2,c
  5863  000DFE  D002               	goto	i2l2634
  5864                           
  5865                           ;messages.c: 43: return (-1);
  5866  000E00  0EFF               	movlw	255
  5867  000E02  0012               	return	
  5868  000E04                     i2l2634:
  5869                           
  5870                           ;messages.c: 44: }
  5871                           ;messages.c: 47: qmsg->length = length;
  5872  000E04  EE20 F001          	lfsr	2,1
  5873  000E08  5026               	movf	send_msg@qmsg,w,c
  5874  000E0A  26D9               	addwf	fsr2l,f,c
  5875  000E0C  5027               	movf	send_msg@qmsg+1,w,c
  5876  000E0E  22DA               	addwfc	fsr2h,f,c
  5877  000E10  C01E  FFDF         	movff	send_msg@length,indf2
  5878                           
  5879                           ;messages.c: 48: qmsg->msgtype = msgtype;
  5880  000E14  EE20 F002          	lfsr	2,2
  5881  000E18  5026               	movf	send_msg@qmsg,w,c
  5882  000E1A  26D9               	addwf	fsr2l,f,c
  5883  000E1C  5027               	movf	send_msg@qmsg+1,w,c
  5884  000E1E  22DA               	addwfc	fsr2h,f,c
  5885  000E20  C01F  FFDF         	movff	send_msg@msgtype,indf2
  5886                           
  5887                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  5888  000E24  0E03               	movlw	3
  5889  000E26  2426               	addwf	send_msg@qmsg,w,c
  5890  000E28  6E12               	movwf	i2memcpy@d1,c
  5891  000E2A  0E00               	movlw	0
  5892  000E2C  2027               	addwfc	send_msg@qmsg+1,w,c
  5893  000E2E  6E13               	movwf	i2memcpy@d1+1,c
  5894  000E30  C021  F015         	movff	send_msg@data+1,i2memcpy@s1+1
  5895  000E34  C020  F014         	movff	send_msg@data,i2memcpy@s1
  5896  000E38  C023  F016         	movff	send_msg@tlength,i2memcpy@n
  5897  000E3C  C024  F017         	movff	send_msg@tlength+1,i2memcpy@n+1
  5898  000E40  EC1B  F00B         	call	i2_memcpy	;wreg free
  5899                           
  5900                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5901  000E44  EE20 F034          	lfsr	2,52
  5902  000E48  501C               	movf	send_msg@qptr,w,c
  5903  000E4A  26D9               	addwf	fsr2l,f,c
  5904  000E4C  501D               	movf	send_msg@qptr+1,w,c
  5905  000E4E  22DA               	addwfc	fsr2h,f,c
  5906  000E50  EE10 F034          	lfsr	1,52
  5907  000E54  501C               	movf	send_msg@qptr,w,c
  5908  000E56  26E1               	addwf	fsr1l,f,c
  5909  000E58  501D               	movf	send_msg@qptr+1,w,c
  5910  000E5A  22E2               	addwfc	fsr1h,f,c
  5911  000E5C  50E7               	movf	indf1,w,c
  5912  000E5E  6E22               	movwf	??_send_msg& (0+255),c
  5913  000E60  2822               	incf	??_send_msg,w,c
  5914  000E62  0B03               	andlw	3
  5915  000E64  6EDF               	movwf	indf2,c
  5916                           
  5917                           ;messages.c: 60: qmsg->full = 1;
  5918  000E66  C026  FFD9         	movff	send_msg@qmsg,fsr2l
  5919  000E6A  C027  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5920  000E6E  0E01               	movlw	1
  5921  000E70  6EDF               	movwf	indf2,c
  5922                           
  5923                           ;messages.c: 61: return (1);
  5924  000E72  0E01               	movlw	1
  5925  000E74  0012               	return	
  5926  000E76                     __end_of_send_msg:
  5927                           	opt stack 0
  5928                           pclatu	equ	0xFFB
  5929                           pclath	equ	0xFFA
  5930                           tblptru	equ	0xFF8
  5931                           tblptrh	equ	0xFF7
  5932                           tblptrl	equ	0xFF6
  5933                           tablat	equ	0xFF5
  5934                           prodh	equ	0xFF4
  5935                           prodl	equ	0xFF3
  5936                           intcon	equ	0xFF2
  5937                           postinc0	equ	0xFEE
  5938                           fsr0h	equ	0xFEA
  5939                           fsr0l	equ	0xFE9
  5940                           wreg	equ	0xFE8
  5941                           indf1	equ	0xFE7
  5942                           postdec1	equ	0xFE5
  5943                           fsr1h	equ	0xFE2
  5944                           fsr1l	equ	0xFE1
  5945                           bsr	equ	0xFE0
  5946                           indf2	equ	0xFDF
  5947                           fsr2h	equ	0xFDA
  5948                           fsr2l	equ	0xFD9
  5949                           status	equ	0xFD8
  5950                           
  5951 ;; *************** function i2_memcpy *****************
  5952 ;; Defined at:
  5953 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  d1              2   17[COMRAM] PTR void 
  5956 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5957 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5958 ;;		 -> main@msgbuffer(11), 
  5959 ;;  s1              2   19[COMRAM] PTR const void 
  5960 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5961 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5962 ;;		 -> reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5963 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5964 ;;  n               2   21[COMRAM] unsigned int 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  memcpy          2   25[COMRAM] PTR const unsigned char 
  5967 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5968 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5969 ;;		 -> reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5970 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5971 ;;  memcpy          2   23[COMRAM] PTR unsigned char 
  5972 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5973 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5974 ;;		 -> main@msgbuffer(11), 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2   17[COMRAM] PTR void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5984 ;;      Params:         6       0       0       0       0
  5985 ;;      Locals:         4       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0
  5987 ;;      Totals:        10       0       0       0       0
  5988 ;;Total ram usage:       10 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_send_msg
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text33
  5998  001636                     __ptext33:
  5999                           	opt stack 0
  6000  001636                     i2_memcpy:
  6001                           	opt stack 18
  6002                           
  6003                           ;incstack = 0
  6004  001636  C015  F01B         	movff	i2memcpy@s1+1,i2memcpy@s+1
  6005  00163A  C014  F01A         	movff	i2memcpy@s1,i2memcpy@s
  6006  00163E  C013  F019         	movff	i2memcpy@d1+1,i2memcpy@d+1
  6007  001642  C012  F018         	movff	i2memcpy@d1,i2memcpy@d
  6008  001646  D00E               	goto	i2l2960
  6009  001648                     i2l2954:
  6010  001648  C01A  FFD9         	movff	i2memcpy@s,fsr2l
  6011  00164C  C01B  FFDA         	movff	i2memcpy@s+1,fsr2h
  6012  001650  C018  FFE1         	movff	i2memcpy@d,fsr1l
  6013  001654  C019  FFE2         	movff	i2memcpy@d+1,fsr1h
  6014  001658  CFDF FFE7          	movff	indf2,indf1
  6015  00165C  4A1A               	infsnz	i2memcpy@s,f,c
  6016  00165E  2A1B               	incf	i2memcpy@s+1,f,c
  6017  001660  4A18               	infsnz	i2memcpy@d,f,c
  6018  001662  2A19               	incf	i2memcpy@d+1,f,c
  6019  001664                     i2l2960:
  6020  001664  0616               	decf	i2memcpy@n,f,c
  6021  001666  A0D8               	btfss	status,0,c
  6022  001668  0617               	decf	i2memcpy@n+1,f,c
  6023  00166A  2816               	incf	i2memcpy@n& (0+255),w,c
  6024  00166C  B4D8               	btfsc	status,2,c
  6025  00166E  2817               	incf	(i2memcpy@n+1)& (0+255),w,c
  6026  001670  B4D8               	btfsc	status,2,c
  6027                           
  6028                           ;	Return value of i2_memcpy is never used
  6029  001672  0012               	return	
  6030  001674  D7E9               	goto	i2l2954
  6031  001676                     __end_ofi2_memcpy:
  6032                           	opt stack 0
  6033                           pclatu	equ	0xFFB
  6034                           pclath	equ	0xFFA
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           intcon	equ	0xFF2
  6042                           postinc0	equ	0xFEE
  6043                           fsr0h	equ	0xFEA
  6044                           fsr0l	equ	0xFE9
  6045                           wreg	equ	0xFE8
  6046                           indf1	equ	0xFE7
  6047                           postdec1	equ	0xFE5
  6048                           fsr1h	equ	0xFE2
  6049                           fsr1l	equ	0xFE1
  6050                           bsr	equ	0xFE0
  6051                           indf2	equ	0xFDF
  6052                           fsr2h	equ	0xFDA
  6053                           fsr2l	equ	0xFD9
  6054                           status	equ	0xFD8
  6055                           
  6056 ;; *************** function _sendRequestedData *****************
  6057 ;; Defined at:
  6058 ;;		line 29 in file "../src/sensorcomm.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;		None
  6063 ;; Return value:  Size  Location     Type
  6064 ;;		None               void
  6065 ;; Registers used:
  6066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6072 ;;      Params:         0       0       0       0       0
  6073 ;;      Locals:         0       0       0       0       0
  6074 ;;      Temps:          0       0       0       0       0
  6075 ;;      Totals:         0       0       0       0       0
  6076 ;;Total ram usage:        0 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    3
  6079 ;; This function calls:
  6080 ;;		_readNum
  6081 ;;		_sendADdata
  6082 ;;		i2_resetADacc
  6083 ;; This function is called by:
  6084 ;;		_i2c_int_handler
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text34
  6089  0016EE                     __ptext34:
  6090                           	opt stack 0
  6091  0016EE                     _sendRequestedData:
  6092                           	opt stack 19
  6093                           
  6094                           ;sensorcomm.c: 30: readNum(1);
  6095                           
  6096                           ;incstack = 0
  6097  0016EE  0E00               	movlw	0
  6098  0016F0  6E14               	movwf	readNum@num+1,c
  6099  0016F2  0E01               	movlw	1
  6100  0016F4  6E13               	movwf	readNum@num,c
  6101  0016F6  ECFA  F009         	call	_readNum	;wreg free
  6102                           
  6103                           ;sensorcomm.c: 31: if(BrainMsgRecv.flags == 1){
  6104  0016FA  0454               	decf	_BrainMsgRecv,w,c
  6105  0016FC  A4D8               	btfss	status,2,c
  6106  0016FE  0012               	return	
  6107                           
  6108                           ;sensorcomm.c: 32: readNum(2);
  6109  001700  0E00               	movlw	0
  6110  001702  6E14               	movwf	readNum@num+1,c
  6111  001704  0E02               	movlw	2
  6112  001706  6E13               	movwf	readNum@num,c
  6113  001708  ECFA  F009         	call	_readNum	;wreg free
  6114                           
  6115                           ;sensorcomm.c: 33: if(BrainMsgRecv.sensorMask == 0){
  6116  00170C  6655               	tstfsz	_BrainMsgRecv+1,c
  6117  00170E  0012               	return	
  6118                           
  6119                           ;sensorcomm.c: 34: readNum(4);
  6120  001710  0E00               	movlw	0
  6121  001712  6E14               	movwf	readNum@num+1,c
  6122  001714  0E04               	movlw	4
  6123  001716  6E13               	movwf	readNum@num,c
  6124  001718  ECFA  F009         	call	_readNum	;wreg free
  6125                           
  6126                           ;sensorcomm.c: 35: sendADdata();
  6127  00171C  ECCE  F009         	call	_sendADdata	;wreg free
  6128                           
  6129                           ;sensorcomm.c: 36: resetADacc();
  6130  001720  EC23  F00A         	call	i2_resetADacc	;wreg free
  6131  001724  0012               	return	
  6132  001726                     __end_of_sendRequestedData:
  6133                           	opt stack 0
  6134                           pclatu	equ	0xFFB
  6135                           pclath	equ	0xFFA
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           intcon	equ	0xFF2
  6143                           postinc0	equ	0xFEE
  6144                           fsr0h	equ	0xFEA
  6145                           fsr0l	equ	0xFE9
  6146                           wreg	equ	0xFE8
  6147                           indf1	equ	0xFE7
  6148                           postdec1	equ	0xFE5
  6149                           fsr1h	equ	0xFE2
  6150                           fsr1l	equ	0xFE1
  6151                           bsr	equ	0xFE0
  6152                           indf2	equ	0xFDF
  6153                           fsr2h	equ	0xFDA
  6154                           fsr2l	equ	0xFD9
  6155                           status	equ	0xFD8
  6156                           
  6157 ;; *************** function i2_resetADacc *****************
  6158 ;; Defined at:
  6159 ;;		line 79 in file "../src/sensorcomm.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  resetADacc      2   20[COMRAM] int 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;		None               void
  6166 ;; Registers used:
  6167 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6173 ;;      Params:         0       0       0       0       0
  6174 ;;      Locals:         2       0       0       0       0
  6175 ;;      Temps:          3       0       0       0       0
  6176 ;;      Totals:         5       0       0       0       0
  6177 ;;Total ram usage:        5 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; This function calls:
  6180 ;;		Nothing
  6181 ;; This function is called by:
  6182 ;;		_sendRequestedData
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text35
  6187  001446                     __ptext35:
  6188                           	opt stack 0
  6189  001446                     i2_resetADacc:
  6190                           	opt stack 21
  6191                           
  6192                           ;sensorcomm.c: 80: int i = 0;
  6193                           
  6194                           ;incstack = 0
  6195  001446  0E00               	movlw	0
  6196  001448  6E16               	movwf	i2resetADacc@i+1,c
  6197  00144A  0E00               	movlw	0
  6198  00144C  6E15               	movwf	i2resetADacc@i,c
  6199  00144E  D00C               	goto	i2l2948
  6200  001450                     i2l2944:
  6201                           
  6202                           ;sensorcomm.c: 82: ADacc.data[i].data = 0;
  6203  001450  0100               	movlb	0	; () banked
  6204  001452  0EE7               	movlw	low (_ADacc+1)
  6205  001454  2415               	addwf	i2resetADacc@i,w,c
  6206  001456  6ED9               	movwf	fsr2l,c
  6207  001458  0100               	movlb	0	; () banked
  6208  00145A  0E00               	movlw	high (_ADacc+1)
  6209  00145C  2016               	addwfc	i2resetADacc@i+1,w,c
  6210  00145E  6EDA               	movwf	fsr2h,c
  6211  001460  0E00               	movlw	0
  6212  001462  6EDF               	movwf	indf2,c
  6213                           
  6214                           ; BSR set to: 0
  6215  001464  4A15               	infsnz	i2resetADacc@i,f,c
  6216  001466  2A16               	incf	i2resetADacc@i+1,f,c
  6217  001468                     i2l2948:
  6218  001468  0100               	movlb	0	; () banked
  6219  00146A  0100               	movlb	0	; () banked
  6220  00146C  51E6               	movf	_ADacc& (0+255),w,b
  6221  00146E  6E12               	movwf	??i2_resetADacc& (0+255),c
  6222  001470  6A13               	clrf	(??i2_resetADacc+1)& (0+255),c
  6223  001472  5016               	movf	i2resetADacc@i+1,w,c
  6224  001474  0A80               	xorlw	128
  6225  001476  6E14               	movwf	(??i2_resetADacc+2)& (0+255),c
  6226  001478  5012               	movf	??i2_resetADacc,w,c
  6227  00147A  5C15               	subwf	i2resetADacc@i,w,c
  6228  00147C  5013               	movf	??i2_resetADacc+1,w,c
  6229  00147E  0A80               	xorlw	128
  6230  001480  5814               	subwfb	(??i2_resetADacc+2)& (0+255),w,c
  6231  001482  A0D8               	btfss	status,0,c
  6232  001484  D7E5               	goto	i2l2944
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;sensorcomm.c: 83: }
  6236                           ;sensorcomm.c: 84: ADacc.len = 0;
  6237                           
  6238                           ; BSR set to: 0
  6239  001486  6E12               	movwf	??i2_resetADacc& (0+255),c
  6240  001488  0E00               	movlw	0
  6241  00148A  0100               	movlb	0	; () banked
  6242  00148C  0100               	movlb	0	; () banked
  6243  00148E  6FE6               	movwf	_ADacc& (0+255),b
  6244  001490  5012               	movf	??i2_resetADacc& (0+255),w,c
  6245                           
  6246                           ; BSR set to: 0
  6247  001492  0012               	return	
  6248  001494                     __end_ofi2_resetADacc:
  6249                           	opt stack 0
  6250                           pclatu	equ	0xFFB
  6251                           pclath	equ	0xFFA
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           prodh	equ	0xFF4
  6257                           prodl	equ	0xFF3
  6258                           intcon	equ	0xFF2
  6259                           postinc0	equ	0xFEE
  6260                           fsr0h	equ	0xFEA
  6261                           fsr0l	equ	0xFE9
  6262                           wreg	equ	0xFE8
  6263                           indf1	equ	0xFE7
  6264                           postdec1	equ	0xFE5
  6265                           fsr1h	equ	0xFE2
  6266                           fsr1l	equ	0xFE1
  6267                           bsr	equ	0xFE0
  6268                           indf2	equ	0xFDF
  6269                           fsr2h	equ	0xFDA
  6270                           fsr2l	equ	0xFD9
  6271                           status	equ	0xFD8
  6272                           
  6273 ;; *************** function _sendADdata *****************
  6274 ;; Defined at:
  6275 ;;		line 41 in file "../src/sensorcomm.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;		None
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  outBuff       100    0[BANK0 ] unsigned char [100]
  6280 ;;  bytes_packed    2  100[BANK0 ] int 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;		None               void
  6283 ;; Registers used:
  6284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6290 ;;      Params:         0       0       0       0       0
  6291 ;;      Locals:         0     102       0       0       0
  6292 ;;      Temps:          0       0       0       0       0
  6293 ;;      Totals:         0     102       0       0       0
  6294 ;;Total ram usage:      102 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    2
  6297 ;; This function calls:
  6298 ;;		_packADData
  6299 ;;		i2_start_i2c_slave_reply
  6300 ;; This function is called by:
  6301 ;;		_sendRequestedData
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text36
  6306  00139C                     __ptext36:
  6307                           	opt stack 0
  6308  00139C                     _sendADdata:
  6309                           	opt stack 19
  6310                           
  6311                           ;sensorcomm.c: 43: char outBuff[100];
  6312                           ;sensorcomm.c: 44: int bytes_packed = packADData( ADacc.data, ADacc.len, outBuff, 100);
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;incstack = 0
  6316  00139C  0100               	movlb	0	; () banked
  6317  00139E  0E00               	movlw	high (_ADacc+1)
  6318  0013A0  6E24               	movwf	packADData@data+1,c
  6319  0013A2  0100               	movlb	0	; () banked
  6320  0013A4  0EE7               	movlw	low (_ADacc+1)
  6321  0013A6  6E23               	movwf	packADData@data,c
  6322  0013A8  0100               	movlb	0	; () banked
  6323  0013AA  C0E6  F025         	movff	_ADacc,packADData@len
  6324  0013AE  6A26               	clrf	packADData@len+1,c
  6325  0013B0  0100               	movlb	0	; () banked
  6326  0013B2  0E00               	movlw	high sendADdata@outBuff
  6327  0013B4  6E28               	movwf	packADData@out+1,c
  6328  0013B6  0100               	movlb	0	; () banked
  6329  0013B8  0E80               	movlw	low sendADdata@outBuff
  6330  0013BA  6E27               	movwf	packADData@out,c
  6331  0013BC  0E00               	movlw	0
  6332  0013BE  6E2A               	movwf	packADData@maxout+1,c
  6333  0013C0  0E64               	movlw	100
  6334  0013C2  6E29               	movwf	packADData@maxout,c
  6335  0013C4  ECAE  F00B         	call	_packADData	;wreg free
  6336  0013C8  C023  F0E4         	movff	?_packADData,sendADdata@bytes_packed
  6337  0013CC  C024  F0E5         	movff	?_packADData+1,sendADdata@bytes_packed+1
  6338                           
  6339                           ;sensorcomm.c: 45: if(bytes_packed == 0){
  6340  0013D0  0100               	movlb	0	; () banked
  6341  0013D2  0100               	movlb	0	; () banked
  6342  0013D4  51E5               	movf	(sendADdata@bytes_packed+1)& (0+255),w,b
  6343  0013D6  11E4               	iorwf	sendADdata@bytes_packed& (0+255),w,b
  6344  0013D8  B4D8               	btfsc	status,2,c
  6345  0013DA  0012               	return	
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;sensorcomm.c: 48: else{
  6349                           ;sensorcomm.c: 51: start_i2c_slave_reply(bytes_packed, outBuff);
  6350                           
  6351                           ; BSR set to: 0
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;sensorcomm.c: 47: }
  6355  0013DC  0100               	movlb	0	; () banked
  6356  0013DE  0E00               	movlw	high sendADdata@outBuff
  6357  0013E0  6E13               	movwf	i2start_i2c_slave_reply@msg+1,c
  6358  0013E2  0100               	movlb	0	; () banked
  6359  0013E4  0E80               	movlw	low sendADdata@outBuff
  6360  0013E6  6E12               	movwf	i2start_i2c_slave_reply@msg,c
  6361  0013E8  0100               	movlb	0	; () banked
  6362  0013EA  0100               	movlb	0	; () banked
  6363  0013EC  51E4               	movf	sendADdata@bytes_packed& (0+255),w,b
  6364  0013EE  ECB0  F005         	call	i2_start_i2c_slave_reply
  6365  0013F2  0012               	return	
  6366  0013F4                     __end_of_sendADdata:
  6367                           	opt stack 0
  6368                           pclatu	equ	0xFFB
  6369                           pclath	equ	0xFFA
  6370                           tblptru	equ	0xFF8
  6371                           tblptrh	equ	0xFF7
  6372                           tblptrl	equ	0xFF6
  6373                           tablat	equ	0xFF5
  6374                           prodh	equ	0xFF4
  6375                           prodl	equ	0xFF3
  6376                           intcon	equ	0xFF2
  6377                           postinc0	equ	0xFEE
  6378                           fsr0h	equ	0xFEA
  6379                           fsr0l	equ	0xFE9
  6380                           wreg	equ	0xFE8
  6381                           indf1	equ	0xFE7
  6382                           postdec1	equ	0xFE5
  6383                           fsr1h	equ	0xFE2
  6384                           fsr1l	equ	0xFE1
  6385                           bsr	equ	0xFE0
  6386                           indf2	equ	0xFDF
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function i2_start_i2c_slave_reply *****************
  6392 ;; Defined at:
  6393 ;;		line 60 in file "../src/my_i2c.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  length          1    wreg     unsigned char 
  6396 ;;  msg             2   17[COMRAM] PTR unsigned char 
  6397 ;;		 -> sendADdata@outBuff(100), main@msgbuffer(11), 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  length          1   21[COMRAM] unsigned char 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;		None               void
  6402 ;; Registers used:
  6403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6409 ;;      Params:         2       0       0       0       0
  6410 ;;      Locals:         1       0       0       0       0
  6411 ;;      Temps:          2       0       0       0       0
  6412 ;;      Totals:         5       0       0       0       0
  6413 ;;Total ram usage:        5 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_sendADdata
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text37
  6423  000B60                     __ptext37:
  6424                           	opt stack 0
  6425  000B60                     i2_start_i2c_slave_reply:
  6426                           	opt stack 20
  6427                           
  6428                           ;incstack = 0
  6429                           ;i2start_i2c_slave_reply@length stored from wreg
  6430  000B60  CFE8 F016          	movff	wreg,i2start_i2c_slave_reply@length
  6431                           
  6432                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  6433  000B64  0101               	movlb	1	; () banked
  6434  000B66  EE20 F019          	lfsr	2,25
  6435  000B6A  0101               	movlb	1	; () banked
  6436  000B6C  5100               	movf	_ic_ptr& (0+255),w,b
  6437  000B6E  26D9               	addwf	fsr2l,f,c
  6438  000B70  0101               	movlb	1	; () banked
  6439  000B72  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6440  000B74  22DA               	addwfc	fsr2h,f,c
  6441  000B76  0E00               	movlw	0
  6442  000B78  6EDF               	movwf	indf2,c
  6443  000B7A  D03A               	goto	i2l2936
  6444  000B7C                     i2l2932:
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  6448  000B7C  0101               	movlb	1	; () banked
  6449  000B7E  EE20 F019          	lfsr	2,25
  6450  000B82  0101               	movlb	1	; () banked
  6451  000B84  5100               	movf	_ic_ptr& (0+255),w,b
  6452  000B86  26D9               	addwf	fsr2l,f,c
  6453  000B88  0101               	movlb	1	; () banked
  6454  000B8A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6455  000B8C  22DA               	addwfc	fsr2h,f,c
  6456  000B8E  50DF               	movf	indf2,w,c
  6457  000B90  6E14               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  6458  000B92  5014               	movf	??i2_start_i2c_slave_reply,w,c
  6459  000B94  0D01               	mullw	1
  6460  000B96  50F3               	movf	prodl,w,c
  6461  000B98  2412               	addwf	i2start_i2c_slave_reply@msg,w,c
  6462  000B9A  6ED9               	movwf	fsr2l,c
  6463  000B9C  50F4               	movf	prodh,w,c
  6464  000B9E  2013               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  6465  000BA0  6EDA               	movwf	fsr2h,c
  6466  000BA2  0101               	movlb	1	; () banked
  6467  000BA4  EE10 F019          	lfsr	1,25
  6468  000BA8  0101               	movlb	1	; () banked
  6469  000BAA  5100               	movf	_ic_ptr& (0+255),w,b
  6470  000BAC  26E1               	addwf	fsr1l,f,c
  6471  000BAE  0101               	movlb	1	; () banked
  6472  000BB0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6473  000BB2  22E2               	addwfc	fsr1h,f,c
  6474  000BB4  50E7               	movf	indf1,w,c
  6475  000BB6  6E15               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  6476  000BB8  5015               	movf	??i2_start_i2c_slave_reply+1,w,c
  6477  000BBA  0D01               	mullw	1
  6478  000BBC  0E0F               	movlw	15
  6479  000BBE  26F3               	addwf	prodl,f,c
  6480  000BC0  0E00               	movlw	0
  6481  000BC2  22F4               	addwfc	prodh,f,c
  6482  000BC4  50F3               	movf	prodl,w,c
  6483  000BC6  0101               	movlb	1	; () banked
  6484  000BC8  0101               	movlb	1	; () banked
  6485  000BCA  2500               	addwf	_ic_ptr& (0+255),w,b
  6486  000BCC  6EE1               	movwf	fsr1l,c
  6487  000BCE  50F4               	movf	prodh,w,c
  6488  000BD0  0101               	movlb	1	; () banked
  6489  000BD2  0101               	movlb	1	; () banked
  6490  000BD4  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6491  000BD6  6EE2               	movwf	fsr1h,c
  6492  000BD8  CFDF FFE7          	movff	indf2,indf1
  6493                           
  6494                           ; BSR set to: 1
  6495  000BDC  0101               	movlb	1	; () banked
  6496  000BDE  EE20 F019          	lfsr	2,25
  6497  000BE2  0101               	movlb	1	; () banked
  6498  000BE4  5100               	movf	_ic_ptr& (0+255),w,b
  6499  000BE6  26D9               	addwf	fsr2l,f,c
  6500  000BE8  0101               	movlb	1	; () banked
  6501  000BEA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6502  000BEC  22DA               	addwfc	fsr2h,f,c
  6503  000BEE  2ADF               	incf	indf2,f,c
  6504  000BF0                     i2l2936:
  6505                           
  6506                           ; BSR set to: 1
  6507  000BF0  0101               	movlb	1	; () banked
  6508  000BF2  EE20 F019          	lfsr	2,25
  6509  000BF6  0101               	movlb	1	; () banked
  6510  000BF8  5100               	movf	_ic_ptr& (0+255),w,b
  6511  000BFA  26D9               	addwf	fsr2l,f,c
  6512  000BFC  0101               	movlb	1	; () banked
  6513  000BFE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6514  000C00  22DA               	addwfc	fsr2h,f,c
  6515  000C02  50DF               	movf	indf2,w,c
  6516  000C04  6E14               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  6517  000C06  5016               	movf	i2start_i2c_slave_reply@length,w,c
  6518  000C08  5C14               	subwf	??i2_start_i2c_slave_reply,w,c
  6519  000C0A  A0D8               	btfss	status,0,c
  6520  000C0C  D7B7               	goto	i2l2932
  6521                           
  6522                           ; BSR set to: 1
  6523                           ;my_i2c.c: 64: }
  6524                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  6525                           
  6526                           ; BSR set to: 1
  6527  000C0E  0101               	movlb	1	; () banked
  6528  000C10  EE20 F019          	lfsr	2,25
  6529  000C14  0101               	movlb	1	; () banked
  6530  000C16  5100               	movf	_ic_ptr& (0+255),w,b
  6531  000C18  26D9               	addwf	fsr2l,f,c
  6532  000C1A  0101               	movlb	1	; () banked
  6533  000C1C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6534  000C1E  22DA               	addwfc	fsr2h,f,c
  6535  000C20  C016  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  6536                           
  6537                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  6538  000C24  0101               	movlb	1	; () banked
  6539  000C26  EE20 F01A          	lfsr	2,26
  6540  000C2A  0101               	movlb	1	; () banked
  6541  000C2C  5100               	movf	_ic_ptr& (0+255),w,b
  6542  000C2E  26D9               	addwf	fsr2l,f,c
  6543  000C30  0101               	movlb	1	; () banked
  6544  000C32  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6545  000C34  22DA               	addwfc	fsr2h,f,c
  6546  000C36  0E01               	movlw	1
  6547  000C38  6EDF               	movwf	indf2,c
  6548                           
  6549                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  6550  000C3A  0101               	movlb	1	; () banked
  6551  000C3C  EE20 F00F          	lfsr	2,15
  6552  000C40  0101               	movlb	1	; () banked
  6553  000C42  5100               	movf	_ic_ptr& (0+255),w,b
  6554  000C44  26D9               	addwf	fsr2l,f,c
  6555  000C46  0101               	movlb	1	; () banked
  6556  000C48  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6557  000C4A  22DA               	addwfc	fsr2h,f,c
  6558  000C4C  50DF               	movf	indf2,w,c
  6559  000C4E  6EC9               	movwf	4041,c	;volatile
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  6563  000C50  88C6               	bsf	4038,4,c	;volatile
  6564                           
  6565                           ; BSR set to: 1
  6566  000C52  0012               	return	
  6567  000C54                     __end_ofi2_start_i2c_slave_reply:
  6568                           	opt stack 0
  6569                           pclatu	equ	0xFFB
  6570                           pclath	equ	0xFFA
  6571                           tblptru	equ	0xFF8
  6572                           tblptrh	equ	0xFF7
  6573                           tblptrl	equ	0xFF6
  6574                           tablat	equ	0xFF5
  6575                           prodh	equ	0xFF4
  6576                           prodl	equ	0xFF3
  6577                           intcon	equ	0xFF2
  6578                           postinc0	equ	0xFEE
  6579                           fsr0h	equ	0xFEA
  6580                           fsr0l	equ	0xFE9
  6581                           wreg	equ	0xFE8
  6582                           indf1	equ	0xFE7
  6583                           postdec1	equ	0xFE5
  6584                           fsr1h	equ	0xFE2
  6585                           fsr1l	equ	0xFE1
  6586                           bsr	equ	0xFE0
  6587                           indf2	equ	0xFDF
  6588                           fsr2h	equ	0xFDA
  6589                           fsr2l	equ	0xFD9
  6590                           status	equ	0xFD8
  6591                           
  6592 ;; *************** function _packADData *****************
  6593 ;; Defined at:
  6594 ;;		line 38 in file "../../../../common/communication/brain_rover.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  data            2   34[COMRAM] PTR struct .
  6597 ;;		 -> ADacc(11), 
  6598 ;;  len             2   36[COMRAM] int 
  6599 ;;  out             2   38[COMRAM] PTR unsigned char 
  6600 ;;		 -> sendADdata@outBuff(100), 
  6601 ;;  maxout          2   40[COMRAM] int 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  2   34[COMRAM] int 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6613 ;;      Params:         8       0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0
  6616 ;;      Totals:         8       0       0       0       0
  6617 ;;Total ram usage:        8 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    1
  6620 ;; This function calls:
  6621 ;;		_packReturnData
  6622 ;; This function is called by:
  6623 ;;		_sendADdata
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text38
  6628  00175C                     __ptext38:
  6629                           	opt stack 0
  6630  00175C                     _packADData:
  6631                           	opt stack 19
  6632                           
  6633                           ;brain_rover.c: 39: return packReturnData((char*)data, len*sizeof(sensorADData), (RoverM
      +                          sg*)out, maxout, 0);
  6634                           
  6635                           ; BSR set to: 1
  6636                           ;incstack = 0
  6637  00175C  C024  F013         	movff	packADData@data+1,packReturnData@data+1
  6638  001760  C023  F012         	movff	packADData@data,packReturnData@data
  6639  001764  C025  F014         	movff	packADData@len,packReturnData@payloadLen
  6640  001768  C026  F015         	movff	packADData@len+1,packReturnData@payloadLen+1
  6641  00176C  C028  F017         	movff	packADData@out+1,packReturnData@msg+1
  6642  001770  C027  F016         	movff	packADData@out,packReturnData@msg
  6643  001774  C029  F018         	movff	packADData@maxout,packReturnData@maxout
  6644  001778  C02A  F019         	movff	packADData@maxout+1,packReturnData@maxout+1
  6645  00177C  0E00               	movlw	0
  6646  00177E  6E1B               	movwf	packReturnData@sensorID+1,c
  6647  001780  0E00               	movlw	0
  6648  001782  6E1A               	movwf	packReturnData@sensorID,c
  6649  001784  EC3B  F007         	call	_packReturnData	;wreg free
  6650  001788  C012  F023         	movff	?_packReturnData,?_packADData
  6651  00178C  C013  F024         	movff	?_packReturnData+1,?_packADData+1
  6652  001790  0012               	return	
  6653  001792                     __end_of_packADData:
  6654                           	opt stack 0
  6655                           pclatu	equ	0xFFB
  6656                           pclath	equ	0xFFA
  6657                           tblptru	equ	0xFF8
  6658                           tblptrh	equ	0xFF7
  6659                           tblptrl	equ	0xFF6
  6660                           tablat	equ	0xFF5
  6661                           prodh	equ	0xFF4
  6662                           prodl	equ	0xFF3
  6663                           intcon	equ	0xFF2
  6664                           postinc0	equ	0xFEE
  6665                           fsr0h	equ	0xFEA
  6666                           fsr0l	equ	0xFE9
  6667                           wreg	equ	0xFE8
  6668                           indf1	equ	0xFE7
  6669                           postdec1	equ	0xFE5
  6670                           fsr1h	equ	0xFE2
  6671                           fsr1l	equ	0xFE1
  6672                           bsr	equ	0xFE0
  6673                           indf2	equ	0xFDF
  6674                           fsr2h	equ	0xFDA
  6675                           fsr2l	equ	0xFD9
  6676                           status	equ	0xFD8
  6677                           
  6678 ;; *************** function _packReturnData *****************
  6679 ;; Defined at:
  6680 ;;		line 17 in file "../../../../common/communication/brain_rover.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  data            2   17[COMRAM] PTR unsigned char 
  6683 ;;		 -> ADacc(11), 
  6684 ;;  payloadLen      2   19[COMRAM] int 
  6685 ;;  msg             2   21[COMRAM] PTR struct .
  6686 ;;		 -> sendADdata@outBuff(100), 
  6687 ;;  maxout          2   23[COMRAM] int 
  6688 ;;  sensorID        2   25[COMRAM] int 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  dest            2   32[COMRAM] PTR unsigned char 
  6691 ;;		 -> sendADdata@outBuff.payload(7), sendADdata@outBuff(100), 
  6692 ;;  end             2   30[COMRAM] PTR unsigned char 
  6693 ;;		 -> sendADdata@outBuff.payload(7), sendADdata@outBuff(100), 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  2   17[COMRAM] int 
  6696 ;; Registers used:
  6697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6703 ;;      Params:        10       0       0       0       0
  6704 ;;      Locals:         4       0       0       0       0
  6705 ;;      Temps:          3       0       0       0       0
  6706 ;;      Totals:        17       0       0       0       0
  6707 ;;Total ram usage:       17 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_packADData
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text39
  6717  000E76                     __ptext39:
  6718                           	opt stack 0
  6719  000E76                     _packReturnData:
  6720                           	opt stack 19
  6721                           
  6722                           ;brain_rover.c: 18: if (payloadLen + 3 >= maxout) {
  6723                           
  6724                           ;incstack = 0
  6725  000E76  0E03               	movlw	3
  6726  000E78  2414               	addwf	packReturnData@payloadLen,w,c
  6727  000E7A  6E1C               	movwf	??_packReturnData& (0+255),c
  6728  000E7C  0E00               	movlw	0
  6729  000E7E  2015               	addwfc	packReturnData@payloadLen+1,w,c
  6730  000E80  6E1D               	movwf	(??_packReturnData+1)& (0+255),c
  6731  000E82  501D               	movf	??_packReturnData+1,w,c
  6732  000E84  0A80               	xorlw	128
  6733  000E86  6E1E               	movwf	(??_packReturnData+2)& (0+255),c
  6734  000E88  5018               	movf	packReturnData@maxout,w,c
  6735  000E8A  5C1C               	subwf	??_packReturnData,w,c
  6736  000E8C  5019               	movf	packReturnData@maxout+1,w,c
  6737  000E8E  0A80               	xorlw	128
  6738  000E90  581E               	subwfb	(??_packReturnData+2)& (0+255),w,c
  6739  000E92  A0D8               	btfss	status,0,c
  6740  000E94  D005               	goto	i2l2822
  6741                           
  6742                           ;brain_rover.c: 19: return 0;
  6743  000E96  0E00               	movlw	0
  6744  000E98  6E13               	movwf	?_packReturnData+1,c
  6745  000E9A  0E00               	movlw	0
  6746  000E9C  6E12               	movwf	?_packReturnData,c
  6747  000E9E  0012               	return	
  6748  000EA0                     i2l2822:
  6749                           
  6750                           ;brain_rover.c: 20: }
  6751                           ;brain_rover.c: 22: msg->flags = 1;
  6752  000EA0  C016  FFD9         	movff	packReturnData@msg,fsr2l
  6753  000EA4  C017  FFDA         	movff	packReturnData@msg+1,fsr2h
  6754  000EA8  0E01               	movlw	1
  6755  000EAA  6EDF               	movwf	indf2,c
  6756                           
  6757                           ;brain_rover.c: 23: msg->sensorID = sensorID;
  6758  000EAC  EE20 F001          	lfsr	2,1
  6759  000EB0  5016               	movf	packReturnData@msg,w,c
  6760  000EB2  26D9               	addwf	fsr2l,f,c
  6761  000EB4  5017               	movf	packReturnData@msg+1,w,c
  6762  000EB6  22DA               	addwfc	fsr2h,f,c
  6763  000EB8  C01A  FFDF         	movff	packReturnData@sensorID,indf2
  6764                           
  6765                           ;brain_rover.c: 24: msg->payloadLen = payloadLen;
  6766  000EBC  EE20 F002          	lfsr	2,2
  6767  000EC0  5016               	movf	packReturnData@msg,w,c
  6768  000EC2  26D9               	addwf	fsr2l,f,c
  6769  000EC4  5017               	movf	packReturnData@msg+1,w,c
  6770  000EC6  22DA               	addwfc	fsr2h,f,c
  6771  000EC8  C014  FFDF         	movff	packReturnData@payloadLen,indf2
  6772                           
  6773                           ;brain_rover.c: 26: char* dest = msg->payload;
  6774  000ECC  0E03               	movlw	3
  6775  000ECE  2416               	addwf	packReturnData@msg,w,c
  6776  000ED0  6E21               	movwf	packReturnData@dest,c
  6777  000ED2  0E00               	movlw	0
  6778  000ED4  2017               	addwfc	packReturnData@msg+1,w,c
  6779  000ED6  6E22               	movwf	packReturnData@dest+1,c
  6780                           
  6781                           ;brain_rover.c: 27: char* end = dest + payloadLen;
  6782  000ED8  5014               	movf	packReturnData@payloadLen,w,c
  6783  000EDA  2421               	addwf	packReturnData@dest,w,c
  6784  000EDC  6E1F               	movwf	packReturnData@end,c
  6785  000EDE  5015               	movf	packReturnData@payloadLen+1,w,c
  6786  000EE0  2022               	addwfc	packReturnData@dest+1,w,c
  6787  000EE2  6E20               	movwf	packReturnData@end+1,c
  6788                           
  6789                           ;brain_rover.c: 28: while (dest != end) {
  6790  000EE4  D00E               	goto	i2l2838
  6791  000EE6                     i2l2832:
  6792                           
  6793                           ;brain_rover.c: 29: *dest++ = *data++;
  6794  000EE6  C012  FFD9         	movff	packReturnData@data,fsr2l
  6795  000EEA  C013  FFDA         	movff	packReturnData@data+1,fsr2h
  6796  000EEE  C021  FFE1         	movff	packReturnData@dest,fsr1l
  6797  000EF2  C022  FFE2         	movff	packReturnData@dest+1,fsr1h
  6798  000EF6  CFDF FFE7          	movff	indf2,indf1
  6799  000EFA  4A12               	infsnz	packReturnData@data,f,c
  6800  000EFC  2A13               	incf	packReturnData@data+1,f,c
  6801  000EFE  4A21               	infsnz	packReturnData@dest,f,c
  6802  000F00  2A22               	incf	packReturnData@dest+1,f,c
  6803  000F02                     i2l2838:
  6804  000F02  5020               	movf	packReturnData@end+1,w,c
  6805  000F04  1822               	xorwf	packReturnData@dest+1,w,c
  6806  000F06  E102               	bnz	i2u183_45
  6807  000F08  501F               	movf	packReturnData@end,w,c
  6808  000F0A  1821               	xorwf	packReturnData@dest,w,c
  6809  000F0C                     i2u183_45:
  6810  000F0C  A4D8               	btfss	status,2,c
  6811  000F0E  D7EB               	goto	i2l2832
  6812                           
  6813                           ;brain_rover.c: 30: }
  6814                           ;brain_rover.c: 31: return payloadLen + 3;
  6815  000F10  0E03               	movlw	3
  6816  000F12  2414               	addwf	packReturnData@payloadLen,w,c
  6817  000F14  6E12               	movwf	?_packReturnData,c
  6818  000F16  0E00               	movlw	0
  6819  000F18  2015               	addwfc	packReturnData@payloadLen+1,w,c
  6820  000F1A  6E13               	movwf	?_packReturnData+1,c
  6821  000F1C  0012               	return	
  6822  000F1E                     __end_of_packReturnData:
  6823                           	opt stack 0
  6824                           pclatu	equ	0xFFB
  6825                           pclath	equ	0xFFA
  6826                           tblptru	equ	0xFF8
  6827                           tblptrh	equ	0xFF7
  6828                           tblptrl	equ	0xFF6
  6829                           tablat	equ	0xFF5
  6830                           prodh	equ	0xFF4
  6831                           prodl	equ	0xFF3
  6832                           intcon	equ	0xFF2
  6833                           postinc0	equ	0xFEE
  6834                           fsr0h	equ	0xFEA
  6835                           fsr0l	equ	0xFE9
  6836                           wreg	equ	0xFE8
  6837                           indf1	equ	0xFE7
  6838                           postdec1	equ	0xFE5
  6839                           fsr1h	equ	0xFE2
  6840                           fsr1l	equ	0xFE1
  6841                           bsr	equ	0xFE0
  6842                           indf2	equ	0xFDF
  6843                           fsr2h	equ	0xFDA
  6844                           fsr2l	equ	0xFD9
  6845                           status	equ	0xFD8
  6846                           
  6847 ;; *************** function _readNum *****************
  6848 ;; Defined at:
  6849 ;;		line 69 in file "../src/debug.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  num             2   18[COMRAM] int 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;		None               void
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6863 ;;      Params:         2       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0
  6866 ;;      Totals:         2       0       0       0       0
  6867 ;;Total ram usage:        2 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    1
  6870 ;; This function calls:
  6871 ;;		_resetDBG
  6872 ;;		_setDBG
  6873 ;; This function is called by:
  6874 ;;		_sendRequestedData
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text40
  6879  0013F4                     __ptext40:
  6880                           	opt stack 0
  6881  0013F4                     _readNum:
  6882                           	opt stack 20
  6883                           
  6884                           ;debug.c: 70: if(num & 1){
  6885                           
  6886                           ;incstack = 0
  6887  0013F4  A013               	btfss	readNum@num,0,c
  6888  0013F6  D006               	goto	i2l2800
  6889                           
  6890                           ;debug.c: 71: setDBG(DBG1);
  6891  0013F8  0E00               	movlw	0
  6892  0013FA  EC3B  F00B         	call	_setDBG
  6893                           
  6894                           ;debug.c: 72: resetDBG(DBG1);
  6895  0013FE  0E00               	movlw	0
  6896  001400  EC59  F00B         	call	_resetDBG
  6897  001404                     i2l2800:
  6898                           
  6899                           ;debug.c: 73: }
  6900                           ;debug.c: 74: if(num & 2){
  6901  001404  A213               	btfss	readNum@num,1,c
  6902  001406  D006               	goto	i2l2804
  6903                           
  6904                           ;debug.c: 75: setDBG(DBG2);
  6905  001408  0E01               	movlw	1
  6906  00140A  EC3B  F00B         	call	_setDBG
  6907                           
  6908                           ;debug.c: 76: resetDBG(DBG2);
  6909  00140E  0E01               	movlw	1
  6910  001410  EC59  F00B         	call	_resetDBG
  6911  001414                     i2l2804:
  6912                           
  6913                           ;debug.c: 77: }
  6914                           ;debug.c: 78: if(num & 4){
  6915  001414  A413               	btfss	readNum@num,2,c
  6916  001416  D006               	goto	i2l2808
  6917                           
  6918                           ;debug.c: 79: setDBG(DBG3);
  6919  001418  0E02               	movlw	2
  6920  00141A  EC3B  F00B         	call	_setDBG
  6921                           
  6922                           ;debug.c: 80: resetDBG(DBG3);
  6923  00141E  0E02               	movlw	2
  6924  001420  EC59  F00B         	call	_resetDBG
  6925  001424                     i2l2808:
  6926                           
  6927                           ;debug.c: 81: }
  6928                           ;debug.c: 82: if(num & 8){
  6929  001424  A613               	btfss	readNum@num,3,c
  6930  001426  D006               	goto	i2l2812
  6931                           
  6932                           ;debug.c: 83: setDBG(DBG4);
  6933  001428  0E03               	movlw	3
  6934  00142A  EC3B  F00B         	call	_setDBG
  6935                           
  6936                           ;debug.c: 84: resetDBG(DBG4);
  6937  00142E  0E03               	movlw	3
  6938  001430  EC59  F00B         	call	_resetDBG
  6939  001434                     i2l2812:
  6940                           
  6941                           ;debug.c: 85: }
  6942                           ;debug.c: 86: if(num & 16){
  6943  001434  A813               	btfss	readNum@num,4,c
  6944  001436  0012               	return	
  6945                           
  6946                           ;debug.c: 87: setDBG(DBG5);
  6947  001438  0E04               	movlw	4
  6948  00143A  EC3B  F00B         	call	_setDBG
  6949                           
  6950                           ;debug.c: 88: resetDBG(DBG5);
  6951  00143E  0E04               	movlw	4
  6952  001440  EC59  F00B         	call	_resetDBG
  6953  001444  0012               	return	
  6954  001446                     __end_of_readNum:
  6955                           	opt stack 0
  6956                           pclatu	equ	0xFFB
  6957                           pclath	equ	0xFFA
  6958                           tblptru	equ	0xFF8
  6959                           tblptrh	equ	0xFF7
  6960                           tblptrl	equ	0xFF6
  6961                           tablat	equ	0xFF5
  6962                           prodh	equ	0xFF4
  6963                           prodl	equ	0xFF3
  6964                           intcon	equ	0xFF2
  6965                           postinc0	equ	0xFEE
  6966                           fsr0h	equ	0xFEA
  6967                           fsr0l	equ	0xFE9
  6968                           wreg	equ	0xFE8
  6969                           indf1	equ	0xFE7
  6970                           postdec1	equ	0xFE5
  6971                           fsr1h	equ	0xFE2
  6972                           fsr1l	equ	0xFE1
  6973                           bsr	equ	0xFE0
  6974                           indf2	equ	0xFDF
  6975                           fsr2h	equ	0xFDA
  6976                           fsr2l	equ	0xFD9
  6977                           status	equ	0xFD8
  6978                           
  6979 ;; *************** function _setDBG *****************
  6980 ;; Defined at:
  6981 ;;		line 4 in file "../src/debug.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  b               1    wreg     unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  b               1   17[COMRAM] unsigned char 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6995 ;;      Params:         0       0       0       0       0
  6996 ;;      Locals:         1       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0
  6998 ;;      Totals:         1       0       0       0       0
  6999 ;;Total ram usage:        1 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_i2c_int_handler
  7005 ;;		_readNum
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text41
  7010  001676                     __ptext41:
  7011                           	opt stack 0
  7012  001676                     _setDBG:
  7013                           	opt stack 22
  7014                           
  7015                           ;incstack = 0
  7016                           ;setDBG@b stored from wreg
  7017  001676  CFE8 F012          	movff	wreg,setDBG@b
  7018                           
  7019                           ;debug.c: 5: switch(b) {
  7020  00167A  D00A               	goto	i2l2740
  7021  00167C                     i2l364:
  7022                           
  7023                           ;debug.c: 7: LATBbits.LATB0 = 1;
  7024  00167C  808A               	bsf	3978,0,c	;volatile
  7025                           
  7026                           ;debug.c: 8: break;
  7027  00167E  0012               	return	
  7028  001680                     i2l366:
  7029                           
  7030                           ;debug.c: 10: LATBbits.LATB1 = 1;
  7031  001680  828A               	bsf	3978,1,c	;volatile
  7032                           
  7033                           ;debug.c: 11: break;
  7034  001682  0012               	return	
  7035  001684                     i2l367:
  7036                           
  7037                           ;debug.c: 13: LATBbits.LATB2 = 1;
  7038  001684  848A               	bsf	3978,2,c	;volatile
  7039                           
  7040                           ;debug.c: 14: break;
  7041  001686  0012               	return	
  7042  001688                     i2l368:
  7043                           
  7044                           ;debug.c: 16: LATBbits.LATB3 = 1;
  7045  001688  868A               	bsf	3978,3,c	;volatile
  7046                           
  7047                           ;debug.c: 17: break;
  7048  00168A  0012               	return	
  7049  00168C                     i2l369:
  7050                           
  7051                           ;debug.c: 19: LATBbits.LATB4 = 1;
  7052  00168C  888A               	bsf	3978,4,c	;volatile
  7053                           
  7054                           ;debug.c: 20: break;
  7055  00168E  0012               	return	
  7056  001690                     i2l2740:
  7057  001690  5012               	movf	setDBG@b,w,c
  7058                           
  7059                           ; Switch size 1, requested type "space"
  7060                           ; Number of cases is 5, Range of values is 0 to 4
  7061                           ; switch strategies available:
  7062                           ; Name         Instructions Cycles
  7063                           ; simple_byte           16     9 (average)
  7064                           ;	Chosen strategy is simple_byte
  7065  001692  0A00               	xorlw	0	; case 0
  7066  001694  B4D8               	btfsc	status,2,c
  7067  001696  D7F2               	goto	i2l364
  7068  001698  0A01               	xorlw	1	; case 1
  7069  00169A  B4D8               	btfsc	status,2,c
  7070  00169C  D7F1               	goto	i2l366
  7071  00169E  0A03               	xorlw	3	; case 2
  7072  0016A0  B4D8               	btfsc	status,2,c
  7073  0016A2  D7F0               	goto	i2l367
  7074  0016A4  0A01               	xorlw	1	; case 3
  7075  0016A6  B4D8               	btfsc	status,2,c
  7076  0016A8  D7EF               	goto	i2l368
  7077  0016AA  0A07               	xorlw	7	; case 4
  7078  0016AC  A4D8               	btfss	status,2,c
  7079  0016AE  0012               	return	
  7080  0016B0  D7ED               	goto	i2l369
  7081  0016B2                     __end_of_setDBG:
  7082                           	opt stack 0
  7083                           pclatu	equ	0xFFB
  7084                           pclath	equ	0xFFA
  7085                           tblptru	equ	0xFF8
  7086                           tblptrh	equ	0xFF7
  7087                           tblptrl	equ	0xFF6
  7088                           tablat	equ	0xFF5
  7089                           prodh	equ	0xFF4
  7090                           prodl	equ	0xFF3
  7091                           intcon	equ	0xFF2
  7092                           postinc0	equ	0xFEE
  7093                           fsr0h	equ	0xFEA
  7094                           fsr0l	equ	0xFE9
  7095                           wreg	equ	0xFE8
  7096                           indf1	equ	0xFE7
  7097                           postdec1	equ	0xFE5
  7098                           fsr1h	equ	0xFE2
  7099                           fsr1l	equ	0xFE1
  7100                           bsr	equ	0xFE0
  7101                           indf2	equ	0xFDF
  7102                           fsr2h	equ	0xFDA
  7103                           fsr2l	equ	0xFD9
  7104                           status	equ	0xFD8
  7105                           
  7106 ;; *************** function _resetDBG *****************
  7107 ;; Defined at:
  7108 ;;		line 26 in file "../src/debug.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  b               1    wreg     unsigned char 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  b               1   17[COMRAM] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;		None               void
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7122 ;;      Params:         0       0       0       0       0
  7123 ;;      Locals:         1       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0
  7125 ;;      Totals:         1       0       0       0       0
  7126 ;;Total ram usage:        1 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_i2c_int_handler
  7132 ;;		_readNum
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text42
  7137  0016B2                     __ptext42:
  7138                           	opt stack 0
  7139  0016B2                     _resetDBG:
  7140                           	opt stack 20
  7141                           
  7142                           ;incstack = 0
  7143                           ;resetDBG@b stored from wreg
  7144  0016B2  CFE8 F012          	movff	wreg,resetDBG@b
  7145                           
  7146                           ;debug.c: 27: switch(b) {
  7147  0016B6  D00A               	goto	i2l2746
  7148  0016B8                     i2l375:
  7149                           
  7150                           ;debug.c: 29: LATBbits.LATB0 = 0;
  7151  0016B8  908A               	bcf	3978,0,c	;volatile
  7152                           
  7153                           ;debug.c: 30: break;
  7154  0016BA  0012               	return	
  7155  0016BC                     i2l377:
  7156                           
  7157                           ;debug.c: 32: LATBbits.LATB1 = 0;
  7158  0016BC  928A               	bcf	3978,1,c	;volatile
  7159                           
  7160                           ;debug.c: 33: break;
  7161  0016BE  0012               	return	
  7162  0016C0                     i2l378:
  7163                           
  7164                           ;debug.c: 35: LATBbits.LATB2 = 0;
  7165  0016C0  948A               	bcf	3978,2,c	;volatile
  7166                           
  7167                           ;debug.c: 36: break;
  7168  0016C2  0012               	return	
  7169  0016C4                     i2l379:
  7170                           
  7171                           ;debug.c: 38: LATBbits.LATB3 = 0;
  7172  0016C4  968A               	bcf	3978,3,c	;volatile
  7173                           
  7174                           ;debug.c: 39: break;
  7175  0016C6  0012               	return	
  7176  0016C8                     i2l380:
  7177                           
  7178                           ;debug.c: 41: LATBbits.LATB4 = 0;
  7179  0016C8  988A               	bcf	3978,4,c	;volatile
  7180                           
  7181                           ;debug.c: 42: break;
  7182  0016CA  0012               	return	
  7183  0016CC                     i2l2746:
  7184  0016CC  5012               	movf	resetDBG@b,w,c
  7185                           
  7186                           ; Switch size 1, requested type "space"
  7187                           ; Number of cases is 5, Range of values is 0 to 4
  7188                           ; switch strategies available:
  7189                           ; Name         Instructions Cycles
  7190                           ; simple_byte           16     9 (average)
  7191                           ;	Chosen strategy is simple_byte
  7192  0016CE  0A00               	xorlw	0	; case 0
  7193  0016D0  B4D8               	btfsc	status,2,c
  7194  0016D2  D7F2               	goto	i2l375
  7195  0016D4  0A01               	xorlw	1	; case 1
  7196  0016D6  B4D8               	btfsc	status,2,c
  7197  0016D8  D7F1               	goto	i2l377
  7198  0016DA  0A03               	xorlw	3	; case 2
  7199  0016DC  B4D8               	btfsc	status,2,c
  7200  0016DE  D7F0               	goto	i2l378
  7201  0016E0  0A01               	xorlw	1	; case 3
  7202  0016E2  B4D8               	btfsc	status,2,c
  7203  0016E4  D7EF               	goto	i2l379
  7204  0016E6  0A07               	xorlw	7	; case 4
  7205  0016E8  A4D8               	btfss	status,2,c
  7206  0016EA  0012               	return	
  7207  0016EC  D7ED               	goto	i2l380
  7208  0016EE                     __end_of_resetDBG:
  7209                           	opt stack 0
  7210                           pclatu	equ	0xFFB
  7211                           pclath	equ	0xFFA
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           postinc0	equ	0xFEE
  7220                           fsr0h	equ	0xFEA
  7221                           fsr0l	equ	0xFE9
  7222                           wreg	equ	0xFE8
  7223                           indf1	equ	0xFE7
  7224                           postdec1	equ	0xFE5
  7225                           fsr1h	equ	0xFE2
  7226                           fsr1l	equ	0xFE1
  7227                           bsr	equ	0xFE0
  7228                           indf2	equ	0xFDF
  7229                           fsr2h	equ	0xFDA
  7230                           fsr2l	equ	0xFD9
  7231                           status	equ	0xFD8
  7232                           
  7233 ;; *************** function _handle_start *****************
  7234 ;; Defined at:
  7235 ;;		line 78 in file "../src/my_i2c.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  data_read       1    wreg     unsigned char 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  data_read       1   17[COMRAM] unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;		None               void
  7242 ;; Registers used:
  7243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7249 ;;      Params:         0       0       0       0       0
  7250 ;;      Locals:         1       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0
  7252 ;;      Totals:         1       0       0       0       0
  7253 ;;Total ram usage:        1 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_i2c_int_handler
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text43
  7263  000C54                     __ptext43:
  7264                           	opt stack 0
  7265  000C54                     _handle_start:
  7266                           	opt stack 22
  7267                           
  7268                           ;incstack = 0
  7269                           ;handle_start@data_read stored from wreg
  7270  000C54  CFE8 F012          	movff	wreg,handle_start@data_read
  7271                           
  7272                           ;my_i2c.c: 79: ic_ptr->event_count = 1;
  7273  000C58  0101               	movlb	1	; () banked
  7274  000C5A  EE20 F00B          	lfsr	2,11
  7275  000C5E  0101               	movlb	1	; () banked
  7276  000C60  5100               	movf	_ic_ptr& (0+255),w,b
  7277  000C62  26D9               	addwf	fsr2l,f,c
  7278  000C64  0101               	movlb	1	; () banked
  7279  000C66  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7280  000C68  22DA               	addwfc	fsr2h,f,c
  7281  000C6A  0E01               	movlw	1
  7282  000C6C  6EDF               	movwf	indf2,c
  7283                           
  7284                           ;my_i2c.c: 80: ic_ptr->buflen = 0;
  7285  000C6E  0101               	movlb	1	; () banked
  7286  000C70  EE20 F00A          	lfsr	2,10
  7287  000C74  0101               	movlb	1	; () banked
  7288  000C76  5100               	movf	_ic_ptr& (0+255),w,b
  7289  000C78  26D9               	addwf	fsr2l,f,c
  7290  000C7A  0101               	movlb	1	; () banked
  7291  000C7C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7292  000C7E  22DA               	addwfc	fsr2h,f,c
  7293  000C80  0E00               	movlw	0
  7294  000C82  6EDF               	movwf	indf2,c
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;my_i2c.c: 82: if (data_read) {
  7298  000C84  5012               	movf	handle_start@data_read,w,c
  7299  000C86  B4D8               	btfsc	status,2,c
  7300  000C88  D03D               	goto	i2l2734
  7301                           
  7302                           ; BSR set to: 1
  7303                           ;my_i2c.c: 83: if (SSPSTATbits.D_A == 1) {
  7304  000C8A  AAC7               	btfss	4039,5,c	;volatile
  7305  000C8C  D021               	goto	i2l249
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;my_i2c.c: 86: ic_ptr->status = 0x5;
  7309  000C8E  0101               	movlb	1	; () banked
  7310  000C90  EE20 F00C          	lfsr	2,12
  7311  000C94  0101               	movlb	1	; () banked
  7312  000C96  5100               	movf	_ic_ptr& (0+255),w,b
  7313  000C98  26D9               	addwf	fsr2l,f,c
  7314  000C9A  0101               	movlb	1	; () banked
  7315  000C9C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7316  000C9E  22DA               	addwfc	fsr2h,f,c
  7317  000CA0  0E05               	movlw	5
  7318  000CA2  6EDF               	movwf	indf2,c
  7319                           
  7320                           ;my_i2c.c: 87: ic_ptr->error_count++;
  7321  000CA4  0101               	movlb	1	; () banked
  7322  000CA6  EE20 F00E          	lfsr	2,14
  7323  000CAA  0101               	movlb	1	; () banked
  7324  000CAC  5100               	movf	_ic_ptr& (0+255),w,b
  7325  000CAE  26D9               	addwf	fsr2l,f,c
  7326  000CB0  0101               	movlb	1	; () banked
  7327  000CB2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7328  000CB4  22DA               	addwfc	fsr2h,f,c
  7329  000CB6  2ADF               	incf	indf2,f,c
  7330                           
  7331                           ;my_i2c.c: 88: ic_ptr->error_code = 0x5;
  7332  000CB8  0101               	movlb	1	; () banked
  7333  000CBA  EE20 F00D          	lfsr	2,13
  7334  000CBE  0101               	movlb	1	; () banked
  7335  000CC0  5100               	movf	_ic_ptr& (0+255),w,b
  7336  000CC2  26D9               	addwf	fsr2l,f,c
  7337  000CC4  0101               	movlb	1	; () banked
  7338  000CC6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7339  000CC8  22DA               	addwfc	fsr2h,f,c
  7340  000CCA  0E05               	movlw	5
  7341  000CCC  6EDF               	movwf	indf2,c
  7342                           
  7343                           ;my_i2c.c: 89: } else {
  7344  000CCE  0012               	return	
  7345  000CD0                     i2l249:
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;my_i2c.c: 90: if (SSPSTATbits.R_W == 1) {
  7349  000CD0  A4C7               	btfss	4039,2,c	;volatile
  7350  000CD2  D00C               	goto	i2l2732
  7351                           
  7352                           ; BSR set to: 1
  7353                           ;my_i2c.c: 91: ic_ptr->status = 0x8;
  7354  000CD4  0101               	movlb	1	; () banked
  7355  000CD6  EE20 F00C          	lfsr	2,12
  7356  000CDA  0101               	movlb	1	; () banked
  7357  000CDC  5100               	movf	_ic_ptr& (0+255),w,b
  7358  000CDE  26D9               	addwf	fsr2l,f,c
  7359  000CE0  0101               	movlb	1	; () banked
  7360  000CE2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7361  000CE4  22DA               	addwfc	fsr2h,f,c
  7362  000CE6  0E08               	movlw	8
  7363  000CE8  6EDF               	movwf	indf2,c
  7364                           
  7365                           ;my_i2c.c: 92: } else {
  7366  000CEA  0012               	return	
  7367  000CEC                     i2l2732:
  7368                           
  7369                           ; BSR set to: 1
  7370                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  7371  000CEC  0101               	movlb	1	; () banked
  7372  000CEE  EE20 F00C          	lfsr	2,12
  7373  000CF2  0101               	movlb	1	; () banked
  7374  000CF4  5100               	movf	_ic_ptr& (0+255),w,b
  7375  000CF6  26D9               	addwf	fsr2l,f,c
  7376  000CF8  0101               	movlb	1	; () banked
  7377  000CFA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7378  000CFC  22DA               	addwfc	fsr2h,f,c
  7379  000CFE  0E07               	movlw	7
  7380  000D00  6EDF               	movwf	indf2,c
  7381  000D02  0012               	return	
  7382  000D04                     i2l2734:
  7383                           
  7384                           ; BSR set to: 1
  7385                           ;my_i2c.c: 97: ic_ptr->status = 0x6;
  7386  000D04  0101               	movlb	1	; () banked
  7387  000D06  EE20 F00C          	lfsr	2,12
  7388  000D0A  0101               	movlb	1	; () banked
  7389  000D0C  5100               	movf	_ic_ptr& (0+255),w,b
  7390  000D0E  26D9               	addwf	fsr2l,f,c
  7391  000D10  0101               	movlb	1	; () banked
  7392  000D12  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7393  000D14  22DA               	addwfc	fsr2h,f,c
  7394  000D16  0E06               	movlw	6
  7395  000D18  6EDF               	movwf	indf2,c
  7396  000D1A  0012               	return	
  7397  000D1C                     __end_of_handle_start:
  7398                           	opt stack 0
  7399                           pclatu	equ	0xFFB
  7400                           pclath	equ	0xFFA
  7401                           tblptru	equ	0xFF8
  7402                           tblptrh	equ	0xFF7
  7403                           tblptrl	equ	0xFF6
  7404                           tablat	equ	0xFF5
  7405                           prodh	equ	0xFF4
  7406                           prodl	equ	0xFF3
  7407                           intcon	equ	0xFF2
  7408                           postinc0	equ	0xFEE
  7409                           fsr0h	equ	0xFEA
  7410                           fsr0l	equ	0xFE9
  7411                           wreg	equ	0xFE8
  7412                           indf1	equ	0xFE7
  7413                           postdec1	equ	0xFE5
  7414                           fsr1h	equ	0xFE2
  7415                           fsr1l	equ	0xFE1
  7416                           bsr	equ	0xFE0
  7417                           indf2	equ	0xFDF
  7418                           fsr2h	equ	0xFDA
  7419                           fsr2l	equ	0xFD9
  7420                           status	equ	0xFD8
  7421                           
  7422 ;; *************** function _SleepIfOkay *****************
  7423 ;; Defined at:
  7424 ;;		line 229 in file "../src/messages.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;		None               void
  7431 ;; Registers used:
  7432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7438 ;;      Params:         0       0       0       0       0
  7439 ;;      Locals:         0       0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0
  7441 ;;      Totals:         0       0       0       0       0
  7442 ;;Total ram usage:        0 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    2
  7445 ;; This function calls:
  7446 ;;		_enter_sleep_mode
  7447 ;;		i2_check_msg
  7448 ;;		i2_in_high_int
  7449 ;;		i2_in_low_int
  7450 ;; This function is called by:
  7451 ;;		_InterruptHandlerHigh
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text44
  7456  001494                     __ptext44:
  7457                           	opt stack 0
  7458  001494                     _SleepIfOkay:
  7459                           	opt stack 21
  7460                           
  7461                           ;messages.c: 231: if (MQ_Main_Willing_to_block == 0) {
  7462                           
  7463                           ; BSR set to: 1
  7464                           ;incstack = 0
  7465  001494  6658               	tstfsz	_MQ_Main_Willing_to_block,c
  7466  001496  D001               	goto	i2l2350
  7467  001498  0012               	return	
  7468  00149A                     i2l2350:
  7469                           
  7470                           ;messages.c: 233: }
  7471                           ;messages.c: 236: if (in_low_int()) {
  7472  00149A  ECC9  F00B         	call	i2_in_low_int	;wreg free
  7473  00149E  5015               	movf	?i2_in_low_int+1,w,c
  7474  0014A0  1014               	iorwf	?i2_in_low_int,w,c
  7475  0014A2  A4D8               	btfss	status,2,c
  7476  0014A4  0012               	return	
  7477                           
  7478                           ;messages.c: 238: }
  7479                           ;messages.c: 241: if (!in_high_int()) {
  7480                           
  7481                           ;messages.c: 237: return;
  7482  0014A6  EC67  F00C         	call	i2_in_high_int	;wreg free
  7483  0014AA  5013               	movf	?i2_in_high_int+1,w,c
  7484  0014AC  1012               	iorwf	?i2_in_high_int,w,c
  7485  0014AE  B4D8               	btfsc	status,2,c
  7486  0014B0  0012               	return	
  7487                           
  7488                           ;messages.c: 243: }
  7489                           ;messages.c: 248: if (check_msg(&ToMainHigh_MQ)) {
  7490                           
  7491                           ;messages.c: 242: return;
  7492  0014B2  0101               	movlb	1	; () banked
  7493  0014B4  0E01               	movlw	high _ToMainHigh_MQ
  7494  0014B6  6E13               	movwf	i2check_msg@qptr+1,c
  7495  0014B8  0101               	movlb	1	; () banked
  7496  0014BA  0E38               	movlw	low _ToMainHigh_MQ
  7497  0014BC  6E12               	movwf	i2check_msg@qptr,c
  7498  0014BE  EC31  F00C         	call	i2_check_msg	;wreg free
  7499  0014C2  0900               	iorlw	0
  7500  0014C4  A4D8               	btfss	status,2,c
  7501  0014C6  0012               	return	
  7502                           
  7503                           ;messages.c: 250: }
  7504                           ;messages.c: 251: if (check_msg(&ToMainLow_MQ)) {
  7505                           
  7506                           ;messages.c: 249: return;
  7507  0014C8  0101               	movlb	1	; () banked
  7508  0014CA  0E01               	movlw	high _ToMainLow_MQ
  7509  0014CC  6E13               	movwf	i2check_msg@qptr+1,c
  7510  0014CE  0101               	movlb	1	; () banked
  7511  0014D0  0E6E               	movlw	low _ToMainLow_MQ
  7512  0014D2  6E12               	movwf	i2check_msg@qptr,c
  7513  0014D4  EC31  F00C         	call	i2_check_msg	;wreg free
  7514  0014D8  0900               	iorlw	0
  7515  0014DA  B4D8               	btfsc	status,2,c
  7516                           
  7517                           ;messages.c: 253: }
  7518                           ;messages.c: 254: enter_sleep_mode();
  7519                           
  7520                           ;messages.c: 252: return;
  7521  0014DC  EC79  F00C         	call	_enter_sleep_mode	;wreg free
  7522  0014E0  0012               	return	
  7523  0014E2                     __end_of_SleepIfOkay:
  7524                           	opt stack 0
  7525                           pclatu	equ	0xFFB
  7526                           pclath	equ	0xFFA
  7527                           tblptru	equ	0xFF8
  7528                           tblptrh	equ	0xFF7
  7529                           tblptrl	equ	0xFF6
  7530                           tablat	equ	0xFF5
  7531                           prodh	equ	0xFF4
  7532                           prodl	equ	0xFF3
  7533                           intcon	equ	0xFF2
  7534                           postinc0	equ	0xFEE
  7535                           fsr0h	equ	0xFEA
  7536                           fsr0l	equ	0xFE9
  7537                           wreg	equ	0xFE8
  7538                           indf1	equ	0xFE7
  7539                           postdec1	equ	0xFE5
  7540                           fsr1h	equ	0xFE2
  7541                           fsr1l	equ	0xFE1
  7542                           bsr	equ	0xFE0
  7543                           indf2	equ	0xFDF
  7544                           fsr2h	equ	0xFDA
  7545                           fsr2l	equ	0xFD9
  7546                           status	equ	0xFD8
  7547                           
  7548 ;; *************** function i2_in_low_int *****************
  7549 ;; Defined at:
  7550 ;;		line 30 in file "../src/interrupts.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;		None
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  2   19[COMRAM] int 
  7557 ;; Registers used:
  7558 ;;		wreg, status,2, status,0, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7564 ;;      Params:         2       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0
  7567 ;;      Totals:         2       0       0       0       0
  7568 ;;Total ram usage:        2 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    1
  7571 ;; This function calls:
  7572 ;;		i2_in_high_int
  7573 ;; This function is called by:
  7574 ;;		_SleepIfOkay
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text45
  7579  001792                     __ptext45:
  7580                           	opt stack 0
  7581  001792                     i2_in_low_int:
  7582                           	opt stack 21
  7583                           
  7584                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7585                           
  7586                           ;incstack = 0
  7587  001792  ACF2               	btfss	intcon,6,c	;volatile
  7588  001794  D005               	goto	i2l2914
  7589                           
  7590                           ;interrupts.c: 32: return (0);
  7591  001796  0E00               	movlw	0
  7592  001798  6E15               	movwf	?i2_in_low_int+1,c
  7593  00179A  0E00               	movlw	0
  7594  00179C  6E14               	movwf	?i2_in_low_int,c
  7595  00179E  0012               	return	
  7596  0017A0                     i2l2914:
  7597  0017A0  EC67  F00C         	call	i2_in_high_int	;wreg free
  7598  0017A4  5013               	movf	?i2_in_high_int+1,w,c
  7599  0017A6  1012               	iorwf	?i2_in_high_int,w,c
  7600  0017A8  B4D8               	btfsc	status,2,c
  7601  0017AA  D005               	goto	i2l2922
  7602                           
  7603                           ;interrupts.c: 34: return (0);
  7604  0017AC  0E00               	movlw	0
  7605  0017AE  6E15               	movwf	?i2_in_low_int+1,c
  7606  0017B0  0E00               	movlw	0
  7607  0017B2  6E14               	movwf	?i2_in_low_int,c
  7608  0017B4  0012               	return	
  7609  0017B6                     i2l2922:
  7610                           
  7611                           ;interrupts.c: 36: return (1);
  7612  0017B6  0E00               	movlw	0
  7613  0017B8  6E15               	movwf	?i2_in_low_int+1,c
  7614  0017BA  0E01               	movlw	1
  7615  0017BC  6E14               	movwf	?i2_in_low_int,c
  7616  0017BE  0012               	return	
  7617  0017C0                     __end_ofi2_in_low_int:
  7618                           	opt stack 0
  7619                           pclatu	equ	0xFFB
  7620                           pclath	equ	0xFFA
  7621                           tblptru	equ	0xFF8
  7622                           tblptrh	equ	0xFF7
  7623                           tblptrl	equ	0xFF6
  7624                           tablat	equ	0xFF5
  7625                           prodh	equ	0xFF4
  7626                           prodl	equ	0xFF3
  7627                           intcon	equ	0xFF2
  7628                           postinc0	equ	0xFEE
  7629                           fsr0h	equ	0xFEA
  7630                           fsr0l	equ	0xFE9
  7631                           wreg	equ	0xFE8
  7632                           indf1	equ	0xFE7
  7633                           postdec1	equ	0xFE5
  7634                           fsr1h	equ	0xFE2
  7635                           fsr1l	equ	0xFE1
  7636                           bsr	equ	0xFE0
  7637                           indf2	equ	0xFDF
  7638                           fsr2h	equ	0xFDA
  7639                           fsr2l	equ	0xFD9
  7640                           status	equ	0xFD8
  7641                           
  7642 ;; *************** function i2_in_high_int *****************
  7643 ;; Defined at:
  7644 ;;		line 22 in file "../src/interrupts.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  2   17[COMRAM] int 
  7651 ;; Registers used:
  7652 ;;		wreg, status,2
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7658 ;;      Params:         2       0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0
  7660 ;;      Temps:          0       0       0       0       0
  7661 ;;      Totals:         2       0       0       0       0
  7662 ;;Total ram usage:        2 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_SleepIfOkay
  7668 ;;		i2_in_low_int
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text46
  7673  0018CE                     __ptext46:
  7674                           	opt stack 0
  7675  0018CE                     i2_in_high_int:
  7676                           	opt stack 21
  7677                           
  7678                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  7679                           
  7680                           ;incstack = 0
  7681  0018CE  0E00               	movlw	0
  7682  0018D0  AEF2               	btfss	intcon,7,c	;volatile
  7683  0018D2  0E01               	movlw	1
  7684  0018D4  6E12               	movwf	?i2_in_high_int,c
  7685  0018D6  6A13               	clrf	?i2_in_high_int+1,c
  7686  0018D8  0012               	return	
  7687  0018DA                     __end_ofi2_in_high_int:
  7688                           	opt stack 0
  7689                           pclatu	equ	0xFFB
  7690                           pclath	equ	0xFFA
  7691                           tblptru	equ	0xFF8
  7692                           tblptrh	equ	0xFF7
  7693                           tblptrl	equ	0xFF6
  7694                           tablat	equ	0xFF5
  7695                           prodh	equ	0xFF4
  7696                           prodl	equ	0xFF3
  7697                           intcon	equ	0xFF2
  7698                           postinc0	equ	0xFEE
  7699                           fsr0h	equ	0xFEA
  7700                           fsr0l	equ	0xFE9
  7701                           wreg	equ	0xFE8
  7702                           indf1	equ	0xFE7
  7703                           postdec1	equ	0xFE5
  7704                           fsr1h	equ	0xFE2
  7705                           fsr1l	equ	0xFE1
  7706                           bsr	equ	0xFE0
  7707                           indf2	equ	0xFDF
  7708                           fsr2h	equ	0xFDA
  7709                           fsr2l	equ	0xFD9
  7710                           status	equ	0xFD8
  7711                           
  7712 ;; *************** function i2_check_msg *****************
  7713 ;; Defined at:
  7714 ;;		line 223 in file "../src/messages.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  qptr            2   17[COMRAM] PTR struct __msg_queue
  7717 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1    wreg      unsigned char 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7729 ;;      Params:         2       0       0       0       0
  7730 ;;      Locals:         0       0       0       0       0
  7731 ;;      Temps:          1       0       0       0       0
  7732 ;;      Totals:         3       0       0       0       0
  7733 ;;Total ram usage:        3 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_SleepIfOkay
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text47
  7743  001862                     __ptext47:
  7744                           	opt stack 0
  7745  001862                     i2_check_msg:
  7746                           	opt stack 22
  7747                           
  7748                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  7749                           
  7750                           ;incstack = 0
  7751  001862  EE20 F035          	lfsr	2,53
  7752  001866  5012               	movf	i2check_msg@qptr,w,c
  7753  001868  26D9               	addwf	fsr2l,f,c
  7754  00186A  5013               	movf	i2check_msg@qptr+1,w,c
  7755  00186C  22DA               	addwfc	fsr2h,f,c
  7756  00186E  50DF               	movf	indf2,w,c
  7757  001870  6E14               	movwf	??i2_check_msg& (0+255),c
  7758  001872  5014               	movf	??i2_check_msg,w,c
  7759  001874  0D0D               	mullw	13
  7760  001876  50F3               	movf	prodl,w,c
  7761  001878  2412               	addwf	i2check_msg@qptr,w,c
  7762  00187A  6ED9               	movwf	fsr2l,c
  7763  00187C  50F4               	movf	prodh,w,c
  7764  00187E  2013               	addwfc	i2check_msg@qptr+1,w,c
  7765  001880  6EDA               	movwf	fsr2h,c
  7766  001882  50DF               	movf	indf2,w,c
  7767  001884  0012               	return	
  7768  001886                     __end_ofi2_check_msg:
  7769                           	opt stack 0
  7770                           pclatu	equ	0xFFB
  7771                           pclath	equ	0xFFA
  7772                           tblptru	equ	0xFF8
  7773                           tblptrh	equ	0xFF7
  7774                           tblptrl	equ	0xFF6
  7775                           tablat	equ	0xFF5
  7776                           prodh	equ	0xFF4
  7777                           prodl	equ	0xFF3
  7778                           intcon	equ	0xFF2
  7779                           postinc0	equ	0xFEE
  7780                           fsr0h	equ	0xFEA
  7781                           fsr0l	equ	0xFE9
  7782                           wreg	equ	0xFE8
  7783                           indf1	equ	0xFE7
  7784                           postdec1	equ	0xFE5
  7785                           fsr1h	equ	0xFE2
  7786                           fsr1l	equ	0xFE1
  7787                           bsr	equ	0xFE0
  7788                           indf2	equ	0xFDF
  7789                           fsr2h	equ	0xFDA
  7790                           fsr2l	equ	0xFD9
  7791                           status	equ	0xFD8
  7792                           
  7793 ;; *************** function _enter_sleep_mode *****************
  7794 ;; Defined at:
  7795 ;;		line 203 in file "../src/messages.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;		None
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;		None
  7800 ;; Return value:  Size  Location     Type
  7801 ;;		None               void
  7802 ;; Registers used:
  7803 ;;		None
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7809 ;;      Params:         0       0       0       0       0
  7810 ;;      Locals:         0       0       0       0       0
  7811 ;;      Temps:          0       0       0       0       0
  7812 ;;      Totals:         0       0       0       0       0
  7813 ;;Total ram usage:        0 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_SleepIfOkay
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text48
  7823  0018F2                     __ptext48:
  7824                           	opt stack 0
  7825  0018F2                     _enter_sleep_mode:
  7826                           	opt stack 22
  7827                           
  7828                           ;messages.c: 205: OSCCONbits.IDLEN = 1;
  7829                           
  7830                           ;incstack = 0
  7831  0018F2  8ED3               	bsf	4051,7,c	;volatile
  7832  0018F4  0003               	sleep		;# 
  7833  0018F6  0012               	return	
  7834  0018F8                     __end_of_enter_sleep_mode:
  7835                           	opt stack 0
  7836  0000                     pclatu	equ	0xFFB
  7837                           pclath	equ	0xFFA
  7838                           tblptru	equ	0xFF8
  7839                           tblptrh	equ	0xFF7
  7840                           tblptrl	equ	0xFF6
  7841                           tablat	equ	0xFF5
  7842                           prodh	equ	0xFF4
  7843                           prodl	equ	0xFF3
  7844                           intcon	equ	0xFF2
  7845                           postinc0	equ	0xFEE
  7846                           fsr0h	equ	0xFEA
  7847                           fsr0l	equ	0xFE9
  7848                           wreg	equ	0xFE8
  7849                           indf1	equ	0xFE7
  7850                           postdec1	equ	0xFE5
  7851                           fsr1h	equ	0xFE2
  7852                           fsr1l	equ	0xFE1
  7853                           bsr	equ	0xFE0
  7854                           indf2	equ	0xFDF
  7855                           fsr2h	equ	0xFDA
  7856                           fsr2l	equ	0xFD9
  7857                           status	equ	0xFD8
  7858                           pclatu	equ	0xFFB
  7859                           pclath	equ	0xFFA
  7860                           tblptru	equ	0xFF8
  7861                           tblptrh	equ	0xFF7
  7862                           tblptrl	equ	0xFF6
  7863                           tablat	equ	0xFF5
  7864                           prodh	equ	0xFF4
  7865                           prodl	equ	0xFF3
  7866                           intcon	equ	0xFF2
  7867                           postinc0	equ	0xFEE
  7868                           fsr0h	equ	0xFEA
  7869                           fsr0l	equ	0xFE9
  7870                           wreg	equ	0xFE8
  7871                           indf1	equ	0xFE7
  7872                           postdec1	equ	0xFE5
  7873                           fsr1h	equ	0xFE2
  7874                           fsr1l	equ	0xFE1
  7875                           bsr	equ	0xFE0
  7876                           indf2	equ	0xFDF
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8
  7880                           
  7881                           	psect	rparam
  7882  0000                     pclatu	equ	0xFFB
  7883                           pclath	equ	0xFFA
  7884                           tblptru	equ	0xFF8
  7885                           tblptrh	equ	0xFF7
  7886                           tblptrl	equ	0xFF6
  7887                           tablat	equ	0xFF5
  7888                           prodh	equ	0xFF4
  7889                           prodl	equ	0xFF3
  7890                           intcon	equ	0xFF2
  7891                           postinc0	equ	0xFEE
  7892                           fsr0h	equ	0xFEA
  7893                           fsr0l	equ	0xFE9
  7894                           wreg	equ	0xFE8
  7895                           indf1	equ	0xFE7
  7896                           postdec1	equ	0xFE5
  7897                           fsr1h	equ	0xFE2
  7898                           fsr1l	equ	0xFE1
  7899                           bsr	equ	0xFE0
  7900                           indf2	equ	0xFDF
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     83      95
    BANK0           128    102     113
    BANK1           256     89     253
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    S1498$0$0	PTR struct . size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    addADDataPoints@data	PTR struct . size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    addDataPoints@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    setBrainReqData@buf	PTR unsigned char  size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    setBrainReqData@tempBrain	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    S1498$adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    unpackRoverMsg@handler.adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    unpackBrainMsg@buf	PTR unsigned char  size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    packADData@out	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), 

    packADData@data	PTR struct . size(2) Largest target is 11
		 -> ADacc(BANK0[11]), 

    packReturnData@data	PTR unsigned char  size(2) Largest target is 11
		 -> ADacc(BANK0[11]), 

    packReturnData@end	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff.payload(COMRAM[7]), sendADdata@outBuff(BANK0[100]), 

    packReturnData@dest	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff.payload(COMRAM[7]), sendADdata@outBuff(BANK0[100]), 

    packReturnData@msg	PTR struct . size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> reqADData@buf(COMRAM[10]), i2c_int_handler@error_buf(COMRAM[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 10
		 -> reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_setBrainReqData
    _setBrainReqData->_reqADData
    _reqADData->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i2_memcpy
    _sendADdata->_packADData
    _packADData->_packReturnData
    _readNum->_resetDBG
    _readNum->_setDBG
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _sendRequestedData->_sendADdata

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _resetAccumulators->_resetADacc
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _addDataPoints->_addADDataPoints
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0    6958
                                             29 BANK1     60    60      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                      _addDataPoints
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                  _resetAccumulators
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     168
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _resetAccumulators                                    0     0      0      46
                         _resetADacc
 ---------------------------------------------------------------------------------
 (2) _resetADacc                                           5     5      0      46
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _addDataPoints                                        6     0      6     690
                                              8 BANK1      6     0      6
                    _addADDataPoints
 ---------------------------------------------------------------------------------
 (2) _addADDataPoints                                      8     4      4     240
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1999
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1999
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1805
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     426
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerHigh                                14    14      0    7375
                                             69 COMRAM    14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (7) _timer0_int_handler                                   6     6      0      98
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (8) _WriteTimer0                                          4     2      2      98
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _i2c_int_handler                                     10    10      0    7041
                                             59 COMRAM    10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
                           _resetDBG
                  _sendRequestedData
                    _setBrainReqData
                             _setDBG
 ---------------------------------------------------------------------------------
 (8) _setBrainReqData                                      4     2      2    2528
                                             55 COMRAM     4     2      2
                          _reqADData
                     _unpackBrainMsg
 ---------------------------------------------------------------------------------
 (9) _unpackBrainMsg                                       2     0      2      86
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _reqADData                                           12    12      0    2289
                                             43 COMRAM    12    12      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     1      3    2209
                                             39 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (11) _send_msg                                           12     6      6    1887
                                             27 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     530
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _sendRequestedData                                    0     0      0    1858
                            _readNum
                         _sendADdata
                       i2_resetADacc
 ---------------------------------------------------------------------------------
 (9) i2_resetADacc                                         5     5      0     150
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (9) _sendADdata                                         102   102      0    1362
                                              0 BANK0    102   102      0
                         _packADData
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (10) i2_start_i2c_slave_reply                             5     3      2     264
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (10) _packADData                                          8     0      8     998
                                             34 COMRAM     8     0      8
                     _packReturnData
 ---------------------------------------------------------------------------------
 (11) _packReturnData                                     17     7     10     654
                                             17 COMRAM    17     7     10
 ---------------------------------------------------------------------------------
 (9) _readNum                                              2     0      2     346
                                             18 COMRAM     2     0      2
                           _resetDBG
                             _setDBG
 ---------------------------------------------------------------------------------
 (8) _setDBG                                               1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _resetDBG                                            1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _handle_start                                         1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _SleepIfOkay                                          0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (8) i2_in_low_int                                         2     0      2       0
                                             19 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (9) i2_in_high_int                                        2     0      2       0
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i2_check_msg                                          3     1      2     236
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _enter_sleep_mode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _addDataPoints
     _addADDataPoints
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _resetAccumulators
     _resetADacc
   _start_i2c_slave_reply

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       _send_msg
         i2_memcpy
     _handle_start
     _resetDBG
     _sendRequestedData
       _readNum
         _resetDBG
         _setDBG
       _sendADdata
         _packADData
           _packReturnData
         i2_start_i2c_slave_reply
       i2_resetADacc
     _setBrainReqData
       _reqADData
         _ToMainHigh_sendmsg
           _send_msg
             i2_memcpy
       _unpackBrainMsg
     _setDBG
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     59      FD       6       98.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     66      71       5       88.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     53      5F       1       74.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     203       9        0.0%
DATA                 0      0     203       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 10 17:57:31 2014

               packReturnData@end 001F                 packReturnData@msg 0016  
              packReturnData@data 0012                packReturnData@dest 0021  
        _MQ_Main_Willing_to_block 0058                    ?_addDataPoints 01AC  
                     _SSPSTATbits 000FC7                                l88 068C  
       __end_of_ToMainLow_recvmsg 15F4                                bsr 000FE0  
                    __CFG_CP0$OFF 000000              __end_ofi2_resetADacc 1494  
                             l518 180E                               l519 1810  
                             l800 188A                               l571 0F72  
                             l572 0F74                               l573 0F82  
                             l574 0F84                               l567 0F52  
            __size_of_WriteTimer0 0012                    _FromMainLow_MQ 0102  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 01A4  
         __size_of_packReturnData 00A8              packReturnData@maxout 0018  
                            l2160 14F6                              l2410 06C6  
                            l2402 0692                              l2182 15A2  
                            l2414 0702                              l2168 1518  
                            l2440 0830                              l2424 0768  
                            l2408 06B6                              l2418 072A  
                            l2434 07DE                              l2532 0F54  
                            l2524 0F3E                              l2452 08D0  
                            l2428 07A4                              l2436 07F0  
                            l2444 086E                              l2446 0892  
                            l2616 10F8                              l2456 090E  
                            l2570 1050                              l2394 064A  
                            l2900 0DA4                              l2654 132A  
                            l2582 10A8                              l2590 0A6E  
                            l2648 1306                              l2576 107C  
                            l2594 0AF2                              l2668 0988  
                            l2684 0A4E                              l2882 113A  
                            l2894 0D5E                              l2886 115E  
        setBrainReqData@tempBrain 003A                              u1430 07CA  
                            _LATB 000F8A                              u1937 188C  
                            i2l37 0FF4                   _FromMainHigh_MQ 0200  
                   __CFG_FCMEN$ON 000000            ?_block_on_To_msgqueues 0001  
                            _main 05E6                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                       main@msgtype 01DD  
                            pclat 000FFA                       i2_check_msg 1862  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 0012                              start 00A2  
                   __CFG_FOSC2$ON 000000         ToMainHigh_recvmsg@msgtype 01BC  
                  send_msg@length 001E     i2start_i2c_slave_reply@length 0016  
     __size_of_timer0_int_handler 000E                       _Delay1KTCYx 1886  
                ?_addADDataPoints 01A4                             ?_main 0001  
                           _T0CON 000FD5                             _ADacc 00E6  
                           i2l500 1216                             i2l261 0132  
                           i2l502 1220                             i2l503 122E  
                           i2l504 123A                             i2l249 0CD0  
                           i2l265 0164                             i2l259 0474  
                           i2l380 16C8                             i2l364 167C  
                           i2l366 1680                             i2l375 16B8  
                           i2l367 1684                             i2l287 03FE  
                           i2l279 02E2                             i2l368 1688  
                           i2l377 16BC                             i2l369 168C  
                           i2l378 16C0                             i2l379 16C4  
                           _RCREG 000FAE                     packADData@len 0025  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                   packADData@out 0027                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 0012  
                      i2memcpy@s1 0014                      ?_init_queues 0001  
       __size_of_enter_sleep_mode 0006                   __end_of_in_main 15B2  
                 __end_of_readNum 1446        ToMainLow_recvmsg@maxlength 01C0  
                           main@j 01D9           __end_of_setBrainReqData 156E  
           addDataPoints@sensorid 01AC           i2c_configure_slave@addr 01A4  
                  _unpackBrainMsg 18DA                             tablat 000FF5  
                           status 000FD8                 unpackBrainMsg@buf 0012  
                __end_ofi2_memcpy 1676                   __initialization 1342  
                 ??_addDataPoints 01B2                      __end_of_main 091C  
      __size_of_ToMainLow_recvmsg 0042             __size_ofi2_in_low_int 002E  
          packReturnData@sensorID 001A                            ??_main 01C1  
                 send_msg@msgtype 001F                     __activetblptr 000002  
                 send_msg@tlength 0023              __end_of_handle_start 0D1C  
          __end_of_unpackBrainMsg 18E4                            i2l2212 011C  
                          i2l2312 047E                            i2l2218 012C  
                          i2l2340 05D2                            i2l2332 054C  
                          i2l2324 04EA                            i2l2236 0190  
                          i2l2308 0448                            i2l2350 149A  
                          i2l2318 048E                            i2l2254 020C  
                          i2l2238 01BC                            i2l2280 034C  
                          i2l2256 024C                            i2l2248 01F4  
                          i2l2192 0FEA                        _OpenTimer0 17EA  
                          i2l2282 038E                            i2l2286 0398  
                  __CFG_WDTEN$OFF 000000                            i2l2800 1404  
                          i2l2634 0E04                            i2l2732 0CEC  
                          i2l2740 1690                            i2l2812 1434  
                          i2l2804 1414                            i2l2734 0D04  
                          i2l2822 0EA0                            i2l2808 1424  
                          i2l2832 0EE6                            i2l2922 17B6  
                          i2l2914 17A0                            i2l2746 16CC  
                          i2l2754 1550                            i2l2932 0B7C  
                          i2l2838 0F02                            i2l2936 0BF0  
                          i2l2944 1450                            i2l2960 1664  
                          i2l2864 1240                            i2l2954 1648  
                          i2l2866 125A                            i2l2948 1468  
     __end_of_i2c_configure_slave 183C                     ??_SleepIfOkay 0016  
                  packADData@data 0023                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
   __end_of_start_i2c_slave_reply 0B60                      i2_in_low_int 1792  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0092  
           __size_ofi2_resetADacc 004E                   _i2c_int_handler 00A6  
                OpenTimer0@config 01A4                            _ic_ptr 0100  
                   main@msgbuffer 01CD                  __end_of_init_i2c 12E4  
                          _setDBG 1676                            _memcpy 12E4  
                          clear_0 1348                            clear_1 1354  
                          clear_2 1360                            clear_3 136C  
                          _uc_ptr 0056                            main@ic 01E1  
                __end_of_recv_msg 0A52       start_i2c_slave_reply@length 01A8  
                __end_of_resetDBG 16EE                         ??_in_main 01AA  
                __end_of_send_msg 0E76                         ??_readNum 0015  
                    __pdataCOMRAM 005B                    _packReturnData 0E76  
         i2c_int_handler@i2c_data 0042                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                     init_queue@i 01A7          ?i2_start_i2c_slave_reply 0012  
                 ?_unpackBrainMsg 0012          ToMainLow_recvmsg@msgtype 01BC  
               _sendRequestedData 16EE              __size_of_in_high_int 0012  
                    reqADData@buf 002D                  ?_setBrainReqData 0038  
                 __CFG_FOSC$HSPLL 000000                ?_sendRequestedData 0001  
                      __accesstop 0080           __end_of__initialization 1392  
      __end_of_ToMainHigh_recvmsg 1636        __end_of_ToMainHigh_sendmsg 1862  
                    i2_resetADacc 1446               ??_sendRequestedData 002B  
             __end_of_SleepIfOkay 14E2                    __pcstackCOMRAM 0001  
          __size_ofi2_in_high_int 000C                __size_of_check_msg 0036  
                addDataPoints@len 01B0                      _BrainMsgRecv 0054  
          __end_of_packReturnData 0F1E     __size_of_InterruptHandlerHigh 102A  
     __end_of_InterruptHandlerLow 00A2                         ?i2_memcpy 0012  
                   _ToMainHigh_MQ 0138         __end_of_sendRequestedData 1726  
                _enter_sleep_mode 18F2                 __end_of_OpenUSART 0FB0  
                   check_msg@qptr 01A4           ??_block_on_To_msgqueues 01AA  
            __size_of_init_queues 006E                        __pbssBANK0 00E6  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
                     ?_OpenTimer0 0001                __size_of_reqADData 006E  
              main@to_send_buffer 01C2           __end_of_i2c_int_handler 05E6  
                    ?i2_check_msg 0012                 recv_msg@maxlength 01B0  
                 recv_msg@msgtype 01B1                   recv_msg@tlength 01B8  
           __size_of_handle_start 00C8                      ?_Delay1KTCYx 0001  
                WriteTimer0@timer 0014                           ?_setDBG 0001  
                         ?_memcpy 01A4                     ??_WriteTimer0 0014  
                 ?_packReturnData 0012   __end_ofi2_start_i2c_slave_reply 0C54  
                      ??i2_memcpy 0018                        _packADData 175C  
      i2start_i2c_slave_reply@msg 0012                       resetADacc@i 01A7  
                   i2_in_high_int 18CE                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 175C                         ?_init_i2c 01A4  
                     _SleepIfOkay 1494                         ?_recv_msg 01AE  
                      _in_low_int 14E2                      _handle_start 0C54  
                       ?_resetDBG 0001                           __Hparam 0000  
                       ?_send_msg 001C                           __Lparam 0000  
      __end_of_timer0_int_handler 18CE                 _resetAccumulators 18EC  
                 __CFG_STVREN$OFF 000000                           __pcinit 1342  
               __end_of_reqADData 127A                   __size_of_setDBG 003C  
                 __size_of_memcpy 005E                ?_resetAccumulators 0001  
                      _init_queue 10B0                           __ramtop 0400  
             __size_of_OpenTimer0 002A                           __ptext0 05E6  
                         __ptext1 0A52                           __ptext2 18EC  
                         __ptext3 112A                           __ptext4 119E  
                         __ptext5 10B0                           __ptext6 127A  
                         __ptext7 1814                           __ptext8 18E4  
                         __ptext9 1032                         _T0CONbits 000FD5  
                         _in_main 156E                           _readNum 13F4  
                      _sendADdata 139C            sendADdata@bytes_packed 00E4  
             reqADData@numSamples 0037                           _sample1 005B  
                         _sample2 005C                           _sample3 005D  
                         _sample4 005E                           _sample5 005F  
             ??_resetAccumulators 01A9               __end_of_WriteTimer0 18C0  
      __size_of_sendRequestedData 0038                    ?i2_in_high_int 0012  
        __size_of_addADDataPoints 00B0                    __pintcode_body 0FB0  
            end_of_initialization 1392                           setDBG@b 0012  
                         memcpy@d 01AA                           memcpy@n 01A8  
                         memcpy@s 01AC                        ??_init_i2c 01A6  
                      _resetADacc 112A       i2c_int_handler@data_written 0040  
                   __Lmediumconst 0000                           int_func 0FB0  
               sendADdata@outBuff 0080                  ?_i2c_int_handler 0001  
                      ??_recv_msg 01B5                        ??_resetDBG 0012  
                      ??_send_msg 0022         __end_of_resetAccumulators 18F2  
                       _RCSTAbits 000FAB                           postdec1 000FE5  
                         postinc0 000FEE         ToMainHigh_sendmsg@msgtype 0028  
           __end_of_addDataPoints 17EA                  addADDataPoints@i 01AA  
                ??_unpackBrainMsg 0014                       ?_packADData 0023  
                       _TRISCbits 000F94                         _TXSTAbits 000FAC  
                      main@length 01E0                       ?_in_low_int 01A6  
              setBrainReqData@buf 0038  __size_ofi2_start_i2c_slave_reply 00F4  
           _start_i2c_slave_reply 0A52      __size_of_i2c_configure_slave 0028  
            __size_ofi2_check_msg 0024          __end_of_enter_sleep_mode 18F8  
              _ToMainHigh_recvmsg 15F4                _ToMainHigh_sendmsg 183C  
                   __pidataCOMRAM 18F8                       ?_init_queue 01A4  
                       i2memcpy@d 0018                       _WriteTimer0 18AE  
                       i2memcpy@n 0016                         i2memcpy@s 001A  
                  __end_of_setDBG 16B2                    __end_of_memcpy 1342  
               _enable_interrupts 18E4              __size_of_Delay1KTCYx 0016  
                     ?_sendADdata 0001               ?_ToMainHigh_recvmsg 01BC  
                 ??i2_in_high_int 0014          i2c_int_handler@data_read 0045  
             ?_ToMainHigh_sendmsg 0028                ?_enable_interrupts 0001  
             start_initialization 1342                     ??_in_high_int 01A6  
               addDataPoints@data 01AE          packReturnData@payloadLen 0014  
               __size_ofi2_memcpy 0040               ??_enable_interrupts 01A4  
                    ??_OpenTimer0 01A4    __size_of_block_on_To_msgqueues 007E  
   __end_of_block_on_To_msgqueues 10B0                         _OpenUSART 0F1E  
                     ?_resetADacc 0001                 ??_addADDataPoints 01A8  
    __end_of_InterruptHandlerHigh 1032                        init_i2c@ic 01A4  
            ??_ToMainHigh_recvmsg 01C0              ??_ToMainHigh_sendmsg 002B  
        __size_of_setBrainReqData 0046        __size_of_resetAccumulators 0006  
             __size_of_packADData 0036                        readNum@num 0013  
                ??_packReturnData 001C          i2c_int_handler@error_buf 003D  
                        ??_setDBG 0012         __end_of_enable_interrupts 18EC  
                        ??_memcpy 01AA                __end_of_OpenTimer0 1814  
        i2c_int_handler@msg_ready 0044                       __pbssCOMRAM 0054  
                   ??_init_queues 01A8                     __pcstackBANK0 0080  
                   __pcstackBANK1 01A4               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 01A4               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 01A4      __size_of_InterruptHandlerLow 008A  
             __end_of_in_high_int 18AE                        ?_OpenUSART 01A4  
                    ?_SleepIfOkay 0001             ToMainLow_recvmsg@data 01BE  
                    _ToMainLow_MQ 016E               __size_of_init_queue 007A  
                       _check_msg 1726            ?_start_i2c_slave_reply 01A4  
               __size_of_init_i2c 006A               __size_of_sendADdata 0058  
                    recv_msg@data 01B3                      recv_msg@qmsg 01BA  
                    recv_msg@slot 01B7                      recv_msg@qptr 01AE  
               __size_of_recv_msg 0136                         __pintcode 0008  
               __size_of_resetDBG 003C                 __size_of_send_msg 00AA  
                     __pintcodelo 0018            ToMainHigh_recvmsg@data 01BE  
             __size_of_resetADacc 0074        i2c_int_handler@msg_to_send 0043  
                        ?_in_main 01A8                 WriteTimer0@timer0 0012  
                        ?_readNum 0013                _timer0_int_handler 18C0  
                       _reqADData 120C               ?_timer0_int_handler 0001  
             __end_of_init_queues 120C                          _LATBbits 000F8A  
                 i2check_msg@qptr 0012                        ?_check_msg 01A4  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0B60                     ?i2_in_low_int 0014  
                        i2u183_45 0F0C                          _PIR1bits 000F9E  
          ToMainHigh_sendmsg@data 0029                          _RCONbits 000FD0  
                packADData@maxout 0029                  __CFG_WDTPS$32768 000000  
            ??_timer0_int_handler 0016        __size_of_enable_interrupts 0008  
               ??_setBrainReqData 003A                         main@j_434 01DB  
                      ?_reqADData 0001              _InterruptHandlerHigh 0008  
                    ??_packADData 002B                          i2_memcpy 1636  
                     _in_high_int 189C                      send_msg@data 0020  
             _i2c_configure_slave 1814                      send_msg@qmsg 0026  
                    send_msg@slot 0025                      send_msg@qptr 001C  
                       copy_data0 1386                       ??_OpenUSART 01A6  
                   ?i2_resetADacc 0001                   OpenUSART@config 01A9  
                  ??i2_in_low_int 0016                      ??_in_low_int 01A8  
                        __Hrparam 0000              ?_i2c_configure_slave 0001  
                        __Lrparam 0000                 ?_enter_sleep_mode 0001  
              __end_of_packADData 1792          __size_of_i2c_int_handler 0540  
              ??_enter_sleep_mode 0012                      ??_init_queue 01A6  
                    ?_WriteTimer0 0012                      ??_sendADdata 002B  
           ?_InterruptHandlerHigh 0001                  __size_of_in_main 0044  
                 _addADDataPoints 0D1C       ToMainHigh_recvmsg@maxlength 01C0  
                __size_of_readNum 0052                       _init_queues 119E  
              __end_of_in_low_int 1528                          __ptext10 156E  
                        __ptext11 14E2                          __ptext20 12E4  
                        __ptext12 189C                          __ptext21 0F1E  
                        __ptext13 1726                          __ptext30 120C  
                        __ptext22 17EA                          __ptext14 1886  
                        __ptext31 183C                          __ptext15 17C0  
                        __ptext40 13F4                          __ptext32 0DCC  
                        __ptext16 0D1C                          __ptext41 1676  
                        __ptext33 1636                          __ptext25 18C0  
                        __ptext17 15B2                          __ptext42 16B2  
                        __ptext34 16EE                          __ptext26 18AE  
                        __ptext18 15F4                          __ptext43 0C54  
                        __ptext35 1446                          __ptext27 00A6  
                        __ptext19 091C                          __ptext44 1494  
                        __ptext36 139C                          __ptext28 1528  
                        __ptext45 1792                          __ptext37 0B60  
                        __ptext29 18DA                          __ptext46 18CE  
                        __ptext38 175C                          __ptext47 1862  
                        __ptext39 0E76                          __ptext48 18F2  
                       resetDBG@b 0012            __size_of_addDataPoints 002A  
                  ??i2_resetADacc 0012         ??i2_start_i2c_slave_reply 0014  
                    ??_resetADacc 01A4                          _init_i2c 127A  
             addADDataPoints@data 01A4                     __size_of_main 0336  
                   ??i2_check_msg 0014                       ??_check_msg 01A6  
              __end_of_init_queue 112A              __size_of_SleepIfOkay 004E  
                        _recv_msg 091C                          _resetDBG 16B2  
           ??_i2c_configure_slave 01A4                          _send_msg 0DCC  
              __end_of_sendADdata 13F4                    init_queue@qptr 01A4  
                        _timesreq 005A                     ??_Delay1KTCYx 01A4  
             _InterruptHandlerLow 0018                __end_of_resetADacc 119E  
                     ??_reqADData 002C                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 01A4  
                        memcpy@d1 01A4                          memcpy@s1 01A6  
           __end_ofi2_in_high_int 18DA             main@data_points_count 01DE  
    i2c_int_handler@overrun_error 0041                          intlevel1 0000  
                        intlevel2 0000              ?_InterruptHandlerLow 0001  
         ??_start_i2c_slave_reply 01A6           __size_of_unpackBrainMsg 000A  
           _block_on_To_msgqueues 1032                     ?_handle_start 0001  
              addADDataPoints@len 01A6       __size_of_ToMainHigh_recvmsg 0042  
     __size_of_ToMainHigh_sendmsg 0026                        _OSCCONbits 000FD3  
        ToMainHigh_sendmsg@length 002B               __end_ofi2_check_msg 1886  
                   _addDataPoints 17C0           __end_of_addADDataPoints 0DCC  
          ??_InterruptHandlerHigh 0046                 _ToMainLow_recvmsg 15B2  
              main@last_reg_recvd 01D8              __end_ofi2_in_low_int 17C0  
              ?_ToMainLow_recvmsg 01BC               __end_of_Delay1KTCYx 189C  
               ??_i2c_int_handler 003C                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                     i2resetADacc@i 0015  
           ??_InterruptHandlerLow 0001               ??_ToMainLow_recvmsg 01C0  
                  ??_handle_start 0012                      _USART_Status 0059  
                 _setBrainReqData 1528  
