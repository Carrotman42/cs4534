

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 10 18:54:40 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  001C7A                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _sample3
    81  001C7A  10                 	db	16
    82                           
    83                           ;initializer for _sample4
    84  001C7B  D8                 	db	216
    85                           
    86                           ;initializer for _sample5
    87  001C7C  FE                 	db	254
    88                           
    89                           	psect	idataBANK0
    90  001C7D                     __pidataBANK0:
    91                           	opt stack 0
    92                           
    93                           ;initializer for _sample1
    94  001C7D  01                 	db	1
    95                           
    96                           ;initializer for _sample2
    97  001C7E  05                 	db	5
    98  0000                     _ADCON0	set	4034
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON2	set	4032
   101  0000                     _ADRESH	set	4036
   102  0000                     _ADRESL	set	4035
   103  0000                     _INTCONbits	set	4082
   104  0000                     _IPR1bits	set	3999
   105  0000                     _LATB	set	3978
   106  0000                     _LATBbits	set	3978
   107  0000                     _OSCCON	set	4051
   108  0000                     _OSCCONbits	set	4051
   109  0000                     _OSCTUNEbits	set	3995
   110  0000                     _PIE1bits	set	3997
   111  0000                     _PIR1bits	set	3998
   112  0000                     _RCONbits	set	4048
   113  0000                     _RCREG	set	4014
   114  0000                     _RCSTA	set	4011
   115  0000                     _RCSTAbits	set	4011
   116  0000                     _SPBRG	set	4015
   117  0000                     _SPBRGH	set	4016
   118  0000                     _SSPADD	set	4040
   119  0000                     _SSPBUF	set	4041
   120  0000                     _SSPCON1	set	4038
   121  0000                     _SSPCON1bits	set	4038
   122  0000                     _SSPCON2	set	4037
   123  0000                     _SSPCON2bits	set	4037
   124  0000                     _SSPSTAT	set	4039
   125  0000                     _SSPSTATbits	set	4039
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _TMR0H	set	4055
   129  0000                     _TMR0L	set	4054
   130  0000                     _TMR1H	set	4047
   131  0000                     _TMR1L	set	4046
   132  0000                     _TRISAbits	set	3986
   133  0000                     _TRISB	set	3987
   134  0000                     _TRISCbits	set	3988
   135  0000                     _TXSTA	set	4012
   136  0000                     _TXSTAbits	set	4012
   137                           
   138                           ; #config settings
   139  0000                     
   140                           	psect	cinit
   141  0015BE                     __pcinit:
   142                           	opt stack 0
   143  0015BE                     start_initialization:
   144                           	opt stack 0
   145  0015BE                     __initialization:
   146                           	opt stack 0
   147                           
   148                           ; Clear objects allocated to BANK2 (54 bytes)
   149  0015BE  EE02  F03B         	lfsr	0,__pbssBANK2
   150  0015C2  0E36               	movlw	54
   151  0015C4                     clear_0:
   152  0015C4  6AEE               	clrf	postinc0,c
   153  0015C6  06E8               	decf	wreg,f,c
   154  0015C8  E1FD               	bnz	clear_0
   155                           
   156                           ; Clear objects allocated to BANK1 (164 bytes)
   157  0015CA  EE01  F000         	lfsr	0,__pbssBANK1
   158  0015CE  0EA4               	movlw	164
   159  0015D0                     clear_1:
   160  0015D0  6AEE               	clrf	postinc0,c
   161  0015D2  06E8               	decf	wreg,f,c
   162  0015D4  E1FD               	bnz	clear_1
   163                           
   164                           ; Clear objects allocated to BANK0 (1 bytes)
   165  0015D6  0100               	movlb	0
   166  0015D8  6BFB               	clrf	__pbssBANK0& (0+255),b
   167                           
   168                           ; Clear objects allocated to COMRAM (23 bytes)
   169  0015DA  EE00  F038         	lfsr	0,__pbssCOMRAM
   170  0015DE  0E17               	movlw	23
   171  0015E0                     clear_2:
   172  0015E0  6AEE               	clrf	postinc0,c
   173  0015E2  06E8               	decf	wreg,f,c
   174  0015E4  E1FD               	bnz	clear_2
   175                           
   176                           ; Initialize objects allocated to BANK0 (2 bytes)
   177                           ; load TBLPTR registers with __pidataBANK0
   178  0015E6  0E7D               	movlw	low __pidataBANK0
   179  0015E8  6EF6               	movwf	tblptrl,c
   180  0015EA  0E1C               	movlw	high __pidataBANK0
   181  0015EC  6EF7               	movwf	tblptrh,c
   182  0015EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   183  0015F0  6EF8               	movwf	tblptru,c
   184  0015F2  0009               	tblrd		*+	;fetch initializer
   185  0015F4  CFF5 F0F9          	movff	tablat,__pdataBANK0
   186  0015F8  0009               	tblrd		*+	;fetch initializer
   187  0015FA  CFF5 F0FA          	movff	tablat,__pdataBANK0+1
   188                           
   189                           ; Initialize objects allocated to COMRAM (3 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191  0015FE  0E7A               	movlw	low __pidataCOMRAM
   192  001600  6EF6               	movwf	tblptrl,c
   193  001602  0E1C               	movlw	high __pidataCOMRAM
   194  001604  6EF7               	movwf	tblptrh,c
   195  001606  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196  001608  6EF8               	movwf	tblptru,c
   197  00160A  0009               	tblrd		*+	;fetch initializer
   198  00160C  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   199  001610  0009               	tblrd		*+	;fetch initializer
   200  001612  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   201  001616  0009               	tblrd		*+	;fetch initializer
   202  001618  CFF5 F051          	movff	tablat,__pdataCOMRAM+2
   203  00161C                     end_of_initialization:
   204                           	opt stack 0
   205  00161C                     __end_of__initialization:
   206                           	opt stack 0
   207  00161C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  00161E  6EF8               	movwf	tblptru,c
   209  001620  0100               	movlb	0
   210  001622  EF6A  F003         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218                           	psect	bssCOMRAM
   219  000038                     __pbssCOMRAM:
   220                           	opt stack 0
   221  000038                     _BrainMsgRecv:
   222                           	opt stack 0
   223  000038                     	ds	2
   224  00003A                     _uc_ptr:
   225                           	opt stack 0
   226  00003A                     	ds	2
   227  00003C                     _MQ_Main_Willing_to_block:
   228                           	opt stack 0
   229  00003C                     	ds	1
   230  00003D                     _USART_Status:
   231                           	opt stack 0
   232  00003D                     	ds	1
   233  00003E                     _count:
   234                           	opt stack 0
   235  00003E                     	ds	1
   236  00003F                     _ADacc:
   237                           	opt stack 0
   238  00003F                     	ds	11
   239  00004A                     _ADCBuffer:
   240                           	opt stack 0
   241  00004A                     	ds	5
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           
   249                           	psect	dataCOMRAM
   250  00004F                     __pdataCOMRAM:
   251                           	opt stack 0
   252  00004F                     _sample3:
   253                           	opt stack 0
   254  00004F                     	ds	1
   255  000050                     _sample4:
   256                           	opt stack 0
   257  000050                     	ds	1
   258  000051                     _sample5:
   259                           	opt stack 0
   260  000051                     	ds	1
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	bssBANK0
   269  0000FB                     __pbssBANK0:
   270                           	opt stack 0
   271  0000FB                     _timesreq:
   272                           	opt stack 0
   273  0000FB                     	ds	1
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	dataBANK0
   282  0000F9                     __pdataBANK0:
   283                           	opt stack 0
   284  0000F9                     _sample1:
   285                           	opt stack 0
   286  0000F9                     	ds	1
   287  0000FA                     _sample2:
   288                           	opt stack 0
   289  0000FA                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           
   297                           	psect	bssBANK1
   298  000100                     __pbssBANK1:
   299                           	opt stack 0
   300  000100                     _ic_ptr:
   301                           	opt stack 0
   302  000100                     	ds	2
   303  000102                     _FromMainLow_MQ:
   304                           	opt stack 0
   305  000102                     	ds	54
   306  000138                     _ToMainHigh_MQ:
   307                           	opt stack 0
   308  000138                     	ds	54
   309  00016E                     _ToMainLow_MQ:
   310                           	opt stack 0
   311  00016E                     	ds	54
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319                           	psect	bssBANK2
   320  00023B                     __pbssBANK2:
   321                           	opt stack 0
   322  00023B                     _FromMainHigh_MQ:
   323                           	opt stack 0
   324  00023B                     	ds	54
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           
   332                           	psect	cstackBANK2
   333  000200                     __pcstackBANK2:
   334                           	opt stack 0
   335  000200                     main@to_send_buffer:
   336                           	opt stack 0
   337                           
   338                           ; 11 bytes @ 0x0
   339  000200                     	ds	11
   340  00020B                     main@msgbuffer:
   341                           	opt stack 0
   342                           
   343                           ; 11 bytes @ 0xB
   344  00020B                     	ds	11
   345  000216                     main@last_reg_recvd:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x16
   349  000216                     	ds	1
   350  000217                     main@j:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x17
   354  000217                     	ds	2
   355  000219                     main@j_446:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x19
   359  000219                     	ds	2
   360  00021B                     main@msgtype:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1B
   364  00021B                     	ds	1
   365  00021C                     main@data_points_count:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x1C
   369  00021C                     	ds	2
   370  00021E                     main@length:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x1E
   374  00021E                     	ds	1
   375  00021F                     main@ic:
   376                           	opt stack 0
   377                           
   378                           ; 28 bytes @ 0x1F
   379  00021F                     	ds	28
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           
   387                           	psect	cstackBANK1
   388  0001A4                     __pcstackBANK1:
   389                           	opt stack 0
   390  0001A4                     i2c_int_handler@error_buf:
   391                           	opt stack 0
   392                           
   393                           ; 3 bytes @ 0x0
   394  0001A4                     	ds	3
   395  0001A7                     i2c_int_handler@data_written:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x3
   399  0001A7                     	ds	1
   400  0001A8                     i2c_int_handler@overrun_error:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x4
   404  0001A8                     	ds	1
   405  0001A9                     i2c_int_handler@i2c_data:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x5
   409  0001A9                     	ds	1
   410  0001AA                     i2c_int_handler@msg_to_send:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x6
   414  0001AA                     	ds	1
   415  0001AB                     i2c_int_handler@msg_ready:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x7
   419  0001AB                     	ds	1
   420  0001AC                     i2c_int_handler@data_read:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x8
   424  0001AC                     	ds	1
   425  0001AD                     ??_InterruptHandlerHigh:
   426                           
   427                           ; 0 bytes @ 0x9
   428  0001AD                     	ds	14
   429  0001BB                     ??_resetADacc:
   430  0001BB                     ?_in_high_int:
   431                           	opt stack 0
   432  0001BB                     i2c_configure_slave@addr:
   433                           	opt stack 0
   434  0001BB                     OpenTimer0@config:
   435                           	opt stack 0
   436  0001BB                     Delay1KTCYx@unit:
   437                           	opt stack 0
   438  0001BB                     init_queue@qptr:
   439                           	opt stack 0
   440  0001BB                     check_msg@qptr:
   441                           	opt stack 0
   442  0001BB                     start_i2c_slave_reply@msg:
   443                           	opt stack 0
   444  0001BB                     init_i2c@ic:
   445                           	opt stack 0
   446  0001BB                     addADDataPoints@data:
   447                           	opt stack 0
   448  0001BB                     OpenUSART@spbrg:
   449                           	opt stack 0
   450  0001BB                     memcpy@d1:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x17
   454  0001BB                     	ds	2
   455  0001BD                     ??_OpenUSART:
   456  0001BD                     ??_start_i2c_slave_reply:
   457  0001BD                     ??_init_queue:
   458  0001BD                     ??_check_msg:
   459  0001BD                     ?_in_low_int:
   460                           	opt stack 0
   461  0001BD                     addADDataPoints@len:
   462                           	opt stack 0
   463  0001BD                     memcpy@s1:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x19
   467  0001BD                     	ds	1
   468  0001BE                     init_queue@i:
   469                           	opt stack 0
   470  0001BE                     resetADacc@i:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x1A
   474  0001BE                     	ds	1
   475  0001BF                     ??_init_queues:
   476  0001BF                     ??_addADDataPoints:
   477  0001BF                     ?_in_main:
   478                           	opt stack 0
   479  0001BF                     start_i2c_slave_reply@length:
   480                           	opt stack 0
   481  0001BF                     memcpy@n:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x1B
   485  0001BF                     	ds	1
   486  0001C0                     OpenUSART@config:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x1C
   490  0001C0                     	ds	1
   491  0001C1                     ??_block_on_To_msgqueues:
   492  0001C1                     addADDataPoints@i:
   493                           	opt stack 0
   494  0001C1                     memcpy@d:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x1D
   498  0001C1                     	ds	2
   499  0001C3                     addDataPoints@sensorid:
   500                           	opt stack 0
   501  0001C3                     memcpy@s:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1F
   505  0001C3                     	ds	2
   506  0001C5                     recv_msg@qptr:
   507                           	opt stack 0
   508  0001C5                     addDataPoints@data:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x21
   512  0001C5                     	ds	2
   513  0001C7                     recv_msg@maxlength:
   514                           	opt stack 0
   515  0001C7                     addDataPoints@len:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x23
   519  0001C7                     	ds	1
   520  0001C8                     recv_msg@msgtype:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x24
   524  0001C8                     	ds	1
   525  0001C9                     
   526                           ; 0 bytes @ 0x25
   527  0001C9                     	ds	1
   528  0001CA                     recv_msg@data:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x26
   532  0001CA                     	ds	2
   533  0001CC                     ??_recv_msg:
   534                           
   535                           ; 0 bytes @ 0x28
   536  0001CC                     	ds	2
   537  0001CE                     recv_msg@slot:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x2A
   541  0001CE                     	ds	1
   542  0001CF                     recv_msg@tlength:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x2B
   546  0001CF                     	ds	2
   547  0001D1                     recv_msg@qmsg:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x2D
   551  0001D1                     	ds	2
   552  0001D3                     ToMainLow_recvmsg@msgtype:
   553                           	opt stack 0
   554  0001D3                     ToMainHigh_recvmsg@msgtype:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x2F
   558  0001D3                     	ds	2
   559  0001D5                     ToMainLow_recvmsg@data:
   560                           	opt stack 0
   561  0001D5                     ToMainHigh_recvmsg@data:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x31
   565  0001D5                     	ds	2
   566  0001D7                     ToMainLow_recvmsg@maxlength:
   567                           	opt stack 0
   568  0001D7                     ToMainHigh_recvmsg@maxlength:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x33
   572  0001D7                     	ds	1
   573  0001D8                     ??_main:
   574                           
   575                           ; 0 bytes @ 0x34
   576  0001D8                     	ds	1
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           
   584                           	psect	cstackBANK0
   585  000080                     __pcstackBANK0:
   586                           	opt stack 0
   587  000080                     ?_packReturnData:
   588                           	opt stack 0
   589  000080                     packReturnData@data:
   590                           	opt stack 0
   591  000080                     i2memcpy@d:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x0
   595  000080                     	ds	2
   596  000082                     packReturnData@payloadLen:
   597                           	opt stack 0
   598  000082                     i2memcpy@s:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x2
   602  000082                     	ds	2
   603  000084                     packReturnData@msg:
   604                           	opt stack 0
   605  000084                     i2send_msg@qptr:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x4
   609  000084                     	ds	2
   610  000086                     i2send_msg@length:
   611                           	opt stack 0
   612  000086                     packReturnData@maxout:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x6
   616  000086                     	ds	1
   617  000087                     i2send_msg@msgtype:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x7
   621  000087                     	ds	1
   622  000088                     packReturnData@sensorID:
   623                           	opt stack 0
   624  000088                     i2send_msg@data:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x8
   628  000088                     	ds	2
   629  00008A                     ?_packADData:
   630                           	opt stack 0
   631  00008A                     packADData@data:
   632                           	opt stack 0
   633  00008A                     i2send_msg@tlength:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xA
   637  00008A                     	ds	2
   638  00008C                     i2send_msg@slot:
   639                           	opt stack 0
   640  00008C                     packADData@len:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0xC
   644  00008C                     	ds	1
   645  00008D                     i2send_msg@qmsg:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xD
   649  00008D                     	ds	1
   650  00008E                     packADData@out:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0xE
   654  00008E                     	ds	1
   655  00008F                     ToMainHigh_sendmsg@msgtype:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0xF
   659  00008F                     	ds	1
   660  000090                     ToMainHigh_sendmsg@data:
   661                           	opt stack 0
   662  000090                     packADData@maxout:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x10
   666  000090                     	ds	2
   667  000092                     reqADData@buf:
   668                           	opt stack 0
   669  000092                     sendADdata@outBuff:
   670                           	opt stack 0
   671                           
   672                           ; 100 bytes @ 0x12
   673  000092                     	ds	10
   674  00009C                     reqADData@numSamples:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x1C
   678  00009C                     	ds	1
   679  00009D                     setBrainReqData@buf:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x1D
   683  00009D                     	ds	2
   684  00009F                     setBrainReqData@tempBrain:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x1F
   688  00009F                     	ds	87
   689  0000F6                     sendADdata@bytes_packed:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x76
   693  0000F6                     	ds	2
   694  0000F8                     ??_i2c_int_handler:
   695                           
   696                           ; 0 bytes @ 0x78
   697  0000F8                     	ds	1
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           tblptrl	equ	0xFF6
   701                           tablat	equ	0xFF5
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           
   705                           	psect	cstackCOMRAM
   706  000001                     __pcstackCOMRAM:
   707                           	opt stack 0
   708  000001                     ?_ReadADC:
   709                           	opt stack 0
   710  000001                     addBuffer@data:
   711                           	opt stack 0
   712  000001                     i1memcpy@d1:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x0
   716  000001                     	ds	2
   717  000003                     i1memcpy@s1:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x2
   721  000003                     	ds	2
   722  000005                     i1memcpy@n:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x4
   726  000005                     	ds	2
   727  000007                     i1memcpy@d:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x6
   731  000007                     	ds	2
   732  000009                     i1memcpy@s:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x8
   736  000009                     	ds	2
   737  00000B                     send_msg@qptr:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0xA
   741  00000B                     	ds	2
   742  00000D                     send_msg@length:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0xC
   746  00000D                     	ds	1
   747  00000E                     send_msg@msgtype:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0xD
   751  00000E                     	ds	1
   752  00000F                     send_msg@data:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0xE
   756  00000F                     	ds	2
   757  000011                     ??_send_msg:
   758                           
   759                           ; 0 bytes @ 0x10
   760  000011                     	ds	1
   761  000012                     send_msg@tlength:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000012                     	ds	2
   766  000014                     send_msg@slot:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x13
   770  000014                     	ds	1
   771  000015                     send_msg@qmsg:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x14
   775  000015                     	ds	2
   776  000017                     ToMainLow_sendmsg@msgtype:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x16
   780  000017                     	ds	1
   781  000018                     ToMainLow_sendmsg@data:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785  000018                     	ds	2
   786  00001A                     ToMainLow_sendmsg@length:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x19
   790  00001A                     	ds	1
   791  00001B                     ??_adc_int_handler:
   792                           
   793                           ; 0 bytes @ 0x1A
   794  00001B                     	ds	1
   795  00001C                     adc_int_handler@data:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x1B
   799  00001C                     	ds	2
   800  00001E                     ??_InterruptHandlerLow:
   801                           
   802                           ; 0 bytes @ 0x1D
   803  00001E                     	ds	17
   804  00002F                     ??_packReturnData:
   805  00002F                     ??i2_resetADacc:
   806  00002F                     ?_unpackBrainMsg:
   807                           	opt stack 0
   808  00002F                     ?i2_in_high_int:
   809                           	opt stack 0
   810  00002F                     handle_start@data_read:
   811                           	opt stack 0
   812  00002F                     setDBG@b:
   813                           	opt stack 0
   814  00002F                     resetDBG@b:
   815                           	opt stack 0
   816  00002F                     unpackBrainMsg@buf:
   817                           	opt stack 0
   818  00002F                     WriteTimer0@timer0:
   819                           	opt stack 0
   820  00002F                     i2check_msg@qptr:
   821                           	opt stack 0
   822  00002F                     i2start_i2c_slave_reply@msg:
   823                           	opt stack 0
   824  00002F                     i2memcpy@d1:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x2E
   828  00002F                     	ds	2
   829  000031                     ??i2_check_msg:
   830  000031                     ??i2_start_i2c_slave_reply:
   831  000031                     ?i2_in_low_int:
   832                           	opt stack 0
   833  000031                     WriteTimer0@timer:
   834                           	opt stack 0
   835  000031                     i2memcpy@s1:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x30
   839  000031                     	ds	1
   840  000032                     packReturnData@end:
   841                           	opt stack 0
   842  000032                     i2resetADacc@i:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x31
   846  000032                     	ds	1
   847  000033                     i2start_i2c_slave_reply@length:
   848                           	opt stack 0
   849  000033                     i2memcpy@n:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x32
   853  000033                     	ds	1
   854  000034                     packReturnData@dest:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x33
   858  000034                     	ds	1
   859  000035                     ??i2_send_msg:
   860  000035                     
   861                           ; 0 bytes @ 0x34
   862  000035                     	ds	1
   863  000036                     ToMainHigh_sendmsg@length:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x35
   867  000036                     	ds	1
   868  000037                     ??_reqADData:
   869                           
   870                           ; 0 bytes @ 0x36
   871  000037                     	ds	1
   872  000038                     tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           
   879                           ; 0 bytes @ 0x37
   880 ;;
   881 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   882 ;;
   883 ;; *************** function _main *****************
   884 ;; Defined at:
   885 ;;		line 187 in file "../src/main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  j               2   23[BANK2 ] int 
   890 ;;  j               2   25[BANK2 ] int 
   891 ;;  ic             28   31[BANK2 ] struct __i2c_comm
   892 ;;  msgbuffer      11   11[BANK2 ] unsigned char [11]
   893 ;;  to_send_buff   11    0[BANK2 ] unsigned char [11]
   894 ;;  data_points_    2   28[BANK2 ] int 
   895 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   896 ;;  length          1   30[BANK2 ] char 
   897 ;;  msgtype         1   27[BANK2 ] unsigned char 
   898 ;;  last_reg_rec    1   22[BANK2 ] unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;		None               void
   901 ;; Registers used:
   902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0      59       0
   910 ;;      Temps:          0       0       1       0       0
   911 ;;      Totals:         0       0       1      59       0
   912 ;;Total ram usage:       60 bytes
   913 ;; Hardware stack levels required when called:   16
   914 ;; This function calls:
   915 ;;		_OpenTimer0
   916 ;;		_OpenUSART
   917 ;;		_ToMainHigh_recvmsg
   918 ;;		_ToMainLow_recvmsg
   919 ;;		_addDataPoints
   920 ;;		_block_on_To_msgqueues
   921 ;;		_enable_interrupts
   922 ;;		_i2c_configure_slave
   923 ;;		_init_i2c
   924 ;;		_init_queues
   925 ;;		_resetAccumulators
   926 ;;		_start_i2c_slave_reply
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text0
   933  0006D4                     __ptext0:
   934                           	opt stack 0
   935  0006D4                     _main:
   936                           	opt stack 14
   937                           
   938                           ;main.c: 189: signed char length;
   939                           ;main.c: 190: unsigned char msgtype;
   940                           ;main.c: 191: unsigned char last_reg_recvd;
   941                           ;main.c: 193: i2c_comm ic;
   942                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   943                           ;main.c: 195: unsigned char to_send_buffer[10+1];
   944                           ;main.c: 196: int data_points_count = 0;
   945                           
   946                           ;incstack = 0
   947  0006D4  0E00               	movlw	0
   948  0006D6  0102               	movlb	2	; () banked
   949  0006D8  0102               	movlb	2	; () banked
   950  0006DA  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
   951  0006DC  0E00               	movlw	0
   952  0006DE  0102               	movlb	2	; () banked
   953  0006E0  6F1C               	movwf	main@data_points_count& (0+255),b
   954                           
   955                           ;main.c: 200: timer0_thread_struct t0thread_data;
   956                           ;main.c: 208: OSCCON = 0x82;
   957  0006E2  0E82               	movlw	130
   958  0006E4  6ED3               	movwf	4051,c	;volatile
   959                           
   960                           ; BSR set to: 2
   961                           ;main.c: 209: OSCTUNEbits.PLLEN = 0;
   962  0006E6  9C9B               	bcf	3995,6,c	;volatile
   963                           
   964                           ; BSR set to: 2
   965                           ;main.c: 226: resetAccumulators();
   966  0006E8  EC37  F00E         	call	_resetAccumulators	;wreg free
   967                           
   968                           ;main.c: 231: init_i2c(&ic);
   969  0006EC  0102               	movlb	2	; () banked
   970  0006EE  0E02               	movlw	high main@ic
   971  0006F0  0101               	movlb	1	; () banked
   972  0006F2  0101               	movlb	1	; () banked
   973  0006F4  6FBC               	movwf	(init_i2c@ic+1)& (0+255),b
   974  0006F6  0102               	movlb	2	; () banked
   975  0006F8  0E1F               	movlw	low main@ic
   976  0006FA  0101               	movlb	1	; () banked
   977  0006FC  0101               	movlb	1	; () banked
   978  0006FE  6FBB               	movwf	init_i2c@ic& (0+255),b
   979  000700  ECAA  F00A         	call	_init_i2c	;wreg free
   980                           
   981                           ;main.c: 237: init_queues();
   982  000704  EC73  F00A         	call	_init_queues	;wreg free
   983                           
   984                           ;main.c: 241: TRISB = 0x0;
   985  000708  0E00               	movlw	0
   986  00070A  6E93               	movwf	3987,c	;volatile
   987                           
   988                           ;main.c: 242: LATB = 0x0;
   989  00070C  0E00               	movlw	0
   990  00070E  6E8A               	movwf	3978,c	;volatile
   991                           
   992                           ;main.c: 255: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
   993  000710  0E90               	movlw	144
   994  000712  EC95  F00D         	call	_OpenTimer0
   995                           
   996                           ;main.c: 275: IPR1bits.SSPIP = 1;
   997  000716  869F               	bsf	3999,3,c	;volatile
   998                           
   999                           ;main.c: 284: i2c_configure_slave(0x9E);
  1000  000718  0E9E               	movlw	158
  1001  00071A  ECAA  F00D         	call	_i2c_configure_slave
  1002                           
  1003                           ;main.c: 299: PIE1bits.SSPIE = 1;
  1004  00071E  869D               	bsf	3997,3,c	;volatile
  1005                           
  1006                           ;main.c: 310: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1007                           ;main.c: 311: 0b11111111 & 0b11101111, 0x19);
  1008  000720  0E00               	movlw	0
  1009  000722  0101               	movlb	1	; () banked
  1010  000724  0101               	movlb	1	; () banked
  1011  000726  6FBC               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1012  000728  0E19               	movlw	25
  1013  00072A  0101               	movlb	1	; () banked
  1014  00072C  6FBB               	movwf	OpenUSART@spbrg& (0+255),b
  1015  00072E  0E6C               	movlw	108
  1016  000730  EC34  F009         	call	_OpenUSART
  1017                           
  1018                           ;main.c: 317: enable_interrupts();
  1019  000734  EC33  F00E         	call	_enable_interrupts	;wreg free
  1020  000738                     l83:
  1021                           
  1022                           ;main.c: 341: block_on_To_msgqueues();
  1023  000738  ECBE  F009         	call	_block_on_To_msgqueues	;wreg free
  1024                           
  1025                           ;main.c: 348: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1026  00073C  0102               	movlb	2	; () banked
  1027  00073E  0E02               	movlw	high main@msgtype
  1028  000740  0101               	movlb	1	; () banked
  1029  000742  0101               	movlb	1	; () banked
  1030  000744  6FD4               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1031  000746  0102               	movlb	2	; () banked
  1032  000748  0E1B               	movlw	low main@msgtype
  1033  00074A  0101               	movlb	1	; () banked
  1034  00074C  0101               	movlb	1	; () banked
  1035  00074E  6FD3               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1036  000750  0102               	movlb	2	; () banked
  1037  000752  0E02               	movlw	high main@msgbuffer
  1038  000754  0101               	movlb	1	; () banked
  1039  000756  0101               	movlb	1	; () banked
  1040  000758  6FD6               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1041  00075A  0102               	movlb	2	; () banked
  1042  00075C  0E0B               	movlw	low main@msgbuffer
  1043  00075E  0101               	movlb	1	; () banked
  1044  000760  0101               	movlb	1	; () banked
  1045  000762  6FD5               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1046  000764  0E0A               	movlw	10
  1047  000766  EC75  F00C         	call	_ToMainHigh_recvmsg
  1048  00076A  0102               	movlb	2	; () banked
  1049  00076C  0102               	movlb	2	; () banked
  1050  00076E  6F1E               	movwf	main@length& (0+255),b
  1051                           
  1052                           ; BSR set to: 2
  1053                           ;main.c: 349: if (length < 0) {
  1054  000770  0102               	movlb	2	; () banked
  1055  000772  0102               	movlb	2	; () banked
  1056  000774  BF1E               	btfsc	main@length& (0+255),7,b
  1057  000776  D104               	goto	l3434
  1058  000778  D0F1               	goto	l3432
  1059  00077A                     l91:
  1060                           
  1061                           ; BSR set to: 2
  1062                           ;main.c: 362: case 41:
  1063                           ;main.c: 363: {
  1064                           ;main.c: 366: last_reg_recvd = msgbuffer[0];
  1065  00077A  C20B  F216         	movff	main@msgbuffer,main@last_reg_recvd
  1066                           
  1067                           ;main.c: 367: break;
  1068  00077E  D100               	goto	l3434
  1069  000780                     l3390:
  1070                           
  1071                           ; BSR set to: 2
  1072                           ;main.c: 400: {
  1073                           ;main.c: 401: if(data_points_count == 0){
  1074  000780  0102               	movlb	2	; () banked
  1075  000782  0102               	movlb	2	; () banked
  1076  000784  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1077  000786  111C               	iorwf	main@data_points_count& (0+255),w,b
  1078  000788  A4D8               	btfss	status,2,c
  1079  00078A  D00C               	goto	l3396
  1080                           
  1081                           ; BSR set to: 2
  1082                           ;main.c: 402: msgbuffer[0] = 0xff;
  1083  00078C  0102               	movlb	2	; () banked
  1084  00078E  0102               	movlb	2	; () banked
  1085  000790  690B               	setf	main@msgbuffer& (0+255),b
  1086                           
  1087                           ; BSR set to: 2
  1088                           ;main.c: 403: length = 1;
  1089  000792  0101               	movlb	1	; () banked
  1090  000794  6FD8               	movwf	??_main& (0+255),b
  1091  000796  0E01               	movlw	1
  1092  000798  0102               	movlb	2	; () banked
  1093  00079A  0102               	movlb	2	; () banked
  1094  00079C  6F1E               	movwf	main@length& (0+255),b
  1095  00079E  0101               	movlb	1	; () banked
  1096  0007A0  51D8               	movf	??_main& (0+255),w,b
  1097                           
  1098                           ;main.c: 404: }
  1099  0007A2  D09D               	goto	l3424
  1100  0007A4                     l3396:
  1101                           
  1102                           ;main.c: 405: else{
  1103                           ;main.c: 406: for(int j = 0; j < data_points_count; j++){
  1104  0007A4  0E00               	movlw	0
  1105  0007A6  0102               	movlb	2	; () banked
  1106  0007A8  0102               	movlb	2	; () banked
  1107  0007AA  6F18               	movwf	(main@j+1)& (0+255),b
  1108  0007AC  0E00               	movlw	0
  1109  0007AE  0102               	movlb	2	; () banked
  1110  0007B0  6F17               	movwf	main@j& (0+255),b
  1111  0007B2  D01E               	goto	l3402
  1112  0007B4                     l3398:
  1113                           
  1114                           ;main.c: 407: msgbuffer[j] = to_send_buffer[j];
  1115  0007B4  0102               	movlb	2	; () banked
  1116  0007B6  0E00               	movlw	low main@to_send_buffer
  1117  0007B8  0102               	movlb	2	; () banked
  1118  0007BA  0102               	movlb	2	; () banked
  1119  0007BC  2517               	addwf	main@j& (0+255),w,b
  1120  0007BE  6ED9               	movwf	fsr2l,c
  1121  0007C0  0102               	movlb	2	; () banked
  1122  0007C2  0E02               	movlw	high main@to_send_buffer
  1123  0007C4  0102               	movlb	2	; () banked
  1124  0007C6  0102               	movlb	2	; () banked
  1125  0007C8  2118               	addwfc	(main@j+1)& (0+255),w,b
  1126  0007CA  6EDA               	movwf	fsr2h,c
  1127  0007CC  0102               	movlb	2	; () banked
  1128  0007CE  0E0B               	movlw	low main@msgbuffer
  1129  0007D0  0102               	movlb	2	; () banked
  1130  0007D2  0102               	movlb	2	; () banked
  1131  0007D4  2517               	addwf	main@j& (0+255),w,b
  1132  0007D6  6EE1               	movwf	fsr1l,c
  1133  0007D8  0102               	movlb	2	; () banked
  1134  0007DA  0E02               	movlw	high main@msgbuffer
  1135  0007DC  0102               	movlb	2	; () banked
  1136  0007DE  0102               	movlb	2	; () banked
  1137  0007E0  2118               	addwfc	(main@j+1)& (0+255),w,b
  1138  0007E2  6EE2               	movwf	fsr1h,c
  1139  0007E4  CFDF FFE7          	movff	indf2,indf1
  1140                           
  1141                           ; BSR set to: 2
  1142  0007E8  0102               	movlb	2	; () banked
  1143  0007EA  0102               	movlb	2	; () banked
  1144  0007EC  4B17               	infsnz	main@j& (0+255),f,b
  1145  0007EE  2B18               	incf	(main@j+1)& (0+255),f,b
  1146  0007F0                     l3402:
  1147                           
  1148                           ; BSR set to: 2
  1149  0007F0  0102               	movlb	2	; () banked
  1150  0007F2  0102               	movlb	2	; () banked
  1151  0007F4  5118               	movf	(main@j+1)& (0+255),w,b
  1152  0007F6  0A80               	xorlw	128
  1153  0007F8  0101               	movlb	1	; () banked
  1154  0007FA  6FD8               	movwf	??_main& (0+255),b
  1155  0007FC  0102               	movlb	2	; () banked
  1156  0007FE  511C               	movf	main@data_points_count& (0+255),w,b
  1157  000800  0102               	movlb	2	; () banked
  1158  000802  0102               	movlb	2	; () banked
  1159  000804  5D17               	subwf	main@j& (0+255),w,b
  1160  000806  0102               	movlb	2	; () banked
  1161  000808  0102               	movlb	2	; () banked
  1162  00080A  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1163  00080C  0A80               	xorlw	128
  1164  00080E  0101               	movlb	1	; () banked
  1165  000810  59D8               	subwfb	??_main& (0+255),w,b
  1166  000812  A0D8               	btfss	status,0,c
  1167  000814  D7CF               	goto	l3398
  1168  000816  D050               	goto	u2390
  1169  000818                     l3406:
  1170                           
  1171                           ; BSR set to: 2
  1172                           ;main.c: 415: {
  1173                           ;main.c: 416: to_send_buffer[0] = 0x04;
  1174  000818  0101               	movlb	1	; () banked
  1175  00081A  6FD8               	movwf	??_main& (0+255),b
  1176  00081C  0E04               	movlw	4
  1177  00081E  0102               	movlb	2	; () banked
  1178  000820  0102               	movlb	2	; () banked
  1179  000822  6F00               	movwf	main@to_send_buffer& (0+255),b
  1180  000824  0101               	movlb	1	; () banked
  1181  000826  51D8               	movf	??_main& (0+255),w,b
  1182                           
  1183                           ;main.c: 417: to_send_buffer[1] = 0x0d;
  1184  000828  0101               	movlb	1	; () banked
  1185  00082A  6FD8               	movwf	??_main& (0+255),b
  1186  00082C  0E0D               	movlw	13
  1187  00082E  0102               	movlb	2	; () banked
  1188  000830  0102               	movlb	2	; () banked
  1189  000832  6F01               	movwf	(main@to_send_buffer+1)& (0+255),b
  1190  000834  0101               	movlb	1	; () banked
  1191  000836  51D8               	movf	??_main& (0+255),w,b
  1192                           
  1193                           ; BSR set to: 1
  1194                           ;main.c: 418: data_points_count = 2;
  1195  000838  0E00               	movlw	0
  1196  00083A  0102               	movlb	2	; () banked
  1197  00083C  0102               	movlb	2	; () banked
  1198  00083E  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
  1199  000840  0E02               	movlw	2
  1200  000842  0102               	movlb	2	; () banked
  1201  000844  6F1C               	movwf	main@data_points_count& (0+255),b
  1202                           
  1203                           ; BSR set to: 2
  1204                           ;main.c: 419: for(int j = 0; j < data_points_count; j++){
  1205  000846  0E00               	movlw	0
  1206  000848  0102               	movlb	2	; () banked
  1207  00084A  0102               	movlb	2	; () banked
  1208  00084C  6F1A               	movwf	(main@j_446+1)& (0+255),b
  1209  00084E  0E00               	movlw	0
  1210  000850  0102               	movlb	2	; () banked
  1211  000852  6F19               	movwf	main@j_446& (0+255),b
  1212  000854  D01E               	goto	l3416
  1213  000856                     l3412:
  1214                           
  1215                           ;main.c: 420: msgbuffer[j] = to_send_buffer[j];
  1216  000856  0102               	movlb	2	; () banked
  1217  000858  0E00               	movlw	low main@to_send_buffer
  1218  00085A  0102               	movlb	2	; () banked
  1219  00085C  0102               	movlb	2	; () banked
  1220  00085E  2519               	addwf	main@j_446& (0+255),w,b
  1221  000860  6ED9               	movwf	fsr2l,c
  1222  000862  0102               	movlb	2	; () banked
  1223  000864  0E02               	movlw	high main@to_send_buffer
  1224  000866  0102               	movlb	2	; () banked
  1225  000868  0102               	movlb	2	; () banked
  1226  00086A  211A               	addwfc	(main@j_446+1)& (0+255),w,b
  1227  00086C  6EDA               	movwf	fsr2h,c
  1228  00086E  0102               	movlb	2	; () banked
  1229  000870  0E0B               	movlw	low main@msgbuffer
  1230  000872  0102               	movlb	2	; () banked
  1231  000874  0102               	movlb	2	; () banked
  1232  000876  2519               	addwf	main@j_446& (0+255),w,b
  1233  000878  6EE1               	movwf	fsr1l,c
  1234  00087A  0102               	movlb	2	; () banked
  1235  00087C  0E02               	movlw	high main@msgbuffer
  1236  00087E  0102               	movlb	2	; () banked
  1237  000880  0102               	movlb	2	; () banked
  1238  000882  211A               	addwfc	(main@j_446+1)& (0+255),w,b
  1239  000884  6EE2               	movwf	fsr1h,c
  1240  000886  CFDF FFE7          	movff	indf2,indf1
  1241                           
  1242                           ; BSR set to: 2
  1243  00088A  0102               	movlb	2	; () banked
  1244  00088C  0102               	movlb	2	; () banked
  1245  00088E  4B19               	infsnz	main@j_446& (0+255),f,b
  1246  000890  2B1A               	incf	(main@j_446+1)& (0+255),f,b
  1247  000892                     l3416:
  1248                           
  1249                           ; BSR set to: 2
  1250  000892  0102               	movlb	2	; () banked
  1251  000894  0102               	movlb	2	; () banked
  1252  000896  511A               	movf	(main@j_446+1)& (0+255),w,b
  1253  000898  0A80               	xorlw	128
  1254  00089A  0101               	movlb	1	; () banked
  1255  00089C  6FD8               	movwf	??_main& (0+255),b
  1256  00089E  0102               	movlb	2	; () banked
  1257  0008A0  511C               	movf	main@data_points_count& (0+255),w,b
  1258  0008A2  0102               	movlb	2	; () banked
  1259  0008A4  0102               	movlb	2	; () banked
  1260  0008A6  5D19               	subwf	main@j_446& (0+255),w,b
  1261  0008A8  0102               	movlb	2	; () banked
  1262  0008AA  0102               	movlb	2	; () banked
  1263  0008AC  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1264  0008AE  0A80               	xorlw	128
  1265  0008B0  0101               	movlb	1	; () banked
  1266  0008B2  59D8               	subwfb	??_main& (0+255),w,b
  1267  0008B4  A0D8               	btfss	status,0,c
  1268  0008B6  D7CF               	goto	l3412
  1269  0008B8                     u2390:
  1270                           
  1271                           ; BSR set to: 1
  1272                           ;main.c: 421: }
  1273                           ;main.c: 422: length = data_points_count;
  1274  0008B8  C21C  F21E         	movff	main@data_points_count,main@length
  1275                           
  1276                           ; BSR set to: 1
  1277                           ;main.c: 423: data_points_count = 0;
  1278  0008BC  0E00               	movlw	0
  1279  0008BE  0102               	movlb	2	; () banked
  1280  0008C0  0102               	movlb	2	; () banked
  1281  0008C2  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
  1282  0008C4  0E00               	movlw	0
  1283  0008C6  0102               	movlb	2	; () banked
  1284  0008C8  6F1C               	movwf	main@data_points_count& (0+255),b
  1285                           
  1286                           ;main.c: 424: break;
  1287  0008CA  D009               	goto	l3424
  1288  0008CC                     l3422:
  1289                           
  1290                           ; BSR set to: 2
  1291  0008CC  0102               	movlb	2	; () banked
  1292  0008CE  0102               	movlb	2	; () banked
  1293  0008D0  5116               	movf	main@last_reg_recvd& (0+255),w,b
  1294                           
  1295                           ; Switch size 1, requested type "space"
  1296                           ; Number of cases is 2, Range of values is 170 to 171
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte            7     4 (average)
  1300                           ;	Chosen strategy is simple_byte
  1301  0008D2  0AAA               	xorlw	170	; case 170
  1302  0008D4  B4D8               	btfsc	status,2,c
  1303  0008D6  D754               	goto	l3390
  1304  0008D8  0A01               	xorlw	1	; case 171
  1305  0008DA  B4D8               	btfsc	status,2,c
  1306  0008DC  D79D               	goto	l3406
  1307  0008DE                     l3424:
  1308                           
  1309                           ;main.c: 427: msgbuffer[0] = 0xaa;
  1310  0008DE  0101               	movlb	1	; () banked
  1311  0008E0  6FD8               	movwf	??_main& (0+255),b
  1312  0008E2  0EAA               	movlw	170
  1313  0008E4  0102               	movlb	2	; () banked
  1314  0008E6  0102               	movlb	2	; () banked
  1315  0008E8  6F0B               	movwf	main@msgbuffer& (0+255),b
  1316  0008EA  0101               	movlb	1	; () banked
  1317  0008EC  51D8               	movf	??_main& (0+255),w,b
  1318                           
  1319                           ;main.c: 428: length = 1;
  1320  0008EE  0101               	movlb	1	; () banked
  1321  0008F0  6FD8               	movwf	??_main& (0+255),b
  1322  0008F2  0E01               	movlw	1
  1323  0008F4  0102               	movlb	2	; () banked
  1324  0008F6  0102               	movlb	2	; () banked
  1325  0008F8  6F1E               	movwf	main@length& (0+255),b
  1326  0008FA  0101               	movlb	1	; () banked
  1327  0008FC  51D8               	movf	??_main& (0+255),w,b
  1328                           
  1329                           ; BSR set to: 1
  1330                           ;main.c: 429: start_i2c_slave_reply(length, msgbuffer);
  1331  0008FE  0102               	movlb	2	; () banked
  1332  000900  0E02               	movlw	high main@msgbuffer
  1333  000902  0101               	movlb	1	; () banked
  1334  000904  0101               	movlb	1	; () banked
  1335  000906  6FBC               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1336  000908  0102               	movlb	2	; () banked
  1337  00090A  0E0B               	movlw	low main@msgbuffer
  1338  00090C  0101               	movlb	1	; () banked
  1339  00090E  0101               	movlb	1	; () banked
  1340  000910  6FBB               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1341  000912  0102               	movlb	2	; () banked
  1342  000914  0102               	movlb	2	; () banked
  1343  000916  511E               	movf	main@length& (0+255),w,b
  1344  000918  EC62  F006         	call	_start_i2c_slave_reply
  1345                           
  1346                           ;main.c: 430: break;
  1347  00091C  D031               	goto	l3434
  1348  00091E                     l3428:
  1349                           
  1350                           ;main.c: 433: {
  1351                           ;main.c: 434: addDataPoints(0, msgbuffer, length);
  1352  00091E  0E00               	movlw	0
  1353  000920  0101               	movlb	1	; () banked
  1354  000922  0101               	movlb	1	; () banked
  1355  000924  6FC4               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1356  000926  0E00               	movlw	0
  1357  000928  0101               	movlb	1	; () banked
  1358  00092A  6FC3               	movwf	addDataPoints@sensorid& (0+255),b
  1359  00092C  0102               	movlb	2	; () banked
  1360  00092E  0E02               	movlw	high main@msgbuffer
  1361  000930  0101               	movlb	1	; () banked
  1362  000932  0101               	movlb	1	; () banked
  1363  000934  6FC6               	movwf	(addDataPoints@data+1)& (0+255),b
  1364  000936  0102               	movlb	2	; () banked
  1365  000938  0E0B               	movlw	low main@msgbuffer
  1366  00093A  0101               	movlb	1	; () banked
  1367  00093C  0101               	movlb	1	; () banked
  1368  00093E  6FC5               	movwf	addDataPoints@data& (0+255),b
  1369  000940  0102               	movlb	2	; () banked
  1370  000942  0102               	movlb	2	; () banked
  1371  000944  511E               	movf	main@length& (0+255),w,b
  1372  000946  0101               	movlb	1	; () banked
  1373  000948  0101               	movlb	1	; () banked
  1374  00094A  6FC7               	movwf	addDataPoints@len& (0+255),b
  1375  00094C  0101               	movlb	1	; () banked
  1376  00094E  6BC8               	clrf	(addDataPoints@len+1)& (0+255),b
  1377  000950  0101               	movlb	1	; () banked
  1378  000952  BFC7               	btfsc	addDataPoints@len& (0+255),7,b
  1379  000954  07C8               	decf	(addDataPoints@len+1)& (0+255),f,b
  1380  000956  EC80  F00D         	call	_addDataPoints	;wreg free
  1381                           
  1382                           ;main.c: 435: break;
  1383  00095A  D012               	goto	l3434
  1384  00095C                     l3432:
  1385  00095C  0102               	movlb	2	; () banked
  1386  00095E  0102               	movlb	2	; () banked
  1387  000960  511B               	movf	main@msgtype& (0+255),w,b
  1388                           
  1389                           ; Switch size 1, requested type "space"
  1390                           ; Number of cases is 5, Range of values is 10 to 50
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte           16     9 (average)
  1394                           ;	Chosen strategy is simple_byte
  1395  000962  0A0A               	xorlw	10	; case 10
  1396  000964  B4D8               	btfsc	status,2,c
  1397  000966  D00C               	goto	l3434
  1398  000968  0A22               	xorlw	34	; case 40
  1399  00096A  B4D8               	btfsc	status,2,c
  1400  00096C  D706               	goto	l91
  1401  00096E  0A01               	xorlw	1	; case 41
  1402  000970  B4D8               	btfsc	status,2,c
  1403  000972  D703               	goto	l91
  1404  000974  0A03               	xorlw	3	; case 42
  1405  000976  B4D8               	btfsc	status,2,c
  1406  000978  D7A9               	goto	l3422
  1407  00097A  0A18               	xorlw	24	; case 50
  1408  00097C  B4D8               	btfsc	status,2,c
  1409  00097E  D7CF               	goto	l3428
  1410  000980                     l3434:
  1411                           
  1412                           ;main.c: 444: }
  1413                           ;main.c: 447: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1414  000980  0102               	movlb	2	; () banked
  1415  000982  0E02               	movlw	high main@msgtype
  1416  000984  0101               	movlb	1	; () banked
  1417  000986  0101               	movlb	1	; () banked
  1418  000988  6FD4               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1419  00098A  0102               	movlb	2	; () banked
  1420  00098C  0E1B               	movlw	low main@msgtype
  1421  00098E  0101               	movlb	1	; () banked
  1422  000990  0101               	movlb	1	; () banked
  1423  000992  6FD3               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1424  000994  0102               	movlb	2	; () banked
  1425  000996  0E02               	movlw	high main@msgbuffer
  1426  000998  0101               	movlb	1	; () banked
  1427  00099A  0101               	movlb	1	; () banked
  1428  00099C  6FD6               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1429  00099E  0102               	movlb	2	; () banked
  1430  0009A0  0E0B               	movlw	low main@msgbuffer
  1431  0009A2  0101               	movlb	1	; () banked
  1432  0009A4  0101               	movlb	1	; () banked
  1433  0009A6  6FD5               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1434  0009A8  0E0A               	movlw	10
  1435  0009AA  EC54  F00C         	call	_ToMainLow_recvmsg
  1436  0009AE  0102               	movlb	2	; () banked
  1437  0009B0  0102               	movlb	2	; () banked
  1438  0009B2  6F1E               	movwf	main@length& (0+255),b
  1439                           
  1440                           ; BSR set to: 2
  1441                           ;main.c: 448: if (length < 0) {
  1442  0009B4  0102               	movlb	2	; () banked
  1443  0009B6  0102               	movlb	2	; () banked
  1444  0009B8  BF1E               	btfsc	main@length& (0+255),7,b
  1445  0009BA  D6BE               	goto	l83
  1446  0009BC  D01F               	goto	l3444
  1447  0009BE                     l3440:
  1448                           
  1449                           ; BSR set to: 2
  1450                           ;main.c: 456: {
  1451                           ;main.c: 457: addDataPoints(0, msgbuffer, length);
  1452  0009BE  0E00               	movlw	0
  1453  0009C0  0101               	movlb	1	; () banked
  1454  0009C2  0101               	movlb	1	; () banked
  1455  0009C4  6FC4               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1456  0009C6  0E00               	movlw	0
  1457  0009C8  0101               	movlb	1	; () banked
  1458  0009CA  6FC3               	movwf	addDataPoints@sensorid& (0+255),b
  1459  0009CC  0102               	movlb	2	; () banked
  1460  0009CE  0E02               	movlw	high main@msgbuffer
  1461  0009D0  0101               	movlb	1	; () banked
  1462  0009D2  0101               	movlb	1	; () banked
  1463  0009D4  6FC6               	movwf	(addDataPoints@data+1)& (0+255),b
  1464  0009D6  0102               	movlb	2	; () banked
  1465  0009D8  0E0B               	movlw	low main@msgbuffer
  1466  0009DA  0101               	movlb	1	; () banked
  1467  0009DC  0101               	movlb	1	; () banked
  1468  0009DE  6FC5               	movwf	addDataPoints@data& (0+255),b
  1469  0009E0  0102               	movlb	2	; () banked
  1470  0009E2  0102               	movlb	2	; () banked
  1471  0009E4  511E               	movf	main@length& (0+255),w,b
  1472  0009E6  0101               	movlb	1	; () banked
  1473  0009E8  0101               	movlb	1	; () banked
  1474  0009EA  6FC7               	movwf	addDataPoints@len& (0+255),b
  1475  0009EC  0101               	movlb	1	; () banked
  1476  0009EE  6BC8               	clrf	(addDataPoints@len+1)& (0+255),b
  1477  0009F0  0101               	movlb	1	; () banked
  1478  0009F2  BFC7               	btfsc	addDataPoints@len& (0+255),7,b
  1479  0009F4  07C8               	decf	(addDataPoints@len+1)& (0+255),f,b
  1480  0009F6  EC80  F00D         	call	_addDataPoints	;wreg free
  1481                           
  1482                           ;main.c: 463: break;
  1483  0009FA  D69E               	goto	l83
  1484  0009FC                     l3444:
  1485  0009FC  0102               	movlb	2	; () banked
  1486  0009FE  0102               	movlb	2	; () banked
  1487  000A00  511B               	movf	main@msgtype& (0+255),w,b
  1488                           
  1489                           ; Switch size 1, requested type "space"
  1490                           ; Number of cases is 1, Range of values is 50 to 50
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte            4     3 (average)
  1494                           ;	Chosen strategy is simple_byte
  1495  000A02  0A32               	xorlw	50	; case 50
  1496  000A04  B4D8               	btfsc	status,2,c
  1497  000A06  D7DB               	goto	l3440
  1498  000A08  D697               	goto	l83
  1499  000A0A                     __end_of_main:
  1500                           	opt stack 0
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           indf1	equ	0xFE7
  1508                           fsr1h	equ	0xFE2
  1509                           fsr1l	equ	0xFE1
  1510                           indf2	equ	0xFDF
  1511                           fsr2h	equ	0xFDA
  1512                           fsr2l	equ	0xFD9
  1513                           status	equ	0xFD8
  1514                           
  1515 ;; *************** function _start_i2c_slave_reply *****************
  1516 ;; Defined at:
  1517 ;;		line 60 in file "../src/my_i2c.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  length          1    wreg     unsigned char 
  1520 ;;  msg             2   23[BANK1 ] PTR unsigned char 
  1521 ;;		 -> sendADdata@outBuff(100), main@msgbuffer(11), 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  length          1   27[BANK1 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;		None               void
  1526 ;; Registers used:
  1527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1533 ;;      Params:         0       0       2       0       0
  1534 ;;      Locals:         0       0       1       0       0
  1535 ;;      Temps:          0       0       2       0       0
  1536 ;;      Totals:         0       0       5       0       0
  1537 ;;Total ram usage:        5 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:   12
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text1
  1548  000CC4                     __ptext1:
  1549                           	opt stack 0
  1550  000CC4                     _start_i2c_slave_reply:
  1551                           	opt stack 17
  1552                           
  1553                           ; BSR set to: 2
  1554                           ;incstack = 0
  1555                           ;start_i2c_slave_reply@length stored from wreg
  1556  000CC4  CFE8 F1BF          	movff	wreg,start_i2c_slave_reply@length
  1557                           
  1558                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1559  000CC8  0101               	movlb	1	; () banked
  1560  000CCA  EE20 F019          	lfsr	2,25
  1561  000CCE  0101               	movlb	1	; () banked
  1562  000CD0  5100               	movf	_ic_ptr& (0+255),w,b
  1563  000CD2  26D9               	addwf	fsr2l,f,c
  1564  000CD4  0101               	movlb	1	; () banked
  1565  000CD6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1566  000CD8  22DA               	addwfc	fsr2h,f,c
  1567  000CDA  0E00               	movlw	0
  1568  000CDC  6EDF               	movwf	indf2,c
  1569  000CDE  D042               	goto	l3582
  1570  000CE0                     l3578:
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1574  000CE0  0101               	movlb	1	; () banked
  1575  000CE2  EE20 F019          	lfsr	2,25
  1576  000CE6  0101               	movlb	1	; () banked
  1577  000CE8  5100               	movf	_ic_ptr& (0+255),w,b
  1578  000CEA  26D9               	addwf	fsr2l,f,c
  1579  000CEC  0101               	movlb	1	; () banked
  1580  000CEE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1581  000CF0  22DA               	addwfc	fsr2h,f,c
  1582  000CF2  50DF               	movf	indf2,w,c
  1583  000CF4  0101               	movlb	1	; () banked
  1584  000CF6  6FBD               	movwf	??_start_i2c_slave_reply& (0+255),b
  1585  000CF8  0101               	movlb	1	; () banked
  1586  000CFA  51BD               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1587  000CFC  0D01               	mullw	1
  1588  000CFE  50F3               	movf	prodl,w,c
  1589  000D00  0101               	movlb	1	; () banked
  1590  000D02  0101               	movlb	1	; () banked
  1591  000D04  25BB               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1592  000D06  6ED9               	movwf	fsr2l,c
  1593  000D08  50F4               	movf	prodh,w,c
  1594  000D0A  0101               	movlb	1	; () banked
  1595  000D0C  0101               	movlb	1	; () banked
  1596  000D0E  21BC               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1597  000D10  6EDA               	movwf	fsr2h,c
  1598  000D12  0101               	movlb	1	; () banked
  1599  000D14  EE10 F019          	lfsr	1,25
  1600  000D18  0101               	movlb	1	; () banked
  1601  000D1A  5100               	movf	_ic_ptr& (0+255),w,b
  1602  000D1C  26E1               	addwf	fsr1l,f,c
  1603  000D1E  0101               	movlb	1	; () banked
  1604  000D20  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1605  000D22  22E2               	addwfc	fsr1h,f,c
  1606  000D24  50E7               	movf	indf1,w,c
  1607  000D26  0101               	movlb	1	; () banked
  1608  000D28  6FBE               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1609  000D2A  0101               	movlb	1	; () banked
  1610  000D2C  51BE               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1611  000D2E  0D01               	mullw	1
  1612  000D30  0E0F               	movlw	15
  1613  000D32  26F3               	addwf	prodl,f,c
  1614  000D34  0E00               	movlw	0
  1615  000D36  22F4               	addwfc	prodh,f,c
  1616  000D38  50F3               	movf	prodl,w,c
  1617  000D3A  0101               	movlb	1	; () banked
  1618  000D3C  0101               	movlb	1	; () banked
  1619  000D3E  2500               	addwf	_ic_ptr& (0+255),w,b
  1620  000D40  6EE1               	movwf	fsr1l,c
  1621  000D42  50F4               	movf	prodh,w,c
  1622  000D44  0101               	movlb	1	; () banked
  1623  000D46  0101               	movlb	1	; () banked
  1624  000D48  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1625  000D4A  6EE2               	movwf	fsr1h,c
  1626  000D4C  CFDF FFE7          	movff	indf2,indf1
  1627                           
  1628                           ; BSR set to: 1
  1629  000D50  0101               	movlb	1	; () banked
  1630  000D52  EE20 F019          	lfsr	2,25
  1631  000D56  0101               	movlb	1	; () banked
  1632  000D58  5100               	movf	_ic_ptr& (0+255),w,b
  1633  000D5A  26D9               	addwf	fsr2l,f,c
  1634  000D5C  0101               	movlb	1	; () banked
  1635  000D5E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1636  000D60  22DA               	addwfc	fsr2h,f,c
  1637  000D62  2ADF               	incf	indf2,f,c
  1638  000D64                     l3582:
  1639                           
  1640                           ; BSR set to: 1
  1641  000D64  0101               	movlb	1	; () banked
  1642  000D66  EE20 F019          	lfsr	2,25
  1643  000D6A  0101               	movlb	1	; () banked
  1644  000D6C  5100               	movf	_ic_ptr& (0+255),w,b
  1645  000D6E  26D9               	addwf	fsr2l,f,c
  1646  000D70  0101               	movlb	1	; () banked
  1647  000D72  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1648  000D74  22DA               	addwfc	fsr2h,f,c
  1649  000D76  50DF               	movf	indf2,w,c
  1650  000D78  0101               	movlb	1	; () banked
  1651  000D7A  6FBD               	movwf	??_start_i2c_slave_reply& (0+255),b
  1652  000D7C  0101               	movlb	1	; () banked
  1653  000D7E  0101               	movlb	1	; () banked
  1654  000D80  51BF               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1655  000D82  0101               	movlb	1	; () banked
  1656  000D84  5DBD               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1657  000D86  A0D8               	btfss	status,0,c
  1658  000D88  D7AB               	goto	l3578
  1659                           
  1660                           ; BSR set to: 1
  1661                           ;my_i2c.c: 64: }
  1662                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  1663                           
  1664                           ; BSR set to: 1
  1665  000D8A  0101               	movlb	1	; () banked
  1666  000D8C  EE20 F019          	lfsr	2,25
  1667  000D90  0101               	movlb	1	; () banked
  1668  000D92  5100               	movf	_ic_ptr& (0+255),w,b
  1669  000D94  26D9               	addwf	fsr2l,f,c
  1670  000D96  0101               	movlb	1	; () banked
  1671  000D98  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1672  000D9A  22DA               	addwfc	fsr2h,f,c
  1673  000D9C  0101               	movlb	1	; () banked
  1674  000D9E  C1BF  FFDF         	movff	start_i2c_slave_reply@length,indf2
  1675                           
  1676                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  1677  000DA2  0101               	movlb	1	; () banked
  1678  000DA4  EE20 F01A          	lfsr	2,26
  1679  000DA8  0101               	movlb	1	; () banked
  1680  000DAA  5100               	movf	_ic_ptr& (0+255),w,b
  1681  000DAC  26D9               	addwf	fsr2l,f,c
  1682  000DAE  0101               	movlb	1	; () banked
  1683  000DB0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1684  000DB2  22DA               	addwfc	fsr2h,f,c
  1685  000DB4  0E01               	movlw	1
  1686  000DB6  6EDF               	movwf	indf2,c
  1687                           
  1688                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  1689  000DB8  0101               	movlb	1	; () banked
  1690  000DBA  EE20 F00F          	lfsr	2,15
  1691  000DBE  0101               	movlb	1	; () banked
  1692  000DC0  5100               	movf	_ic_ptr& (0+255),w,b
  1693  000DC2  26D9               	addwf	fsr2l,f,c
  1694  000DC4  0101               	movlb	1	; () banked
  1695  000DC6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1696  000DC8  22DA               	addwfc	fsr2h,f,c
  1697  000DCA  50DF               	movf	indf2,w,c
  1698  000DCC  6EC9               	movwf	4041,c	;volatile
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  1702  000DCE  88C6               	bsf	4038,4,c	;volatile
  1703                           
  1704                           ; BSR set to: 1
  1705  000DD0  0012               	return	
  1706  000DD2                     __end_of_start_i2c_slave_reply:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           prodh	equ	0xFF4
  1713                           prodl	equ	0xFF3
  1714                           postinc0	equ	0xFEE
  1715                           wreg	equ	0xFE8
  1716                           indf1	equ	0xFE7
  1717                           fsr1h	equ	0xFE2
  1718                           fsr1l	equ	0xFE1
  1719                           indf2	equ	0xFDF
  1720                           fsr2h	equ	0xFDA
  1721                           fsr2l	equ	0xFD9
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _resetAccumulators *****************
  1725 ;; Defined at:
  1726 ;;		line 80 in file "../src/sensorcomm.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;		None               void
  1733 ;; Registers used:
  1734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1740 ;;      Params:         0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0
  1743 ;;      Totals:         0       0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:   13
  1747 ;; This function calls:
  1748 ;;		_resetADacc
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text2
  1755  001C6E                     __ptext2:
  1756                           	opt stack 0
  1757  001C6E                     _resetAccumulators:
  1758                           	opt stack 16
  1759                           
  1760                           ;sensorcomm.c: 81: resetADacc();
  1761                           
  1762                           ; BSR set to: 1
  1763                           ;incstack = 0
  1764  001C6E  EC13  F00B         	call	_resetADacc	;wreg free
  1765  001C72  0012               	return	
  1766  001C74                     __end_of_resetAccumulators:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           prodh	equ	0xFF4
  1773                           prodl	equ	0xFF3
  1774                           postinc0	equ	0xFEE
  1775                           wreg	equ	0xFE8
  1776                           indf1	equ	0xFE7
  1777                           fsr1h	equ	0xFE2
  1778                           fsr1l	equ	0xFE1
  1779                           indf2	equ	0xFDF
  1780                           fsr2h	equ	0xFDA
  1781                           fsr2l	equ	0xFD9
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _resetADacc *****************
  1785 ;; Defined at:
  1786 ;;		line 72 in file "../src/sensorcomm.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  i               2   26[BANK1 ] int 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;		None               void
  1793 ;; Registers used:
  1794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0       0       2       0       0
  1802 ;;      Temps:          0       0       3       0       0
  1803 ;;      Totals:         0       0       5       0       0
  1804 ;;Total ram usage:        5 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:   12
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_resetAccumulators
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text3
  1815  001626                     __ptext3:
  1816                           	opt stack 0
  1817  001626                     _resetADacc:
  1818                           	opt stack 16
  1819                           
  1820                           ;sensorcomm.c: 73: int i = 0;
  1821                           
  1822                           ;incstack = 0
  1823  001626  0E00               	movlw	0
  1824  001628  0101               	movlb	1	; () banked
  1825  00162A  0101               	movlb	1	; () banked
  1826  00162C  6FBF               	movwf	(resetADacc@i+1)& (0+255),b
  1827  00162E  0E00               	movlw	0
  1828  001630  0101               	movlb	1	; () banked
  1829  001632  6FBE               	movwf	resetADacc@i& (0+255),b
  1830  001634  D010               	goto	l3842
  1831  001636                     l3838:
  1832                           
  1833                           ; BSR set to: 1
  1834                           ;sensorcomm.c: 75: ADacc.data[i].data = 0;
  1835  001636  0E40               	movlw	low (_ADacc+1)
  1836  001638  0101               	movlb	1	; () banked
  1837  00163A  0101               	movlb	1	; () banked
  1838  00163C  25BE               	addwf	resetADacc@i& (0+255),w,b
  1839  00163E  6ED9               	movwf	fsr2l,c
  1840  001640  0E00               	movlw	high (_ADacc+1)
  1841  001642  0101               	movlb	1	; () banked
  1842  001644  0101               	movlb	1	; () banked
  1843  001646  21BF               	addwfc	(resetADacc@i+1)& (0+255),w,b
  1844  001648  6EDA               	movwf	fsr2h,c
  1845  00164A  0E00               	movlw	0
  1846  00164C  6EDF               	movwf	indf2,c
  1847                           
  1848                           ; BSR set to: 1
  1849  00164E  0101               	movlb	1	; () banked
  1850  001650  0101               	movlb	1	; () banked
  1851  001652  4BBE               	infsnz	resetADacc@i& (0+255),f,b
  1852  001654  2BBF               	incf	(resetADacc@i+1)& (0+255),f,b
  1853  001656                     l3842:
  1854                           
  1855                           ; BSR set to: 1
  1856  001656  503F               	movf	_ADacc,w,c
  1857  001658  0101               	movlb	1	; () banked
  1858  00165A  6FBB               	movwf	??_resetADacc& (0+255),b
  1859  00165C  6BBC               	clrf	(??_resetADacc+1)& (0+255),b
  1860  00165E  0101               	movlb	1	; () banked
  1861  001660  0101               	movlb	1	; () banked
  1862  001662  51BF               	movf	(resetADacc@i+1)& (0+255),w,b
  1863  001664  0A80               	xorlw	128
  1864  001666  0101               	movlb	1	; () banked
  1865  001668  6FBD               	movwf	(??_resetADacc+2)& (0+255),b
  1866  00166A  51BB               	movf	??_resetADacc& (0+255),w,b
  1867  00166C  0101               	movlb	1	; () banked
  1868  00166E  0101               	movlb	1	; () banked
  1869  001670  5DBE               	subwf	resetADacc@i& (0+255),w,b
  1870  001672  0101               	movlb	1	; () banked
  1871  001674  51BC               	movf	(??_resetADacc+1)& (0+255),w,b
  1872  001676  0A80               	xorlw	128
  1873  001678  0101               	movlb	1	; () banked
  1874  00167A  59BD               	subwfb	(??_resetADacc+2)& (0+255),w,b
  1875  00167C  A0D8               	btfss	status,0,c
  1876  00167E  D7DB               	goto	l3838
  1877                           
  1878                           ; BSR set to: 1
  1879                           ;sensorcomm.c: 76: }
  1880                           ;sensorcomm.c: 77: ADacc.len = 0;
  1881                           
  1882                           ; BSR set to: 1
  1883  001680  0101               	movlb	1	; () banked
  1884  001682  6FBB               	movwf	??_resetADacc& (0+255),b
  1885  001684  0E00               	movlw	0
  1886  001686  6E3F               	movwf	_ADacc,c
  1887  001688  0101               	movlb	1	; () banked
  1888  00168A  51BB               	movf	??_resetADacc& (0+255),w,b
  1889                           
  1890                           ; BSR set to: 1
  1891  00168C  0012               	return	
  1892  00168E                     __end_of_resetADacc:
  1893                           	opt stack 0
  1894                           tblptru	equ	0xFF8
  1895                           tblptrh	equ	0xFF7
  1896                           tblptrl	equ	0xFF6
  1897                           tablat	equ	0xFF5
  1898                           prodh	equ	0xFF4
  1899                           prodl	equ	0xFF3
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           indf1	equ	0xFE7
  1903                           fsr1h	equ	0xFE2
  1904                           fsr1l	equ	0xFE1
  1905                           indf2	equ	0xFDF
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8
  1909                           
  1910 ;; *************** function _init_queues *****************
  1911 ;; Defined at:
  1912 ;;		line 195 in file "../src/messages.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;		None               void
  1919 ;; Registers used:
  1920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1926 ;;      Params:         0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0
  1928 ;;      Temps:          0       0       1       0       0
  1929 ;;      Totals:         0       0       1       0       0
  1930 ;;Total ram usage:        1 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:   13
  1933 ;; This function calls:
  1934 ;;		_init_queue
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text4
  1941  0014E6                     __ptext4:
  1942                           	opt stack 0
  1943  0014E6                     _init_queues:
  1944                           	opt stack 16
  1945                           
  1946                           ;messages.c: 196: MQ_Main_Willing_to_block = 0;
  1947                           
  1948                           ; BSR set to: 1
  1949                           ;incstack = 0
  1950  0014E6  0101               	movlb	1	; () banked
  1951  0014E8  6FBF               	movwf	??_init_queues& (0+255),b
  1952  0014EA  0E00               	movlw	0
  1953  0014EC  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  1954  0014EE  0101               	movlb	1	; () banked
  1955  0014F0  51BF               	movf	??_init_queues& (0+255),w,b
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;messages.c: 197: init_queue(&ToMainLow_MQ);
  1959  0014F2  0101               	movlb	1	; () banked
  1960  0014F4  0E01               	movlw	high _ToMainLow_MQ
  1961  0014F6  0101               	movlb	1	; () banked
  1962  0014F8  0101               	movlb	1	; () banked
  1963  0014FA  6FBC               	movwf	(init_queue@qptr+1)& (0+255),b
  1964  0014FC  0101               	movlb	1	; () banked
  1965  0014FE  0E6E               	movlw	low _ToMainLow_MQ
  1966  001500  0101               	movlb	1	; () banked
  1967  001502  0101               	movlb	1	; () banked
  1968  001504  6FBB               	movwf	init_queue@qptr& (0+255),b
  1969  001506  ECFD  F009         	call	_init_queue	;wreg free
  1970                           
  1971                           ;messages.c: 198: init_queue(&ToMainHigh_MQ);
  1972  00150A  0101               	movlb	1	; () banked
  1973  00150C  0E01               	movlw	high _ToMainHigh_MQ
  1974  00150E  0101               	movlb	1	; () banked
  1975  001510  0101               	movlb	1	; () banked
  1976  001512  6FBC               	movwf	(init_queue@qptr+1)& (0+255),b
  1977  001514  0101               	movlb	1	; () banked
  1978  001516  0E38               	movlw	low _ToMainHigh_MQ
  1979  001518  0101               	movlb	1	; () banked
  1980  00151A  0101               	movlb	1	; () banked
  1981  00151C  6FBB               	movwf	init_queue@qptr& (0+255),b
  1982  00151E  ECFD  F009         	call	_init_queue	;wreg free
  1983                           
  1984                           ;messages.c: 199: init_queue(&FromMainLow_MQ);
  1985  001522  0101               	movlb	1	; () banked
  1986  001524  0E01               	movlw	high _FromMainLow_MQ
  1987  001526  0101               	movlb	1	; () banked
  1988  001528  0101               	movlb	1	; () banked
  1989  00152A  6FBC               	movwf	(init_queue@qptr+1)& (0+255),b
  1990  00152C  0101               	movlb	1	; () banked
  1991  00152E  0E02               	movlw	low _FromMainLow_MQ
  1992  001530  0101               	movlb	1	; () banked
  1993  001532  0101               	movlb	1	; () banked
  1994  001534  6FBB               	movwf	init_queue@qptr& (0+255),b
  1995  001536  ECFD  F009         	call	_init_queue	;wreg free
  1996                           
  1997                           ;messages.c: 200: init_queue(&FromMainHigh_MQ);
  1998  00153A  0102               	movlb	2	; () banked
  1999  00153C  0E02               	movlw	high _FromMainHigh_MQ
  2000  00153E  0101               	movlb	1	; () banked
  2001  001540  0101               	movlb	1	; () banked
  2002  001542  6FBC               	movwf	(init_queue@qptr+1)& (0+255),b
  2003  001544  0102               	movlb	2	; () banked
  2004  001546  0E3B               	movlw	low _FromMainHigh_MQ
  2005  001548  0101               	movlb	1	; () banked
  2006  00154A  0101               	movlb	1	; () banked
  2007  00154C  6FBB               	movwf	init_queue@qptr& (0+255),b
  2008  00154E  ECFD  F009         	call	_init_queue	;wreg free
  2009  001552  0012               	return	
  2010  001554                     __end_of_init_queues:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           prodh	equ	0xFF4
  2017                           prodl	equ	0xFF3
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           indf1	equ	0xFE7
  2021                           fsr1h	equ	0xFE2
  2022                           fsr1l	equ	0xFE1
  2023                           indf2	equ	0xFDF
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _init_queue *****************
  2029 ;; Defined at:
  2030 ;;		line 15 in file "../src/messages.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  qptr            2   23[BANK1 ] PTR struct __msg_queue
  2033 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  i               1   26[BANK1 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;		None               void
  2038 ;; Registers used:
  2039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2045 ;;      Params:         0       0       2       0       0
  2046 ;;      Locals:         0       0       1       0       0
  2047 ;;      Temps:          0       0       1       0       0
  2048 ;;      Totals:         0       0       4       0       0
  2049 ;;Total ram usage:        4 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:   12
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_init_queues
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text5
  2060  0013FA                     __ptext5:
  2061                           	opt stack 0
  2062  0013FA                     _init_queue:
  2063                           	opt stack 16
  2064                           
  2065                           ;messages.c: 16: unsigned char i;
  2066                           ;messages.c: 18: qptr->cur_write_ind = 0;
  2067                           
  2068                           ;incstack = 0
  2069  0013FA  0101               	movlb	1	; () banked
  2070  0013FC  EE20 F034          	lfsr	2,52
  2071  001400  0101               	movlb	1	; () banked
  2072  001402  51BB               	movf	init_queue@qptr& (0+255),w,b
  2073  001404  26D9               	addwf	fsr2l,f,c
  2074  001406  0101               	movlb	1	; () banked
  2075  001408  51BC               	movf	(init_queue@qptr+1)& (0+255),w,b
  2076  00140A  22DA               	addwfc	fsr2h,f,c
  2077  00140C  0E00               	movlw	0
  2078  00140E  6EDF               	movwf	indf2,c
  2079                           
  2080                           ;messages.c: 19: qptr->cur_read_ind = 0;
  2081  001410  0101               	movlb	1	; () banked
  2082  001412  EE20 F035          	lfsr	2,53
  2083  001416  0101               	movlb	1	; () banked
  2084  001418  51BB               	movf	init_queue@qptr& (0+255),w,b
  2085  00141A  26D9               	addwf	fsr2l,f,c
  2086  00141C  0101               	movlb	1	; () banked
  2087  00141E  51BC               	movf	(init_queue@qptr+1)& (0+255),w,b
  2088  001420  22DA               	addwfc	fsr2h,f,c
  2089  001422  0E00               	movlw	0
  2090  001424  6EDF               	movwf	indf2,c
  2091                           
  2092                           ; BSR set to: 1
  2093                           ;messages.c: 20: for (i = 0; i < 4; i++) {
  2094  001426  0101               	movlb	1	; () banked
  2095  001428  6FBD               	movwf	??_init_queue& (0+255),b
  2096  00142A  0E00               	movlw	0
  2097  00142C  0101               	movlb	1	; () banked
  2098  00142E  0101               	movlb	1	; () banked
  2099  001430  6FBE               	movwf	init_queue@i& (0+255),b
  2100  001432  0101               	movlb	1	; () banked
  2101  001434  51BD               	movf	??_init_queue& (0+255),w,b
  2102                           
  2103                           ; BSR set to: 1
  2104  001436  0E03               	movlw	3
  2105  001438  0101               	movlb	1	; () banked
  2106  00143A  0101               	movlb	1	; () banked
  2107  00143C  65BE               	cpfsgt	init_queue@i& (0+255),b
  2108  00143E  D001               	goto	l3604
  2109  001440  0012               	return	
  2110  001442                     l3604:
  2111                           
  2112                           ; BSR set to: 1
  2113                           ;messages.c: 21: qptr->queue[i].full = 0;
  2114  001442  0101               	movlb	1	; () banked
  2115  001444  0101               	movlb	1	; () banked
  2116  001446  51BE               	movf	init_queue@i& (0+255),w,b
  2117  001448  0D0D               	mullw	13
  2118  00144A  50F3               	movf	prodl,w,c
  2119  00144C  0101               	movlb	1	; () banked
  2120  00144E  0101               	movlb	1	; () banked
  2121  001450  25BB               	addwf	init_queue@qptr& (0+255),w,b
  2122  001452  6ED9               	movwf	fsr2l,c
  2123  001454  50F4               	movf	prodh,w,c
  2124  001456  0101               	movlb	1	; () banked
  2125  001458  0101               	movlb	1	; () banked
  2126  00145A  21BC               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2127  00145C  6EDA               	movwf	fsr2h,c
  2128  00145E  0E00               	movlw	0
  2129  001460  6EDF               	movwf	indf2,c
  2130                           
  2131                           ; BSR set to: 1
  2132  001462  0101               	movlb	1	; () banked
  2133  001464  0101               	movlb	1	; () banked
  2134  001466  2BBE               	incf	init_queue@i& (0+255),f,b
  2135                           
  2136                           ; BSR set to: 1
  2137  001468  0E03               	movlw	3
  2138  00146A  0101               	movlb	1	; () banked
  2139  00146C  0101               	movlb	1	; () banked
  2140  00146E  65BE               	cpfsgt	init_queue@i& (0+255),b
  2141  001470  D7E8               	goto	l3604
  2142  001472  0012               	return	
  2143  001474                     __end_of_init_queue:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           prodh	equ	0xFF4
  2150                           prodl	equ	0xFF3
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           indf1	equ	0xFE7
  2154                           fsr1h	equ	0xFE2
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _init_i2c *****************
  2162 ;; Defined at:
  2163 ;;		line 294 in file "../src/my_i2c.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  ic              2   23[BANK1 ] PTR struct __i2c_comm
  2166 ;;		 -> main@ic(28), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;		None               void
  2171 ;; Registers used:
  2172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2178 ;;      Params:         0       0       2       0       0
  2179 ;;      Locals:         0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0
  2181 ;;      Totals:         0       0       2       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:   12
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text6
  2193  001554                     __ptext6:
  2194                           	opt stack 0
  2195  001554                     _init_i2c:
  2196                           	opt stack 17
  2197                           
  2198                           ;my_i2c.c: 295: ic_ptr = ic;
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;incstack = 0
  2202  001554  0101               	movlb	1	; () banked
  2203  001556  0101               	movlb	1	; () banked
  2204  001558  C1BC  F101         	movff	init_i2c@ic+1,_ic_ptr+1
  2205  00155C  0101               	movlb	1	; () banked
  2206  00155E  0101               	movlb	1	; () banked
  2207  001560  C1BB  F100         	movff	init_i2c@ic,_ic_ptr
  2208                           
  2209                           ; BSR set to: 1
  2210                           ;my_i2c.c: 296: ic_ptr->buflen = 0;
  2211  001564  0101               	movlb	1	; () banked
  2212  001566  EE20 F00A          	lfsr	2,10
  2213  00156A  0101               	movlb	1	; () banked
  2214  00156C  5100               	movf	_ic_ptr& (0+255),w,b
  2215  00156E  26D9               	addwf	fsr2l,f,c
  2216  001570  0101               	movlb	1	; () banked
  2217  001572  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2218  001574  22DA               	addwfc	fsr2h,f,c
  2219  001576  0E00               	movlw	0
  2220  001578  6EDF               	movwf	indf2,c
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;my_i2c.c: 297: ic_ptr->event_count = 0;
  2224  00157A  0101               	movlb	1	; () banked
  2225  00157C  EE20 F00B          	lfsr	2,11
  2226  001580  0101               	movlb	1	; () banked
  2227  001582  5100               	movf	_ic_ptr& (0+255),w,b
  2228  001584  26D9               	addwf	fsr2l,f,c
  2229  001586  0101               	movlb	1	; () banked
  2230  001588  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2231  00158A  22DA               	addwfc	fsr2h,f,c
  2232  00158C  0E00               	movlw	0
  2233  00158E  6EDF               	movwf	indf2,c
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;my_i2c.c: 298: ic_ptr->status = 0x5;
  2237  001590  0101               	movlb	1	; () banked
  2238  001592  EE20 F00C          	lfsr	2,12
  2239  001596  0101               	movlb	1	; () banked
  2240  001598  5100               	movf	_ic_ptr& (0+255),w,b
  2241  00159A  26D9               	addwf	fsr2l,f,c
  2242  00159C  0101               	movlb	1	; () banked
  2243  00159E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2244  0015A0  22DA               	addwfc	fsr2h,f,c
  2245  0015A2  0E05               	movlw	5
  2246  0015A4  6EDF               	movwf	indf2,c
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;my_i2c.c: 299: ic_ptr->error_count = 0;
  2250  0015A6  0101               	movlb	1	; () banked
  2251  0015A8  EE20 F00E          	lfsr	2,14
  2252  0015AC  0101               	movlb	1	; () banked
  2253  0015AE  5100               	movf	_ic_ptr& (0+255),w,b
  2254  0015B0  26D9               	addwf	fsr2l,f,c
  2255  0015B2  0101               	movlb	1	; () banked
  2256  0015B4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2257  0015B6  22DA               	addwfc	fsr2h,f,c
  2258  0015B8  0E00               	movlw	0
  2259  0015BA  6EDF               	movwf	indf2,c
  2260                           
  2261                           ; BSR set to: 1
  2262  0015BC  0012               	return	
  2263  0015BE                     __end_of_init_i2c:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           postinc0	equ	0xFEE
  2272                           wreg	equ	0xFE8
  2273                           indf1	equ	0xFE7
  2274                           fsr1h	equ	0xFE2
  2275                           fsr1l	equ	0xFE1
  2276                           indf2	equ	0xFDF
  2277                           fsr2h	equ	0xFDA
  2278                           fsr2l	equ	0xFD9
  2279                           status	equ	0xFD8
  2280                           
  2281 ;; *************** function _i2c_configure_slave *****************
  2282 ;; Defined at:
  2283 ;;		line 305 in file "../src/my_i2c.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  addr            1    wreg     unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  addr            1   23[BANK1 ] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;		None               void
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2297 ;;      Params:         0       0       0       0       0
  2298 ;;      Locals:         0       0       1       0       0
  2299 ;;      Temps:          0       0       0       0       0
  2300 ;;      Totals:         0       0       1       0       0
  2301 ;;Total ram usage:        1 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:   12
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text7
  2312  001B54                     __ptext7:
  2313                           	opt stack 0
  2314  001B54                     _i2c_configure_slave:
  2315                           	opt stack 17
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;incstack = 0
  2319                           ;i2c_configure_slave@addr stored from wreg
  2320  001B54  CFE8 F1BB          	movff	wreg,i2c_configure_slave@addr
  2321                           
  2322                           ;my_i2c.c: 317: TRISCbits.TRISC3 = 1;
  2323  001B58  8694               	bsf	3988,3,c	;volatile
  2324                           
  2325                           ;my_i2c.c: 318: TRISCbits.TRISC4 = 1;
  2326  001B5A  8894               	bsf	3988,4,c	;volatile
  2327                           
  2328                           ;my_i2c.c: 323: SSPADD = addr;
  2329  001B5C  C1BB  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2330                           
  2331                           ;my_i2c.c: 325: SSPSTAT = 0x0;
  2332  001B60  0E00               	movlw	0
  2333  001B62  6EC7               	movwf	4039,c	;volatile
  2334                           
  2335                           ;my_i2c.c: 326: SSPCON1 = 0x0;
  2336  001B64  0E00               	movlw	0
  2337  001B66  6EC6               	movwf	4038,c	;volatile
  2338                           
  2339                           ;my_i2c.c: 327: SSPCON2 = 0x0;
  2340  001B68  0E00               	movlw	0
  2341  001B6A  6EC5               	movwf	4037,c	;volatile
  2342                           
  2343                           ;my_i2c.c: 328: SSPCON1 |= 0x0E;
  2344  001B6C  0E0E               	movlw	14
  2345  001B6E  12C6               	iorwf	4038,f,c	;volatile
  2346                           
  2347                           ;my_i2c.c: 329: SSPSTAT |= 0b10000000;
  2348  001B70  8EC7               	bsf	4039,7,c	;volatile
  2349                           
  2350                           ;my_i2c.c: 332: TRISCbits.TRISC3 = 1;
  2351  001B72  8694               	bsf	3988,3,c	;volatile
  2352                           
  2353                           ;my_i2c.c: 333: TRISCbits.TRISC4 = 1;
  2354  001B74  8894               	bsf	3988,4,c	;volatile
  2355                           
  2356                           ;my_i2c.c: 354: SSPCON2bits.SEN = 1;
  2357  001B76  80C5               	bsf	4037,0,c	;volatile
  2358                           
  2359                           ;my_i2c.c: 355: SSPCON1 |= 0b00100000;
  2360  001B78  8AC6               	bsf	4038,5,c	;volatile
  2361  001B7A  0012               	return	
  2362  001B7C                     __end_of_i2c_configure_slave:
  2363                           	opt stack 0
  2364                           tblptru	equ	0xFF8
  2365                           tblptrh	equ	0xFF7
  2366                           tblptrl	equ	0xFF6
  2367                           tablat	equ	0xFF5
  2368                           prodh	equ	0xFF4
  2369                           prodl	equ	0xFF3
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           indf1	equ	0xFE7
  2373                           fsr1h	equ	0xFE2
  2374                           fsr1l	equ	0xFE1
  2375                           indf2	equ	0xFDF
  2376                           fsr2h	equ	0xFDA
  2377                           fsr2l	equ	0xFD9
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _enable_interrupts *****************
  2381 ;; Defined at:
  2382 ;;		line 15 in file "../src/interrupts.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;		None               void
  2389 ;; Registers used:
  2390 ;;		None
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2396 ;;      Params:         0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0
  2399 ;;      Totals:         0       0       0       0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:   12
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text8
  2411  001C66                     __ptext8:
  2412                           	opt stack 0
  2413  001C66                     _enable_interrupts:
  2414                           	opt stack 17
  2415                           
  2416                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  2417                           
  2418                           ;incstack = 0
  2419  001C66  8ED0               	bsf	4048,7,c	;volatile
  2420                           
  2421                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  2422  001C68  8EF2               	bsf	intcon,7,c	;volatile
  2423                           
  2424                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  2425  001C6A  8CF2               	bsf	intcon,6,c	;volatile
  2426  001C6C  0012               	return	
  2427  001C6E                     __end_of_enable_interrupts:
  2428                           	opt stack 0
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           prodh	equ	0xFF4
  2434                           prodl	equ	0xFF3
  2435                           intcon	equ	0xFF2
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           indf1	equ	0xFE7
  2439                           fsr1h	equ	0xFE2
  2440                           fsr1l	equ	0xFE1
  2441                           indf2	equ	0xFDF
  2442                           fsr2h	equ	0xFDA
  2443                           fsr2l	equ	0xFD9
  2444                           status	equ	0xFD8
  2445                           
  2446 ;; *************** function _block_on_To_msgqueues *****************
  2447 ;; Defined at:
  2448 ;;		line 259 in file "../src/messages.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;		None               void
  2455 ;; Registers used:
  2456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2462 ;;      Params:         0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0
  2464 ;;      Temps:          0       0       1       0       0
  2465 ;;      Totals:         0       0       1       0       0
  2466 ;;Total ram usage:        1 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:   15
  2469 ;; This function calls:
  2470 ;;		_Delay1KTCYx
  2471 ;;		_check_msg
  2472 ;;		_in_main
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text9
  2479  00137C                     __ptext9:
  2480                           	opt stack 0
  2481  00137C                     _block_on_To_msgqueues:
  2482                           	opt stack 14
  2483                           
  2484                           ;messages.c: 260: if (!in_main()) {
  2485                           
  2486                           ;incstack = 0
  2487  00137C  EC10  F00C         	call	_in_main	;wreg free
  2488  001380  0101               	movlb	1	; () banked
  2489  001382  0101               	movlb	1	; () banked
  2490  001384  51C0               	movf	(?_in_main+1)& (0+255),w,b
  2491  001386  0101               	movlb	1	; () banked
  2492  001388  11BF               	iorwf	?_in_main& (0+255),w,b
  2493  00138A  B4D8               	btfsc	status,2,c
  2494  00138C  0012               	return	
  2495                           
  2496                           ; BSR set to: 1
  2497                           ;messages.c: 262: }
  2498                           ;messages.c: 264: MQ_Main_Willing_to_block = 1;
  2499                           
  2500                           ; BSR set to: 1
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;messages.c: 261: return;
  2504  00138E  0101               	movlb	1	; () banked
  2505  001390  6FC1               	movwf	??_block_on_To_msgqueues& (0+255),b
  2506  001392  0E01               	movlw	1
  2507  001394  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  2508  001396  0101               	movlb	1	; () banked
  2509  001398  51C1               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2510  00139A                     l3558:
  2511                           
  2512                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  2513  00139A  0101               	movlb	1	; () banked
  2514  00139C  0E01               	movlw	high _ToMainHigh_MQ
  2515  00139E  0101               	movlb	1	; () banked
  2516  0013A0  0101               	movlb	1	; () banked
  2517  0013A2  6FBC               	movwf	(check_msg@qptr+1)& (0+255),b
  2518  0013A4  0101               	movlb	1	; () banked
  2519  0013A6  0E38               	movlw	low _ToMainHigh_MQ
  2520  0013A8  0101               	movlb	1	; () banked
  2521  0013AA  0101               	movlb	1	; () banked
  2522  0013AC  6FBB               	movwf	check_msg@qptr& (0+255),b
  2523  0013AE  EC33  F00D         	call	_check_msg	;wreg free
  2524  0013B2  0900               	iorlw	0
  2525  0013B4  B4D8               	btfsc	status,2,c
  2526  0013B6  D007               	goto	l3564
  2527                           
  2528                           ;messages.c: 267: MQ_Main_Willing_to_block = 0;
  2529  0013B8  0101               	movlb	1	; () banked
  2530  0013BA  6FC1               	movwf	??_block_on_To_msgqueues& (0+255),b
  2531  0013BC  0E00               	movlw	0
  2532  0013BE  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  2533  0013C0  0101               	movlb	1	; () banked
  2534  0013C2  51C1               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2535  0013C4  0012               	return	
  2536  0013C6                     l3564:
  2537                           
  2538                           ;messages.c: 272: }
  2539                           ;messages.c: 273: if (check_msg(&ToMainLow_MQ)) {
  2540  0013C6  0101               	movlb	1	; () banked
  2541  0013C8  0E01               	movlw	high _ToMainLow_MQ
  2542  0013CA  0101               	movlb	1	; () banked
  2543  0013CC  0101               	movlb	1	; () banked
  2544  0013CE  6FBC               	movwf	(check_msg@qptr+1)& (0+255),b
  2545  0013D0  0101               	movlb	1	; () banked
  2546  0013D2  0E6E               	movlw	low _ToMainLow_MQ
  2547  0013D4  0101               	movlb	1	; () banked
  2548  0013D6  0101               	movlb	1	; () banked
  2549  0013D8  6FBB               	movwf	check_msg@qptr& (0+255),b
  2550  0013DA  EC33  F00D         	call	_check_msg	;wreg free
  2551  0013DE  0900               	iorlw	0
  2552  0013E0  B4D8               	btfsc	status,2,c
  2553  0013E2  D007               	goto	l3570
  2554                           
  2555                           ;messages.c: 274: MQ_Main_Willing_to_block = 0;
  2556  0013E4  0101               	movlb	1	; () banked
  2557  0013E6  6FC1               	movwf	??_block_on_To_msgqueues& (0+255),b
  2558  0013E8  0E00               	movlw	0
  2559  0013EA  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  2560  0013EC  0101               	movlb	1	; () banked
  2561  0013EE  51C1               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2562  0013F0  0012               	return	
  2563  0013F2                     l3570:
  2564                           
  2565                           ;messages.c: 279: }
  2566                           ;messages.c: 280: Delay1KTCYx(10);
  2567  0013F2  0E0A               	movlw	10
  2568  0013F4  ECF5  F00D         	call	_Delay1KTCYx
  2569  0013F8  D7D0               	goto	l3558
  2570  0013FA                     __end_of_block_on_To_msgqueues:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           intcon	equ	0xFF2
  2579                           postinc0	equ	0xFEE
  2580                           wreg	equ	0xFE8
  2581                           indf1	equ	0xFE7
  2582                           fsr1h	equ	0xFE2
  2583                           fsr1l	equ	0xFE1
  2584                           indf2	equ	0xFDF
  2585                           fsr2h	equ	0xFDA
  2586                           fsr2l	equ	0xFD9
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _in_main *****************
  2590 ;; Defined at:
  2591 ;;		line 41 in file "../src/interrupts.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2   27[BANK1 ] int 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2605 ;;      Params:         0       0       2       0       0
  2606 ;;      Locals:         0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0
  2608 ;;      Totals:         0       0       2       0       0
  2609 ;;Total ram usage:        2 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:   14
  2612 ;; This function calls:
  2613 ;;		_in_high_int
  2614 ;;		_in_low_int
  2615 ;; This function is called by:
  2616 ;;		_block_on_To_msgqueues
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text10
  2621  001820                     __ptext10:
  2622                           	opt stack 0
  2623  001820                     _in_main:
  2624                           	opt stack 14
  2625                           
  2626                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  2627                           
  2628                           ;incstack = 0
  2629  001820  ECED  F00B         	call	_in_low_int	;wreg free
  2630  001824  0101               	movlb	1	; () banked
  2631  001826  0101               	movlb	1	; () banked
  2632  001828  51BE               	movf	(?_in_low_int+1)& (0+255),w,b
  2633  00182A  0101               	movlb	1	; () banked
  2634  00182C  11BD               	iorwf	?_in_low_int& (0+255),w,b
  2635  00182E  A4D8               	btfss	status,2,c
  2636  001830  D011               	goto	l3192
  2637                           
  2638                           ; BSR set to: 1
  2639  001832  EC0A  F00E         	call	_in_high_int	;wreg free
  2640  001836  0101               	movlb	1	; () banked
  2641  001838  0101               	movlb	1	; () banked
  2642  00183A  51BC               	movf	(?_in_high_int+1)& (0+255),w,b
  2643  00183C  0101               	movlb	1	; () banked
  2644  00183E  11BB               	iorwf	?_in_high_int& (0+255),w,b
  2645  001840  A4D8               	btfss	status,2,c
  2646  001842  D008               	goto	l3192
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;interrupts.c: 43: return (1);
  2650  001844  0E00               	movlw	0
  2651  001846  0101               	movlb	1	; () banked
  2652  001848  0101               	movlb	1	; () banked
  2653  00184A  6FC0               	movwf	(?_in_main+1)& (0+255),b
  2654  00184C  0E01               	movlw	1
  2655  00184E  0101               	movlb	1	; () banked
  2656  001850  6FBF               	movwf	?_in_main& (0+255),b
  2657  001852  0012               	return	
  2658  001854                     l3192:
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;interrupts.c: 45: return (0);
  2662  001854  0E00               	movlw	0
  2663  001856  0101               	movlb	1	; () banked
  2664  001858  0101               	movlb	1	; () banked
  2665  00185A  6FC0               	movwf	(?_in_main+1)& (0+255),b
  2666  00185C  0E00               	movlw	0
  2667  00185E  0101               	movlb	1	; () banked
  2668  001860  6FBF               	movwf	?_in_main& (0+255),b
  2669  001862  0012               	return	
  2670  001864                     __end_of_in_main:
  2671                           	opt stack 0
  2672                           tblptru	equ	0xFF8
  2673                           tblptrh	equ	0xFF7
  2674                           tblptrl	equ	0xFF6
  2675                           tablat	equ	0xFF5
  2676                           prodh	equ	0xFF4
  2677                           prodl	equ	0xFF3
  2678                           intcon	equ	0xFF2
  2679                           postinc0	equ	0xFEE
  2680                           wreg	equ	0xFE8
  2681                           indf1	equ	0xFE7
  2682                           fsr1h	equ	0xFE2
  2683                           fsr1l	equ	0xFE1
  2684                           indf2	equ	0xFDF
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _in_low_int *****************
  2690 ;; Defined at:
  2691 ;;		line 31 in file "../src/interrupts.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2   25[BANK1 ] int 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2705 ;;      Params:         0       0       2       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0
  2708 ;;      Totals:         0       0       2       0       0
  2709 ;;Total ram usage:        2 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:   13
  2712 ;; This function calls:
  2713 ;;		_in_high_int
  2714 ;; This function is called by:
  2715 ;;		_in_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text11
  2720  0017DA                     __ptext11:
  2721                           	opt stack 0
  2722  0017DA                     _in_low_int:
  2723                           	opt stack 14
  2724                           
  2725                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;incstack = 0
  2729  0017DA  ACF2               	btfss	intcon,6,c	;volatile
  2730  0017DC  D008               	goto	l3170
  2731                           
  2732                           ;interrupts.c: 33: return (0);
  2733  0017DE  0E00               	movlw	0
  2734  0017E0  0101               	movlb	1	; () banked
  2735  0017E2  0101               	movlb	1	; () banked
  2736  0017E4  6FBE               	movwf	(?_in_low_int+1)& (0+255),b
  2737  0017E6  0E00               	movlw	0
  2738  0017E8  0101               	movlb	1	; () banked
  2739  0017EA  6FBD               	movwf	?_in_low_int& (0+255),b
  2740  0017EC  0012               	return	
  2741  0017EE                     l3170:
  2742  0017EE  EC0A  F00E         	call	_in_high_int	;wreg free
  2743  0017F2  0101               	movlb	1	; () banked
  2744  0017F4  0101               	movlb	1	; () banked
  2745  0017F6  51BC               	movf	(?_in_high_int+1)& (0+255),w,b
  2746  0017F8  0101               	movlb	1	; () banked
  2747  0017FA  11BB               	iorwf	?_in_high_int& (0+255),w,b
  2748  0017FC  B4D8               	btfsc	status,2,c
  2749  0017FE  D008               	goto	l3178
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;interrupts.c: 35: return (0);
  2753  001800  0E00               	movlw	0
  2754  001802  0101               	movlb	1	; () banked
  2755  001804  0101               	movlb	1	; () banked
  2756  001806  6FBE               	movwf	(?_in_low_int+1)& (0+255),b
  2757  001808  0E00               	movlw	0
  2758  00180A  0101               	movlb	1	; () banked
  2759  00180C  6FBD               	movwf	?_in_low_int& (0+255),b
  2760  00180E  0012               	return	
  2761  001810                     l3178:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;interrupts.c: 37: return (1);
  2765  001810  0E00               	movlw	0
  2766  001812  0101               	movlb	1	; () banked
  2767  001814  0101               	movlb	1	; () banked
  2768  001816  6FBE               	movwf	(?_in_low_int+1)& (0+255),b
  2769  001818  0E01               	movlw	1
  2770  00181A  0101               	movlb	1	; () banked
  2771  00181C  6FBD               	movwf	?_in_low_int& (0+255),b
  2772  00181E  0012               	return	
  2773  001820                     __end_of_in_low_int:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           prodh	equ	0xFF4
  2780                           prodl	equ	0xFF3
  2781                           intcon	equ	0xFF2
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           indf1	equ	0xFE7
  2785                           fsr1h	equ	0xFE2
  2786                           fsr1l	equ	0xFE1
  2787                           indf2	equ	0xFDF
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function _in_high_int *****************
  2793 ;; Defined at:
  2794 ;;		line 23 in file "../src/interrupts.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  2   23[BANK1 ] int 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2808 ;;      Params:         0       0       2       0       0
  2809 ;;      Locals:         0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0
  2811 ;;      Totals:         0       0       2       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:   12
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_in_low_int
  2819 ;;		_in_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text12
  2824  001C14                     __ptext12:
  2825                           	opt stack 0
  2826  001C14                     _in_high_int:
  2827                           	opt stack 14
  2828                           
  2829                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  2830                           
  2831                           ; BSR set to: 1
  2832                           ;incstack = 0
  2833  001C14  0E00               	movlw	0
  2834  001C16  AEF2               	btfss	intcon,7,c	;volatile
  2835  001C18  0E01               	movlw	1
  2836  001C1A  0101               	movlb	1	; () banked
  2837  001C1C  0101               	movlb	1	; () banked
  2838  001C1E  6FBB               	movwf	?_in_high_int& (0+255),b
  2839  001C20  0101               	movlb	1	; () banked
  2840  001C22  6BBC               	clrf	(?_in_high_int+1)& (0+255),b
  2841  001C24  0012               	return	
  2842  001C26                     __end_of_in_high_int:
  2843                           	opt stack 0
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           intcon	equ	0xFF2
  2851                           postinc0	equ	0xFEE
  2852                           wreg	equ	0xFE8
  2853                           indf1	equ	0xFE7
  2854                           fsr1h	equ	0xFE2
  2855                           fsr1l	equ	0xFE1
  2856                           indf2	equ	0xFDF
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _check_msg *****************
  2862 ;; Defined at:
  2863 ;;		line 223 in file "../src/messages.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  qptr            2   23[BANK1 ] PTR struct __msg_queue
  2866 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      unsigned char 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2878 ;;      Params:         0       0       2       0       0
  2879 ;;      Locals:         0       0       0       0       0
  2880 ;;      Temps:          0       0       1       0       0
  2881 ;;      Totals:         0       0       3       0       0
  2882 ;;Total ram usage:        3 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:   12
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_block_on_To_msgqueues
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text13
  2893  001A66                     __ptext13:
  2894                           	opt stack 0
  2895  001A66                     _check_msg:
  2896                           	opt stack 16
  2897                           
  2898                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  2899                           
  2900                           ; BSR set to: 1
  2901                           ;incstack = 0
  2902  001A66  0101               	movlb	1	; () banked
  2903  001A68  EE20 F035          	lfsr	2,53
  2904  001A6C  0101               	movlb	1	; () banked
  2905  001A6E  51BB               	movf	check_msg@qptr& (0+255),w,b
  2906  001A70  26D9               	addwf	fsr2l,f,c
  2907  001A72  0101               	movlb	1	; () banked
  2908  001A74  51BC               	movf	(check_msg@qptr+1)& (0+255),w,b
  2909  001A76  22DA               	addwfc	fsr2h,f,c
  2910  001A78  50DF               	movf	indf2,w,c
  2911  001A7A  0101               	movlb	1	; () banked
  2912  001A7C  6FBD               	movwf	??_check_msg& (0+255),b
  2913  001A7E  0101               	movlb	1	; () banked
  2914  001A80  51BD               	movf	??_check_msg& (0+255),w,b
  2915  001A82  0D0D               	mullw	13
  2916  001A84  50F3               	movf	prodl,w,c
  2917  001A86  0101               	movlb	1	; () banked
  2918  001A88  0101               	movlb	1	; () banked
  2919  001A8A  25BB               	addwf	check_msg@qptr& (0+255),w,b
  2920  001A8C  6ED9               	movwf	fsr2l,c
  2921  001A8E  50F4               	movf	prodh,w,c
  2922  001A90  0101               	movlb	1	; () banked
  2923  001A92  0101               	movlb	1	; () banked
  2924  001A94  21BC               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2925  001A96  6EDA               	movwf	fsr2h,c
  2926  001A98  50DF               	movf	indf2,w,c
  2927  001A9A  0012               	return	
  2928  001A9C                     __end_of_check_msg:
  2929                           	opt stack 0
  2930                           tblptru	equ	0xFF8
  2931                           tblptrh	equ	0xFF7
  2932                           tblptrl	equ	0xFF6
  2933                           tablat	equ	0xFF5
  2934                           prodh	equ	0xFF4
  2935                           prodl	equ	0xFF3
  2936                           intcon	equ	0xFF2
  2937                           postinc0	equ	0xFEE
  2938                           wreg	equ	0xFE8
  2939                           indf1	equ	0xFE7
  2940                           fsr1h	equ	0xFE2
  2941                           fsr1l	equ	0xFE1
  2942                           indf2	equ	0xFDF
  2943                           fsr2h	equ	0xFDA
  2944                           fsr2l	equ	0xFD9
  2945                           status	equ	0xFD8
  2946                           
  2947 ;; *************** function _Delay1KTCYx *****************
  2948 ;; Defined at:
  2949 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  unit            1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  unit            1   23[BANK1 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       1       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         0       0       1       0       0
  2967 ;;Total ram usage:        1 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:   12
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_block_on_To_msgqueues
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text14
  2978  001BEA                     __ptext14:
  2979                           	opt stack 0
  2980  001BEA                     _Delay1KTCYx:
  2981                           	opt stack 16
  2982                           
  2983                           ; BSR set to: 1
  2984                           ;incstack = 0
  2985                           ;Delay1KTCYx@unit stored from wreg
  2986  001BEA  CFE8 F1BB          	movff	wreg,Delay1KTCYx@unit
  2987  001BEE                     l840:
  2988  001BEE  0EFA               	movlw	250
  2989  001BF0                     u2917:
  2990  001BF0  F000               	nop	
  2991  001BF2  2EE8               	decfsz	wreg,f,c
  2992  001BF4  D7FD               	goto	u2917
  2993  001BF6  0101               	movlb	1	; () banked
  2994  001BF8  0101               	movlb	1	; () banked
  2995  001BFA  2FBB               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2996  001BFC  D7F8               	goto	l840
  2997  001BFE  0012               	return	
  2998  001C00                     __end_of_Delay1KTCYx:
  2999                           	opt stack 0
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           prodh	equ	0xFF4
  3005                           prodl	equ	0xFF3
  3006                           intcon	equ	0xFF2
  3007                           postinc0	equ	0xFEE
  3008                           wreg	equ	0xFE8
  3009                           indf1	equ	0xFE7
  3010                           fsr1h	equ	0xFE2
  3011                           fsr1l	equ	0xFE1
  3012                           indf2	equ	0xFDF
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _addDataPoints *****************
  3018 ;; Defined at:
  3019 ;;		line 48 in file "../src/sensorcomm.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  sensorid        2   31[BANK1 ] int 
  3022 ;;  data            2   33[BANK1 ] PTR void 
  3023 ;;		 -> main@msgbuffer(11), 
  3024 ;;  len             2   35[BANK1 ] int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3036 ;;      Params:         0       0       6       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         0       0       6       0       0
  3040 ;;Total ram usage:        6 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:   13
  3043 ;; This function calls:
  3044 ;;		_addADDataPoints
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text15
  3051  001B00                     __ptext15:
  3052                           	opt stack 0
  3053  001B00                     _addDataPoints:
  3054                           	opt stack 16
  3055                           
  3056                           ;sensorcomm.c: 51: if(sensorid == 0){
  3057                           
  3058                           ; BSR set to: 1
  3059                           ;incstack = 0
  3060  001B00  0101               	movlb	1	; () banked
  3061  001B02  0101               	movlb	1	; () banked
  3062  001B04  51C4               	movf	(addDataPoints@sensorid+1)& (0+255),w,b
  3063  001B06  11C3               	iorwf	addDataPoints@sensorid& (0+255),w,b
  3064  001B08  A4D8               	btfss	status,2,c
  3065  001B0A  0012               	return	
  3066                           
  3067                           ; BSR set to: 1
  3068                           ;sensorcomm.c: 52: addADDataPoints((sensorADData*) data, len);
  3069  001B0C  0101               	movlb	1	; () banked
  3070  001B0E  0101               	movlb	1	; () banked
  3071  001B10  C1C6  F1BC         	movff	addDataPoints@data+1,addADDataPoints@data+1
  3072  001B14  0101               	movlb	1	; () banked
  3073  001B16  0101               	movlb	1	; () banked
  3074  001B18  C1C5  F1BB         	movff	addDataPoints@data,addADDataPoints@data
  3075  001B1C  C1C7  F1BD         	movff	addDataPoints@len,addADDataPoints@len
  3076  001B20  C1C8  F1BE         	movff	addDataPoints@len+1,addADDataPoints@len+1
  3077  001B24  EC97  F008         	call	_addADDataPoints	;wreg free
  3078  001B28  0012               	return	
  3079  001B2A                     __end_of_addDataPoints:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           postinc0	equ	0xFEE
  3089                           wreg	equ	0xFE8
  3090                           indf1	equ	0xFE7
  3091                           fsr1h	equ	0xFE2
  3092                           fsr1l	equ	0xFE1
  3093                           indf2	equ	0xFDF
  3094                           fsr2h	equ	0xFDA
  3095                           fsr2l	equ	0xFD9
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function _addADDataPoints *****************
  3099 ;; Defined at:
  3100 ;;		line 57 in file "../src/sensorcomm.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  data            2   23[BANK1 ] PTR struct .
  3103 ;;		 -> main@msgbuffer(11), 
  3104 ;;  len             2   25[BANK1 ] int 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  i               2   29[BANK1 ] int 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;		None               void
  3109 ;; Registers used:
  3110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3116 ;;      Params:         0       0       4       0       0
  3117 ;;      Locals:         0       0       2       0       0
  3118 ;;      Temps:          0       0       2       0       0
  3119 ;;      Totals:         0       0       8       0       0
  3120 ;;Total ram usage:        8 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:   12
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_addDataPoints
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text16
  3131  00112E                     __ptext16:
  3132                           	opt stack 0
  3133  00112E                     _addADDataPoints:
  3134                           	opt stack 16
  3135                           
  3136                           ;sensorcomm.c: 59: if(ADacc.len + len < 10){
  3137                           
  3138                           ;incstack = 0
  3139  00112E  503F               	movf	_ADacc,w,c
  3140  001130  0101               	movlb	1	; () banked
  3141  001132  0101               	movlb	1	; () banked
  3142  001134  25BD               	addwf	addADDataPoints@len& (0+255),w,b
  3143  001136  0101               	movlb	1	; () banked
  3144  001138  6FBF               	movwf	??_addADDataPoints& (0+255),b
  3145  00113A  0E00               	movlw	0
  3146  00113C  0101               	movlb	1	; () banked
  3147  00113E  0101               	movlb	1	; () banked
  3148  001140  21BE               	addwfc	(addADDataPoints@len+1)& (0+255),w,b
  3149  001142  0101               	movlb	1	; () banked
  3150  001144  6FC0               	movwf	(??_addADDataPoints+1)& (0+255),b
  3151  001146  0101               	movlb	1	; () banked
  3152  001148  51C0               	movf	(??_addADDataPoints+1)& (0+255),w,b
  3153  00114A  0A80               	xorlw	128
  3154  00114C  6EF3               	movwf	prodl,c
  3155  00114E  0E80               	movlw	128
  3156  001150  5CF3               	subwf	prodl,w,c
  3157  001152  0E0A               	movlw	10
  3158  001154  B4D8               	btfsc	status,2,c
  3159  001156  5DBF               	subwf	??_addADDataPoints& (0+255),w,b
  3160  001158  B0D8               	btfsc	status,0,c
  3161  00115A  0012               	return	
  3162                           
  3163                           ; BSR set to: 1
  3164                           ;sensorcomm.c: 60: int i = 0;
  3165  00115C  0E00               	movlw	0
  3166  00115E  0101               	movlb	1	; () banked
  3167  001160  0101               	movlb	1	; () banked
  3168  001162  6FC2               	movwf	(addADDataPoints@i+1)& (0+255),b
  3169  001164  0E00               	movlw	0
  3170  001166  0101               	movlb	1	; () banked
  3171  001168  6FC1               	movwf	addADDataPoints@i& (0+255),b
  3172  00116A  D01D               	goto	l3856
  3173  00116C                     l3850:
  3174                           
  3175                           ; BSR set to: 1
  3176                           ;sensorcomm.c: 62: ADacc.data[ADacc.len++] = data[i];
  3177  00116C  0101               	movlb	1	; () banked
  3178  00116E  0101               	movlb	1	; () banked
  3179  001170  51C1               	movf	addADDataPoints@i& (0+255),w,b
  3180  001172  0101               	movlb	1	; () banked
  3181  001174  0101               	movlb	1	; () banked
  3182  001176  25BB               	addwf	addADDataPoints@data& (0+255),w,b
  3183  001178  6ED9               	movwf	fsr2l,c
  3184  00117A  0101               	movlb	1	; () banked
  3185  00117C  0101               	movlb	1	; () banked
  3186  00117E  51C2               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3187  001180  0101               	movlb	1	; () banked
  3188  001182  0101               	movlb	1	; () banked
  3189  001184  21BC               	addwfc	(addADDataPoints@data+1)& (0+255),w,b
  3190  001186  6EDA               	movwf	fsr2h,c
  3191  001188  503F               	movf	_ADacc,w,c
  3192  00118A  0D01               	mullw	1
  3193  00118C  0E40               	movlw	low (_ADacc+1)
  3194  00118E  24F3               	addwf	prodl,w,c
  3195  001190  6EE1               	movwf	fsr1l,c
  3196  001192  0E00               	movlw	high (_ADacc+1)
  3197  001194  20F4               	addwfc	prodh,w,c
  3198  001196  6EE2               	movwf	fsr1h,c
  3199  001198  CFDF FFE7          	movff	indf2,indf1
  3200                           
  3201                           ; BSR set to: 1
  3202  00119C  2A3F               	incf	_ADacc,f,c
  3203                           
  3204                           ; BSR set to: 1
  3205  00119E  0101               	movlb	1	; () banked
  3206  0011A0  0101               	movlb	1	; () banked
  3207  0011A2  4BC1               	infsnz	addADDataPoints@i& (0+255),f,b
  3208  0011A4  2BC2               	incf	(addADDataPoints@i+1)& (0+255),f,b
  3209  0011A6                     l3856:
  3210                           
  3211                           ; BSR set to: 1
  3212  0011A6  0101               	movlb	1	; () banked
  3213  0011A8  0101               	movlb	1	; () banked
  3214  0011AA  51C2               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3215  0011AC  0A80               	xorlw	128
  3216  0011AE  0101               	movlb	1	; () banked
  3217  0011B0  6FBF               	movwf	??_addADDataPoints& (0+255),b
  3218  0011B2  0101               	movlb	1	; () banked
  3219  0011B4  51BD               	movf	addADDataPoints@len& (0+255),w,b
  3220  0011B6  0101               	movlb	1	; () banked
  3221  0011B8  0101               	movlb	1	; () banked
  3222  0011BA  5DC1               	subwf	addADDataPoints@i& (0+255),w,b
  3223  0011BC  0101               	movlb	1	; () banked
  3224  0011BE  0101               	movlb	1	; () banked
  3225  0011C0  51BE               	movf	(addADDataPoints@len+1)& (0+255),w,b
  3226  0011C2  0A80               	xorlw	128
  3227  0011C4  0101               	movlb	1	; () banked
  3228  0011C6  59BF               	subwfb	??_addADDataPoints& (0+255),w,b
  3229  0011C8  B0D8               	btfsc	status,0,c
  3230                           
  3231                           ; BSR set to: 1
  3232                           
  3233                           ; BSR set to: 1
  3234                           
  3235                           ; BSR set to: 1
  3236  0011CA  0012               	return	
  3237  0011CC  D7CF               	goto	l3850
  3238  0011CE                     __end_of_addADDataPoints:
  3239                           	opt stack 0
  3240                           tblptru	equ	0xFF8
  3241                           tblptrh	equ	0xFF7
  3242                           tblptrl	equ	0xFF6
  3243                           tablat	equ	0xFF5
  3244                           prodh	equ	0xFF4
  3245                           prodl	equ	0xFF3
  3246                           intcon	equ	0xFF2
  3247                           postinc0	equ	0xFEE
  3248                           wreg	equ	0xFE8
  3249                           indf1	equ	0xFE7
  3250                           fsr1h	equ	0xFE2
  3251                           fsr1l	equ	0xFE1
  3252                           indf2	equ	0xFDF
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function _ToMainLow_recvmsg *****************
  3258 ;; Defined at:
  3259 ;;		line 113 in file "../src/messages.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  maxlength       1    wreg     unsigned char 
  3262 ;;  msgtype         2   47[BANK1 ] PTR unsigned char 
  3263 ;;		 -> main@msgtype(1), 
  3264 ;;  data            2   49[BANK1 ] PTR void 
  3265 ;;		 -> main@msgbuffer(11), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  maxlength       1   51[BANK1 ] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      char 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3277 ;;      Params:         0       0       4       0       0
  3278 ;;      Locals:         0       0       1       0       0
  3279 ;;      Temps:          0       0       0       0       0
  3280 ;;      Totals:         0       0       5       0       0
  3281 ;;Total ram usage:        5 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:   14
  3284 ;; This function calls:
  3285 ;;		_recv_msg
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text17
  3292  0018A8                     __ptext17:
  3293                           	opt stack 0
  3294  0018A8                     _ToMainLow_recvmsg:
  3295                           	opt stack 15
  3296                           
  3297                           ; BSR set to: 1
  3298                           ;incstack = 0
  3299                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3300  0018A8  CFE8 F1D7          	movff	wreg,ToMainLow_recvmsg@maxlength
  3301                           
  3302                           ;messages.c: 119: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3303  0018AC  0101               	movlb	1	; () banked
  3304  0018AE  0E01               	movlw	high _ToMainLow_MQ
  3305  0018B0  0101               	movlb	1	; () banked
  3306  0018B2  0101               	movlb	1	; () banked
  3307  0018B4  6FC6               	movwf	(recv_msg@qptr+1)& (0+255),b
  3308  0018B6  0101               	movlb	1	; () banked
  3309  0018B8  0E6E               	movlw	low _ToMainLow_MQ
  3310  0018BA  0101               	movlb	1	; () banked
  3311  0018BC  0101               	movlb	1	; () banked
  3312  0018BE  6FC5               	movwf	recv_msg@qptr& (0+255),b
  3313  0018C0  C1D7  F1C7         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3314  0018C4  0101               	movlb	1	; () banked
  3315  0018C6  0101               	movlb	1	; () banked
  3316  0018C8  C1D4  F1C9         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3317  0018CC  0101               	movlb	1	; () banked
  3318  0018CE  0101               	movlb	1	; () banked
  3319  0018D0  C1D3  F1C8         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3320  0018D4  0101               	movlb	1	; () banked
  3321  0018D6  0101               	movlb	1	; () banked
  3322  0018D8  C1D6  F1CB         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3323  0018DC  0101               	movlb	1	; () banked
  3324  0018DE  0101               	movlb	1	; () banked
  3325  0018E0  C1D5  F1CA         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3326  0018E4  ECC7  F005         	call	_recv_msg	;wreg free
  3327  0018E8  0012               	return	
  3328  0018EA                     __end_of_ToMainLow_recvmsg:
  3329                           	opt stack 0
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           prodh	equ	0xFF4
  3335                           prodl	equ	0xFF3
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           fsr1h	equ	0xFE2
  3341                           fsr1l	equ	0xFE1
  3342                           indf2	equ	0xFDF
  3343                           fsr2h	equ	0xFDA
  3344                           fsr2l	equ	0xFD9
  3345                           status	equ	0xFD8
  3346                           
  3347 ;; *************** function _ToMainHigh_recvmsg *****************
  3348 ;; Defined at:
  3349 ;;		line 136 in file "../src/messages.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  maxlength       1    wreg     unsigned char 
  3352 ;;  msgtype         2   47[BANK1 ] PTR unsigned char 
  3353 ;;		 -> main@msgtype(1), 
  3354 ;;  data            2   49[BANK1 ] PTR void 
  3355 ;;		 -> main@msgbuffer(11), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  maxlength       1   51[BANK1 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      char 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3367 ;;      Params:         0       0       4       0       0
  3368 ;;      Locals:         0       0       1       0       0
  3369 ;;      Temps:          0       0       0       0       0
  3370 ;;      Totals:         0       0       5       0       0
  3371 ;;Total ram usage:        5 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:   14
  3374 ;; This function calls:
  3375 ;;		_recv_msg
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text18
  3382  0018EA                     __ptext18:
  3383                           	opt stack 0
  3384  0018EA                     _ToMainHigh_recvmsg:
  3385                           	opt stack 15
  3386                           
  3387                           ;incstack = 0
  3388                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3389  0018EA  CFE8 F1D7          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3390                           
  3391                           ;messages.c: 142: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3392  0018EE  0101               	movlb	1	; () banked
  3393  0018F0  0E01               	movlw	high _ToMainHigh_MQ
  3394  0018F2  0101               	movlb	1	; () banked
  3395  0018F4  0101               	movlb	1	; () banked
  3396  0018F6  6FC6               	movwf	(recv_msg@qptr+1)& (0+255),b
  3397  0018F8  0101               	movlb	1	; () banked
  3398  0018FA  0E38               	movlw	low _ToMainHigh_MQ
  3399  0018FC  0101               	movlb	1	; () banked
  3400  0018FE  0101               	movlb	1	; () banked
  3401  001900  6FC5               	movwf	recv_msg@qptr& (0+255),b
  3402  001902  C1D7  F1C7         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3403  001906  0101               	movlb	1	; () banked
  3404  001908  0101               	movlb	1	; () banked
  3405  00190A  C1D4  F1C9         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3406  00190E  0101               	movlb	1	; () banked
  3407  001910  0101               	movlb	1	; () banked
  3408  001912  C1D3  F1C8         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3409  001916  0101               	movlb	1	; () banked
  3410  001918  0101               	movlb	1	; () banked
  3411  00191A  C1D6  F1CB         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3412  00191E  0101               	movlb	1	; () banked
  3413  001920  0101               	movlb	1	; () banked
  3414  001922  C1D5  F1CA         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3415  001926  ECC7  F005         	call	_recv_msg	;wreg free
  3416  00192A  0012               	return	
  3417  00192C                     __end_of_ToMainHigh_recvmsg:
  3418                           	opt stack 0
  3419                           tblptru	equ	0xFF8
  3420                           tblptrh	equ	0xFF7
  3421                           tblptrl	equ	0xFF6
  3422                           tablat	equ	0xFF5
  3423                           prodh	equ	0xFF4
  3424                           prodl	equ	0xFF3
  3425                           intcon	equ	0xFF2
  3426                           postinc0	equ	0xFEE
  3427                           wreg	equ	0xFE8
  3428                           indf1	equ	0xFE7
  3429                           fsr1h	equ	0xFE2
  3430                           fsr1l	equ	0xFE1
  3431                           indf2	equ	0xFDF
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436 ;; *************** function _recv_msg *****************
  3437 ;; Defined at:
  3438 ;;		line 64 in file "../src/messages.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  qptr            2   33[BANK1 ] PTR struct __msg_queue
  3441 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3442 ;;  maxlength       1   35[BANK1 ] unsigned char 
  3443 ;;  msgtype         2   36[BANK1 ] PTR unsigned char 
  3444 ;;		 -> main@msgtype(1), 
  3445 ;;  data            2   38[BANK1 ] PTR void 
  3446 ;;		 -> main@msgbuffer(11), 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  qmsg            2   45[BANK1 ] PTR struct __msg
  3449 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3450 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3451 ;;  tlength         2   43[BANK1 ] unsigned int 
  3452 ;;  slot            1   42[BANK1 ] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      char 
  3455 ;; Registers used:
  3456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3462 ;;      Params:         0       0       7       0       0
  3463 ;;      Locals:         0       0       5       0       0
  3464 ;;      Temps:          0       0       2       0       0
  3465 ;;      Totals:         0       0      14       0       0
  3466 ;;Total ram usage:       14 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:   13
  3469 ;; This function calls:
  3470 ;;		_memcpy
  3471 ;; This function is called by:
  3472 ;;		_ToMainLow_recvmsg
  3473 ;;		_ToMainHigh_recvmsg
  3474 ;;		_FromMainLow_recvmsg
  3475 ;;		_FromMainHigh_recvmsg
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text19
  3480  000B8E                     __ptext19:
  3481                           	opt stack 0
  3482  000B8E                     _recv_msg:
  3483                           	opt stack 15
  3484                           
  3485                           ;messages.c: 65: unsigned char slot;
  3486                           ;messages.c: 69: msg *qmsg;
  3487                           ;messages.c: 70: size_t tlength;
  3488                           ;messages.c: 73: slot = qptr->cur_read_ind;
  3489                           
  3490                           ;incstack = 0
  3491  000B8E  0101               	movlb	1	; () banked
  3492  000B90  EE20 F035          	lfsr	2,53
  3493  000B94  0101               	movlb	1	; () banked
  3494  000B96  51C5               	movf	recv_msg@qptr& (0+255),w,b
  3495  000B98  26D9               	addwf	fsr2l,f,c
  3496  000B9A  0101               	movlb	1	; () banked
  3497  000B9C  51C6               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3498  000B9E  22DA               	addwfc	fsr2h,f,c
  3499  000BA0  50DF               	movf	indf2,w,c
  3500  000BA2  0101               	movlb	1	; () banked
  3501  000BA4  0101               	movlb	1	; () banked
  3502  000BA6  6FCE               	movwf	recv_msg@slot& (0+255),b
  3503                           
  3504                           ; BSR set to: 1
  3505                           ;messages.c: 74: qmsg = &(qptr->queue[slot]);
  3506  000BA8  0101               	movlb	1	; () banked
  3507  000BAA  0101               	movlb	1	; () banked
  3508  000BAC  51CE               	movf	recv_msg@slot& (0+255),w,b
  3509  000BAE  0D0D               	mullw	13
  3510  000BB0  50F3               	movf	prodl,w,c
  3511  000BB2  0101               	movlb	1	; () banked
  3512  000BB4  0101               	movlb	1	; () banked
  3513  000BB6  25C5               	addwf	recv_msg@qptr& (0+255),w,b
  3514  000BB8  0101               	movlb	1	; () banked
  3515  000BBA  0101               	movlb	1	; () banked
  3516  000BBC  6FD1               	movwf	recv_msg@qmsg& (0+255),b
  3517  000BBE  50F4               	movf	prodh,w,c
  3518  000BC0  0101               	movlb	1	; () banked
  3519  000BC2  0101               	movlb	1	; () banked
  3520  000BC4  21C6               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3521  000BC6  0101               	movlb	1	; () banked
  3522  000BC8  6FD2               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3523                           
  3524                           ; BSR set to: 1
  3525                           ;messages.c: 75: if (qmsg->full == 1) {
  3526  000BCA  0E01               	movlw	1
  3527  000BCC  C1D1  FFD9         	movff	recv_msg@qmsg,fsr2l
  3528  000BD0  C1D2  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3529  000BD4  62DF               	cpfseq	indf2,c
  3530  000BD6  D074               	goto	l3648
  3531                           
  3532                           ; BSR set to: 1
  3533                           ;messages.c: 77: if (qmsg->length > maxlength) {
  3534  000BD8  0101               	movlb	1	; () banked
  3535  000BDA  EE20 F001          	lfsr	2,1
  3536  000BDE  0101               	movlb	1	; () banked
  3537  000BE0  51D1               	movf	recv_msg@qmsg& (0+255),w,b
  3538  000BE2  26D9               	addwf	fsr2l,f,c
  3539  000BE4  0101               	movlb	1	; () banked
  3540  000BE6  51D2               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3541  000BE8  22DA               	addwfc	fsr2h,f,c
  3542  000BEA  50DF               	movf	indf2,w,c
  3543  000BEC  0101               	movlb	1	; () banked
  3544  000BEE  0101               	movlb	1	; () banked
  3545  000BF0  5DC7               	subwf	recv_msg@maxlength& (0+255),w,b
  3546  000BF2  B0D8               	btfsc	status,0,c
  3547  000BF4  D002               	goto	l3632
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;messages.c: 78: return (-3);
  3551  000BF6  0EFD               	movlw	253
  3552  000BF8  0012               	return	
  3553  000BFA                     l3632:
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;messages.c: 79: }
  3557                           ;messages.c: 81: tlength = qmsg->length;
  3558  000BFA  0101               	movlb	1	; () banked
  3559  000BFC  EE20 F001          	lfsr	2,1
  3560  000C00  0101               	movlb	1	; () banked
  3561  000C02  51D1               	movf	recv_msg@qmsg& (0+255),w,b
  3562  000C04  26D9               	addwf	fsr2l,f,c
  3563  000C06  0101               	movlb	1	; () banked
  3564  000C08  51D2               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3565  000C0A  22DA               	addwfc	fsr2h,f,c
  3566  000C0C  50DF               	movf	indf2,w,c
  3567  000C0E  0101               	movlb	1	; () banked
  3568  000C10  6FCC               	movwf	??_recv_msg& (0+255),b
  3569  000C12  0101               	movlb	1	; () banked
  3570  000C14  51CC               	movf	??_recv_msg& (0+255),w,b
  3571  000C16  0101               	movlb	1	; () banked
  3572  000C18  0101               	movlb	1	; () banked
  3573  000C1A  6FCF               	movwf	recv_msg@tlength& (0+255),b
  3574  000C1C  0101               	movlb	1	; () banked
  3575  000C1E  6BD0               	clrf	(recv_msg@tlength+1)& (0+255),b
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;messages.c: 82: memcpy(data, qmsg->data, tlength);
  3579  000C20  0101               	movlb	1	; () banked
  3580  000C22  0101               	movlb	1	; () banked
  3581  000C24  C1CB  F1BC         	movff	recv_msg@data+1,memcpy@d1+1
  3582  000C28  0101               	movlb	1	; () banked
  3583  000C2A  0101               	movlb	1	; () banked
  3584  000C2C  C1CA  F1BB         	movff	recv_msg@data,memcpy@d1
  3585  000C30  0E03               	movlw	3
  3586  000C32  0101               	movlb	1	; () banked
  3587  000C34  0101               	movlb	1	; () banked
  3588  000C36  25D1               	addwf	recv_msg@qmsg& (0+255),w,b
  3589  000C38  0101               	movlb	1	; () banked
  3590  000C3A  6FCC               	movwf	??_recv_msg& (0+255),b
  3591  000C3C  0E00               	movlw	0
  3592  000C3E  0101               	movlb	1	; () banked
  3593  000C40  0101               	movlb	1	; () banked
  3594  000C42  21D2               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3595  000C44  0101               	movlb	1	; () banked
  3596  000C46  6FCD               	movwf	(??_recv_msg+1)& (0+255),b
  3597  000C48  C1CC  F1BD         	movff	??_recv_msg,memcpy@s1
  3598  000C4C  C1CD  F1BE         	movff	??_recv_msg+1,memcpy@s1+1
  3599  000C50  C1CF  F1BF         	movff	recv_msg@tlength,memcpy@n
  3600  000C54  C1D0  F1C0         	movff	recv_msg@tlength+1,memcpy@n+1
  3601  000C58  EC47  F00B         	call	_memcpy	;wreg free
  3602                           
  3603                           ;messages.c: 88: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3604  000C5C  0101               	movlb	1	; () banked
  3605  000C5E  EE20 F035          	lfsr	2,53
  3606  000C62  0101               	movlb	1	; () banked
  3607  000C64  51C5               	movf	recv_msg@qptr& (0+255),w,b
  3608  000C66  26D9               	addwf	fsr2l,f,c
  3609  000C68  0101               	movlb	1	; () banked
  3610  000C6A  51C6               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3611  000C6C  22DA               	addwfc	fsr2h,f,c
  3612  000C6E  0101               	movlb	1	; () banked
  3613  000C70  EE10 F035          	lfsr	1,53
  3614  000C74  0101               	movlb	1	; () banked
  3615  000C76  51C5               	movf	recv_msg@qptr& (0+255),w,b
  3616  000C78  26E1               	addwf	fsr1l,f,c
  3617  000C7A  0101               	movlb	1	; () banked
  3618  000C7C  51C6               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3619  000C7E  22E2               	addwfc	fsr1h,f,c
  3620  000C80  50E7               	movf	indf1,w,c
  3621  000C82  0101               	movlb	1	; () banked
  3622  000C84  6FCC               	movwf	??_recv_msg& (0+255),b
  3623  000C86  0101               	movlb	1	; () banked
  3624  000C88  29CC               	incf	??_recv_msg& (0+255),w,b
  3625  000C8A  0B03               	andlw	3
  3626  000C8C  6EDF               	movwf	indf2,c
  3627                           
  3628                           ; BSR set to: 1
  3629                           ;messages.c: 90: (*msgtype) = qmsg->msgtype;
  3630  000C8E  0101               	movlb	1	; () banked
  3631  000C90  EE20 F002          	lfsr	2,2
  3632  000C94  0101               	movlb	1	; () banked
  3633  000C96  51D1               	movf	recv_msg@qmsg& (0+255),w,b
  3634  000C98  26D9               	addwf	fsr2l,f,c
  3635  000C9A  0101               	movlb	1	; () banked
  3636  000C9C  51D2               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3637  000C9E  22DA               	addwfc	fsr2h,f,c
  3638  000CA0  C1C8  FFE1         	movff	recv_msg@msgtype,fsr1l
  3639  000CA4  C1C9  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3640  000CA8  CFDF FFE7          	movff	indf2,indf1
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;messages.c: 92: qmsg->full = 0;
  3644  000CAC  C1D1  FFD9         	movff	recv_msg@qmsg,fsr2l
  3645  000CB0  C1D2  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3646  000CB4  0E00               	movlw	0
  3647  000CB6  6EDF               	movwf	indf2,c
  3648                           
  3649                           ; BSR set to: 1
  3650                           ;messages.c: 93: return (tlength);
  3651  000CB8  0101               	movlb	1	; () banked
  3652  000CBA  0101               	movlb	1	; () banked
  3653  000CBC  51CF               	movf	recv_msg@tlength& (0+255),w,b
  3654  000CBE  0012               	return	
  3655  000CC0                     l3648:
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;messages.c: 95: return (-4);
  3659  000CC0  0EFC               	movlw	252
  3660  000CC2  0012               	return	
  3661  000CC4                     __end_of_recv_msg:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           prodh	equ	0xFF4
  3668                           prodl	equ	0xFF3
  3669                           intcon	equ	0xFF2
  3670                           postinc0	equ	0xFEE
  3671                           wreg	equ	0xFE8
  3672                           indf1	equ	0xFE7
  3673                           fsr1h	equ	0xFE2
  3674                           fsr1l	equ	0xFE1
  3675                           indf2	equ	0xFDF
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680 ;; *************** function _memcpy *****************
  3681 ;; Defined at:
  3682 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  d1              2   23[BANK1 ] PTR void 
  3685 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3686 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3687 ;;		 -> main@msgbuffer(11), 
  3688 ;;  s1              2   25[BANK1 ] PTR const void 
  3689 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3690 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3691 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  3692 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3693 ;;  n               2   27[BANK1 ] unsigned int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  s               2   31[BANK1 ] PTR const unsigned char 
  3696 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3697 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3698 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  3699 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3700 ;;  d               2   29[BANK1 ] PTR unsigned char 
  3701 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3702 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3703 ;;		 -> main@msgbuffer(11), 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2   23[BANK1 ] PTR void 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3713 ;;      Params:         0       0       6       0       0
  3714 ;;      Locals:         0       0       4       0       0
  3715 ;;      Temps:          0       0       0       0       0
  3716 ;;      Totals:         0       0      10       0       0
  3717 ;;Total ram usage:       10 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:   12
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_recv_msg
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text20
  3728  00168E                     __ptext20:
  3729                           	opt stack 0
  3730  00168E                     _memcpy:
  3731                           	opt stack 15
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;incstack = 0
  3735  00168E  0101               	movlb	1	; () banked
  3736  001690  0101               	movlb	1	; () banked
  3737  001692  C1BE  F1C4         	movff	memcpy@s1+1,memcpy@s+1
  3738  001696  0101               	movlb	1	; () banked
  3739  001698  0101               	movlb	1	; () banked
  3740  00169A  C1BD  F1C3         	movff	memcpy@s1,memcpy@s
  3741  00169E  0101               	movlb	1	; () banked
  3742  0016A0  0101               	movlb	1	; () banked
  3743  0016A2  C1BC  F1C2         	movff	memcpy@d1+1,memcpy@d+1
  3744  0016A6  0101               	movlb	1	; () banked
  3745  0016A8  0101               	movlb	1	; () banked
  3746  0016AA  C1BB  F1C1         	movff	memcpy@d1,memcpy@d
  3747  0016AE  D012               	goto	l3618
  3748  0016B0                     l3612:
  3749                           
  3750                           ; BSR set to: 1
  3751  0016B0  C1C3  FFD9         	movff	memcpy@s,fsr2l
  3752  0016B4  C1C4  FFDA         	movff	memcpy@s+1,fsr2h
  3753  0016B8  C1C1  FFE1         	movff	memcpy@d,fsr1l
  3754  0016BC  C1C2  FFE2         	movff	memcpy@d+1,fsr1h
  3755  0016C0  CFDF FFE7          	movff	indf2,indf1
  3756                           
  3757                           ; BSR set to: 1
  3758  0016C4  0101               	movlb	1	; () banked
  3759  0016C6  0101               	movlb	1	; () banked
  3760  0016C8  4BC3               	infsnz	memcpy@s& (0+255),f,b
  3761  0016CA  2BC4               	incf	(memcpy@s+1)& (0+255),f,b
  3762                           
  3763                           ; BSR set to: 1
  3764  0016CC  0101               	movlb	1	; () banked
  3765  0016CE  0101               	movlb	1	; () banked
  3766  0016D0  4BC1               	infsnz	memcpy@d& (0+255),f,b
  3767  0016D2  2BC2               	incf	(memcpy@d+1)& (0+255),f,b
  3768  0016D4                     l3618:
  3769                           
  3770                           ; BSR set to: 1
  3771  0016D4  0101               	movlb	1	; () banked
  3772  0016D6  0101               	movlb	1	; () banked
  3773  0016D8  07BF               	decf	memcpy@n& (0+255),f,b
  3774  0016DA  A0D8               	btfss	status,0,c
  3775  0016DC  07C0               	decf	(memcpy@n+1)& (0+255),f,b
  3776  0016DE  0101               	movlb	1	; () banked
  3777  0016E0  29BF               	incf	memcpy@n& (0+255),w,b
  3778  0016E2  B4D8               	btfsc	status,2,c
  3779  0016E4  29C0               	incf	(memcpy@n+1)& (0+255),w,b
  3780  0016E6  B4D8               	btfsc	status,2,c
  3781                           
  3782                           ; BSR set to: 1
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;	Return value of _memcpy is never used
  3786  0016E8  0012               	return	
  3787  0016EA  D7E2               	goto	l3612
  3788  0016EC                     __end_of_memcpy:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodh	equ	0xFF4
  3795                           prodl	equ	0xFF3
  3796                           intcon	equ	0xFF2
  3797                           postinc0	equ	0xFEE
  3798                           wreg	equ	0xFE8
  3799                           indf1	equ	0xFE7
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           indf2	equ	0xFDF
  3803                           fsr2h	equ	0xFDA
  3804                           fsr2l	equ	0xFD9
  3805                           status	equ	0xFD8
  3806                           
  3807 ;; *************** function _OpenUSART *****************
  3808 ;; Defined at:
  3809 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  config          1    wreg     unsigned char 
  3812 ;;  spbrg           2   23[BANK1 ] unsigned int 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  config          1   28[BANK1 ] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;		None               void
  3817 ;; Registers used:
  3818 ;;		wreg, status,2
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3824 ;;      Params:         0       0       2       0       0
  3825 ;;      Locals:         0       0       1       0       0
  3826 ;;      Temps:          0       0       3       0       0
  3827 ;;      Totals:         0       0       6       0       0
  3828 ;;Total ram usage:        6 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:   12
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text21
  3839  001268                     __ptext21:
  3840                           	opt stack 0
  3841  001268                     _OpenUSART:
  3842                           	opt stack 17
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;incstack = 0
  3846                           ;OpenUSART@config stored from wreg
  3847  001268  CFE8 F1C0          	movff	wreg,OpenUSART@config
  3848  00126C  0E00               	movlw	0
  3849  00126E  6EAC               	movwf	4012,c	;volatile
  3850  001270  0E00               	movlw	0
  3851  001272  6EAB               	movwf	4011,c	;volatile
  3852  001274  0101               	movlb	1	; () banked
  3853  001276  0101               	movlb	1	; () banked
  3854  001278  B1C0               	btfsc	OpenUSART@config& (0+255),0,b
  3855                           
  3856                           ; BSR set to: 1
  3857  00127A  88AC               	bsf	4012,4,c	;volatile
  3858                           
  3859                           ; BSR set to: 1
  3860                           
  3861                           ; BSR set to: 1
  3862  00127C  0101               	movlb	1	; () banked
  3863  00127E  0101               	movlb	1	; () banked
  3864  001280  A3C0               	btfss	OpenUSART@config& (0+255),1,b
  3865  001282  D002               	goto	l3512
  3866                           
  3867                           ; BSR set to: 1
  3868  001284  8CAC               	bsf	4012,6,c	;volatile
  3869  001286  8CAB               	bsf	4011,6,c	;volatile
  3870  001288                     l3512:
  3871                           
  3872                           ; BSR set to: 1
  3873  001288  0101               	movlb	1	; () banked
  3874  00128A  0101               	movlb	1	; () banked
  3875  00128C  B5C0               	btfsc	OpenUSART@config& (0+255),2,b
  3876                           
  3877                           ; BSR set to: 1
  3878  00128E  8EAC               	bsf	4012,7,c	;volatile
  3879                           
  3880                           ; BSR set to: 1
  3881                           
  3882                           ; BSR set to: 1
  3883  001290  0101               	movlb	1	; () banked
  3884  001292  0101               	movlb	1	; () banked
  3885  001294  A7C0               	btfss	OpenUSART@config& (0+255),3,b
  3886  001296  D002               	goto	l607
  3887                           
  3888                           ; BSR set to: 1
  3889  001298  88AB               	bsf	4011,4,c	;volatile
  3890  00129A  D001               	goto	l3520
  3891  00129C                     l607:
  3892                           
  3893                           ; BSR set to: 1
  3894  00129C  8AAB               	bsf	4011,5,c	;volatile
  3895  00129E                     l3520:
  3896                           
  3897                           ; BSR set to: 1
  3898  00129E  0101               	movlb	1	; () banked
  3899  0012A0  0101               	movlb	1	; () banked
  3900  0012A2  B9C0               	btfsc	OpenUSART@config& (0+255),4,b
  3901                           
  3902                           ; BSR set to: 1
  3903  0012A4  84AC               	bsf	4012,2,c	;volatile
  3904                           
  3905                           ; BSR set to: 1
  3906  0012A6  989E               	bcf	3998,4,c	;volatile
  3907                           
  3908                           ; BSR set to: 1
  3909  0012A8  0101               	movlb	1	; () banked
  3910  0012AA  0101               	movlb	1	; () banked
  3911  0012AC  BBC0               	btfsc	OpenUSART@config& (0+255),5,b
  3912                           
  3913                           ; BSR set to: 1
  3914  0012AE  86AB               	bsf	4011,3,c	;volatile
  3915                           
  3916                           ; BSR set to: 1
  3917                           
  3918                           ; BSR set to: 1
  3919  0012B0  0101               	movlb	1	; () banked
  3920  0012B2  0101               	movlb	1	; () banked
  3921  0012B4  ADC0               	btfss	OpenUSART@config& (0+255),6,b
  3922  0012B6  D002               	goto	l611
  3923                           
  3924                           ; BSR set to: 1
  3925  0012B8  8A9D               	bsf	3997,5,c	;volatile
  3926  0012BA  D001               	goto	l612
  3927  0012BC                     l611:
  3928                           
  3929                           ; BSR set to: 1
  3930  0012BC  9A9D               	bcf	3997,5,c	;volatile
  3931  0012BE                     l612:
  3932                           
  3933                           ; BSR set to: 1
  3934  0012BE  9A9E               	bcf	3998,5,c	;volatile
  3935                           
  3936                           ; BSR set to: 1
  3937  0012C0  0101               	movlb	1	; () banked
  3938  0012C2  0101               	movlb	1	; () banked
  3939  0012C4  AFC0               	btfss	OpenUSART@config& (0+255),7,b
  3940  0012C6  D002               	goto	l613
  3941                           
  3942                           ; BSR set to: 1
  3943  0012C8  889D               	bsf	3997,4,c	;volatile
  3944  0012CA  D001               	goto	l614
  3945  0012CC                     l613:
  3946                           
  3947                           ; BSR set to: 1
  3948  0012CC  989D               	bcf	3997,4,c	;volatile
  3949  0012CE                     l614:
  3950                           
  3951                           ; BSR set to: 1
  3952  0012CE  C1BB  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3953                           
  3954                           ; BSR set to: 1
  3955  0012D2  0101               	movlb	1	; () banked
  3956  0012D4  C1BC  F1BD         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3957  0012D8  C1BD  F1BE         	movff	??_OpenUSART,??_OpenUSART+1
  3958  0012DC  0101               	movlb	1	; () banked
  3959  0012DE  6BBF               	clrf	(??_OpenUSART+2)& (0+255),b
  3960  0012E0  0101               	movlb	1	; () banked
  3961  0012E2  51BE               	movf	(??_OpenUSART+1)& (0+255),w,b
  3962  0012E4  6EB0               	movwf	4016,c	;volatile
  3963                           
  3964                           ; BSR set to: 1
  3965  0012E6  8AAC               	bsf	4012,5,c	;volatile
  3966                           
  3967                           ; BSR set to: 1
  3968  0012E8  8EAB               	bsf	4011,7,c	;volatile
  3969                           
  3970                           ; BSR set to: 1
  3971  0012EA  9C94               	bcf	3988,6,c	;volatile
  3972                           
  3973                           ; BSR set to: 1
  3974  0012EC  8E94               	bsf	3988,7,c	;volatile
  3975                           
  3976                           ; BSR set to: 1
  3977  0012EE  A8AC               	btfss	4012,4,c	;volatile
  3978  0012F0  0012               	return	
  3979                           
  3980                           ; BSR set to: 1
  3981  0012F2  BEAC               	btfsc	4012,7,c	;volatile
  3982  0012F4  0012               	return	
  3983                           
  3984                           ; BSR set to: 1
  3985  0012F6  8C94               	bsf	3988,6,c	;volatile
  3986  0012F8  0012               	return	
  3987  0012FA                     __end_of_OpenUSART:
  3988                           	opt stack 0
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           intcon	equ	0xFF2
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           indf1	equ	0xFE7
  3999                           fsr1h	equ	0xFE2
  4000                           fsr1l	equ	0xFE1
  4001                           indf2	equ	0xFDF
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _OpenTimer0 *****************
  4007 ;; Defined at:
  4008 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  config          1    wreg     unsigned char 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  config          1   23[BANK1 ] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;		None               void
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4022 ;;      Params:         0       0       0       0       0
  4023 ;;      Locals:         0       0       1       0       0
  4024 ;;      Temps:          0       0       0       0       0
  4025 ;;      Totals:         0       0       1       0       0
  4026 ;;Total ram usage:        1 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:   12
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text22
  4037  001B2A                     __ptext22:
  4038                           	opt stack 0
  4039  001B2A                     _OpenTimer0:
  4040                           	opt stack 17
  4041                           
  4042                           ; BSR set to: 1
  4043                           ;incstack = 0
  4044                           ;OpenTimer0@config stored from wreg
  4045  001B2A  CFE8 F1BB          	movff	wreg,OpenTimer0@config
  4046  001B2E  0101               	movlb	1	; () banked
  4047  001B30  0101               	movlb	1	; () banked
  4048  001B32  51BB               	movf	OpenTimer0@config& (0+255),w,b
  4049  001B34  0B7F               	andlw	127
  4050  001B36  6ED5               	movwf	4053,c	;volatile
  4051                           
  4052                           ; BSR set to: 1
  4053  001B38  0E00               	movlw	0
  4054  001B3A  6ED7               	movwf	4055,c	;volatile
  4055                           
  4056                           ; BSR set to: 1
  4057  001B3C  0E00               	movlw	0
  4058  001B3E  6ED6               	movwf	4054,c	;volatile
  4059                           
  4060                           ; BSR set to: 1
  4061  001B40  94F2               	bcf	intcon,2,c	;volatile
  4062                           
  4063                           ; BSR set to: 1
  4064  001B42  0101               	movlb	1	; () banked
  4065  001B44  0101               	movlb	1	; () banked
  4066  001B46  AFBB               	btfss	OpenTimer0@config& (0+255),7,b
  4067  001B48  D002               	goto	l558
  4068                           
  4069                           ; BSR set to: 1
  4070  001B4A  8AF2               	bsf	intcon,5,c	;volatile
  4071  001B4C  D001               	goto	l559
  4072  001B4E                     l558:
  4073                           
  4074                           ; BSR set to: 1
  4075  001B4E  9AF2               	bcf	intcon,5,c	;volatile
  4076  001B50                     l559:
  4077                           
  4078                           ; BSR set to: 1
  4079  001B50  8ED5               	bsf	4053,7,c	;volatile
  4080                           
  4081                           ; BSR set to: 1
  4082  001B52  0012               	return	
  4083  001B54                     __end_of_OpenTimer0:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           indf1	equ	0xFE7
  4095                           fsr1h	equ	0xFE2
  4096                           fsr1l	equ	0xFE1
  4097                           indf2	equ	0xFDF
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _InterruptHandlerLow *****************
  4103 ;; Defined at:
  4104 ;;		line 123 in file "../src/interrupts.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;		None               void
  4111 ;; Registers used:
  4112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4118 ;;      Params:         0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0
  4120 ;;      Temps:         17       0       0       0       0
  4121 ;;      Totals:        17       0       0       0       0
  4122 ;;Total ram usage:       17 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:   11
  4125 ;; This function calls:
  4126 ;;		_adc_int_handler
  4127 ;; This function is called by:
  4128 ;;		Interrupt level 1
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	intcodelo
  4133  000018                     __pintcodelo:
  4134                           	opt stack 0
  4135  000018                     _InterruptHandlerLow:
  4136                           	opt stack 14
  4137                           
  4138                           ; BSR set to: 1
  4139                           ;incstack = 0
  4140  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4141  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4142  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4143  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4144  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4145  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4146  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4147  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4148  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4149  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4150  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4151  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4152  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4153  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4154  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4155  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  4156  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  4157                           
  4158                           ;interrupts.c: 124: if (PIR1bits.ADIF) {
  4159  00005C  AC9E               	btfss	3998,6,c	;volatile
  4160  00005E  D003               	goto	i1l44
  4161                           
  4162                           ;interrupts.c: 125: PIR1bits.ADIF = 0;
  4163  000060  9C9E               	bcf	3998,6,c	;volatile
  4164                           
  4165                           ;interrupts.c: 126: adc_int_handler();
  4166  000062  EC32  F00C         	call	_adc_int_handler	;wreg free
  4167  000066                     i1l44:
  4168  000066  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4169  00006A  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4170  00006E  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4171  000072  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4172  000076  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4173  00007A  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4174  00007E  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4175  000082  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4176  000086  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4177  00008A  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4178  00008E  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4179  000092  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4180  000096  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4181  00009A  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4182  00009E  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4183  0000A2  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4184  0000A6  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  4185  0000AA  0010               	retfie	
  4186  0000AC                     __end_of_InterruptHandlerLow:
  4187                           	opt stack 0
  4188                           pclatu	equ	0xFFB
  4189                           pclath	equ	0xFFA
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           intcon	equ	0xFF2
  4197                           postinc0	equ	0xFEE
  4198                           fsr0h	equ	0xFEA
  4199                           fsr0l	equ	0xFE9
  4200                           wreg	equ	0xFE8
  4201                           indf1	equ	0xFE7
  4202                           fsr1h	equ	0xFE2
  4203                           fsr1l	equ	0xFE1
  4204                           bsr	equ	0xFE0
  4205                           indf2	equ	0xFDF
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210 ;; *************** function _adc_int_handler *****************
  4211 ;; Defined at:
  4212 ;;		line 37 in file "../src/my_adc.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  data            2   27[COMRAM] unsigned int 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;		None               void
  4219 ;; Registers used:
  4220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4226 ;;      Params:         0       0       0       0       0
  4227 ;;      Locals:         2       0       0       0       0
  4228 ;;      Temps:          1       0       0       0       0
  4229 ;;      Totals:         3       0       0       0       0
  4230 ;;Total ram usage:        3 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:   10
  4233 ;; This function calls:
  4234 ;;		_ReadADC
  4235 ;;		_ToMainLow_sendmsg
  4236 ;;		_addBuffer
  4237 ;; This function is called by:
  4238 ;;		_InterruptHandlerLow
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text24
  4243  001864                     __ptext24:
  4244                           	opt stack 0
  4245  001864                     _adc_int_handler:
  4246                           	opt stack 14
  4247                           
  4248                           ;my_adc.c: 38: unsigned int data;
  4249                           ;my_adc.c: 40: data = ReadADC();
  4250                           
  4251                           ;incstack = 0
  4252  001864  EC29  F00E         	call	_ReadADC	;wreg free
  4253  001868  C001  F01C         	movff	?_ReadADC,adc_int_handler@data
  4254  00186C  C002  F01D         	movff	?_ReadADC+1,adc_int_handler@data+1
  4255                           
  4256                           ;my_adc.c: 41: data >>= 2;
  4257  001870  90D8               	bcf	status,0,c
  4258  001872  321D               	rrcf	adc_int_handler@data+1,f,c
  4259  001874  321C               	rrcf	adc_int_handler@data,f,c
  4260  001876  90D8               	bcf	status,0,c
  4261  001878  321D               	rrcf	adc_int_handler@data+1,f,c
  4262  00187A  321C               	rrcf	adc_int_handler@data,f,c
  4263                           
  4264                           ;my_adc.c: 42: addBuffer((char) data);
  4265  00187C  501C               	movf	adc_int_handler@data,w,c
  4266  00187E  ECD1  F00D         	call	_addBuffer
  4267                           
  4268                           ;my_adc.c: 43: if(count >= 5){
  4269  001882  0E04               	movlw	4
  4270  001884  643E               	cpfsgt	_count,c
  4271  001886  0012               	return	
  4272                           
  4273                           ;my_adc.c: 44: ToMainLow_sendmsg(5,50, ADCBuffer);
  4274  001888  6E1B               	movwf	??_adc_int_handler& (0+255),c
  4275  00188A  0E32               	movlw	50
  4276  00188C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4277  00188E  501B               	movf	??_adc_int_handler& (0+255),w,c
  4278  001890  0E00               	movlw	high _ADCBuffer
  4279  001892  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4280  001894  0E4A               	movlw	low _ADCBuffer
  4281  001896  6E18               	movwf	ToMainLow_sendmsg@data,c
  4282  001898  0E05               	movlw	5
  4283  00189A  ECBE  F00D         	call	_ToMainLow_sendmsg
  4284                           
  4285                           ;my_adc.c: 45: count = 0;
  4286  00189E  6E1B               	movwf	??_adc_int_handler& (0+255),c
  4287  0018A0  0E00               	movlw	0
  4288  0018A2  6E3E               	movwf	_count,c
  4289  0018A4  501B               	movf	??_adc_int_handler& (0+255),w,c
  4290  0018A6  0012               	return	
  4291  0018A8                     __end_of_adc_int_handler:
  4292                           	opt stack 0
  4293                           pclatu	equ	0xFFB
  4294                           pclath	equ	0xFFA
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           intcon	equ	0xFF2
  4302                           postinc0	equ	0xFEE
  4303                           fsr0h	equ	0xFEA
  4304                           fsr0l	equ	0xFE9
  4305                           wreg	equ	0xFE8
  4306                           indf1	equ	0xFE7
  4307                           fsr1h	equ	0xFE2
  4308                           fsr1l	equ	0xFE1
  4309                           bsr	equ	0xFE0
  4310                           indf2	equ	0xFDF
  4311                           fsr2h	equ	0xFDA
  4312                           fsr2l	equ	0xFD9
  4313                           status	equ	0xFD8
  4314                           
  4315 ;; *************** function _addBuffer *****************
  4316 ;; Defined at:
  4317 ;;		line 14 in file "../src/my_adc.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  data            1    wreg     unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  data            1    0[COMRAM] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;		None               void
  4324 ;; Registers used:
  4325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4331 ;;      Params:         0       0       0       0       0
  4332 ;;      Locals:         1       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0
  4334 ;;      Totals:         1       0       0       0       0
  4335 ;;Total ram usage:        1 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    7
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_adc_int_handler
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text25
  4346  001BA2                     __ptext25:
  4347                           	opt stack 0
  4348  001BA2                     _addBuffer:
  4349                           	opt stack 16
  4350                           
  4351                           ;incstack = 0
  4352                           ;addBuffer@data stored from wreg
  4353  001BA2  CFE8 F001          	movff	wreg,addBuffer@data
  4354                           
  4355                           ;my_adc.c: 15: if(count < 5)
  4356  001BA6  0E05               	movlw	5
  4357  001BA8  5C3E               	subwf	_count,w,c
  4358  001BAA  B0D8               	btfsc	status,0,c
  4359  001BAC  0012               	return	
  4360                           
  4361                           ;my_adc.c: 16: ADCBuffer[count++] = data;
  4362  001BAE  503E               	movf	_count,w,c
  4363  001BB0  0D01               	mullw	1
  4364  001BB2  0E4A               	movlw	low _ADCBuffer
  4365  001BB4  24F3               	addwf	prodl,w,c
  4366  001BB6  6ED9               	movwf	fsr2l,c
  4367  001BB8  0E00               	movlw	high _ADCBuffer
  4368  001BBA  20F4               	addwfc	prodh,w,c
  4369  001BBC  6EDA               	movwf	fsr2h,c
  4370  001BBE  C001  FFDF         	movff	addBuffer@data,indf2
  4371  001BC2  2A3E               	incf	_count,f,c
  4372  001BC4  0012               	return	
  4373  001BC6                     __end_of_addBuffer:
  4374                           	opt stack 0
  4375                           pclatu	equ	0xFFB
  4376                           pclath	equ	0xFFA
  4377                           tblptru	equ	0xFF8
  4378                           tblptrh	equ	0xFF7
  4379                           tblptrl	equ	0xFF6
  4380                           tablat	equ	0xFF5
  4381                           prodh	equ	0xFF4
  4382                           prodl	equ	0xFF3
  4383                           intcon	equ	0xFF2
  4384                           postinc0	equ	0xFEE
  4385                           fsr0h	equ	0xFEA
  4386                           fsr0l	equ	0xFE9
  4387                           wreg	equ	0xFE8
  4388                           indf1	equ	0xFE7
  4389                           fsr1h	equ	0xFE2
  4390                           fsr1l	equ	0xFE1
  4391                           bsr	equ	0xFE0
  4392                           indf2	equ	0xFDF
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _ToMainLow_sendmsg *****************
  4398 ;; Defined at:
  4399 ;;		line 104 in file "../src/messages.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  length          1    wreg     unsigned char 
  4402 ;;  msgtype         1   22[COMRAM] unsigned char 
  4403 ;;  data            2   23[COMRAM] PTR void 
  4404 ;;		 -> ADCBuffer(5), NULL(0), 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  length          1   25[COMRAM] unsigned char 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      char 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4416 ;;      Params:         3       0       0       0       0
  4417 ;;      Locals:         1       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0
  4419 ;;      Totals:         4       0       0       0       0
  4420 ;;Total ram usage:        4 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    9
  4423 ;; This function calls:
  4424 ;;		_send_msg
  4425 ;; This function is called by:
  4426 ;;		_adc_int_handler
  4427 ;;		_uart_recv_int_handler
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text26
  4432  001B7C                     __ptext26:
  4433                           	opt stack 0
  4434  001B7C                     _ToMainLow_sendmsg:
  4435                           	opt stack 14
  4436                           
  4437                           ;incstack = 0
  4438                           ;ToMainLow_sendmsg@length stored from wreg
  4439  001B7C  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  4440                           
  4441                           ;messages.c: 110: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4442                           ;	Return value of _ToMainLow_sendmsg is never used
  4443  001B80  0101               	movlb	1	; () banked
  4444  001B82  0E01               	movlw	high _ToMainLow_MQ
  4445  001B84  6E0C               	movwf	send_msg@qptr+1,c
  4446  001B86  0101               	movlb	1	; () banked
  4447  001B88  0E6E               	movlw	low _ToMainLow_MQ
  4448  001B8A  6E0B               	movwf	send_msg@qptr,c
  4449  001B8C  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  4450  001B90  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  4451  001B94  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  4452  001B98  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  4453  001B9C  EC42  F008         	call	_send_msg	;wreg free
  4454  001BA0  0012               	return	
  4455  001BA2                     __end_of_ToMainLow_sendmsg:
  4456                           	opt stack 0
  4457                           pclatu	equ	0xFFB
  4458                           pclath	equ	0xFFA
  4459                           tblptru	equ	0xFF8
  4460                           tblptrh	equ	0xFF7
  4461                           tblptrl	equ	0xFF6
  4462                           tablat	equ	0xFF5
  4463                           prodh	equ	0xFF4
  4464                           prodl	equ	0xFF3
  4465                           intcon	equ	0xFF2
  4466                           postinc0	equ	0xFEE
  4467                           fsr0h	equ	0xFEA
  4468                           fsr0l	equ	0xFE9
  4469                           wreg	equ	0xFE8
  4470                           indf1	equ	0xFE7
  4471                           fsr1h	equ	0xFE2
  4472                           fsr1l	equ	0xFE1
  4473                           bsr	equ	0xFE0
  4474                           indf2	equ	0xFDF
  4475                           fsr2h	equ	0xFDA
  4476                           fsr2l	equ	0xFD9
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function _send_msg *****************
  4480 ;; Defined at:
  4481 ;;		line 25 in file "../src/messages.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4484 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4485 ;;  length          1   12[COMRAM] unsigned char 
  4486 ;;  msgtype         1   13[COMRAM] unsigned char 
  4487 ;;  data            2   14[COMRAM] PTR void 
  4488 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  4491 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4492 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4493 ;;  tlength         2   17[COMRAM] unsigned int 
  4494 ;;  slot            1   19[COMRAM] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      char 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4504 ;;      Params:         6       0       0       0       0
  4505 ;;      Locals:         5       0       0       0       0
  4506 ;;      Temps:          1       0       0       0       0
  4507 ;;      Totals:        12       0       0       0       0
  4508 ;;Total ram usage:       12 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    8
  4511 ;; This function calls:
  4512 ;;		i1_memcpy
  4513 ;; This function is called by:
  4514 ;;		_ToMainLow_sendmsg
  4515 ;;		_FromMainLow_sendmsg
  4516 ;;		_FromMainHigh_sendmsg
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text27
  4521  001084                     __ptext27:
  4522                           	opt stack 0
  4523  001084                     _send_msg:
  4524                           	opt stack 14
  4525                           
  4526                           ;messages.c: 26: unsigned char slot;
  4527                           ;messages.c: 28: msg *qmsg;
  4528                           ;messages.c: 29: size_t tlength = length;
  4529                           
  4530                           ;incstack = 0
  4531  001084  C00D  F012         	movff	send_msg@length,send_msg@tlength
  4532  001088  6A13               	clrf	send_msg@tlength+1,c
  4533                           
  4534                           ;messages.c: 39: slot = qptr->cur_write_ind;
  4535  00108A  EE20 F034          	lfsr	2,52
  4536  00108E  500B               	movf	send_msg@qptr,w,c
  4537  001090  26D9               	addwf	fsr2l,f,c
  4538  001092  500C               	movf	send_msg@qptr+1,w,c
  4539  001094  22DA               	addwfc	fsr2h,f,c
  4540  001096  50DF               	movf	indf2,w,c
  4541  001098  6E14               	movwf	send_msg@slot,c
  4542                           
  4543                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  4544  00109A  5014               	movf	send_msg@slot,w,c
  4545  00109C  0D0D               	mullw	13
  4546  00109E  50F3               	movf	prodl,w,c
  4547  0010A0  240B               	addwf	send_msg@qptr,w,c
  4548  0010A2  6E15               	movwf	send_msg@qmsg,c
  4549  0010A4  50F4               	movf	prodh,w,c
  4550  0010A6  200C               	addwfc	send_msg@qptr+1,w,c
  4551  0010A8  6E16               	movwf	send_msg@qmsg+1,c
  4552                           
  4553                           ;messages.c: 42: if (qmsg->full != 0) {
  4554  0010AA  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  4555  0010AE  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4556  0010B2  50DF               	movf	indf2,w,c
  4557  0010B4  B4D8               	btfsc	status,2,c
  4558  0010B6  D002               	goto	i1l3936
  4559                           
  4560                           ;messages.c: 43: return (-1);
  4561  0010B8  0EFF               	movlw	255
  4562  0010BA  0012               	return	
  4563  0010BC                     i1l3936:
  4564                           
  4565                           ;messages.c: 44: }
  4566                           ;messages.c: 47: qmsg->length = length;
  4567  0010BC  EE20 F001          	lfsr	2,1
  4568  0010C0  5015               	movf	send_msg@qmsg,w,c
  4569  0010C2  26D9               	addwf	fsr2l,f,c
  4570  0010C4  5016               	movf	send_msg@qmsg+1,w,c
  4571  0010C6  22DA               	addwfc	fsr2h,f,c
  4572  0010C8  C00D  FFDF         	movff	send_msg@length,indf2
  4573                           
  4574                           ;messages.c: 48: qmsg->msgtype = msgtype;
  4575  0010CC  EE20 F002          	lfsr	2,2
  4576  0010D0  5015               	movf	send_msg@qmsg,w,c
  4577  0010D2  26D9               	addwf	fsr2l,f,c
  4578  0010D4  5016               	movf	send_msg@qmsg+1,w,c
  4579  0010D6  22DA               	addwfc	fsr2h,f,c
  4580  0010D8  C00E  FFDF         	movff	send_msg@msgtype,indf2
  4581                           
  4582                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  4583  0010DC  0E03               	movlw	3
  4584  0010DE  2415               	addwf	send_msg@qmsg,w,c
  4585  0010E0  6E01               	movwf	i1memcpy@d1,c
  4586  0010E2  0E00               	movlw	0
  4587  0010E4  2016               	addwfc	send_msg@qmsg+1,w,c
  4588  0010E6  6E02               	movwf	i1memcpy@d1+1,c
  4589  0010E8  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  4590  0010EC  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  4591  0010F0  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  4592  0010F4  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  4593  0010F8  ECB7  F00C         	call	i1_memcpy	;wreg free
  4594                           
  4595                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4596  0010FC  EE20 F034          	lfsr	2,52
  4597  001100  500B               	movf	send_msg@qptr,w,c
  4598  001102  26D9               	addwf	fsr2l,f,c
  4599  001104  500C               	movf	send_msg@qptr+1,w,c
  4600  001106  22DA               	addwfc	fsr2h,f,c
  4601  001108  EE10 F034          	lfsr	1,52
  4602  00110C  500B               	movf	send_msg@qptr,w,c
  4603  00110E  26E1               	addwf	fsr1l,f,c
  4604  001110  500C               	movf	send_msg@qptr+1,w,c
  4605  001112  22E2               	addwfc	fsr1h,f,c
  4606  001114  50E7               	movf	indf1,w,c
  4607  001116  6E11               	movwf	??_send_msg& (0+255),c
  4608  001118  2811               	incf	??_send_msg,w,c
  4609  00111A  0B03               	andlw	3
  4610  00111C  6EDF               	movwf	indf2,c
  4611                           
  4612                           ;messages.c: 60: qmsg->full = 1;
  4613  00111E  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  4614  001122  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4615  001126  0E01               	movlw	1
  4616  001128  6EDF               	movwf	indf2,c
  4617                           
  4618                           ;messages.c: 61: return (1);
  4619  00112A  0E01               	movlw	1
  4620  00112C  0012               	return	
  4621  00112E                     __end_of_send_msg:
  4622                           	opt stack 0
  4623                           pclatu	equ	0xFFB
  4624                           pclath	equ	0xFFA
  4625                           tblptru	equ	0xFF8
  4626                           tblptrh	equ	0xFF7
  4627                           tblptrl	equ	0xFF6
  4628                           tablat	equ	0xFF5
  4629                           prodh	equ	0xFF4
  4630                           prodl	equ	0xFF3
  4631                           intcon	equ	0xFF2
  4632                           postinc0	equ	0xFEE
  4633                           fsr0h	equ	0xFEA
  4634                           fsr0l	equ	0xFE9
  4635                           wreg	equ	0xFE8
  4636                           indf1	equ	0xFE7
  4637                           fsr1h	equ	0xFE2
  4638                           fsr1l	equ	0xFE1
  4639                           bsr	equ	0xFE0
  4640                           indf2	equ	0xFDF
  4641                           fsr2h	equ	0xFDA
  4642                           fsr2l	equ	0xFD9
  4643                           status	equ	0xFD8
  4644                           
  4645 ;; *************** function i1_memcpy *****************
  4646 ;; Defined at:
  4647 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  d1              2    0[COMRAM] PTR void 
  4650 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4651 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4652 ;;		 -> main@msgbuffer(11), 
  4653 ;;  s1              2    2[COMRAM] PTR const void 
  4654 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4655 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4656 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4657 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4658 ;;  n               2    4[COMRAM] unsigned int 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4661 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4662 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4663 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4664 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4665 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4666 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4667 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4668 ;;		 -> main@msgbuffer(11), 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2    0[COMRAM] PTR void 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4678 ;;      Params:         6       0       0       0       0
  4679 ;;      Locals:         4       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0
  4681 ;;      Totals:        10       0       0       0       0
  4682 ;;Total ram usage:       10 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    7
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_send_msg
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text28
  4693  00196E                     __ptext28:
  4694                           	opt stack 0
  4695  00196E                     i1_memcpy:
  4696                           	opt stack 14
  4697                           
  4698                           ;incstack = 0
  4699  00196E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  4700  001972  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  4701  001976  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  4702  00197A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  4703  00197E  D00E               	goto	i1l3912
  4704  001980                     i1l3906:
  4705  001980  C009  FFD9         	movff	i1memcpy@s,fsr2l
  4706  001984  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  4707  001988  C007  FFE1         	movff	i1memcpy@d,fsr1l
  4708  00198C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  4709  001990  CFDF FFE7          	movff	indf2,indf1
  4710  001994  4A09               	infsnz	i1memcpy@s,f,c
  4711  001996  2A0A               	incf	i1memcpy@s+1,f,c
  4712  001998  4A07               	infsnz	i1memcpy@d,f,c
  4713  00199A  2A08               	incf	i1memcpy@d+1,f,c
  4714  00199C                     i1l3912:
  4715  00199C  0605               	decf	i1memcpy@n,f,c
  4716  00199E  A0D8               	btfss	status,0,c
  4717  0019A0  0606               	decf	i1memcpy@n+1,f,c
  4718  0019A2  2805               	incf	i1memcpy@n& (0+255),w,c
  4719  0019A4  B4D8               	btfsc	status,2,c
  4720  0019A6  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  4721  0019A8  B4D8               	btfsc	status,2,c
  4722                           
  4723                           ;	Return value of i1_memcpy is never used
  4724  0019AA  0012               	return	
  4725  0019AC  D7E9               	goto	i1l3906
  4726  0019AE                     __end_ofi1_memcpy:
  4727                           	opt stack 0
  4728                           pclatu	equ	0xFFB
  4729                           pclath	equ	0xFFA
  4730                           tblptru	equ	0xFF8
  4731                           tblptrh	equ	0xFF7
  4732                           tblptrl	equ	0xFF6
  4733                           tablat	equ	0xFF5
  4734                           prodh	equ	0xFF4
  4735                           prodl	equ	0xFF3
  4736                           intcon	equ	0xFF2
  4737                           postinc0	equ	0xFEE
  4738                           fsr0h	equ	0xFEA
  4739                           fsr0l	equ	0xFE9
  4740                           wreg	equ	0xFE8
  4741                           indf1	equ	0xFE7
  4742                           fsr1h	equ	0xFE2
  4743                           fsr1l	equ	0xFE1
  4744                           bsr	equ	0xFE0
  4745                           indf2	equ	0xFDF
  4746                           fsr2h	equ	0xFDA
  4747                           fsr2l	equ	0xFD9
  4748                           status	equ	0xFD8
  4749                           
  4750 ;; *************** function _ReadADC *****************
  4751 ;; Defined at:
  4752 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  2    0[COMRAM] int 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4766 ;;      Params:         2       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0
  4769 ;;      Totals:         2       0       0       0       0
  4770 ;;Total ram usage:        2 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    7
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_adc_int_handler
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text29
  4781  001C52                     __ptext29:
  4782                           	opt stack 0
  4783  001C52                     _ReadADC:
  4784                           	opt stack 16
  4785                           
  4786                           ;incstack = 0
  4787  001C52  50C4               	movf	4036,w,c	;volatile
  4788  001C54  6E02               	movwf	?_ReadADC+1,c
  4789  001C56  50C3               	movf	4035,w,c	;volatile
  4790  001C58  6E01               	movwf	?_ReadADC,c
  4791  001C5A  0012               	return	
  4792  001C5C                     __end_of_ReadADC:
  4793                           	opt stack 0
  4794                           pclatu	equ	0xFFB
  4795                           pclath	equ	0xFFA
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           prodh	equ	0xFF4
  4801                           prodl	equ	0xFF3
  4802                           intcon	equ	0xFF2
  4803                           postinc0	equ	0xFEE
  4804                           fsr0h	equ	0xFEA
  4805                           fsr0l	equ	0xFE9
  4806                           wreg	equ	0xFE8
  4807                           indf1	equ	0xFE7
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           bsr	equ	0xFE0
  4811                           indf2	equ	0xFDF
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function _InterruptHandlerHigh *****************
  4817 ;; Defined at:
  4818 ;;		line 84 in file "../src/interrupts.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;		None               void
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4832 ;;      Params:         0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0
  4834 ;;      Temps:          0       0      14       0       0
  4835 ;;      Totals:         0       0      14       0       0
  4836 ;;Total ram usage:       14 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    6
  4839 ;; This function calls:
  4840 ;;		_SleepIfOkay
  4841 ;;		_i2c_int_handler
  4842 ;;		_timer0_int_handler
  4843 ;; This function is called by:
  4844 ;;		Interrupt level 2
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	intcode
  4849  000008                     __pintcode:
  4850                           	opt stack 0
  4851  000008                     _InterruptHandlerHigh:
  4852                           	opt stack 14
  4853                           
  4854                           ;incstack = 0
  4855  000008  CFFA F1AD          	movff	pclath,??_InterruptHandlerHigh
  4856  00000C  CFFB F1AE          	movff	pclatu,??_InterruptHandlerHigh+1
  4857  000010  EF7D  F009         	goto	int_func
  4858                           pclatu	equ	0xFFB
  4859                           pclath	equ	0xFFA
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           prodh	equ	0xFF4
  4865                           prodl	equ	0xFF3
  4866                           intcon	equ	0xFF2
  4867                           postinc0	equ	0xFEE
  4868                           fsr0h	equ	0xFEA
  4869                           fsr0l	equ	0xFE9
  4870                           wreg	equ	0xFE8
  4871                           indf1	equ	0xFE7
  4872                           fsr1h	equ	0xFE2
  4873                           fsr1l	equ	0xFE1
  4874                           bsr	equ	0xFE0
  4875                           indf2	equ	0xFDF
  4876                           fsr2h	equ	0xFDA
  4877                           fsr2l	equ	0xFD9
  4878                           status	equ	0xFD8
  4879                           
  4880                           	psect	intcode_body
  4881  0012FA                     __pintcode_body:
  4882                           	opt stack 14
  4883  0012FA                     int_func:
  4884                           	opt stack 14
  4885  0012FA  CFE9 F1AF          	movff	fsr0l,??_InterruptHandlerHigh+2
  4886  0012FE  CFEA F1B0          	movff	fsr0h,??_InterruptHandlerHigh+3
  4887  001302  CFE1 F1B1          	movff	fsr1l,??_InterruptHandlerHigh+4
  4888  001306  CFE2 F1B2          	movff	fsr1h,??_InterruptHandlerHigh+5
  4889  00130A  CFD9 F1B3          	movff	fsr2l,??_InterruptHandlerHigh+6
  4890  00130E  CFDA F1B4          	movff	fsr2h,??_InterruptHandlerHigh+7
  4891  001312  CFF3 F1B5          	movff	prodl,??_InterruptHandlerHigh+8
  4892  001316  CFF4 F1B6          	movff	prodh,??_InterruptHandlerHigh+9
  4893  00131A  CFF6 F1B7          	movff	tblptrl,??_InterruptHandlerHigh+10
  4894  00131E  CFF7 F1B8          	movff	tblptrh,??_InterruptHandlerHigh+11
  4895  001322  CFF8 F1B9          	movff	tblptru,??_InterruptHandlerHigh+12
  4896  001326  CFF5 F1BA          	movff	tablat,??_InterruptHandlerHigh+13
  4897                           
  4898                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  4899  00132A  A69E               	btfss	3998,3,c	;volatile
  4900  00132C  D003               	goto	i2l3202
  4901                           
  4902                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  4903  00132E  969E               	bcf	3998,3,c	;volatile
  4904                           
  4905                           ;interrupts.c: 93: i2c_int_handler();
  4906  001330  EC58  F000         	call	_i2c_int_handler	;wreg free
  4907  001334                     i2l3202:
  4908                           
  4909                           ;interrupts.c: 94: }
  4910                           ;interrupts.c: 97: if (INTCONbits.TMR0IF) {
  4911  001334  A4F2               	btfss	intcon,2,c	;volatile
  4912  001336  D003               	goto	i2l3208
  4913                           
  4914                           ;interrupts.c: 98: INTCONbits.TMR0IF = 0;
  4915  001338  94F2               	bcf	intcon,2,c	;volatile
  4916                           
  4917                           ;interrupts.c: 100: timer0_int_handler();
  4918  00133A  EC1C  F00E         	call	_timer0_int_handler	;wreg free
  4919  00133E                     i2l3208:
  4920                           
  4921                           ;interrupts.c: 101: }
  4922                           ;interrupts.c: 110: SleepIfOkay();
  4923  00133E  ECC6  F00B         	call	_SleepIfOkay	;wreg free
  4924  001342  C1BA  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  4925  001346  C1B9  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  4926  00134A  C1B8  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  4927  00134E  C1B7  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  4928  001352  C1B6  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  4929  001356  C1B5  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  4930  00135A  C1B4  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  4931  00135E  C1B3  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  4932  001362  C1B2  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  4933  001366  C1B1  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  4934  00136A  C1B0  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  4935  00136E  C1AF  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  4936  001372  C1AE  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  4937  001376  C1AD  FFFA         	movff	??_InterruptHandlerHigh,pclath
  4938  00137A  0011               	retfie		f
  4939  00137C                     __end_of_InterruptHandlerHigh:
  4940                           	opt stack 0
  4941                           pclatu	equ	0xFFB
  4942                           pclath	equ	0xFFA
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           postinc0	equ	0xFEE
  4951                           fsr0h	equ	0xFEA
  4952                           fsr0l	equ	0xFE9
  4953                           wreg	equ	0xFE8
  4954                           indf1	equ	0xFE7
  4955                           fsr1h	equ	0xFE2
  4956                           fsr1l	equ	0xFE1
  4957                           bsr	equ	0xFE0
  4958                           indf2	equ	0xFDF
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _timer0_int_handler *****************
  4964 ;; Defined at:
  4965 ;;		line 17 in file "../src/user_interrupts.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  msgtype         2    0        int 
  4970 ;;  length          2    0        int 
  4971 ;;  val             2    0        unsigned int 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4981 ;;      Params:         0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0
  4984 ;;      Totals:         0       0       0       0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		_WriteTimer0
  4990 ;; This function is called by:
  4991 ;;		_InterruptHandlerHigh
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text31
  4996  001C38                     __ptext31:
  4997                           	opt stack 0
  4998  001C38                     _timer0_int_handler:
  4999                           	opt stack 18
  5000                           
  5001                           ;user_interrupts.c: 18: unsigned int val;
  5002                           ;user_interrupts.c: 19: int length, msgtype;
  5003                           ;user_interrupts.c: 27: WriteTimer0(0xFD00);
  5004                           
  5005                           ;incstack = 0
  5006  001C38  0EFD               	movlw	253
  5007  001C3A  6E30               	movwf	WriteTimer0@timer0+1,c
  5008  001C3C  0E00               	movlw	0
  5009  001C3E  6E2F               	movwf	WriteTimer0@timer0,c
  5010  001C40  EC13  F00E         	call	_WriteTimer0	;wreg free
  5011  001C44  0012               	return	
  5012  001C46                     __end_of_timer0_int_handler:
  5013                           	opt stack 0
  5014                           pclatu	equ	0xFFB
  5015                           pclath	equ	0xFFA
  5016                           tblptru	equ	0xFF8
  5017                           tblptrh	equ	0xFF7
  5018                           tblptrl	equ	0xFF6
  5019                           tablat	equ	0xFF5
  5020                           prodh	equ	0xFF4
  5021                           prodl	equ	0xFF3
  5022                           intcon	equ	0xFF2
  5023                           postinc0	equ	0xFEE
  5024                           fsr0h	equ	0xFEA
  5025                           fsr0l	equ	0xFE9
  5026                           wreg	equ	0xFE8
  5027                           indf1	equ	0xFE7
  5028                           fsr1h	equ	0xFE2
  5029                           fsr1l	equ	0xFE1
  5030                           bsr	equ	0xFE0
  5031                           indf2	equ	0xFDF
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _WriteTimer0 *****************
  5037 ;; Defined at:
  5038 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  timer0          2   46[COMRAM] unsigned int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  timer           2   48[COMRAM] struct Timers
  5043 ;; Return value:  Size  Location     Type
  5044 ;;		None               void
  5045 ;; Registers used:
  5046 ;;		None
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5052 ;;      Params:         2       0       0       0       0
  5053 ;;      Locals:         2       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0
  5055 ;;      Totals:         4       0       0       0       0
  5056 ;;Total ram usage:        4 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_timer0_int_handler
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text32
  5066  001C26                     __ptext32:
  5067                           	opt stack 0
  5068  001C26                     _WriteTimer0:
  5069                           	opt stack 18
  5070                           
  5071                           ;incstack = 0
  5072  001C26  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5073  001C2A  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5074  001C2E  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5075  001C32  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5076  001C36  0012               	return	
  5077  001C38                     __end_of_WriteTimer0:
  5078                           	opt stack 0
  5079                           pclatu	equ	0xFFB
  5080                           pclath	equ	0xFFA
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           prodh	equ	0xFF4
  5086                           prodl	equ	0xFF3
  5087                           intcon	equ	0xFF2
  5088                           postinc0	equ	0xFEE
  5089                           fsr0h	equ	0xFEA
  5090                           fsr0l	equ	0xFE9
  5091                           wreg	equ	0xFE8
  5092                           indf1	equ	0xFE7
  5093                           fsr1h	equ	0xFE2
  5094                           fsr1l	equ	0xFE1
  5095                           bsr	equ	0xFE0
  5096                           indf2	equ	0xFDF
  5097                           fsr2h	equ	0xFDA
  5098                           fsr2l	equ	0xFD9
  5099                           status	equ	0xFD8
  5100                           
  5101 ;; *************** function _i2c_int_handler *****************
  5102 ;; Defined at:
  5103 ;;		line 107 in file "../src/my_i2c.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  error_buf       3    0[BANK1 ] unsigned char [3]
  5108 ;;  data_read       1    8[BANK1 ] unsigned char 
  5109 ;;  msg_ready       1    7[BANK1 ] unsigned char 
  5110 ;;  msg_to_send     1    6[BANK1 ] unsigned char 
  5111 ;;  i2c_data        1    5[BANK1 ] unsigned char 
  5112 ;;  overrun_erro    1    4[BANK1 ] unsigned char 
  5113 ;;  data_written    1    3[BANK1 ] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5123 ;;      Params:         0       0       0       0       0
  5124 ;;      Locals:         0       0       9       0       0
  5125 ;;      Temps:          0       1       0       0       0
  5126 ;;      Totals:         0       1       9       0       0
  5127 ;;Total ram usage:       10 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    5
  5130 ;; This function calls:
  5131 ;;		_ToMainHigh_sendmsg
  5132 ;;		_handle_start
  5133 ;;		_resetDBG
  5134 ;;		_sendRequestedData
  5135 ;;		_setBrainReqData
  5136 ;;		_setDBG
  5137 ;; This function is called by:
  5138 ;;		_InterruptHandlerHigh
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text33
  5143  0000B0                     __ptext33:
  5144                           	opt stack 0
  5145  0000B0                     _i2c_int_handler:
  5146                           	opt stack 14
  5147                           
  5148                           ;my_i2c.c: 109: unsigned char i2c_data;
  5149                           ;my_i2c.c: 110: unsigned char data_read = 0;
  5150                           
  5151                           ;incstack = 0
  5152  0000B0  0100               	movlb	0	; () banked
  5153  0000B2  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5154  0000B4  0E00               	movlw	0
  5155  0000B6  0101               	movlb	1	; () banked
  5156  0000B8  0101               	movlb	1	; () banked
  5157  0000BA  6FAC               	movwf	i2c_int_handler@data_read& (0+255),b
  5158  0000BC  0100               	movlb	0	; () banked
  5159  0000BE  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5160                           
  5161                           ;my_i2c.c: 111: unsigned char data_written = 0;
  5162  0000C0  0100               	movlb	0	; () banked
  5163  0000C2  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5164  0000C4  0E00               	movlw	0
  5165  0000C6  0101               	movlb	1	; () banked
  5166  0000C8  0101               	movlb	1	; () banked
  5167  0000CA  6FA7               	movwf	i2c_int_handler@data_written& (0+255),b
  5168  0000CC  0100               	movlb	0	; () banked
  5169  0000CE  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5170                           
  5171                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  5172  0000D0  0100               	movlb	0	; () banked
  5173  0000D2  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5174  0000D4  0E00               	movlw	0
  5175  0000D6  0101               	movlb	1	; () banked
  5176  0000D8  0101               	movlb	1	; () banked
  5177  0000DA  6FAB               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5178  0000DC  0100               	movlb	0	; () banked
  5179  0000DE  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5180                           
  5181                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  5182  0000E0  0100               	movlb	0	; () banked
  5183  0000E2  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5184  0000E4  0E00               	movlw	0
  5185  0000E6  0101               	movlb	1	; () banked
  5186  0000E8  0101               	movlb	1	; () banked
  5187  0000EA  6FAA               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5188  0000EC  0100               	movlb	0	; () banked
  5189  0000EE  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5190                           
  5191                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  5192  0000F0  0100               	movlb	0	; () banked
  5193  0000F2  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5194  0000F4  0E00               	movlw	0
  5195  0000F6  0101               	movlb	1	; () banked
  5196  0000F8  0101               	movlb	1	; () banked
  5197  0000FA  6FA8               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5198  0000FC  0100               	movlb	0	; () banked
  5199  0000FE  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;my_i2c.c: 115: unsigned char error_buf[3];
  5203                           ;my_i2c.c: 118: if (SSPCON1bits.SSPOV == 1) {
  5204  000100  ACC6               	btfss	4038,6,c	;volatile
  5205  000102  D029               	goto	i2l3224
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;my_i2c.c: 119: SSPCON1bits.SSPOV = 0;
  5209  000104  9CC6               	bcf	4038,6,c	;volatile
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;my_i2c.c: 123: ic_ptr->status = 0x5;
  5213  000106  0101               	movlb	1	; () banked
  5214  000108  EE20 F00C          	lfsr	2,12
  5215  00010C  0101               	movlb	1	; () banked
  5216  00010E  5100               	movf	_ic_ptr& (0+255),w,b
  5217  000110  26D9               	addwf	fsr2l,f,c
  5218  000112  0101               	movlb	1	; () banked
  5219  000114  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5220  000116  22DA               	addwfc	fsr2h,f,c
  5221  000118  0E05               	movlw	5
  5222  00011A  6EDF               	movwf	indf2,c
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;my_i2c.c: 124: overrun_error = 1;
  5226  00011C  0100               	movlb	0	; () banked
  5227  00011E  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5228  000120  0E01               	movlw	1
  5229  000122  0101               	movlb	1	; () banked
  5230  000124  0101               	movlb	1	; () banked
  5231  000126  6FA8               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5232  000128  0100               	movlb	0	; () banked
  5233  00012A  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;my_i2c.c: 125: ic_ptr->error_count++;
  5237  00012C  0101               	movlb	1	; () banked
  5238  00012E  EE20 F00E          	lfsr	2,14
  5239  000132  0101               	movlb	1	; () banked
  5240  000134  5100               	movf	_ic_ptr& (0+255),w,b
  5241  000136  26D9               	addwf	fsr2l,f,c
  5242  000138  0101               	movlb	1	; () banked
  5243  00013A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5244  00013C  22DA               	addwfc	fsr2h,f,c
  5245  00013E  2ADF               	incf	indf2,f,c
  5246                           
  5247                           ; BSR set to: 1
  5248                           ;my_i2c.c: 126: ic_ptr->error_code = 0x4;
  5249  000140  0101               	movlb	1	; () banked
  5250  000142  EE20 F00D          	lfsr	2,13
  5251  000146  0101               	movlb	1	; () banked
  5252  000148  5100               	movf	_ic_ptr& (0+255),w,b
  5253  00014A  26D9               	addwf	fsr2l,f,c
  5254  00014C  0101               	movlb	1	; () banked
  5255  00014E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5256  000150  22DA               	addwfc	fsr2h,f,c
  5257  000152  0E04               	movlw	4
  5258  000154  6EDF               	movwf	indf2,c
  5259  000156                     i2l3224:
  5260                           
  5261                           ;my_i2c.c: 127: }
  5262                           ;my_i2c.c: 129: if (SSPSTATbits.BF == 1) {
  5263  000156  A0C7               	btfss	4039,0,c	;volatile
  5264  000158  D00A               	goto	i2l3230
  5265                           
  5266                           ;my_i2c.c: 130: i2c_data = SSPBUF;
  5267  00015A  CFC9 F1A9          	movff	4041,i2c_int_handler@i2c_data	;volatile
  5268                           
  5269                           ;my_i2c.c: 131: data_read = 1;
  5270  00015E  0100               	movlb	0	; () banked
  5271  000160  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5272  000162  0E01               	movlw	1
  5273  000164  0101               	movlb	1	; () banked
  5274  000166  0101               	movlb	1	; () banked
  5275  000168  6FAC               	movwf	i2c_int_handler@data_read& (0+255),b
  5276  00016A  0100               	movlb	0	; () banked
  5277  00016C  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5278  00016E                     i2l3230:
  5279                           
  5280                           ;my_i2c.c: 132: }
  5281                           ;my_i2c.c: 134: if (!overrun_error) {
  5282  00016E  0101               	movlb	1	; () banked
  5283  000170  0101               	movlb	1	; () banked
  5284  000172  67A8               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  5285  000174  D1D4               	goto	i2l262
  5286  000176  D1BD               	goto	i2l3320
  5287  000178                     i2l264:
  5288                           
  5289                           ; BSR set to: 1
  5290                           ;my_i2c.c: 137: {
  5291                           ;my_i2c.c: 139: if (SSPSTATbits.S == 1) {
  5292  000178  A6C7               	btfss	4039,3,c	;volatile
  5293  00017A  D1D1               	goto	i2l262
  5294                           
  5295                           ; BSR set to: 1
  5296                           ;my_i2c.c: 140: handle_start(data_read);
  5297  00017C  0101               	movlb	1	; () banked
  5298  00017E  0101               	movlb	1	; () banked
  5299  000180  51AC               	movf	i2c_int_handler@data_read& (0+255),w,b
  5300  000182  ECDE  F007         	call	_handle_start
  5301                           
  5302                           ;my_i2c.c: 142: if (ic_ptr->status == 0x8) {
  5303  000186  0101               	movlb	1	; () banked
  5304  000188  EE20 F00C          	lfsr	2,12
  5305  00018C  0101               	movlb	1	; () banked
  5306  00018E  5100               	movf	_ic_ptr& (0+255),w,b
  5307  000190  26D9               	addwf	fsr2l,f,c
  5308  000192  0101               	movlb	1	; () banked
  5309  000194  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5310  000196  22DA               	addwfc	fsr2h,f,c
  5311  000198  0E08               	movlw	8
  5312  00019A  62DF               	cpfseq	indf2,c
  5313  00019C  D1C0               	goto	i2l262
  5314                           
  5315                           ; BSR set to: 1
  5316                           ;my_i2c.c: 143: data_read = 0;
  5317  00019E  0100               	movlb	0	; () banked
  5318  0001A0  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5319  0001A2  0E00               	movlw	0
  5320  0001A4  0101               	movlb	1	; () banked
  5321  0001A6  0101               	movlb	1	; () banked
  5322  0001A8  6FAC               	movwf	i2c_int_handler@data_read& (0+255),b
  5323  0001AA  0100               	movlb	0	; () banked
  5324  0001AC  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5325                           
  5326                           ;my_i2c.c: 144: msg_to_send = 1;
  5327  0001AE  0100               	movlb	0	; () banked
  5328  0001B0  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5329  0001B2  0E01               	movlw	1
  5330  0001B4  0101               	movlb	1	; () banked
  5331  0001B6  0101               	movlb	1	; () banked
  5332  0001B8  6FAA               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5333  0001BA  D18D               	goto	L6
  5334  0001BC                     i2l268:
  5335                           
  5336                           ; BSR set to: 1
  5337                           ;my_i2c.c: 150: {
  5338                           ;my_i2c.c: 152: if (SSPSTATbits.P == 1) {
  5339  0001BC  A8C7               	btfss	4039,4,c	;volatile
  5340  0001BE  D030               	goto	i2l3250
  5341                           
  5342                           ; BSR set to: 1
  5343                           ;my_i2c.c: 155: ic_ptr->event_count++;
  5344  0001C0  0101               	movlb	1	; () banked
  5345  0001C2  EE20 F00B          	lfsr	2,11
  5346  0001C6  0101               	movlb	1	; () banked
  5347  0001C8  5100               	movf	_ic_ptr& (0+255),w,b
  5348  0001CA  26D9               	addwf	fsr2l,f,c
  5349  0001CC  0101               	movlb	1	; () banked
  5350  0001CE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5351  0001D0  22DA               	addwfc	fsr2h,f,c
  5352  0001D2  2ADF               	incf	indf2,f,c
  5353                           
  5354                           ; BSR set to: 1
  5355                           ;my_i2c.c: 156: if (data_read) {
  5356  0001D4  0101               	movlb	1	; () banked
  5357  0001D6  0101               	movlb	1	; () banked
  5358  0001D8  51AC               	movf	i2c_int_handler@data_read& (0+255),w,b
  5359  0001DA  B4D8               	btfsc	status,2,c
  5360  0001DC  D17F               	goto	L8
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;my_i2c.c: 157: if (SSPSTATbits.D_A == 0) {
  5364  0001DE  BAC7               	btfsc	4039,5,c	;volatile
  5365  0001E0  D009               	goto	i2l3248
  5366                           
  5367                           ; BSR set to: 1
  5368                           ;my_i2c.c: 158: msg_ready = 1;
  5369  0001E2  0100               	movlb	0	; () banked
  5370  0001E4  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5371  0001E6  0E01               	movlw	1
  5372  0001E8  0101               	movlb	1	; () banked
  5373  0001EA  0101               	movlb	1	; () banked
  5374  0001EC  6FAB               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5375  0001EE  0100               	movlb	0	; () banked
  5376  0001F0  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5377                           
  5378                           ;my_i2c.c: 159: } else {
  5379  0001F2  D174               	goto	L8
  5380  0001F4                     i2l3248:
  5381                           
  5382                           ;my_i2c.c: 160: ic_ptr->error_count++;
  5383  0001F4  0101               	movlb	1	; () banked
  5384  0001F6  EE20 F00E          	lfsr	2,14
  5385  0001FA  0101               	movlb	1	; () banked
  5386  0001FC  5100               	movf	_ic_ptr& (0+255),w,b
  5387  0001FE  26D9               	addwf	fsr2l,f,c
  5388  000200  0101               	movlb	1	; () banked
  5389  000202  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5390  000204  22DA               	addwfc	fsr2h,f,c
  5391  000206  2ADF               	incf	indf2,f,c
  5392                           
  5393                           ;my_i2c.c: 161: ic_ptr->error_code = 0x6;
  5394  000208  0101               	movlb	1	; () banked
  5395  00020A  EE20 F00D          	lfsr	2,13
  5396  00020E  0101               	movlb	1	; () banked
  5397  000210  5100               	movf	_ic_ptr& (0+255),w,b
  5398  000212  26D9               	addwf	fsr2l,f,c
  5399  000214  0101               	movlb	1	; () banked
  5400  000216  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5401  000218  22DA               	addwfc	fsr2h,f,c
  5402  00021A  0E06               	movlw	6
  5403  00021C  6EDF               	movwf	indf2,c
  5404                           
  5405                           ; BSR set to: 1
  5406  00021E  D15E               	goto	L8
  5407  000220                     i2l3250:
  5408                           
  5409                           ; BSR set to: 1
  5410  000220  0101               	movlb	1	; () banked
  5411  000222  0101               	movlb	1	; () banked
  5412  000224  51AC               	movf	i2c_int_handler@data_read& (0+255),w,b
  5413  000226  B4D8               	btfsc	status,2,c
  5414  000228  D17A               	goto	i2l262
  5415                           
  5416                           ; BSR set to: 1
  5417                           ;my_i2c.c: 166: ic_ptr->event_count++;
  5418  00022A  0101               	movlb	1	; () banked
  5419  00022C  EE20 F00B          	lfsr	2,11
  5420  000230  0101               	movlb	1	; () banked
  5421  000232  5100               	movf	_ic_ptr& (0+255),w,b
  5422  000234  26D9               	addwf	fsr2l,f,c
  5423  000236  0101               	movlb	1	; () banked
  5424  000238  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5425  00023A  22DA               	addwfc	fsr2h,f,c
  5426  00023C  2ADF               	incf	indf2,f,c
  5427                           
  5428                           ; BSR set to: 1
  5429                           ;my_i2c.c: 167: if (SSPSTATbits.D_A == 0) {
  5430  00023E  BAC7               	btfsc	4039,5,c	;volatile
  5431  000240  D019               	goto	i2l3266
  5432                           
  5433                           ; BSR set to: 1
  5434                           ;my_i2c.c: 168: if (SSPSTATbits.R_W == 0) {
  5435  000242  B4C7               	btfsc	4039,2,c	;volatile
  5436  000244  D00B               	goto	i2l3260
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;my_i2c.c: 169: ic_ptr->status = 0x7;
  5440  000246  0101               	movlb	1	; () banked
  5441  000248  EE20 F00C          	lfsr	2,12
  5442  00024C  0101               	movlb	1	; () banked
  5443  00024E  5100               	movf	_ic_ptr& (0+255),w,b
  5444  000250  26D9               	addwf	fsr2l,f,c
  5445  000252  0101               	movlb	1	; () banked
  5446  000254  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5447  000256  22DA               	addwfc	fsr2h,f,c
  5448  000258  0E07               	movlw	7
  5449  00025A  D07C               	goto	L5
  5450  00025C                     i2l3260:
  5451                           
  5452                           ; BSR set to: 1
  5453                           ;my_i2c.c: 171: ic_ptr->status = 0x8;
  5454  00025C  0101               	movlb	1	; () banked
  5455  00025E  EE20 F00C          	lfsr	2,12
  5456  000262  0101               	movlb	1	; () banked
  5457  000264  5100               	movf	_ic_ptr& (0+255),w,b
  5458  000266  26D9               	addwf	fsr2l,f,c
  5459  000268  0101               	movlb	1	; () banked
  5460  00026A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5461  00026C  22DA               	addwfc	fsr2h,f,c
  5462  00026E  0E08               	movlw	8
  5463  000270  6EDF               	movwf	indf2,c
  5464  000272  D123               	goto	L9
  5465  000274                     i2l3266:
  5466                           
  5467                           ;my_i2c.c: 177: ic_ptr->error_count++;
  5468  000274  0101               	movlb	1	; () banked
  5469  000276  EE20 F00E          	lfsr	2,14
  5470  00027A  0101               	movlb	1	; () banked
  5471  00027C  5100               	movf	_ic_ptr& (0+255),w,b
  5472  00027E  26D9               	addwf	fsr2l,f,c
  5473  000280  0101               	movlb	1	; () banked
  5474  000282  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5475  000284  22DA               	addwfc	fsr2h,f,c
  5476  000286  2ADF               	incf	indf2,f,c
  5477                           
  5478                           ;my_i2c.c: 178: ic_ptr->status = 0x5;
  5479  000288  0101               	movlb	1	; () banked
  5480  00028A  EE20 F00C          	lfsr	2,12
  5481  00028E  0101               	movlb	1	; () banked
  5482  000290  5100               	movf	_ic_ptr& (0+255),w,b
  5483  000292  26D9               	addwf	fsr2l,f,c
  5484  000294  0101               	movlb	1	; () banked
  5485  000296  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5486  000298  22DA               	addwfc	fsr2h,f,c
  5487  00029A  0E05               	movlw	5
  5488  00029C  6EDF               	movwf	indf2,c
  5489                           
  5490                           ;my_i2c.c: 179: ic_ptr->error_code = 0x6;
  5491  00029E  0101               	movlb	1	; () banked
  5492  0002A0  EE20 F00D          	lfsr	2,13
  5493  0002A4  0101               	movlb	1	; () banked
  5494  0002A6  5100               	movf	_ic_ptr& (0+255),w,b
  5495  0002A8  26D9               	addwf	fsr2l,f,c
  5496  0002AA  0101               	movlb	1	; () banked
  5497  0002AC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5498  0002AE  22DA               	addwfc	fsr2h,f,c
  5499  0002B0  0E06               	movlw	6
  5500  0002B2  D050               	goto	L5
  5501  0002B4                     i2l3268:
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;my_i2c.c: 185: {
  5505                           ;my_i2c.c: 186: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  5506  0002B4  0101               	movlb	1	; () banked
  5507  0002B6  EE20 F01A          	lfsr	2,26
  5508  0002BA  0101               	movlb	1	; () banked
  5509  0002BC  5100               	movf	_ic_ptr& (0+255),w,b
  5510  0002BE  26D9               	addwf	fsr2l,f,c
  5511  0002C0  0101               	movlb	1	; () banked
  5512  0002C2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5513  0002C4  22DA               	addwfc	fsr2h,f,c
  5514  0002C6  50DF               	movf	indf2,w,c
  5515  0002C8  0100               	movlb	0	; () banked
  5516  0002CA  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5517  0002CC  0101               	movlb	1	; () banked
  5518  0002CE  EE20 F019          	lfsr	2,25
  5519  0002D2  0101               	movlb	1	; () banked
  5520  0002D4  5100               	movf	_ic_ptr& (0+255),w,b
  5521  0002D6  26D9               	addwf	fsr2l,f,c
  5522  0002D8  0101               	movlb	1	; () banked
  5523  0002DA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5524  0002DC  22DA               	addwfc	fsr2h,f,c
  5525  0002DE  50DF               	movf	indf2,w,c
  5526  0002E0  0100               	movlb	0	; () banked
  5527  0002E2  5DF8               	subwf	??_i2c_int_handler& (0+255),w,b
  5528  0002E4  B0D8               	btfsc	status,0,c
  5529  0002E6  D0FA               	goto	L8
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;my_i2c.c: 187: setDBG(DBG2);
  5533  0002E8  0E01               	movlw	1
  5534  0002EA  ECF7  F00C         	call	_setDBG
  5535                           
  5536                           ;my_i2c.c: 188: resetDBG(DBG2);
  5537  0002EE  0E01               	movlw	1
  5538  0002F0  EC15  F00D         	call	_resetDBG
  5539                           
  5540                           ;my_i2c.c: 189: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  5541  0002F4  0101               	movlb	1	; () banked
  5542  0002F6  EE20 F01A          	lfsr	2,26
  5543  0002FA  0101               	movlb	1	; () banked
  5544  0002FC  5100               	movf	_ic_ptr& (0+255),w,b
  5545  0002FE  26D9               	addwf	fsr2l,f,c
  5546  000300  0101               	movlb	1	; () banked
  5547  000302  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5548  000304  22DA               	addwfc	fsr2h,f,c
  5549  000306  50DF               	movf	indf2,w,c
  5550  000308  0100               	movlb	0	; () banked
  5551  00030A  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5552  00030C  0100               	movlb	0	; () banked
  5553  00030E  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5554  000310  0D01               	mullw	1
  5555  000312  0E0F               	movlw	15
  5556  000314  26F3               	addwf	prodl,f,c
  5557  000316  0E00               	movlw	0
  5558  000318  22F4               	addwfc	prodh,f,c
  5559  00031A  50F3               	movf	prodl,w,c
  5560  00031C  0101               	movlb	1	; () banked
  5561  00031E  0101               	movlb	1	; () banked
  5562  000320  2500               	addwf	_ic_ptr& (0+255),w,b
  5563  000322  6ED9               	movwf	fsr2l,c
  5564  000324  50F4               	movf	prodh,w,c
  5565  000326  0101               	movlb	1	; () banked
  5566  000328  0101               	movlb	1	; () banked
  5567  00032A  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5568  00032C  6EDA               	movwf	fsr2h,c
  5569  00032E  50DF               	movf	indf2,w,c
  5570  000330  6EC9               	movwf	4041,c	;volatile
  5571                           
  5572                           ; BSR set to: 1
  5573                           ;my_i2c.c: 190: ic_ptr->outbufind++;
  5574  000332  0101               	movlb	1	; () banked
  5575  000334  EE20 F01A          	lfsr	2,26
  5576  000338  0101               	movlb	1	; () banked
  5577  00033A  5100               	movf	_ic_ptr& (0+255),w,b
  5578  00033C  26D9               	addwf	fsr2l,f,c
  5579  00033E  0101               	movlb	1	; () banked
  5580  000340  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5581  000342  22DA               	addwfc	fsr2h,f,c
  5582  000344  2ADF               	incf	indf2,f,c
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;my_i2c.c: 191: data_written = 1;
  5586  000346  0100               	movlb	0	; () banked
  5587  000348  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5588  00034A  0E01               	movlw	1
  5589  00034C  0101               	movlb	1	; () banked
  5590  00034E  0101               	movlb	1	; () banked
  5591  000350  6FA7               	movwf	i2c_int_handler@data_written& (0+255),b
  5592  000352  D0C1               	goto	L6
  5593  000354                     L5:
  5594  000354  6EDF               	movwf	indf2,c
  5595  000356  D0E3               	goto	i2l262
  5596  000358                     i2l282:
  5597                           
  5598                           ; BSR set to: 1
  5599                           ;my_i2c.c: 199: {
  5600                           ;my_i2c.c: 201: if (SSPSTATbits.P == 1) {
  5601  000358  A8C7               	btfss	4039,4,c	;volatile
  5602  00035A  D062               	goto	i2l3298
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;my_i2c.c: 203: ic_ptr->event_count++;
  5606  00035C  0101               	movlb	1	; () banked
  5607  00035E  EE20 F00B          	lfsr	2,11
  5608  000362  0101               	movlb	1	; () banked
  5609  000364  5100               	movf	_ic_ptr& (0+255),w,b
  5610  000366  26D9               	addwf	fsr2l,f,c
  5611  000368  0101               	movlb	1	; () banked
  5612  00036A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5613  00036C  22DA               	addwfc	fsr2h,f,c
  5614  00036E  2ADF               	incf	indf2,f,c
  5615                           
  5616                           ; BSR set to: 1
  5617                           ;my_i2c.c: 204: if (data_read) {
  5618  000370  0101               	movlb	1	; () banked
  5619  000372  0101               	movlb	1	; () banked
  5620  000374  51AC               	movf	i2c_int_handler@data_read& (0+255),w,b
  5621  000376  B4D8               	btfsc	status,2,c
  5622  000378  D04A               	goto	i2l3294
  5623                           
  5624                           ; BSR set to: 1
  5625                           ;my_i2c.c: 205: if (SSPSTATbits.D_A == 1) {
  5626  00037A  AAC7               	btfss	4039,5,c	;volatile
  5627  00037C  D027               	goto	i2l3292
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;my_i2c.c: 206: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5631  00037E  0101               	movlb	1	; () banked
  5632  000380  EE20 F00A          	lfsr	2,10
  5633  000384  0101               	movlb	1	; () banked
  5634  000386  5100               	movf	_ic_ptr& (0+255),w,b
  5635  000388  26D9               	addwf	fsr2l,f,c
  5636  00038A  0101               	movlb	1	; () banked
  5637  00038C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5638  00038E  22DA               	addwfc	fsr2h,f,c
  5639  000390  50DF               	movf	indf2,w,c
  5640  000392  0100               	movlb	0	; () banked
  5641  000394  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5642  000396  0100               	movlb	0	; () banked
  5643  000398  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5644  00039A  0D01               	mullw	1
  5645  00039C  50F3               	movf	prodl,w,c
  5646  00039E  0101               	movlb	1	; () banked
  5647  0003A0  0101               	movlb	1	; () banked
  5648  0003A2  2500               	addwf	_ic_ptr& (0+255),w,b
  5649  0003A4  6ED9               	movwf	fsr2l,c
  5650  0003A6  50F4               	movf	prodh,w,c
  5651  0003A8  0101               	movlb	1	; () banked
  5652  0003AA  0101               	movlb	1	; () banked
  5653  0003AC  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5654  0003AE  6EDA               	movwf	fsr2h,c
  5655  0003B0  0101               	movlb	1	; () banked
  5656  0003B2  C1A9  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5657                           
  5658                           ; BSR set to: 1
  5659                           ;my_i2c.c: 207: ic_ptr->buflen++;
  5660  0003B6  0101               	movlb	1	; () banked
  5661  0003B8  EE20 F00A          	lfsr	2,10
  5662  0003BC  0101               	movlb	1	; () banked
  5663  0003BE  5100               	movf	_ic_ptr& (0+255),w,b
  5664  0003C0  26D9               	addwf	fsr2l,f,c
  5665  0003C2  0101               	movlb	1	; () banked
  5666  0003C4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5667  0003C6  22DA               	addwfc	fsr2h,f,c
  5668  0003C8  2ADF               	incf	indf2,f,c
  5669  0003CA  D021               	goto	i2l3294
  5670  0003CC                     i2l3292:
  5671                           
  5672                           ;my_i2c.c: 210: ic_ptr->error_count++;
  5673  0003CC  0101               	movlb	1	; () banked
  5674  0003CE  EE20 F00E          	lfsr	2,14
  5675  0003D2  0101               	movlb	1	; () banked
  5676  0003D4  5100               	movf	_ic_ptr& (0+255),w,b
  5677  0003D6  26D9               	addwf	fsr2l,f,c
  5678  0003D8  0101               	movlb	1	; () banked
  5679  0003DA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5680  0003DC  22DA               	addwfc	fsr2h,f,c
  5681  0003DE  2ADF               	incf	indf2,f,c
  5682                           
  5683                           ;my_i2c.c: 211: ic_ptr->error_code = 0x6;
  5684  0003E0  0101               	movlb	1	; () banked
  5685  0003E2  EE20 F00D          	lfsr	2,13
  5686  0003E6  0101               	movlb	1	; () banked
  5687  0003E8  5100               	movf	_ic_ptr& (0+255),w,b
  5688  0003EA  26D9               	addwf	fsr2l,f,c
  5689  0003EC  0101               	movlb	1	; () banked
  5690  0003EE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5691  0003F0  22DA               	addwfc	fsr2h,f,c
  5692  0003F2  0E06               	movlw	6
  5693  0003F4  6EDF               	movwf	indf2,c
  5694                           
  5695                           ;my_i2c.c: 212: ic_ptr->status = 0x5;
  5696  0003F6  0101               	movlb	1	; () banked
  5697  0003F8  EE20 F00C          	lfsr	2,12
  5698  0003FC  0101               	movlb	1	; () banked
  5699  0003FE  5100               	movf	_ic_ptr& (0+255),w,b
  5700  000400  26D9               	addwf	fsr2l,f,c
  5701  000402  0101               	movlb	1	; () banked
  5702  000404  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5703  000406  22DA               	addwfc	fsr2h,f,c
  5704  000408  0E05               	movlw	5
  5705  00040A  6EDF               	movwf	indf2,c
  5706  00040C  D067               	goto	L8
  5707  00040E                     i2l3294:
  5708                           
  5709                           ; BSR set to: 1
  5710                           ;my_i2c.c: 215: msg_ready = 1;
  5711  00040E  0100               	movlb	0	; () banked
  5712  000410  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5713  000412  0E01               	movlw	1
  5714  000414  0101               	movlb	1	; () banked
  5715  000416  0101               	movlb	1	; () banked
  5716  000418  6FAB               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5717  00041A  0100               	movlb	0	; () banked
  5718  00041C  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5719                           
  5720                           ; BSR set to: 0
  5721  00041E  D05E               	goto	L8
  5722  000420                     i2l3298:
  5723                           
  5724                           ; BSR set to: 1
  5725  000420  0101               	movlb	1	; () banked
  5726  000422  0101               	movlb	1	; () banked
  5727  000424  51AC               	movf	i2c_int_handler@data_read& (0+255),w,b
  5728  000426  B4D8               	btfsc	status,2,c
  5729  000428  D07A               	goto	i2l262
  5730                           
  5731                           ; BSR set to: 1
  5732                           ;my_i2c.c: 219: ic_ptr->event_count++;
  5733  00042A  0101               	movlb	1	; () banked
  5734  00042C  EE20 F00B          	lfsr	2,11
  5735  000430  0101               	movlb	1	; () banked
  5736  000432  5100               	movf	_ic_ptr& (0+255),w,b
  5737  000434  26D9               	addwf	fsr2l,f,c
  5738  000436  0101               	movlb	1	; () banked
  5739  000438  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5740  00043A  22DA               	addwfc	fsr2h,f,c
  5741  00043C  2ADF               	incf	indf2,f,c
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;my_i2c.c: 220: if (SSPSTATbits.D_A == 1) {
  5745  00043E  AAC7               	btfss	4039,5,c	;volatile
  5746  000440  D027               	goto	i2l290
  5747                           
  5748                           ; BSR set to: 1
  5749                           ;my_i2c.c: 221: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5750  000442  0101               	movlb	1	; () banked
  5751  000444  EE20 F00A          	lfsr	2,10
  5752  000448  0101               	movlb	1	; () banked
  5753  00044A  5100               	movf	_ic_ptr& (0+255),w,b
  5754  00044C  26D9               	addwf	fsr2l,f,c
  5755  00044E  0101               	movlb	1	; () banked
  5756  000450  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5757  000452  22DA               	addwfc	fsr2h,f,c
  5758  000454  50DF               	movf	indf2,w,c
  5759  000456  0100               	movlb	0	; () banked
  5760  000458  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5761  00045A  0100               	movlb	0	; () banked
  5762  00045C  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5763  00045E  0D01               	mullw	1
  5764  000460  50F3               	movf	prodl,w,c
  5765  000462  0101               	movlb	1	; () banked
  5766  000464  0101               	movlb	1	; () banked
  5767  000466  2500               	addwf	_ic_ptr& (0+255),w,b
  5768  000468  6ED9               	movwf	fsr2l,c
  5769  00046A  50F4               	movf	prodh,w,c
  5770  00046C  0101               	movlb	1	; () banked
  5771  00046E  0101               	movlb	1	; () banked
  5772  000470  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5773  000472  6EDA               	movwf	fsr2h,c
  5774  000474  0101               	movlb	1	; () banked
  5775  000476  C1A9  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5776                           
  5777                           ; BSR set to: 1
  5778                           ;my_i2c.c: 222: ic_ptr->buflen++;
  5779  00047A  0101               	movlb	1	; () banked
  5780  00047C  EE20 F00A          	lfsr	2,10
  5781  000480  0101               	movlb	1	; () banked
  5782  000482  5100               	movf	_ic_ptr& (0+255),w,b
  5783  000484  26D9               	addwf	fsr2l,f,c
  5784  000486  0101               	movlb	1	; () banked
  5785  000488  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5786  00048A  22DA               	addwfc	fsr2h,f,c
  5787  00048C  2ADF               	incf	indf2,f,c
  5788                           
  5789                           ;my_i2c.c: 223: } else {
  5790  00048E  D047               	goto	i2l262
  5791  000490                     i2l290:
  5792                           
  5793                           ; BSR set to: 1
  5794                           ;my_i2c.c: 224: if (SSPSTATbits.R_W == 1) {
  5795  000490  A4C7               	btfss	4039,2,c	;volatile
  5796  000492  D6B0               	goto	i2l3248
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;my_i2c.c: 225: ic_ptr->status = 0x8;
  5800  000494  0101               	movlb	1	; () banked
  5801  000496  EE20 F00C          	lfsr	2,12
  5802  00049A  0101               	movlb	1	; () banked
  5803  00049C  5100               	movf	_ic_ptr& (0+255),w,b
  5804  00049E  26D9               	addwf	fsr2l,f,c
  5805  0004A0  0101               	movlb	1	; () banked
  5806  0004A2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5807  0004A4  22DA               	addwfc	fsr2h,f,c
  5808  0004A6  0E08               	movlw	8
  5809  0004A8  6EDF               	movwf	indf2,c
  5810                           
  5811                           ; BSR set to: 1
  5812                           ;my_i2c.c: 226: msg_ready = 1;
  5813  0004AA  0100               	movlb	0	; () banked
  5814  0004AC  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5815  0004AE  0E01               	movlw	1
  5816  0004B0  0101               	movlb	1	; () banked
  5817  0004B2  0101               	movlb	1	; () banked
  5818  0004B4  6FAB               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5819  0004B6  0100               	movlb	0	; () banked
  5820  0004B8  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5821  0004BA                     L9:
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;my_i2c.c: 227: msg_to_send = 1;
  5825  0004BA  0100               	movlb	0	; () banked
  5826  0004BC  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5827  0004BE  0E01               	movlw	1
  5828  0004C0  0101               	movlb	1	; () banked
  5829  0004C2  0101               	movlb	1	; () banked
  5830  0004C4  6FAA               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5831  0004C6  0100               	movlb	0	; () banked
  5832  0004C8  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;my_i2c.c: 229: data_read = 0;
  5836  0004CA  0100               	movlb	0	; () banked
  5837  0004CC  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  5838  0004CE  0E00               	movlw	0
  5839  0004D0  0101               	movlb	1	; () banked
  5840  0004D2  0101               	movlb	1	; () banked
  5841  0004D4  6FAC               	movwf	i2c_int_handler@data_read& (0+255),b
  5842  0004D6                     L6:
  5843  0004D6  0100               	movlb	0	; () banked
  5844  0004D8  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  5845                           
  5846                           ;my_i2c.c: 230: } else {
  5847  0004DA  D021               	goto	i2l262
  5848  0004DC                     L8:
  5849                           
  5850                           ;my_i2c.c: 233: ic_ptr->status = 0x5;
  5851  0004DC  0101               	movlb	1	; () banked
  5852  0004DE  EE20 F00C          	lfsr	2,12
  5853  0004E2  0101               	movlb	1	; () banked
  5854  0004E4  5100               	movf	_ic_ptr& (0+255),w,b
  5855  0004E6  26D9               	addwf	fsr2l,f,c
  5856  0004E8  0101               	movlb	1	; () banked
  5857  0004EA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5858  0004EC  22DA               	addwfc	fsr2h,f,c
  5859  0004EE  0E05               	movlw	5
  5860  0004F0  D731               	goto	L5
  5861  0004F2                     i2l3320:
  5862                           
  5863                           ; BSR set to: 1
  5864  0004F2  0101               	movlb	1	; () banked
  5865  0004F4  EE20 F00C          	lfsr	2,12
  5866  0004F8  0101               	movlb	1	; () banked
  5867  0004FA  5100               	movf	_ic_ptr& (0+255),w,b
  5868  0004FC  26D9               	addwf	fsr2l,f,c
  5869  0004FE  0101               	movlb	1	; () banked
  5870  000500  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5871  000502  22DA               	addwfc	fsr2h,f,c
  5872  000504  50DF               	movf	indf2,w,c
  5873                           
  5874                           ; Switch size 1, requested type "space"
  5875                           ; Number of cases is 4, Range of values is 5 to 8
  5876                           ; switch strategies available:
  5877                           ; Name         Instructions Cycles
  5878                           ; simple_byte           13     7 (average)
  5879                           ;	Chosen strategy is simple_byte
  5880  000506  0A05               	xorlw	5	; case 5
  5881  000508  B4D8               	btfsc	status,2,c
  5882  00050A  D636               	goto	i2l264
  5883  00050C  0A03               	xorlw	3	; case 6
  5884  00050E  B4D8               	btfsc	status,2,c
  5885  000510  D655               	goto	i2l268
  5886  000512  0A01               	xorlw	1	; case 7
  5887  000514  B4D8               	btfsc	status,2,c
  5888  000516  D720               	goto	i2l282
  5889  000518  0A0F               	xorlw	15	; case 8
  5890  00051A  B4D8               	btfsc	status,2,c
  5891  00051C  D6CB               	goto	i2l3268
  5892  00051E                     i2l262:
  5893                           
  5894                           ;my_i2c.c: 240: }
  5895                           ;my_i2c.c: 243: if (data_read || data_written) {
  5896  00051E  0101               	movlb	1	; () banked
  5897  000520  0101               	movlb	1	; () banked
  5898  000522  67AC               	tstfsz	i2c_int_handler@data_read& (0+255),b
  5899  000524  D005               	goto	i2l3324
  5900                           
  5901                           ; BSR set to: 1
  5902  000526  0101               	movlb	1	; () banked
  5903  000528  0101               	movlb	1	; () banked
  5904  00052A  51A7               	movf	i2c_int_handler@data_written& (0+255),w,b
  5905  00052C  B4D8               	btfsc	status,2,c
  5906  00052E  D008               	goto	i2l3330
  5907  000530                     i2l3324:
  5908                           
  5909                           ; BSR set to: 1
  5910                           ;my_i2c.c: 246: setDBG(DBG5);
  5911  000530  0E04               	movlw	4
  5912  000532  ECF7  F00C         	call	_setDBG
  5913                           
  5914                           ;my_i2c.c: 247: resetDBG(DBG5);
  5915  000536  0E04               	movlw	4
  5916  000538  EC15  F00D         	call	_resetDBG
  5917                           
  5918                           ;my_i2c.c: 248: if (SSPCON1bits.CKP == 0) {
  5919  00053C  A8C6               	btfss	4038,4,c	;volatile
  5920                           
  5921                           ;my_i2c.c: 249: SSPCON1bits.CKP = 1;
  5922  00053E  88C6               	bsf	4038,4,c	;volatile
  5923  000540                     i2l3330:
  5924                           
  5925                           ;my_i2c.c: 250: }
  5926                           ;my_i2c.c: 251: }
  5927                           ;my_i2c.c: 254: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  5928  000540  0101               	movlb	1	; () banked
  5929  000542  EE20 F00A          	lfsr	2,10
  5930  000546  0101               	movlb	1	; () banked
  5931  000548  5100               	movf	_ic_ptr& (0+255),w,b
  5932  00054A  26D9               	addwf	fsr2l,f,c
  5933  00054C  0101               	movlb	1	; () banked
  5934  00054E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5935  000550  22DA               	addwfc	fsr2h,f,c
  5936  000552  0E08               	movlw	8
  5937  000554  64DF               	cpfsgt	indf2,c
  5938  000556  D024               	goto	i2l3336
  5939                           
  5940                           ; BSR set to: 1
  5941  000558  0101               	movlb	1	; () banked
  5942  00055A  0101               	movlb	1	; () banked
  5943  00055C  67AB               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  5944  00055E  D020               	goto	i2l3336
  5945                           
  5946                           ; BSR set to: 1
  5947                           ;my_i2c.c: 255: ic_ptr->status = 0x5;
  5948  000560  0101               	movlb	1	; () banked
  5949  000562  EE20 F00C          	lfsr	2,12
  5950  000566  0101               	movlb	1	; () banked
  5951  000568  5100               	movf	_ic_ptr& (0+255),w,b
  5952  00056A  26D9               	addwf	fsr2l,f,c
  5953  00056C  0101               	movlb	1	; () banked
  5954  00056E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5955  000570  22DA               	addwfc	fsr2h,f,c
  5956  000572  0E05               	movlw	5
  5957  000574  6EDF               	movwf	indf2,c
  5958                           
  5959                           ;my_i2c.c: 256: ic_ptr->error_count++;
  5960  000576  0101               	movlb	1	; () banked
  5961  000578  EE20 F00E          	lfsr	2,14
  5962  00057C  0101               	movlb	1	; () banked
  5963  00057E  5100               	movf	_ic_ptr& (0+255),w,b
  5964  000580  26D9               	addwf	fsr2l,f,c
  5965  000582  0101               	movlb	1	; () banked
  5966  000584  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5967  000586  22DA               	addwfc	fsr2h,f,c
  5968  000588  2ADF               	incf	indf2,f,c
  5969                           
  5970                           ;my_i2c.c: 257: ic_ptr->error_code = 0x7;
  5971  00058A  0101               	movlb	1	; () banked
  5972  00058C  EE20 F00D          	lfsr	2,13
  5973  000590  0101               	movlb	1	; () banked
  5974  000592  5100               	movf	_ic_ptr& (0+255),w,b
  5975  000594  26D9               	addwf	fsr2l,f,c
  5976  000596  0101               	movlb	1	; () banked
  5977  000598  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  5978  00059A  22DA               	addwfc	fsr2h,f,c
  5979  00059C  0E07               	movlw	7
  5980  00059E  6EDF               	movwf	indf2,c
  5981  0005A0                     i2l3336:
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;my_i2c.c: 258: }
  5985                           ;my_i2c.c: 260: if (msg_ready) {
  5986  0005A0  0101               	movlb	1	; () banked
  5987  0005A2  0101               	movlb	1	; () banked
  5988  0005A4  51AB               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  5989  0005A6  B4D8               	btfsc	status,2,c
  5990  0005A8  D032               	goto	i2l3344
  5991                           
  5992                           ; BSR set to: 1
  5993                           ;my_i2c.c: 261: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  5994  0005AA  0101               	movlb	1	; () banked
  5995  0005AC  EE20 F00B          	lfsr	2,11
  5996  0005B0  0101               	movlb	1	; () banked
  5997  0005B2  5100               	movf	_ic_ptr& (0+255),w,b
  5998  0005B4  26D9               	addwf	fsr2l,f,c
  5999  0005B6  0101               	movlb	1	; () banked
  6000  0005B8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6001  0005BA  22DA               	addwfc	fsr2h,f,c
  6002  0005BC  0101               	movlb	1	; () banked
  6003  0005BE  EE10 F00A          	lfsr	1,10
  6004  0005C2  0101               	movlb	1	; () banked
  6005  0005C4  5100               	movf	_ic_ptr& (0+255),w,b
  6006  0005C6  26E1               	addwf	fsr1l,f,c
  6007  0005C8  0101               	movlb	1	; () banked
  6008  0005CA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6009  0005CC  22E2               	addwfc	fsr1h,f,c
  6010  0005CE  50E7               	movf	indf1,w,c
  6011  0005D0  0100               	movlb	0	; () banked
  6012  0005D2  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  6013  0005D4  0100               	movlb	0	; () banked
  6014  0005D6  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  6015  0005D8  0D01               	mullw	1
  6016  0005DA  50F3               	movf	prodl,w,c
  6017  0005DC  0101               	movlb	1	; () banked
  6018  0005DE  0101               	movlb	1	; () banked
  6019  0005E0  2500               	addwf	_ic_ptr& (0+255),w,b
  6020  0005E2  6EE1               	movwf	fsr1l,c
  6021  0005E4  50F4               	movf	prodh,w,c
  6022  0005E6  0101               	movlb	1	; () banked
  6023  0005E8  0101               	movlb	1	; () banked
  6024  0005EA  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6025  0005EC  6EE2               	movwf	fsr1h,c
  6026  0005EE  CFDF FFE7          	movff	indf2,indf1
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;my_i2c.c: 262: setBrainReqData(ic_ptr->buffer);
  6030  0005F2  0101               	movlb	1	; () banked
  6031  0005F4  0100               	movlb	0	; () banked
  6032  0005F6  C101  F09E         	movff	_ic_ptr+1,setBrainReqData@buf+1
  6033  0005FA  0101               	movlb	1	; () banked
  6034  0005FC  0100               	movlb	0	; () banked
  6035  0005FE  C100  F09D         	movff	_ic_ptr,setBrainReqData@buf
  6036  000602  ECD7  F00C         	call	_setBrainReqData	;wreg free
  6037                           
  6038                           ;my_i2c.c: 265: ic_ptr->buflen = 0;
  6039  000606  0101               	movlb	1	; () banked
  6040  000608  EE20 F00A          	lfsr	2,10
  6041  00060C  D04B               	goto	L7
  6042  00060E                     i2l3344:
  6043                           
  6044                           ; BSR set to: 1
  6045  00060E  0101               	movlb	1	; () banked
  6046  000610  EE20 F00E          	lfsr	2,14
  6047  000614  0101               	movlb	1	; () banked
  6048  000616  5100               	movf	_ic_ptr& (0+255),w,b
  6049  000618  26D9               	addwf	fsr2l,f,c
  6050  00061A  0101               	movlb	1	; () banked
  6051  00061C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6052  00061E  22DA               	addwfc	fsr2h,f,c
  6053  000620  50DF               	movf	indf2,w,c
  6054  000622  B4D8               	btfsc	status,2,c
  6055  000624  D047               	goto	i2l3352
  6056                           
  6057                           ; BSR set to: 1
  6058                           ;my_i2c.c: 267: error_buf[0] = ic_ptr->error_count;
  6059  000626  0101               	movlb	1	; () banked
  6060  000628  EE20 F00E          	lfsr	2,14
  6061  00062C  0101               	movlb	1	; () banked
  6062  00062E  5100               	movf	_ic_ptr& (0+255),w,b
  6063  000630  26D9               	addwf	fsr2l,f,c
  6064  000632  0101               	movlb	1	; () banked
  6065  000634  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6066  000636  22DA               	addwfc	fsr2h,f,c
  6067  000638  50DF               	movf	indf2,w,c
  6068  00063A  0101               	movlb	1	; () banked
  6069  00063C  0101               	movlb	1	; () banked
  6070  00063E  6FA4               	movwf	i2c_int_handler@error_buf& (0+255),b
  6071                           
  6072                           ;my_i2c.c: 268: error_buf[1] = ic_ptr->error_code;
  6073  000640  0101               	movlb	1	; () banked
  6074  000642  EE20 F00D          	lfsr	2,13
  6075  000646  0101               	movlb	1	; () banked
  6076  000648  5100               	movf	_ic_ptr& (0+255),w,b
  6077  00064A  26D9               	addwf	fsr2l,f,c
  6078  00064C  0101               	movlb	1	; () banked
  6079  00064E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6080  000650  22DA               	addwfc	fsr2h,f,c
  6081  000652  50DF               	movf	indf2,w,c
  6082  000654  0101               	movlb	1	; () banked
  6083  000656  0101               	movlb	1	; () banked
  6084  000658  6FA5               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6085                           
  6086                           ;my_i2c.c: 269: error_buf[2] = ic_ptr->event_count;
  6087  00065A  0101               	movlb	1	; () banked
  6088  00065C  EE20 F00B          	lfsr	2,11
  6089  000660  0101               	movlb	1	; () banked
  6090  000662  5100               	movf	_ic_ptr& (0+255),w,b
  6091  000664  26D9               	addwf	fsr2l,f,c
  6092  000666  0101               	movlb	1	; () banked
  6093  000668  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6094  00066A  22DA               	addwfc	fsr2h,f,c
  6095  00066C  50DF               	movf	indf2,w,c
  6096  00066E  0101               	movlb	1	; () banked
  6097  000670  0101               	movlb	1	; () banked
  6098  000672  6FA6               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;my_i2c.c: 270: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6102  000674  0100               	movlb	0	; () banked
  6103  000676  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  6104  000678  0E29               	movlw	41
  6105  00067A  0100               	movlb	0	; () banked
  6106  00067C  0100               	movlb	0	; () banked
  6107  00067E  6F8F               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6108  000680  0100               	movlb	0	; () banked
  6109  000682  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  6110  000684  0101               	movlb	1	; () banked
  6111  000686  0E01               	movlw	high i2c_int_handler@error_buf
  6112  000688  0100               	movlb	0	; () banked
  6113  00068A  0100               	movlb	0	; () banked
  6114  00068C  6F91               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6115  00068E  0101               	movlb	1	; () banked
  6116  000690  0EA4               	movlw	low i2c_int_handler@error_buf
  6117  000692  0100               	movlb	0	; () banked
  6118  000694  0100               	movlb	0	; () banked
  6119  000696  6F90               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6120  000698  0E03               	movlw	3
  6121  00069A  EC4E  F00D         	call	_ToMainHigh_sendmsg
  6122                           
  6123                           ;my_i2c.c: 271: ic_ptr->error_count = 0;
  6124  00069E  0101               	movlb	1	; () banked
  6125  0006A0  EE20 F00E          	lfsr	2,14
  6126  0006A4                     L7:
  6127  0006A4  0101               	movlb	1	; () banked
  6128  0006A6  5100               	movf	_ic_ptr& (0+255),w,b
  6129  0006A8  26D9               	addwf	fsr2l,f,c
  6130  0006AA  0101               	movlb	1	; () banked
  6131  0006AC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6132  0006AE  22DA               	addwfc	fsr2h,f,c
  6133  0006B0  0E00               	movlw	0
  6134  0006B2  6EDF               	movwf	indf2,c
  6135  0006B4                     i2l3352:
  6136                           
  6137                           ; BSR set to: 1
  6138                           ;my_i2c.c: 272: }
  6139                           ;my_i2c.c: 273: if (msg_to_send) {
  6140  0006B4  0101               	movlb	1	; () banked
  6141  0006B6  0101               	movlb	1	; () banked
  6142  0006B8  51AA               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6143  0006BA  B4D8               	btfsc	status,2,c
  6144  0006BC  0012               	return	
  6145                           
  6146                           ; BSR set to: 1
  6147                           ;my_i2c.c: 286: sendRequestedData();
  6148  0006BE  EC00  F00E         	call	_sendRequestedData	;wreg free
  6149                           
  6150                           ;my_i2c.c: 287: msg_to_send = 0;
  6151  0006C2  0100               	movlb	0	; () banked
  6152  0006C4  6FF8               	movwf	??_i2c_int_handler& (0+255),b
  6153  0006C6  0E00               	movlw	0
  6154  0006C8  0101               	movlb	1	; () banked
  6155  0006CA  0101               	movlb	1	; () banked
  6156  0006CC  6FAA               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6157  0006CE  0100               	movlb	0	; () banked
  6158  0006D0  51F8               	movf	??_i2c_int_handler& (0+255),w,b
  6159  0006D2  0012               	return	
  6160  0006D4                     __end_of_i2c_int_handler:
  6161                           	opt stack 0
  6162                           pclatu	equ	0xFFB
  6163                           pclath	equ	0xFFA
  6164                           tblptru	equ	0xFF8
  6165                           tblptrh	equ	0xFF7
  6166                           tblptrl	equ	0xFF6
  6167                           tablat	equ	0xFF5
  6168                           prodh	equ	0xFF4
  6169                           prodl	equ	0xFF3
  6170                           intcon	equ	0xFF2
  6171                           postinc0	equ	0xFEE
  6172                           fsr0h	equ	0xFEA
  6173                           fsr0l	equ	0xFE9
  6174                           wreg	equ	0xFE8
  6175                           indf1	equ	0xFE7
  6176                           fsr1h	equ	0xFE2
  6177                           fsr1l	equ	0xFE1
  6178                           bsr	equ	0xFE0
  6179                           indf2	equ	0xFDF
  6180                           fsr2h	equ	0xFDA
  6181                           fsr2l	equ	0xFD9
  6182                           status	equ	0xFD8
  6183                           
  6184 ;; *************** function _setDBG *****************
  6185 ;; Defined at:
  6186 ;;		line 4 in file "../src/debug.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  b               1    wreg     unsigned char 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  b               1   46[COMRAM] unsigned char 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;		None               void
  6193 ;; Registers used:
  6194 ;;		wreg, status,2, status,0
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6200 ;;      Params:         0       0       0       0       0
  6201 ;;      Locals:         1       0       0       0       0
  6202 ;;      Temps:          0       0       0       0       0
  6203 ;;      Totals:         1       0       0       0       0
  6204 ;;Total ram usage:        1 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_i2c_int_handler
  6210 ;;		_readNum
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text34
  6215  0019EE                     __ptext34:
  6216                           	opt stack 0
  6217  0019EE                     _setDBG:
  6218                           	opt stack 18
  6219                           
  6220                           ;incstack = 0
  6221                           ;setDBG@b stored from wreg
  6222  0019EE  CFE8 F02F          	movff	wreg,setDBG@b
  6223                           
  6224                           ;debug.c: 5: switch(b) {
  6225  0019F2  D00A               	goto	i2l3698
  6226  0019F4                     i2l367:
  6227                           
  6228                           ;debug.c: 7: LATBbits.LATB0 = 1;
  6229  0019F4  808A               	bsf	3978,0,c	;volatile
  6230                           
  6231                           ;debug.c: 8: break;
  6232  0019F6  0012               	return	
  6233  0019F8                     i2l369:
  6234                           
  6235                           ;debug.c: 10: LATBbits.LATB1 = 1;
  6236  0019F8  828A               	bsf	3978,1,c	;volatile
  6237                           
  6238                           ;debug.c: 11: break;
  6239  0019FA  0012               	return	
  6240  0019FC                     i2l370:
  6241                           
  6242                           ;debug.c: 13: LATBbits.LATB2 = 1;
  6243  0019FC  848A               	bsf	3978,2,c	;volatile
  6244                           
  6245                           ;debug.c: 14: break;
  6246  0019FE  0012               	return	
  6247  001A00                     i2l371:
  6248                           
  6249                           ;debug.c: 16: LATBbits.LATB3 = 1;
  6250  001A00  868A               	bsf	3978,3,c	;volatile
  6251                           
  6252                           ;debug.c: 17: break;
  6253  001A02  0012               	return	
  6254  001A04                     i2l372:
  6255                           
  6256                           ;debug.c: 19: LATBbits.LATB4 = 1;
  6257  001A04  888A               	bsf	3978,4,c	;volatile
  6258                           
  6259                           ;debug.c: 20: break;
  6260  001A06  0012               	return	
  6261  001A08                     i2l3698:
  6262  001A08  502F               	movf	setDBG@b,w,c
  6263                           
  6264                           ; Switch size 1, requested type "space"
  6265                           ; Number of cases is 5, Range of values is 0 to 4
  6266                           ; switch strategies available:
  6267                           ; Name         Instructions Cycles
  6268                           ; simple_byte           16     9 (average)
  6269                           ;	Chosen strategy is simple_byte
  6270  001A0A  0A00               	xorlw	0	; case 0
  6271  001A0C  B4D8               	btfsc	status,2,c
  6272  001A0E  D7F2               	goto	i2l367
  6273  001A10  0A01               	xorlw	1	; case 1
  6274  001A12  B4D8               	btfsc	status,2,c
  6275  001A14  D7F1               	goto	i2l369
  6276  001A16  0A03               	xorlw	3	; case 2
  6277  001A18  B4D8               	btfsc	status,2,c
  6278  001A1A  D7F0               	goto	i2l370
  6279  001A1C  0A01               	xorlw	1	; case 3
  6280  001A1E  B4D8               	btfsc	status,2,c
  6281  001A20  D7EF               	goto	i2l371
  6282  001A22  0A07               	xorlw	7	; case 4
  6283  001A24  A4D8               	btfss	status,2,c
  6284  001A26  0012               	return	
  6285  001A28  D7ED               	goto	i2l372
  6286  001A2A                     __end_of_setDBG:
  6287                           	opt stack 0
  6288                           pclatu	equ	0xFFB
  6289                           pclath	equ	0xFFA
  6290                           tblptru	equ	0xFF8
  6291                           tblptrh	equ	0xFF7
  6292                           tblptrl	equ	0xFF6
  6293                           tablat	equ	0xFF5
  6294                           prodh	equ	0xFF4
  6295                           prodl	equ	0xFF3
  6296                           intcon	equ	0xFF2
  6297                           postinc0	equ	0xFEE
  6298                           fsr0h	equ	0xFEA
  6299                           fsr0l	equ	0xFE9
  6300                           wreg	equ	0xFE8
  6301                           indf1	equ	0xFE7
  6302                           fsr1h	equ	0xFE2
  6303                           fsr1l	equ	0xFE1
  6304                           bsr	equ	0xFE0
  6305                           indf2	equ	0xFDF
  6306                           fsr2h	equ	0xFDA
  6307                           fsr2l	equ	0xFD9
  6308                           status	equ	0xFD8
  6309                           
  6310 ;; *************** function _setBrainReqData *****************
  6311 ;; Defined at:
  6312 ;;		line 16 in file "../src/sensorcomm.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  buf             2   29[BANK0 ] PTR unsigned char 
  6315 ;;		 -> NULL(0), main@ic(28), 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  tempBrain       2   31[BANK0 ] PTR struct .
  6318 ;;		 -> NULL(0), main@ic(28), 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;		None               void
  6321 ;; Registers used:
  6322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6328 ;;      Params:         0       2       0       0       0
  6329 ;;      Locals:         0       2       0       0       0
  6330 ;;      Temps:          0       0       0       0       0
  6331 ;;      Totals:         0       4       0       0       0
  6332 ;;Total ram usage:        4 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    4
  6335 ;; This function calls:
  6336 ;;		_reqADData
  6337 ;;		_unpackBrainMsg
  6338 ;; This function is called by:
  6339 ;;		_i2c_int_handler
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text35
  6344  0019AE                     __ptext35:
  6345                           	opt stack 0
  6346  0019AE                     _setBrainReqData:
  6347                           	opt stack 14
  6348                           
  6349                           ;sensorcomm.c: 18: BrainMsg* tempBrain = unpackBrainMsg(buf);
  6350                           
  6351                           ;incstack = 0
  6352  0019AE  0100               	movlb	0	; () banked
  6353  0019B0  C09E  F030         	movff	setBrainReqData@buf+1,unpackBrainMsg@buf+1
  6354  0019B4  0100               	movlb	0	; () banked
  6355  0019B6  C09D  F02F         	movff	setBrainReqData@buf,unpackBrainMsg@buf
  6356  0019BA  EC2E  F00E         	call	_unpackBrainMsg	;wreg free
  6357  0019BE  C02F  F09F         	movff	?_unpackBrainMsg,setBrainReqData@tempBrain
  6358  0019C2  C030  F0A0         	movff	?_unpackBrainMsg+1,setBrainReqData@tempBrain+1
  6359                           
  6360                           ;sensorcomm.c: 20: reqADData();
  6361  0019C6  ECE7  F008         	call	_reqADData	;wreg free
  6362                           
  6363                           ;sensorcomm.c: 21: BrainMsgRecv.flags = tempBrain->flags;
  6364  0019CA  C09F  FFD9         	movff	setBrainReqData@tempBrain,fsr2l
  6365  0019CE  C0A0  FFDA         	movff	setBrainReqData@tempBrain+1,fsr2h
  6366  0019D2  50DF               	movf	indf2,w,c
  6367  0019D4  6E38               	movwf	_BrainMsgRecv,c
  6368                           
  6369                           ;sensorcomm.c: 22: BrainMsgRecv.sensorMask = tempBrain->sensorMask;
  6370  0019D6  0100               	movlb	0	; () banked
  6371  0019D8  EE20 F001          	lfsr	2,1
  6372  0019DC  0100               	movlb	0	; () banked
  6373  0019DE  519F               	movf	setBrainReqData@tempBrain& (0+255),w,b
  6374  0019E0  26D9               	addwf	fsr2l,f,c
  6375  0019E2  0100               	movlb	0	; () banked
  6376  0019E4  51A0               	movf	(setBrainReqData@tempBrain+1)& (0+255),w,b
  6377  0019E6  22DA               	addwfc	fsr2h,f,c
  6378  0019E8  50DF               	movf	indf2,w,c
  6379  0019EA  6E39               	movwf	_BrainMsgRecv+1,c
  6380                           
  6381                           ; BSR set to: 0
  6382  0019EC  0012               	return	
  6383  0019EE                     __end_of_setBrainReqData:
  6384                           	opt stack 0
  6385                           pclatu	equ	0xFFB
  6386                           pclath	equ	0xFFA
  6387                           tblptru	equ	0xFF8
  6388                           tblptrh	equ	0xFF7
  6389                           tblptrl	equ	0xFF6
  6390                           tablat	equ	0xFF5
  6391                           prodh	equ	0xFF4
  6392                           prodl	equ	0xFF3
  6393                           intcon	equ	0xFF2
  6394                           postinc0	equ	0xFEE
  6395                           fsr0h	equ	0xFEA
  6396                           fsr0l	equ	0xFE9
  6397                           wreg	equ	0xFE8
  6398                           indf1	equ	0xFE7
  6399                           fsr1h	equ	0xFE2
  6400                           fsr1l	equ	0xFE1
  6401                           bsr	equ	0xFE0
  6402                           indf2	equ	0xFDF
  6403                           fsr2h	equ	0xFDA
  6404                           fsr2l	equ	0xFD9
  6405                           status	equ	0xFD8
  6406                           
  6407 ;; *************** function _unpackBrainMsg *****************
  6408 ;; Defined at:
  6409 ;;		line 51 in file "../../../../common/communication/brain_rover.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  buf             2   46[COMRAM] PTR unsigned char 
  6412 ;;		 -> NULL(0), main@ic(28), 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  2   46[COMRAM] PTR struct .
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6424 ;;      Params:         2       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0
  6427 ;;      Totals:         2       0       0       0       0
  6428 ;;Total ram usage:        2 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_setBrainReqData
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text36
  6438  001C5C                     __ptext36:
  6439                           	opt stack 0
  6440  001C5C                     _unpackBrainMsg:
  6441                           	opt stack 17
  6442                           
  6443                           ;brain_rover.c: 52: return (BrainMsg*) buf;
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;incstack = 0
  6447  001C5C  C030  F030         	movff	unpackBrainMsg@buf+1,?_unpackBrainMsg+1
  6448  001C60  C02F  F02F         	movff	unpackBrainMsg@buf,?_unpackBrainMsg
  6449  001C64  0012               	return	
  6450  001C66                     __end_of_unpackBrainMsg:
  6451                           	opt stack 0
  6452                           pclatu	equ	0xFFB
  6453                           pclath	equ	0xFFA
  6454                           tblptru	equ	0xFF8
  6455                           tblptrh	equ	0xFF7
  6456                           tblptrl	equ	0xFF6
  6457                           tablat	equ	0xFF5
  6458                           prodh	equ	0xFF4
  6459                           prodl	equ	0xFF3
  6460                           intcon	equ	0xFF2
  6461                           postinc0	equ	0xFEE
  6462                           fsr0h	equ	0xFEA
  6463                           fsr0l	equ	0xFE9
  6464                           wreg	equ	0xFE8
  6465                           indf1	equ	0xFE7
  6466                           fsr1h	equ	0xFE2
  6467                           fsr1l	equ	0xFE1
  6468                           bsr	equ	0xFE0
  6469                           indf2	equ	0xFDF
  6470                           fsr2h	equ	0xFDA
  6471                           fsr2l	equ	0xFD9
  6472                           status	equ	0xFD8
  6473                           
  6474 ;; *************** function _reqADData *****************
  6475 ;; Defined at:
  6476 ;;		line 17 in file "../src/testAD.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  buf            10   18[BANK0 ] struct .[10]
  6481 ;;  numSamples      1   28[BANK0 ] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;		None               void
  6484 ;; Registers used:
  6485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6491 ;;      Params:         0       0       0       0       0
  6492 ;;      Locals:         0      11       0       0       0
  6493 ;;      Temps:          1       0       0       0       0
  6494 ;;      Totals:         1      11       0       0       0
  6495 ;;Total ram usage:       12 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    3
  6498 ;; This function calls:
  6499 ;;		_ToMainHigh_sendmsg
  6500 ;; This function is called by:
  6501 ;;		_setBrainReqData
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text37
  6506  0011CE                     __ptext37:
  6507                           	opt stack 0
  6508  0011CE                     _reqADData:
  6509                           	opt stack 14
  6510                           
  6511                           ;testAD.c: 18: sensorADData buf[10];
  6512                           ;testAD.c: 19: uint8 numSamples = 0;
  6513                           
  6514                           ;incstack = 0
  6515  0011CE  6E37               	movwf	??_reqADData& (0+255),c
  6516  0011D0  0E00               	movlw	0
  6517  0011D2  0100               	movlb	0	; () banked
  6518  0011D4  0100               	movlb	0	; () banked
  6519  0011D6  6F9C               	movwf	reqADData@numSamples& (0+255),b
  6520  0011D8  5037               	movf	??_reqADData& (0+255),w,c
  6521                           
  6522                           ;testAD.c: 20: switch(timesreq){
  6523  0011DA  D017               	goto	i2l3820
  6524  0011DC                     i2l502:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;testAD.c: 22: buf[0].data = sample1;
  6528  0011DC  C0F9  F092         	movff	_sample1,reqADData@buf
  6529  0011E0                     
  6530                           ; BSR set to: 0
  6531                           ;testAD.c: 23: numSamples = 1;
  6532  0011E0  6E37               	movwf	??_reqADData& (0+255),c
  6533  0011E2  0E01               	movlw	1
  6534  0011E4  D00A               	goto	L11
  6535  0011E6                     i2l504:
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;testAD.c: 26: buf[0].data = sample2;
  6539  0011E6  C0FA  F092         	movff	_sample2,reqADData@buf
  6540                           
  6541                           ;testAD.c: 27: buf[1].data = sample3;
  6542  0011EA  C04F  F093         	movff	_sample3,reqADData@buf+1
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;testAD.c: 28: numSamples = 2;
  6546  0011EE  6E37               	movwf	??_reqADData& (0+255),c
  6547  0011F0  0E02               	movlw	2
  6548  0011F2  D003               	goto	L11
  6549  0011F4                     i2l505:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;testAD.c: 31: buf[0].data = sample4;
  6553  0011F4  C050  F092         	movff	_sample4,reqADData@buf
  6554  0011F8  D7F3               	goto	L13
  6555  0011FA                     L11:
  6556  0011FA  0100               	movlb	0	; () banked
  6557  0011FC  0100               	movlb	0	; () banked
  6558  0011FE  6F9C               	movwf	reqADData@numSamples& (0+255),b
  6559  001200  5037               	movf	??_reqADData& (0+255),w,c
  6560                           
  6561                           ;testAD.c: 33: break;
  6562  001202  D012               	goto	i2l3822
  6563  001204                     i2l506:
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;testAD.c: 35: buf[0].data = sample5;
  6567  001204  C051  F092         	movff	_sample5,reqADData@buf
  6568  001208  D7EB               	goto	L13
  6569  00120A                     i2l3820:
  6570                           
  6571                           ; BSR set to: 0
  6572  00120A  0100               	movlb	0	; () banked
  6573  00120C  0100               	movlb	0	; () banked
  6574  00120E  51FB               	movf	_timesreq& (0+255),w,b
  6575                           
  6576                           ; Switch size 1, requested type "space"
  6577                           ; Number of cases is 4, Range of values is 0 to 3
  6578                           ; switch strategies available:
  6579                           ; Name         Instructions Cycles
  6580                           ; simple_byte           13     7 (average)
  6581                           ;	Chosen strategy is simple_byte
  6582  001210  0A00               	xorlw	0	; case 0
  6583  001212  B4D8               	btfsc	status,2,c
  6584  001214  D7E3               	goto	i2l502
  6585  001216  0A01               	xorlw	1	; case 1
  6586  001218  B4D8               	btfsc	status,2,c
  6587  00121A  D7E5               	goto	i2l504
  6588  00121C  0A03               	xorlw	3	; case 2
  6589  00121E  B4D8               	btfsc	status,2,c
  6590  001220  D7E9               	goto	i2l505
  6591  001222  0A01               	xorlw	1	; case 3
  6592  001224  B4D8               	btfsc	status,2,c
  6593  001226  D7EE               	goto	i2l506
  6594  001228                     i2l3822:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;testAD.c: 39: timesreq++;
  6598  001228  0100               	movlb	0	; () banked
  6599  00122A  0100               	movlb	0	; () banked
  6600  00122C  2BFB               	incf	_timesreq& (0+255),f,b
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;testAD.c: 40: timesreq = timesreq %4;
  6604  00122E  0100               	movlb	0	; () banked
  6605  001230  0100               	movlb	0	; () banked
  6606  001232  51FB               	movf	_timesreq& (0+255),w,b
  6607  001234  0B03               	andlw	3
  6608  001236  0100               	movlb	0	; () banked
  6609  001238  0100               	movlb	0	; () banked
  6610  00123A  6FFB               	movwf	_timesreq& (0+255),b
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;testAD.c: 41: ToMainHigh_sendmsg(numSamples, 50, (char*) buf);
  6614  00123C  6E37               	movwf	??_reqADData& (0+255),c
  6615  00123E  0E32               	movlw	50
  6616  001240  0100               	movlb	0	; () banked
  6617  001242  0100               	movlb	0	; () banked
  6618  001244  6F8F               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6619  001246  5037               	movf	??_reqADData& (0+255),w,c
  6620  001248  0100               	movlb	0	; () banked
  6621  00124A  0E00               	movlw	high reqADData@buf
  6622  00124C  0100               	movlb	0	; () banked
  6623  00124E  0100               	movlb	0	; () banked
  6624  001250  6F91               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6625  001252  0100               	movlb	0	; () banked
  6626  001254  0E92               	movlw	low reqADData@buf
  6627  001256  0100               	movlb	0	; () banked
  6628  001258  0100               	movlb	0	; () banked
  6629  00125A  6F90               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6630  00125C  0100               	movlb	0	; () banked
  6631  00125E  0100               	movlb	0	; () banked
  6632  001260  519C               	movf	reqADData@numSamples& (0+255),w,b
  6633  001262  EC4E  F00D         	call	_ToMainHigh_sendmsg
  6634  001266  0012               	return	
  6635  001268                     __end_of_reqADData:
  6636                           	opt stack 0
  6637                           pclatu	equ	0xFFB
  6638                           pclath	equ	0xFFA
  6639                           tblptru	equ	0xFF8
  6640                           tblptrh	equ	0xFF7
  6641                           tblptrl	equ	0xFF6
  6642                           tablat	equ	0xFF5
  6643                           prodh	equ	0xFF4
  6644                           prodl	equ	0xFF3
  6645                           intcon	equ	0xFF2
  6646                           postinc0	equ	0xFEE
  6647                           fsr0h	equ	0xFEA
  6648                           fsr0l	equ	0xFE9
  6649                           wreg	equ	0xFE8
  6650                           indf1	equ	0xFE7
  6651                           fsr1h	equ	0xFE2
  6652                           fsr1l	equ	0xFE1
  6653                           bsr	equ	0xFE0
  6654                           indf2	equ	0xFDF
  6655                           fsr2h	equ	0xFDA
  6656                           fsr2l	equ	0xFD9
  6657                           status	equ	0xFD8
  6658                           
  6659 ;; *************** function _ToMainHigh_sendmsg *****************
  6660 ;; Defined at:
  6661 ;;		line 127 in file "../src/messages.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  length          1    wreg     unsigned char 
  6664 ;;  msgtype         1   15[BANK0 ] unsigned char 
  6665 ;;  data            2   16[BANK0 ] PTR void 
  6666 ;;		 -> reqADData@buf(10), i2c_int_handler@error_buf(3), 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  length          1   53[COMRAM] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      char 
  6671 ;; Registers used:
  6672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6678 ;;      Params:         0       3       0       0       0
  6679 ;;      Locals:         1       0       0       0       0
  6680 ;;      Temps:          0       0       0       0       0
  6681 ;;      Totals:         1       3       0       0       0
  6682 ;;Total ram usage:        4 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    2
  6685 ;; This function calls:
  6686 ;;		i2_send_msg
  6687 ;; This function is called by:
  6688 ;;		_i2c_int_handler
  6689 ;;		_reqADData
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text38
  6694  001A9C                     __ptext38:
  6695                           	opt stack 0
  6696  001A9C                     _ToMainHigh_sendmsg:
  6697                           	opt stack 14
  6698                           
  6699                           ;incstack = 0
  6700                           ;ToMainHigh_sendmsg@length stored from wreg
  6701  001A9C  CFE8 F036          	movff	wreg,ToMainHigh_sendmsg@length
  6702                           
  6703                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6704                           ;	Return value of _ToMainHigh_sendmsg is never used
  6705  001AA0  0101               	movlb	1	; () banked
  6706  001AA2  0E01               	movlw	high _ToMainHigh_MQ
  6707  001AA4  0100               	movlb	0	; () banked
  6708  001AA6  0100               	movlb	0	; () banked
  6709  001AA8  6F85               	movwf	(i2send_msg@qptr+1)& (0+255),b
  6710  001AAA  0101               	movlb	1	; () banked
  6711  001AAC  0E38               	movlw	low _ToMainHigh_MQ
  6712  001AAE  0100               	movlb	0	; () banked
  6713  001AB0  0100               	movlb	0	; () banked
  6714  001AB2  6F84               	movwf	i2send_msg@qptr& (0+255),b
  6715  001AB4  C036  F086         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  6716  001AB8  C08F  F087         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  6717  001ABC  0100               	movlb	0	; () banked
  6718  001ABE  0100               	movlb	0	; () banked
  6719  001AC0  C091  F089         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  6720  001AC4  0100               	movlb	0	; () banked
  6721  001AC6  0100               	movlb	0	; () banked
  6722  001AC8  C090  F088         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  6723  001ACC  ECE9  F006         	call	i2_send_msg	;wreg free
  6724  001AD0  0012               	return	
  6725  001AD2                     __end_of_ToMainHigh_sendmsg:
  6726                           	opt stack 0
  6727                           pclatu	equ	0xFFB
  6728                           pclath	equ	0xFFA
  6729                           tblptru	equ	0xFF8
  6730                           tblptrh	equ	0xFF7
  6731                           tblptrl	equ	0xFF6
  6732                           tablat	equ	0xFF5
  6733                           prodh	equ	0xFF4
  6734                           prodl	equ	0xFF3
  6735                           intcon	equ	0xFF2
  6736                           postinc0	equ	0xFEE
  6737                           fsr0h	equ	0xFEA
  6738                           fsr0l	equ	0xFE9
  6739                           wreg	equ	0xFE8
  6740                           indf1	equ	0xFE7
  6741                           fsr1h	equ	0xFE2
  6742                           fsr1l	equ	0xFE1
  6743                           bsr	equ	0xFE0
  6744                           indf2	equ	0xFDF
  6745                           fsr2h	equ	0xFDA
  6746                           fsr2l	equ	0xFD9
  6747                           status	equ	0xFD8
  6748                           
  6749 ;; *************** function i2_send_msg *****************
  6750 ;; Defined at:
  6751 ;;		line 25 in file "../src/messages.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  qptr            2    4[BANK0 ] PTR struct __msg_queue
  6754 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6755 ;;  length          1    6[BANK0 ] unsigned char 
  6756 ;;  msgtype         1    7[BANK0 ] unsigned char 
  6757 ;;  data            2    8[BANK0 ] PTR void 
  6758 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  send_msg        2   13[BANK0 ] PTR struct __msg
  6761 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6762 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6763 ;;  send_msg        2   10[BANK0 ] unsigned int 
  6764 ;;  send_msg        1   12[BANK0 ] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      char 
  6767 ;; Registers used:
  6768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6774 ;;      Params:         0       6       0       0       0
  6775 ;;      Locals:         0       5       0       0       0
  6776 ;;      Temps:          1       0       0       0       0
  6777 ;;      Totals:         1      11       0       0       0
  6778 ;;Total ram usage:       12 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:    1
  6781 ;; This function calls:
  6782 ;;		i2_memcpy
  6783 ;; This function is called by:
  6784 ;;		_ToMainHigh_sendmsg
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text39
  6789  000DD2                     __ptext39:
  6790                           	opt stack 0
  6791  000DD2                     i2_send_msg:
  6792                           	opt stack 14
  6793                           
  6794                           ;messages.c: 26: unsigned char slot;
  6795                           ;messages.c: 28: msg *qmsg;
  6796                           ;messages.c: 29: size_t tlength = length;
  6797                           
  6798                           ;incstack = 0
  6799  000DD2  0100               	movlb	0	; () banked
  6800  000DD4  0100               	movlb	0	; () banked
  6801  000DD6  C086  F08A         	movff	i2send_msg@length,i2send_msg@tlength
  6802  000DDA  0100               	movlb	0	; () banked
  6803  000DDC  0100               	movlb	0	; () banked
  6804  000DDE  6B8B               	clrf	(i2send_msg@tlength+1)& (0+255),b
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;messages.c: 39: slot = qptr->cur_write_ind;
  6808  000DE0  0100               	movlb	0	; () banked
  6809  000DE2  EE20 F034          	lfsr	2,52
  6810  000DE6  0100               	movlb	0	; () banked
  6811  000DE8  5184               	movf	i2send_msg@qptr& (0+255),w,b
  6812  000DEA  26D9               	addwf	fsr2l,f,c
  6813  000DEC  0100               	movlb	0	; () banked
  6814  000DEE  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6815  000DF0  22DA               	addwfc	fsr2h,f,c
  6816  000DF2  50DF               	movf	indf2,w,c
  6817  000DF4  0100               	movlb	0	; () banked
  6818  000DF6  0100               	movlb	0	; () banked
  6819  000DF8  6F8C               	movwf	i2send_msg@slot& (0+255),b
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  6823  000DFA  0100               	movlb	0	; () banked
  6824  000DFC  0100               	movlb	0	; () banked
  6825  000DFE  518C               	movf	i2send_msg@slot& (0+255),w,b
  6826  000E00  0D0D               	mullw	13
  6827  000E02  50F3               	movf	prodl,w,c
  6828  000E04  0100               	movlb	0	; () banked
  6829  000E06  0100               	movlb	0	; () banked
  6830  000E08  2584               	addwf	i2send_msg@qptr& (0+255),w,b
  6831  000E0A  0100               	movlb	0	; () banked
  6832  000E0C  0100               	movlb	0	; () banked
  6833  000E0E  6F8D               	movwf	i2send_msg@qmsg& (0+255),b
  6834  000E10  50F4               	movf	prodh,w,c
  6835  000E12  0100               	movlb	0	; () banked
  6836  000E14  0100               	movlb	0	; () banked
  6837  000E16  2185               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  6838  000E18  0100               	movlb	0	; () banked
  6839  000E1A  6F8E               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;messages.c: 42: if (qmsg->full != 0) {
  6843  000E1C  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6844  000E20  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6845  000E24  50DF               	movf	indf2,w,c
  6846  000E26  B4D8               	btfsc	status,2,c
  6847  000E28  D002               	goto	i2l3870
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;messages.c: 43: return (-1);
  6851  000E2A  0EFF               	movlw	255
  6852  000E2C  0012               	return	
  6853  000E2E                     i2l3870:
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;messages.c: 44: }
  6857                           ;messages.c: 47: qmsg->length = length;
  6858  000E2E  0100               	movlb	0	; () banked
  6859  000E30  EE20 F001          	lfsr	2,1
  6860  000E34  0100               	movlb	0	; () banked
  6861  000E36  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  6862  000E38  26D9               	addwf	fsr2l,f,c
  6863  000E3A  0100               	movlb	0	; () banked
  6864  000E3C  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6865  000E3E  22DA               	addwfc	fsr2h,f,c
  6866  000E40  0100               	movlb	0	; () banked
  6867  000E42  C086  FFDF         	movff	i2send_msg@length,indf2
  6868                           
  6869                           ;messages.c: 48: qmsg->msgtype = msgtype;
  6870  000E46  0100               	movlb	0	; () banked
  6871  000E48  EE20 F002          	lfsr	2,2
  6872  000E4C  0100               	movlb	0	; () banked
  6873  000E4E  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  6874  000E50  26D9               	addwf	fsr2l,f,c
  6875  000E52  0100               	movlb	0	; () banked
  6876  000E54  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6877  000E56  22DA               	addwfc	fsr2h,f,c
  6878  000E58  0100               	movlb	0	; () banked
  6879  000E5A  C087  FFDF         	movff	i2send_msg@msgtype,indf2
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  6883  000E5E  0E03               	movlw	3
  6884  000E60  0100               	movlb	0	; () banked
  6885  000E62  0100               	movlb	0	; () banked
  6886  000E64  258D               	addwf	i2send_msg@qmsg& (0+255),w,b
  6887  000E66  6E2F               	movwf	i2memcpy@d1,c
  6888  000E68  0E00               	movlw	0
  6889  000E6A  0100               	movlb	0	; () banked
  6890  000E6C  0100               	movlb	0	; () banked
  6891  000E6E  218E               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  6892  000E70  6E30               	movwf	i2memcpy@d1+1,c
  6893  000E72  0100               	movlb	0	; () banked
  6894  000E74  C089  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  6895  000E78  0100               	movlb	0	; () banked
  6896  000E7A  C088  F031         	movff	i2send_msg@data,i2memcpy@s1
  6897  000E7E  C08A  F033         	movff	i2send_msg@tlength,i2memcpy@n
  6898  000E82  C08B  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  6899  000E86  EC76  F00B         	call	i2_memcpy	;wreg free
  6900                           
  6901                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6902  000E8A  0100               	movlb	0	; () banked
  6903  000E8C  EE20 F034          	lfsr	2,52
  6904  000E90  0100               	movlb	0	; () banked
  6905  000E92  5184               	movf	i2send_msg@qptr& (0+255),w,b
  6906  000E94  26D9               	addwf	fsr2l,f,c
  6907  000E96  0100               	movlb	0	; () banked
  6908  000E98  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6909  000E9A  22DA               	addwfc	fsr2h,f,c
  6910  000E9C  0100               	movlb	0	; () banked
  6911  000E9E  EE10 F034          	lfsr	1,52
  6912  000EA2  0100               	movlb	0	; () banked
  6913  000EA4  5184               	movf	i2send_msg@qptr& (0+255),w,b
  6914  000EA6  26E1               	addwf	fsr1l,f,c
  6915  000EA8  0100               	movlb	0	; () banked
  6916  000EAA  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6917  000EAC  22E2               	addwfc	fsr1h,f,c
  6918  000EAE  50E7               	movf	indf1,w,c
  6919  000EB0  6E35               	movwf	??i2_send_msg& (0+255),c
  6920  000EB2  2835               	incf	??i2_send_msg,w,c
  6921  000EB4  0B03               	andlw	3
  6922  000EB6  6EDF               	movwf	indf2,c
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;messages.c: 60: qmsg->full = 1;
  6926  000EB8  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6927  000EBC  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6928  000EC0  0E01               	movlw	1
  6929  000EC2  6EDF               	movwf	indf2,c
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;messages.c: 61: return (1);
  6933  000EC4  0E01               	movlw	1
  6934  000EC6  0012               	return	
  6935  000EC8                     __end_ofi2_send_msg:
  6936                           	opt stack 0
  6937                           pclatu	equ	0xFFB
  6938                           pclath	equ	0xFFA
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           prodh	equ	0xFF4
  6944                           prodl	equ	0xFF3
  6945                           intcon	equ	0xFF2
  6946                           postinc0	equ	0xFEE
  6947                           fsr0h	equ	0xFEA
  6948                           fsr0l	equ	0xFE9
  6949                           wreg	equ	0xFE8
  6950                           indf1	equ	0xFE7
  6951                           fsr1h	equ	0xFE2
  6952                           fsr1l	equ	0xFE1
  6953                           bsr	equ	0xFE0
  6954                           indf2	equ	0xFDF
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function i2_memcpy *****************
  6960 ;; Defined at:
  6961 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  d1              2   46[COMRAM] PTR void 
  6964 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6965 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6966 ;;		 -> main@msgbuffer(11), 
  6967 ;;  s1              2   48[COMRAM] PTR const void 
  6968 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6969 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6970 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  6971 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6972 ;;  n               2   50[COMRAM] unsigned int 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  memcpy          2    2[BANK0 ] PTR const unsigned char 
  6975 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6976 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6977 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  6978 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6979 ;;  memcpy          2    0[BANK0 ] PTR unsigned char 
  6980 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6981 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6982 ;;		 -> main@msgbuffer(11), 
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  2   46[COMRAM] PTR void 
  6985 ;; Registers used:
  6986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6992 ;;      Params:         6       0       0       0       0
  6993 ;;      Locals:         0       4       0       0       0
  6994 ;;      Temps:          0       0       0       0       0
  6995 ;;      Totals:         6       4       0       0       0
  6996 ;;Total ram usage:       10 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		i2_send_msg
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text40
  7006  0016EC                     __ptext40:
  7007                           	opt stack 0
  7008  0016EC                     i2_memcpy:
  7009                           	opt stack 14
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;incstack = 0
  7013  0016EC  0100               	movlb	0	; () banked
  7014  0016EE  C032  F083         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7015  0016F2  0100               	movlb	0	; () banked
  7016  0016F4  C031  F082         	movff	i2memcpy@s1,i2memcpy@s
  7017  0016F8  0100               	movlb	0	; () banked
  7018  0016FA  C030  F081         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7019  0016FE  0100               	movlb	0	; () banked
  7020  001700  C02F  F080         	movff	i2memcpy@d1,i2memcpy@d
  7021  001704  D012               	goto	i2l3922
  7022  001706                     i2l3916:
  7023  001706  C082  FFD9         	movff	i2memcpy@s,fsr2l
  7024  00170A  C083  FFDA         	movff	i2memcpy@s+1,fsr2h
  7025  00170E  C080  FFE1         	movff	i2memcpy@d,fsr1l
  7026  001712  C081  FFE2         	movff	i2memcpy@d+1,fsr1h
  7027  001716  CFDF FFE7          	movff	indf2,indf1
  7028  00171A  0100               	movlb	0	; () banked
  7029  00171C  0100               	movlb	0	; () banked
  7030  00171E  4B82               	infsnz	i2memcpy@s& (0+255),f,b
  7031  001720  2B83               	incf	(i2memcpy@s+1)& (0+255),f,b
  7032                           
  7033                           ; BSR set to: 0
  7034  001722  0100               	movlb	0	; () banked
  7035  001724  0100               	movlb	0	; () banked
  7036  001726  4B80               	infsnz	i2memcpy@d& (0+255),f,b
  7037  001728  2B81               	incf	(i2memcpy@d+1)& (0+255),f,b
  7038  00172A                     i2l3922:
  7039                           
  7040                           ; BSR set to: 0
  7041  00172A  0633               	decf	i2memcpy@n,f,c
  7042  00172C  A0D8               	btfss	status,0,c
  7043  00172E  0634               	decf	i2memcpy@n+1,f,c
  7044  001730  2833               	incf	i2memcpy@n& (0+255),w,c
  7045  001732  B4D8               	btfsc	status,2,c
  7046  001734  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  7047  001736  B4D8               	btfsc	status,2,c
  7048                           
  7049                           ;	Return value of i2_memcpy is never used
  7050  001738  0012               	return	
  7051  00173A  D7E5               	goto	i2l3916
  7052  00173C                     __end_ofi2_memcpy:
  7053                           	opt stack 0
  7054                           pclatu	equ	0xFFB
  7055                           pclath	equ	0xFFA
  7056                           tblptru	equ	0xFF8
  7057                           tblptrh	equ	0xFF7
  7058                           tblptrl	equ	0xFF6
  7059                           tablat	equ	0xFF5
  7060                           prodh	equ	0xFF4
  7061                           prodl	equ	0xFF3
  7062                           intcon	equ	0xFF2
  7063                           postinc0	equ	0xFEE
  7064                           fsr0h	equ	0xFEA
  7065                           fsr0l	equ	0xFE9
  7066                           wreg	equ	0xFE8
  7067                           indf1	equ	0xFE7
  7068                           fsr1h	equ	0xFE2
  7069                           fsr1l	equ	0xFE1
  7070                           bsr	equ	0xFE0
  7071                           indf2	equ	0xFDF
  7072                           fsr2h	equ	0xFDA
  7073                           fsr2l	equ	0xFD9
  7074                           status	equ	0xFD8
  7075                           
  7076 ;; *************** function _sendRequestedData *****************
  7077 ;; Defined at:
  7078 ;;		line 25 in file "../src/sensorcomm.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;		None               void
  7085 ;; Registers used:
  7086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7092 ;;      Params:         0       0       0       0       0
  7093 ;;      Locals:         0       0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0
  7095 ;;      Totals:         0       0       0       0       0
  7096 ;;Total ram usage:        0 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    3
  7099 ;; This function calls:
  7100 ;;		_sendADdata
  7101 ;;		i2_resetADacc
  7102 ;; This function is called by:
  7103 ;;		_i2c_int_handler
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text41
  7108  001C00                     __ptext41:
  7109                           	opt stack 0
  7110  001C00                     _sendRequestedData:
  7111                           	opt stack 15
  7112                           
  7113                           ;sensorcomm.c: 26: if(BrainMsgRecv.flags == 1){
  7114                           
  7115                           ;incstack = 0
  7116  001C00  0438               	decf	_BrainMsgRecv,w,c
  7117  001C02  A4D8               	btfss	status,2,c
  7118  001C04  0012               	return	
  7119                           
  7120                           ;sensorcomm.c: 27: if(BrainMsgRecv.sensorMask == 0){
  7121  001C06  6639               	tstfsz	_BrainMsgRecv+1,c
  7122  001C08  0012               	return	
  7123                           
  7124                           ;sensorcomm.c: 28: sendADdata();
  7125  001C0A  EC3A  F00A         	call	_sendADdata	;wreg free
  7126                           
  7127                           ;sensorcomm.c: 29: resetADacc();
  7128  001C0E  EC96  F00C         	call	i2_resetADacc	;wreg free
  7129  001C12  0012               	return	
  7130  001C14                     __end_of_sendRequestedData:
  7131                           	opt stack 0
  7132                           pclatu	equ	0xFFB
  7133                           pclath	equ	0xFFA
  7134                           tblptru	equ	0xFF8
  7135                           tblptrh	equ	0xFF7
  7136                           tblptrl	equ	0xFF6
  7137                           tablat	equ	0xFF5
  7138                           prodh	equ	0xFF4
  7139                           prodl	equ	0xFF3
  7140                           intcon	equ	0xFF2
  7141                           postinc0	equ	0xFEE
  7142                           fsr0h	equ	0xFEA
  7143                           fsr0l	equ	0xFE9
  7144                           wreg	equ	0xFE8
  7145                           indf1	equ	0xFE7
  7146                           fsr1h	equ	0xFE2
  7147                           fsr1l	equ	0xFE1
  7148                           bsr	equ	0xFE0
  7149                           indf2	equ	0xFDF
  7150                           fsr2h	equ	0xFDA
  7151                           fsr2l	equ	0xFD9
  7152                           status	equ	0xFD8
  7153                           
  7154 ;; *************** function i2_resetADacc *****************
  7155 ;; Defined at:
  7156 ;;		line 72 in file "../src/sensorcomm.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  resetADacc      2   49[COMRAM] int 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;		None               void
  7163 ;; Registers used:
  7164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7170 ;;      Params:         0       0       0       0       0
  7171 ;;      Locals:         2       0       0       0       0
  7172 ;;      Temps:          3       0       0       0       0
  7173 ;;      Totals:         5       0       0       0       0
  7174 ;;Total ram usage:        5 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_sendRequestedData
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text42
  7184  00192C                     __ptext42:
  7185                           	opt stack 0
  7186  00192C                     i2_resetADacc:
  7187                           	opt stack 17
  7188                           
  7189                           ;sensorcomm.c: 73: int i = 0;
  7190                           
  7191                           ;incstack = 0
  7192  00192C  0E00               	movlw	0
  7193  00192E  6E33               	movwf	i2resetADacc@i+1,c
  7194  001930  0E00               	movlw	0
  7195  001932  6E32               	movwf	i2resetADacc@i,c
  7196  001934  D00A               	goto	i2l3900
  7197  001936                     i2l3896:
  7198                           
  7199                           ;sensorcomm.c: 75: ADacc.data[i].data = 0;
  7200  001936  0E40               	movlw	low (_ADacc+1)
  7201  001938  2432               	addwf	i2resetADacc@i,w,c
  7202  00193A  6ED9               	movwf	fsr2l,c
  7203  00193C  0E00               	movlw	high (_ADacc+1)
  7204  00193E  2033               	addwfc	i2resetADacc@i+1,w,c
  7205  001940  6EDA               	movwf	fsr2h,c
  7206  001942  0E00               	movlw	0
  7207  001944  6EDF               	movwf	indf2,c
  7208  001946  4A32               	infsnz	i2resetADacc@i,f,c
  7209  001948  2A33               	incf	i2resetADacc@i+1,f,c
  7210  00194A                     i2l3900:
  7211  00194A  503F               	movf	_ADacc,w,c
  7212  00194C  6E2F               	movwf	??i2_resetADacc& (0+255),c
  7213  00194E  6A30               	clrf	(??i2_resetADacc+1)& (0+255),c
  7214  001950  5033               	movf	i2resetADacc@i+1,w,c
  7215  001952  0A80               	xorlw	128
  7216  001954  6E31               	movwf	(??i2_resetADacc+2)& (0+255),c
  7217  001956  502F               	movf	??i2_resetADacc,w,c
  7218  001958  5C32               	subwf	i2resetADacc@i,w,c
  7219  00195A  5030               	movf	??i2_resetADacc+1,w,c
  7220  00195C  0A80               	xorlw	128
  7221  00195E  5831               	subwfb	(??i2_resetADacc+2)& (0+255),w,c
  7222  001960  A0D8               	btfss	status,0,c
  7223  001962  D7E9               	goto	i2l3896
  7224                           
  7225                           ;sensorcomm.c: 76: }
  7226                           ;sensorcomm.c: 77: ADacc.len = 0;
  7227  001964  6E2F               	movwf	??i2_resetADacc& (0+255),c
  7228  001966  0E00               	movlw	0
  7229  001968  6E3F               	movwf	_ADacc,c
  7230  00196A  502F               	movf	??i2_resetADacc& (0+255),w,c
  7231  00196C  0012               	return	
  7232  00196E                     __end_ofi2_resetADacc:
  7233                           	opt stack 0
  7234                           pclatu	equ	0xFFB
  7235                           pclath	equ	0xFFA
  7236                           tblptru	equ	0xFF8
  7237                           tblptrh	equ	0xFF7
  7238                           tblptrl	equ	0xFF6
  7239                           tablat	equ	0xFF5
  7240                           prodh	equ	0xFF4
  7241                           prodl	equ	0xFF3
  7242                           intcon	equ	0xFF2
  7243                           postinc0	equ	0xFEE
  7244                           fsr0h	equ	0xFEA
  7245                           fsr0l	equ	0xFE9
  7246                           wreg	equ	0xFE8
  7247                           indf1	equ	0xFE7
  7248                           fsr1h	equ	0xFE2
  7249                           fsr1l	equ	0xFE1
  7250                           bsr	equ	0xFE0
  7251                           indf2	equ	0xFDF
  7252                           fsr2h	equ	0xFDA
  7253                           fsr2l	equ	0xFD9
  7254                           status	equ	0xFD8
  7255                           
  7256 ;; *************** function _sendADdata *****************
  7257 ;; Defined at:
  7258 ;;		line 34 in file "../src/sensorcomm.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;		None
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  outBuff       100   18[BANK0 ] unsigned char [100]
  7263 ;;  bytes_packed    2  118[BANK0 ] int 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;		None               void
  7266 ;; Registers used:
  7267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7273 ;;      Params:         0       0       0       0       0
  7274 ;;      Locals:         0     102       0       0       0
  7275 ;;      Temps:          0       0       0       0       0
  7276 ;;      Totals:         0     102       0       0       0
  7277 ;;Total ram usage:      102 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    2
  7280 ;; This function calls:
  7281 ;;		_packADData
  7282 ;;		i2_start_i2c_slave_reply
  7283 ;; This function is called by:
  7284 ;;		_sendRequestedData
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text43
  7289  001474                     __ptext43:
  7290                           	opt stack 0
  7291  001474                     _sendADdata:
  7292                           	opt stack 15
  7293                           
  7294                           ;sensorcomm.c: 36: char outBuff[100];
  7295                           ;sensorcomm.c: 37: int bytes_packed = packADData( ADacc.data, ADacc.len, outBuff, 100);
  7296                           
  7297                           ;incstack = 0
  7298  001474  0E00               	movlw	high (_ADacc+1)
  7299  001476  0100               	movlb	0	; () banked
  7300  001478  0100               	movlb	0	; () banked
  7301  00147A  6F8B               	movwf	(packADData@data+1)& (0+255),b
  7302  00147C  0E40               	movlw	low (_ADacc+1)
  7303  00147E  0100               	movlb	0	; () banked
  7304  001480  0100               	movlb	0	; () banked
  7305  001482  6F8A               	movwf	packADData@data& (0+255),b
  7306  001484  0100               	movlb	0	; () banked
  7307  001486  C03F  F08C         	movff	_ADacc,packADData@len
  7308  00148A  0100               	movlb	0	; () banked
  7309  00148C  0100               	movlb	0	; () banked
  7310  00148E  6B8D               	clrf	(packADData@len+1)& (0+255),b
  7311  001490  0100               	movlb	0	; () banked
  7312  001492  0E00               	movlw	high sendADdata@outBuff
  7313  001494  0100               	movlb	0	; () banked
  7314  001496  0100               	movlb	0	; () banked
  7315  001498  6F8F               	movwf	(packADData@out+1)& (0+255),b
  7316  00149A  0100               	movlb	0	; () banked
  7317  00149C  0E92               	movlw	low sendADdata@outBuff
  7318  00149E  0100               	movlb	0	; () banked
  7319  0014A0  0100               	movlb	0	; () banked
  7320  0014A2  6F8E               	movwf	packADData@out& (0+255),b
  7321  0014A4  0E00               	movlw	0
  7322  0014A6  0100               	movlb	0	; () banked
  7323  0014A8  0100               	movlb	0	; () banked
  7324  0014AA  6F91               	movwf	(packADData@maxout+1)& (0+255),b
  7325  0014AC  0E64               	movlw	100
  7326  0014AE  0100               	movlb	0	; () banked
  7327  0014B0  6F90               	movwf	packADData@maxout& (0+255),b
  7328  0014B2  EC9E  F00B         	call	_packADData	;wreg free
  7329  0014B6  0100               	movlb	0	; () banked
  7330  0014B8  C08A  F0F6         	movff	?_packADData,sendADdata@bytes_packed
  7331  0014BC  0100               	movlb	0	; () banked
  7332  0014BE  C08B  F0F7         	movff	?_packADData+1,sendADdata@bytes_packed+1
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;sensorcomm.c: 38: if(bytes_packed == 0){
  7336  0014C2  0100               	movlb	0	; () banked
  7337  0014C4  0100               	movlb	0	; () banked
  7338  0014C6  51F7               	movf	(sendADdata@bytes_packed+1)& (0+255),w,b
  7339  0014C8  11F6               	iorwf	sendADdata@bytes_packed& (0+255),w,b
  7340  0014CA  B4D8               	btfsc	status,2,c
  7341  0014CC  0012               	return	
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;sensorcomm.c: 41: else{
  7345                           ;sensorcomm.c: 44: start_i2c_slave_reply(bytes_packed, outBuff);
  7346                           
  7347                           ; BSR set to: 0
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;sensorcomm.c: 40: }
  7351  0014CE  0100               	movlb	0	; () banked
  7352  0014D0  0E00               	movlw	high sendADdata@outBuff
  7353  0014D2  6E30               	movwf	i2start_i2c_slave_reply@msg+1,c
  7354  0014D4  0100               	movlb	0	; () banked
  7355  0014D6  0E92               	movlw	low sendADdata@outBuff
  7356  0014D8  6E2F               	movwf	i2start_i2c_slave_reply@msg,c
  7357  0014DA  0100               	movlb	0	; () banked
  7358  0014DC  0100               	movlb	0	; () banked
  7359  0014DE  51F6               	movf	sendADdata@bytes_packed& (0+255),w,b
  7360  0014E0  EC64  F007         	call	i2_start_i2c_slave_reply
  7361  0014E4  0012               	return	
  7362  0014E6                     __end_of_sendADdata:
  7363                           	opt stack 0
  7364                           pclatu	equ	0xFFB
  7365                           pclath	equ	0xFFA
  7366                           tblptru	equ	0xFF8
  7367                           tblptrh	equ	0xFF7
  7368                           tblptrl	equ	0xFF6
  7369                           tablat	equ	0xFF5
  7370                           prodh	equ	0xFF4
  7371                           prodl	equ	0xFF3
  7372                           intcon	equ	0xFF2
  7373                           postinc0	equ	0xFEE
  7374                           fsr0h	equ	0xFEA
  7375                           fsr0l	equ	0xFE9
  7376                           wreg	equ	0xFE8
  7377                           indf1	equ	0xFE7
  7378                           fsr1h	equ	0xFE2
  7379                           fsr1l	equ	0xFE1
  7380                           bsr	equ	0xFE0
  7381                           indf2	equ	0xFDF
  7382                           fsr2h	equ	0xFDA
  7383                           fsr2l	equ	0xFD9
  7384                           status	equ	0xFD8
  7385                           
  7386 ;; *************** function i2_start_i2c_slave_reply *****************
  7387 ;; Defined at:
  7388 ;;		line 60 in file "../src/my_i2c.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  length          1    wreg     unsigned char 
  7391 ;;  msg             2   46[COMRAM] PTR unsigned char 
  7392 ;;		 -> sendADdata@outBuff(100), main@msgbuffer(11), 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  length          1   50[COMRAM] unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;		None               void
  7397 ;; Registers used:
  7398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7404 ;;      Params:         2       0       0       0       0
  7405 ;;      Locals:         1       0       0       0       0
  7406 ;;      Temps:          2       0       0       0       0
  7407 ;;      Totals:         5       0       0       0       0
  7408 ;;Total ram usage:        5 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; This function calls:
  7411 ;;		Nothing
  7412 ;; This function is called by:
  7413 ;;		_sendADdata
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text44
  7418  000EC8                     __ptext44:
  7419                           	opt stack 0
  7420  000EC8                     i2_start_i2c_slave_reply:
  7421                           	opt stack 16
  7422                           
  7423                           ;incstack = 0
  7424                           ;i2start_i2c_slave_reply@length stored from wreg
  7425  000EC8  CFE8 F033          	movff	wreg,i2start_i2c_slave_reply@length
  7426                           
  7427                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7428  000ECC  0101               	movlb	1	; () banked
  7429  000ECE  EE20 F019          	lfsr	2,25
  7430  000ED2  0101               	movlb	1	; () banked
  7431  000ED4  5100               	movf	_ic_ptr& (0+255),w,b
  7432  000ED6  26D9               	addwf	fsr2l,f,c
  7433  000ED8  0101               	movlb	1	; () banked
  7434  000EDA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7435  000EDC  22DA               	addwfc	fsr2h,f,c
  7436  000EDE  0E00               	movlw	0
  7437  000EE0  6EDF               	movwf	indf2,c
  7438  000EE2  D03A               	goto	i2l3888
  7439  000EE4                     i2l3884:
  7440                           
  7441                           ; BSR set to: 1
  7442                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7443  000EE4  0101               	movlb	1	; () banked
  7444  000EE6  EE20 F019          	lfsr	2,25
  7445  000EEA  0101               	movlb	1	; () banked
  7446  000EEC  5100               	movf	_ic_ptr& (0+255),w,b
  7447  000EEE  26D9               	addwf	fsr2l,f,c
  7448  000EF0  0101               	movlb	1	; () banked
  7449  000EF2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7450  000EF4  22DA               	addwfc	fsr2h,f,c
  7451  000EF6  50DF               	movf	indf2,w,c
  7452  000EF8  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7453  000EFA  5031               	movf	??i2_start_i2c_slave_reply,w,c
  7454  000EFC  0D01               	mullw	1
  7455  000EFE  50F3               	movf	prodl,w,c
  7456  000F00  242F               	addwf	i2start_i2c_slave_reply@msg,w,c
  7457  000F02  6ED9               	movwf	fsr2l,c
  7458  000F04  50F4               	movf	prodh,w,c
  7459  000F06  2030               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7460  000F08  6EDA               	movwf	fsr2h,c
  7461  000F0A  0101               	movlb	1	; () banked
  7462  000F0C  EE10 F019          	lfsr	1,25
  7463  000F10  0101               	movlb	1	; () banked
  7464  000F12  5100               	movf	_ic_ptr& (0+255),w,b
  7465  000F14  26E1               	addwf	fsr1l,f,c
  7466  000F16  0101               	movlb	1	; () banked
  7467  000F18  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7468  000F1A  22E2               	addwfc	fsr1h,f,c
  7469  000F1C  50E7               	movf	indf1,w,c
  7470  000F1E  6E32               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7471  000F20  5032               	movf	??i2_start_i2c_slave_reply+1,w,c
  7472  000F22  0D01               	mullw	1
  7473  000F24  0E0F               	movlw	15
  7474  000F26  26F3               	addwf	prodl,f,c
  7475  000F28  0E00               	movlw	0
  7476  000F2A  22F4               	addwfc	prodh,f,c
  7477  000F2C  50F3               	movf	prodl,w,c
  7478  000F2E  0101               	movlb	1	; () banked
  7479  000F30  0101               	movlb	1	; () banked
  7480  000F32  2500               	addwf	_ic_ptr& (0+255),w,b
  7481  000F34  6EE1               	movwf	fsr1l,c
  7482  000F36  50F4               	movf	prodh,w,c
  7483  000F38  0101               	movlb	1	; () banked
  7484  000F3A  0101               	movlb	1	; () banked
  7485  000F3C  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7486  000F3E  6EE2               	movwf	fsr1h,c
  7487  000F40  CFDF FFE7          	movff	indf2,indf1
  7488                           
  7489                           ; BSR set to: 1
  7490  000F44  0101               	movlb	1	; () banked
  7491  000F46  EE20 F019          	lfsr	2,25
  7492  000F4A  0101               	movlb	1	; () banked
  7493  000F4C  5100               	movf	_ic_ptr& (0+255),w,b
  7494  000F4E  26D9               	addwf	fsr2l,f,c
  7495  000F50  0101               	movlb	1	; () banked
  7496  000F52  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7497  000F54  22DA               	addwfc	fsr2h,f,c
  7498  000F56  2ADF               	incf	indf2,f,c
  7499  000F58                     i2l3888:
  7500                           
  7501                           ; BSR set to: 1
  7502  000F58  0101               	movlb	1	; () banked
  7503  000F5A  EE20 F019          	lfsr	2,25
  7504  000F5E  0101               	movlb	1	; () banked
  7505  000F60  5100               	movf	_ic_ptr& (0+255),w,b
  7506  000F62  26D9               	addwf	fsr2l,f,c
  7507  000F64  0101               	movlb	1	; () banked
  7508  000F66  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7509  000F68  22DA               	addwfc	fsr2h,f,c
  7510  000F6A  50DF               	movf	indf2,w,c
  7511  000F6C  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7512  000F6E  5033               	movf	i2start_i2c_slave_reply@length,w,c
  7513  000F70  5C31               	subwf	??i2_start_i2c_slave_reply,w,c
  7514  000F72  A0D8               	btfss	status,0,c
  7515  000F74  D7B7               	goto	i2l3884
  7516                           
  7517                           ; BSR set to: 1
  7518                           ;my_i2c.c: 64: }
  7519                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  7520                           
  7521                           ; BSR set to: 1
  7522  000F76  0101               	movlb	1	; () banked
  7523  000F78  EE20 F019          	lfsr	2,25
  7524  000F7C  0101               	movlb	1	; () banked
  7525  000F7E  5100               	movf	_ic_ptr& (0+255),w,b
  7526  000F80  26D9               	addwf	fsr2l,f,c
  7527  000F82  0101               	movlb	1	; () banked
  7528  000F84  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7529  000F86  22DA               	addwfc	fsr2h,f,c
  7530  000F88  C033  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7531                           
  7532                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  7533  000F8C  0101               	movlb	1	; () banked
  7534  000F8E  EE20 F01A          	lfsr	2,26
  7535  000F92  0101               	movlb	1	; () banked
  7536  000F94  5100               	movf	_ic_ptr& (0+255),w,b
  7537  000F96  26D9               	addwf	fsr2l,f,c
  7538  000F98  0101               	movlb	1	; () banked
  7539  000F9A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7540  000F9C  22DA               	addwfc	fsr2h,f,c
  7541  000F9E  0E01               	movlw	1
  7542  000FA0  6EDF               	movwf	indf2,c
  7543                           
  7544                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  7545  000FA2  0101               	movlb	1	; () banked
  7546  000FA4  EE20 F00F          	lfsr	2,15
  7547  000FA8  0101               	movlb	1	; () banked
  7548  000FAA  5100               	movf	_ic_ptr& (0+255),w,b
  7549  000FAC  26D9               	addwf	fsr2l,f,c
  7550  000FAE  0101               	movlb	1	; () banked
  7551  000FB0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7552  000FB2  22DA               	addwfc	fsr2h,f,c
  7553  000FB4  50DF               	movf	indf2,w,c
  7554  000FB6  6EC9               	movwf	4041,c	;volatile
  7555                           
  7556                           ; BSR set to: 1
  7557                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  7558  000FB8  88C6               	bsf	4038,4,c	;volatile
  7559                           
  7560                           ; BSR set to: 1
  7561  000FBA  0012               	return	
  7562  000FBC                     __end_ofi2_start_i2c_slave_reply:
  7563                           	opt stack 0
  7564                           pclatu	equ	0xFFB
  7565                           pclath	equ	0xFFA
  7566                           tblptru	equ	0xFF8
  7567                           tblptrh	equ	0xFF7
  7568                           tblptrl	equ	0xFF6
  7569                           tablat	equ	0xFF5
  7570                           prodh	equ	0xFF4
  7571                           prodl	equ	0xFF3
  7572                           intcon	equ	0xFF2
  7573                           postinc0	equ	0xFEE
  7574                           fsr0h	equ	0xFEA
  7575                           fsr0l	equ	0xFE9
  7576                           wreg	equ	0xFE8
  7577                           indf1	equ	0xFE7
  7578                           fsr1h	equ	0xFE2
  7579                           fsr1l	equ	0xFE1
  7580                           bsr	equ	0xFE0
  7581                           indf2	equ	0xFDF
  7582                           fsr2h	equ	0xFDA
  7583                           fsr2l	equ	0xFD9
  7584                           status	equ	0xFD8
  7585                           
  7586 ;; *************** function _packADData *****************
  7587 ;; Defined at:
  7588 ;;		line 47 in file "../../../../common/communication/brain_rover.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  data            2   10[BANK0 ] PTR struct .
  7591 ;;		 -> ADacc(11), 
  7592 ;;  len             2   12[BANK0 ] int 
  7593 ;;  out             2   14[BANK0 ] PTR unsigned char 
  7594 ;;		 -> sendADdata@outBuff(100), 
  7595 ;;  maxout          2   16[BANK0 ] int 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  2   10[BANK0 ] int 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7607 ;;      Params:         0       8       0       0       0
  7608 ;;      Locals:         0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0
  7610 ;;      Totals:         0       8       0       0       0
  7611 ;;Total ram usage:        8 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    1
  7614 ;; This function calls:
  7615 ;;		_packReturnData
  7616 ;; This function is called by:
  7617 ;;		_sendADdata
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text45
  7622  00173C                     __ptext45:
  7623                           	opt stack 0
  7624  00173C                     _packADData:
  7625                           	opt stack 15
  7626                           
  7627                           ;brain_rover.c: 48: return packReturnData((char*)data, len*sizeof(sensorADData), (RoverM
      +                          sg*)out, maxout, 0);
  7628                           
  7629                           ; BSR set to: 1
  7630                           ;incstack = 0
  7631  00173C  0100               	movlb	0	; () banked
  7632  00173E  0100               	movlb	0	; () banked
  7633  001740  C08B  F081         	movff	packADData@data+1,packReturnData@data+1
  7634  001744  0100               	movlb	0	; () banked
  7635  001746  0100               	movlb	0	; () banked
  7636  001748  C08A  F080         	movff	packADData@data,packReturnData@data
  7637  00174C  C08C  F082         	movff	packADData@len,packReturnData@payloadLen
  7638  001750  C08D  F083         	movff	packADData@len+1,packReturnData@payloadLen+1
  7639  001754  0100               	movlb	0	; () banked
  7640  001756  0100               	movlb	0	; () banked
  7641  001758  C08F  F085         	movff	packADData@out+1,packReturnData@msg+1
  7642  00175C  0100               	movlb	0	; () banked
  7643  00175E  0100               	movlb	0	; () banked
  7644  001760  C08E  F084         	movff	packADData@out,packReturnData@msg
  7645  001764  C090  F086         	movff	packADData@maxout,packReturnData@maxout
  7646  001768  C091  F087         	movff	packADData@maxout+1,packReturnData@maxout+1
  7647  00176C  0E00               	movlw	0
  7648  00176E  0100               	movlb	0	; () banked
  7649  001770  0100               	movlb	0	; () banked
  7650  001772  6F89               	movwf	(packReturnData@sensorID+1)& (0+255),b
  7651  001774  0E00               	movlw	0
  7652  001776  0100               	movlb	0	; () banked
  7653  001778  6F88               	movwf	packReturnData@sensorID& (0+255),b
  7654  00177A  EC05  F005         	call	_packReturnData	;wreg free
  7655  00177E  0100               	movlb	0	; () banked
  7656  001780  C080  F08A         	movff	?_packReturnData,?_packADData
  7657  001784  0100               	movlb	0	; () banked
  7658  001786  C081  F08B         	movff	?_packReturnData+1,?_packADData+1
  7659  00178A  0012               	return	
  7660  00178C                     __end_of_packADData:
  7661                           	opt stack 0
  7662                           pclatu	equ	0xFFB
  7663                           pclath	equ	0xFFA
  7664                           tblptru	equ	0xFF8
  7665                           tblptrh	equ	0xFF7
  7666                           tblptrl	equ	0xFF6
  7667                           tablat	equ	0xFF5
  7668                           prodh	equ	0xFF4
  7669                           prodl	equ	0xFF3
  7670                           intcon	equ	0xFF2
  7671                           postinc0	equ	0xFEE
  7672                           fsr0h	equ	0xFEA
  7673                           fsr0l	equ	0xFE9
  7674                           wreg	equ	0xFE8
  7675                           indf1	equ	0xFE7
  7676                           fsr1h	equ	0xFE2
  7677                           fsr1l	equ	0xFE1
  7678                           bsr	equ	0xFE0
  7679                           indf2	equ	0xFDF
  7680                           fsr2h	equ	0xFDA
  7681                           fsr2l	equ	0xFD9
  7682                           status	equ	0xFD8
  7683                           
  7684 ;; *************** function _packReturnData *****************
  7685 ;; Defined at:
  7686 ;;		line 17 in file "../../../../common/communication/brain_rover.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;  data            2    0[BANK0 ] PTR unsigned char 
  7689 ;;		 -> ADacc(11), 
  7690 ;;  payloadLen      2    2[BANK0 ] int 
  7691 ;;  msg             2    4[BANK0 ] PTR struct .
  7692 ;;		 -> sendADdata@outBuff(100), 
  7693 ;;  maxout          2    6[BANK0 ] int 
  7694 ;;  sensorID        2    8[BANK0 ] int 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;  dest            2   51[COMRAM] PTR unsigned char 
  7697 ;;		 -> sendADdata@outBuff.payload(0), sendADdata@outBuff(100), 
  7698 ;;  end             2   49[COMRAM] PTR unsigned char 
  7699 ;;		 -> sendADdata@outBuff.payload(0), sendADdata@outBuff(100), 
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  2    0[BANK0 ] int 
  7702 ;; Registers used:
  7703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7709 ;;      Params:         0      10       0       0       0
  7710 ;;      Locals:         4       0       0       0       0
  7711 ;;      Temps:          3       0       0       0       0
  7712 ;;      Totals:         7      10       0       0       0
  7713 ;;Total ram usage:       17 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_packADData
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           	psect	text46
  7723  000A0A                     __ptext46:
  7724                           	opt stack 0
  7725  000A0A                     _packReturnData:
  7726                           	opt stack 15
  7727                           
  7728                           ;brain_rover.c: 18: if (payloadLen + 3 >= maxout) {
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;incstack = 0
  7732  000A0A  0E03               	movlw	3
  7733  000A0C  0100               	movlb	0	; () banked
  7734  000A0E  0100               	movlb	0	; () banked
  7735  000A10  2582               	addwf	packReturnData@payloadLen& (0+255),w,b
  7736  000A12  6E2F               	movwf	??_packReturnData& (0+255),c
  7737  000A14  0E00               	movlw	0
  7738  000A16  0100               	movlb	0	; () banked
  7739  000A18  0100               	movlb	0	; () banked
  7740  000A1A  2183               	addwfc	(packReturnData@payloadLen+1)& (0+255),w,b
  7741  000A1C  6E30               	movwf	(??_packReturnData+1)& (0+255),c
  7742  000A1E  5030               	movf	??_packReturnData+1,w,c
  7743  000A20  0A80               	xorlw	128
  7744  000A22  6E31               	movwf	(??_packReturnData+2)& (0+255),c
  7745  000A24  0100               	movlb	0	; () banked
  7746  000A26  5186               	movf	packReturnData@maxout& (0+255),w,b
  7747  000A28  5C2F               	subwf	??_packReturnData,w,c
  7748  000A2A  0100               	movlb	0	; () banked
  7749  000A2C  0100               	movlb	0	; () banked
  7750  000A2E  5187               	movf	(packReturnData@maxout+1)& (0+255),w,b
  7751  000A30  0A80               	xorlw	128
  7752  000A32  5831               	subwfb	(??_packReturnData+2)& (0+255),w,c
  7753  000A34  A0D8               	btfss	status,0,c
  7754  000A36  D008               	goto	i2l3772
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;brain_rover.c: 19: return 0;
  7758  000A38  0E00               	movlw	0
  7759  000A3A  0100               	movlb	0	; () banked
  7760  000A3C  0100               	movlb	0	; () banked
  7761  000A3E  6F81               	movwf	(?_packReturnData+1)& (0+255),b
  7762  000A40  0E00               	movlw	0
  7763  000A42  0100               	movlb	0	; () banked
  7764  000A44  6F80               	movwf	?_packReturnData& (0+255),b
  7765  000A46  0012               	return	
  7766  000A48                     i2l3772:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;brain_rover.c: 20: }
  7770                           ;brain_rover.c: 22: msg->flags = 1;
  7771  000A48  C084  FFD9         	movff	packReturnData@msg,fsr2l
  7772  000A4C  C085  FFDA         	movff	packReturnData@msg+1,fsr2h
  7773  000A50  0E01               	movlw	1
  7774  000A52  6EDF               	movwf	indf2,c
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;brain_rover.c: 23: msg->sensorID = sensorID;
  7778  000A54  0100               	movlb	0	; () banked
  7779  000A56  EE20 F001          	lfsr	2,1
  7780  000A5A  0100               	movlb	0	; () banked
  7781  000A5C  5184               	movf	packReturnData@msg& (0+255),w,b
  7782  000A5E  26D9               	addwf	fsr2l,f,c
  7783  000A60  0100               	movlb	0	; () banked
  7784  000A62  5185               	movf	(packReturnData@msg+1)& (0+255),w,b
  7785  000A64  22DA               	addwfc	fsr2h,f,c
  7786  000A66  0100               	movlb	0	; () banked
  7787  000A68  C088  FFDF         	movff	packReturnData@sensorID,indf2
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;brain_rover.c: 24: msg->payloadLen = payloadLen;
  7791  000A6C  0100               	movlb	0	; () banked
  7792  000A6E  EE20 F002          	lfsr	2,2
  7793  000A72  0100               	movlb	0	; () banked
  7794  000A74  5184               	movf	packReturnData@msg& (0+255),w,b
  7795  000A76  26D9               	addwf	fsr2l,f,c
  7796  000A78  0100               	movlb	0	; () banked
  7797  000A7A  5185               	movf	(packReturnData@msg+1)& (0+255),w,b
  7798  000A7C  22DA               	addwfc	fsr2h,f,c
  7799  000A7E  0100               	movlb	0	; () banked
  7800  000A80  C082  FFDF         	movff	packReturnData@payloadLen,indf2
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;brain_rover.c: 26: char* dest = msg->payload;
  7804  000A84  0E03               	movlw	3
  7805  000A86  0100               	movlb	0	; () banked
  7806  000A88  0100               	movlb	0	; () banked
  7807  000A8A  2584               	addwf	packReturnData@msg& (0+255),w,b
  7808  000A8C  6E34               	movwf	packReturnData@dest,c
  7809  000A8E  0E00               	movlw	0
  7810  000A90  0100               	movlb	0	; () banked
  7811  000A92  0100               	movlb	0	; () banked
  7812  000A94  2185               	addwfc	(packReturnData@msg+1)& (0+255),w,b
  7813  000A96  6E35               	movwf	packReturnData@dest+1,c
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;brain_rover.c: 27: char* end = dest + payloadLen;
  7817  000A98  0100               	movlb	0	; () banked
  7818  000A9A  0100               	movlb	0	; () banked
  7819  000A9C  5182               	movf	packReturnData@payloadLen& (0+255),w,b
  7820  000A9E  2434               	addwf	packReturnData@dest,w,c
  7821  000AA0  6E32               	movwf	packReturnData@end,c
  7822  000AA2  0100               	movlb	0	; () banked
  7823  000AA4  0100               	movlb	0	; () banked
  7824  000AA6  5183               	movf	(packReturnData@payloadLen+1)& (0+255),w,b
  7825  000AA8  2035               	addwfc	packReturnData@dest+1,w,c
  7826  000AAA  6E33               	movwf	packReturnData@end+1,c
  7827                           
  7828                           ;brain_rover.c: 28: while (dest != end) {
  7829  000AAC  D010               	goto	i2l3788
  7830  000AAE                     i2l3782:
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;brain_rover.c: 29: *dest++ = *data++;
  7834  000AAE  C080  FFD9         	movff	packReturnData@data,fsr2l
  7835  000AB2  C081  FFDA         	movff	packReturnData@data+1,fsr2h
  7836  000AB6  C034  FFE1         	movff	packReturnData@dest,fsr1l
  7837  000ABA  C035  FFE2         	movff	packReturnData@dest+1,fsr1h
  7838  000ABE  CFDF FFE7          	movff	indf2,indf1
  7839                           
  7840                           ; BSR set to: 0
  7841  000AC2  0100               	movlb	0	; () banked
  7842  000AC4  0100               	movlb	0	; () banked
  7843  000AC6  4B80               	infsnz	packReturnData@data& (0+255),f,b
  7844  000AC8  2B81               	incf	(packReturnData@data+1)& (0+255),f,b
  7845                           
  7846                           ; BSR set to: 0
  7847  000ACA  4A34               	infsnz	packReturnData@dest,f,c
  7848  000ACC  2A35               	incf	packReturnData@dest+1,f,c
  7849  000ACE                     i2l3788:
  7850                           
  7851                           ; BSR set to: 0
  7852  000ACE  5033               	movf	packReturnData@end+1,w,c
  7853  000AD0  1835               	xorwf	packReturnData@dest+1,w,c
  7854  000AD2  E102               	bnz	i2u277_45
  7855  000AD4  5032               	movf	packReturnData@end,w,c
  7856  000AD6  1834               	xorwf	packReturnData@dest,w,c
  7857  000AD8                     i2u277_45:
  7858  000AD8  A4D8               	btfss	status,2,c
  7859  000ADA  D7E9               	goto	i2l3782
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;brain_rover.c: 30: }
  7863                           ;brain_rover.c: 32: dest = msg->payload + payloadLen;
  7864                           
  7865                           ; BSR set to: 0
  7866  000ADC  0E03               	movlw	3
  7867  000ADE  0100               	movlb	0	; () banked
  7868  000AE0  0100               	movlb	0	; () banked
  7869  000AE2  2582               	addwf	packReturnData@payloadLen& (0+255),w,b
  7870  000AE4  6E2F               	movwf	??_packReturnData& (0+255),c
  7871  000AE6  0E00               	movlw	0
  7872  000AE8  0100               	movlb	0	; () banked
  7873  000AEA  0100               	movlb	0	; () banked
  7874  000AEC  2183               	addwfc	(packReturnData@payloadLen+1)& (0+255),w,b
  7875  000AEE  6E30               	movwf	(??_packReturnData+1)& (0+255),c
  7876  000AF0  502F               	movf	??_packReturnData,w,c
  7877  000AF2  0100               	movlb	0	; () banked
  7878  000AF4  0100               	movlb	0	; () banked
  7879  000AF6  2584               	addwf	packReturnData@msg& (0+255),w,b
  7880  000AF8  6E34               	movwf	packReturnData@dest,c
  7881  000AFA  5030               	movf	??_packReturnData+1,w,c
  7882  000AFC  0100               	movlb	0	; () banked
  7883  000AFE  0100               	movlb	0	; () banked
  7884  000B00  2185               	addwfc	(packReturnData@msg+1)& (0+255),w,b
  7885  000B02  6E35               	movwf	packReturnData@dest+1,c
  7886                           
  7887                           ;brain_rover.c: 33: payloadLen = payloadLen + (10 - payloadLen);
  7888  000B04  0100               	movlb	0	; () banked
  7889  000B06  C082  F02F         	movff	packReturnData@payloadLen,??_packReturnData
  7890  000B0A  0100               	movlb	0	; () banked
  7891  000B0C  C083  F030         	movff	packReturnData@payloadLen+1,??_packReturnData+1
  7892  000B10  1E2F               	comf	??_packReturnData,f,c
  7893  000B12  1E30               	comf	??_packReturnData+1,f,c
  7894  000B14  4A2F               	infsnz	??_packReturnData,f,c
  7895  000B16  2A30               	incf	??_packReturnData+1,f,c
  7896  000B18  0100               	movlb	0	; () banked
  7897  000B1A  0100               	movlb	0	; () banked
  7898  000B1C  5182               	movf	packReturnData@payloadLen& (0+255),w,b
  7899  000B1E  262F               	addwf	??_packReturnData,f,c
  7900  000B20  0100               	movlb	0	; () banked
  7901  000B22  0100               	movlb	0	; () banked
  7902  000B24  5183               	movf	(packReturnData@payloadLen+1)& (0+255),w,b
  7903  000B26  2230               	addwfc	??_packReturnData+1,f,c
  7904  000B28  0E0A               	movlw	10
  7905  000B2A  242F               	addwf	??_packReturnData,w,c
  7906  000B2C  0100               	movlb	0	; () banked
  7907  000B2E  0100               	movlb	0	; () banked
  7908  000B30  6F82               	movwf	packReturnData@payloadLen& (0+255),b
  7909  000B32  0E00               	movlw	0
  7910  000B34  2030               	addwfc	??_packReturnData+1,w,c
  7911  000B36  0100               	movlb	0	; () banked
  7912  000B38  6F83               	movwf	(packReturnData@payloadLen+1)& (0+255),b
  7913                           
  7914                           ;brain_rover.c: 34: end = msg->payload + payloadLen;
  7915  000B3A  0E03               	movlw	3
  7916  000B3C  0100               	movlb	0	; () banked
  7917  000B3E  0100               	movlb	0	; () banked
  7918  000B40  2582               	addwf	packReturnData@payloadLen& (0+255),w,b
  7919  000B42  6E2F               	movwf	??_packReturnData& (0+255),c
  7920  000B44  0E00               	movlw	0
  7921  000B46  0100               	movlb	0	; () banked
  7922  000B48  0100               	movlb	0	; () banked
  7923  000B4A  2183               	addwfc	(packReturnData@payloadLen+1)& (0+255),w,b
  7924  000B4C  6E30               	movwf	(??_packReturnData+1)& (0+255),c
  7925  000B4E  502F               	movf	??_packReturnData,w,c
  7926  000B50  0100               	movlb	0	; () banked
  7927  000B52  0100               	movlb	0	; () banked
  7928  000B54  2584               	addwf	packReturnData@msg& (0+255),w,b
  7929  000B56  6E32               	movwf	packReturnData@end,c
  7930  000B58  5030               	movf	??_packReturnData+1,w,c
  7931  000B5A  0100               	movlb	0	; () banked
  7932  000B5C  0100               	movlb	0	; () banked
  7933  000B5E  2185               	addwfc	(packReturnData@msg+1)& (0+255),w,b
  7934  000B60  6E33               	movwf	packReturnData@end+1,c
  7935                           
  7936                           ;brain_rover.c: 35: while(dest != end){
  7937  000B62  D006               	goto	i2l3794
  7938  000B64                     i2l3792:
  7939                           
  7940                           ;brain_rover.c: 36: *dest = (char) 0;
  7941  000B64  C034  FFD9         	movff	packReturnData@dest,fsr2l
  7942  000B68  C035  FFDA         	movff	packReturnData@dest+1,fsr2h
  7943  000B6C  0E00               	movlw	0
  7944  000B6E  6EDF               	movwf	indf2,c
  7945  000B70                     i2l3794:
  7946  000B70  5033               	movf	packReturnData@end+1,w,c
  7947  000B72  1835               	xorwf	packReturnData@dest+1,w,c
  7948  000B74  E102               	bnz	i2u278_45
  7949  000B76  5032               	movf	packReturnData@end,w,c
  7950  000B78  1834               	xorwf	packReturnData@dest,w,c
  7951  000B7A                     i2u278_45:
  7952  000B7A  A4D8               	btfss	status,2,c
  7953  000B7C  D7F3               	goto	i2l3792
  7954                           
  7955                           ;brain_rover.c: 37: }
  7956                           ;brain_rover.c: 38: return 10;
  7957  000B7E  0E00               	movlw	0
  7958  000B80  0100               	movlb	0	; () banked
  7959  000B82  0100               	movlb	0	; () banked
  7960  000B84  6F81               	movwf	(?_packReturnData+1)& (0+255),b
  7961  000B86  0E0A               	movlw	10
  7962  000B88  0100               	movlb	0	; () banked
  7963  000B8A  6F80               	movwf	?_packReturnData& (0+255),b
  7964  000B8C  0012               	return	
  7965  000B8E                     __end_of_packReturnData:
  7966                           	opt stack 0
  7967                           pclatu	equ	0xFFB
  7968                           pclath	equ	0xFFA
  7969                           tblptru	equ	0xFF8
  7970                           tblptrh	equ	0xFF7
  7971                           tblptrl	equ	0xFF6
  7972                           tablat	equ	0xFF5
  7973                           prodh	equ	0xFF4
  7974                           prodl	equ	0xFF3
  7975                           intcon	equ	0xFF2
  7976                           postinc0	equ	0xFEE
  7977                           fsr0h	equ	0xFEA
  7978                           fsr0l	equ	0xFE9
  7979                           wreg	equ	0xFE8
  7980                           indf1	equ	0xFE7
  7981                           fsr1h	equ	0xFE2
  7982                           fsr1l	equ	0xFE1
  7983                           bsr	equ	0xFE0
  7984                           indf2	equ	0xFDF
  7985                           fsr2h	equ	0xFDA
  7986                           fsr2l	equ	0xFD9
  7987                           status	equ	0xFD8
  7988                           
  7989 ;; *************** function _resetDBG *****************
  7990 ;; Defined at:
  7991 ;;		line 26 in file "../src/debug.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  b               1    wreg     unsigned char 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  b               1   46[COMRAM] unsigned char 
  7996 ;; Return value:  Size  Location     Type
  7997 ;;		None               void
  7998 ;; Registers used:
  7999 ;;		wreg, status,2, status,0
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8005 ;;      Params:         0       0       0       0       0
  8006 ;;      Locals:         1       0       0       0       0
  8007 ;;      Temps:          0       0       0       0       0
  8008 ;;      Totals:         1       0       0       0       0
  8009 ;;Total ram usage:        1 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; This function calls:
  8012 ;;		Nothing
  8013 ;; This function is called by:
  8014 ;;		_i2c_int_handler
  8015 ;;		_readNum
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text47
  8020  001A2A                     __ptext47:
  8021                           	opt stack 0
  8022  001A2A                     _resetDBG:
  8023                           	opt stack 18
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;incstack = 0
  8027                           ;resetDBG@b stored from wreg
  8028  001A2A  CFE8 F02F          	movff	wreg,resetDBG@b
  8029                           
  8030                           ;debug.c: 27: switch(b) {
  8031  001A2E  D00A               	goto	i2l3704
  8032  001A30                     i2l378:
  8033                           
  8034                           ;debug.c: 29: LATBbits.LATB0 = 0;
  8035  001A30  908A               	bcf	3978,0,c	;volatile
  8036                           
  8037                           ;debug.c: 30: break;
  8038  001A32  0012               	return	
  8039  001A34                     i2l380:
  8040                           
  8041                           ;debug.c: 32: LATBbits.LATB1 = 0;
  8042  001A34  928A               	bcf	3978,1,c	;volatile
  8043                           
  8044                           ;debug.c: 33: break;
  8045  001A36  0012               	return	
  8046  001A38                     i2l381:
  8047                           
  8048                           ;debug.c: 35: LATBbits.LATB2 = 0;
  8049  001A38  948A               	bcf	3978,2,c	;volatile
  8050                           
  8051                           ;debug.c: 36: break;
  8052  001A3A  0012               	return	
  8053  001A3C                     i2l382:
  8054                           
  8055                           ;debug.c: 38: LATBbits.LATB3 = 0;
  8056  001A3C  968A               	bcf	3978,3,c	;volatile
  8057                           
  8058                           ;debug.c: 39: break;
  8059  001A3E  0012               	return	
  8060  001A40                     i2l383:
  8061                           
  8062                           ;debug.c: 41: LATBbits.LATB4 = 0;
  8063  001A40  988A               	bcf	3978,4,c	;volatile
  8064                           
  8065                           ;debug.c: 42: break;
  8066  001A42  0012               	return	
  8067  001A44                     i2l3704:
  8068  001A44  502F               	movf	resetDBG@b,w,c
  8069                           
  8070                           ; Switch size 1, requested type "space"
  8071                           ; Number of cases is 5, Range of values is 0 to 4
  8072                           ; switch strategies available:
  8073                           ; Name         Instructions Cycles
  8074                           ; simple_byte           16     9 (average)
  8075                           ;	Chosen strategy is simple_byte
  8076  001A46  0A00               	xorlw	0	; case 0
  8077  001A48  B4D8               	btfsc	status,2,c
  8078  001A4A  D7F2               	goto	i2l378
  8079  001A4C  0A01               	xorlw	1	; case 1
  8080  001A4E  B4D8               	btfsc	status,2,c
  8081  001A50  D7F1               	goto	i2l380
  8082  001A52  0A03               	xorlw	3	; case 2
  8083  001A54  B4D8               	btfsc	status,2,c
  8084  001A56  D7F0               	goto	i2l381
  8085  001A58  0A01               	xorlw	1	; case 3
  8086  001A5A  B4D8               	btfsc	status,2,c
  8087  001A5C  D7EF               	goto	i2l382
  8088  001A5E  0A07               	xorlw	7	; case 4
  8089  001A60  A4D8               	btfss	status,2,c
  8090  001A62  0012               	return	
  8091  001A64  D7ED               	goto	i2l383
  8092  001A66                     __end_of_resetDBG:
  8093                           	opt stack 0
  8094                           pclatu	equ	0xFFB
  8095                           pclath	equ	0xFFA
  8096                           tblptru	equ	0xFF8
  8097                           tblptrh	equ	0xFF7
  8098                           tblptrl	equ	0xFF6
  8099                           tablat	equ	0xFF5
  8100                           prodh	equ	0xFF4
  8101                           prodl	equ	0xFF3
  8102                           intcon	equ	0xFF2
  8103                           postinc0	equ	0xFEE
  8104                           fsr0h	equ	0xFEA
  8105                           fsr0l	equ	0xFE9
  8106                           wreg	equ	0xFE8
  8107                           indf1	equ	0xFE7
  8108                           fsr1h	equ	0xFE2
  8109                           fsr1l	equ	0xFE1
  8110                           bsr	equ	0xFE0
  8111                           indf2	equ	0xFDF
  8112                           fsr2h	equ	0xFDA
  8113                           fsr2l	equ	0xFD9
  8114                           status	equ	0xFD8
  8115                           
  8116 ;; *************** function _handle_start *****************
  8117 ;; Defined at:
  8118 ;;		line 78 in file "../src/my_i2c.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  data_read       1    wreg     unsigned char 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  data_read       1   46[COMRAM] unsigned char 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;		None               void
  8125 ;; Registers used:
  8126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8132 ;;      Params:         0       0       0       0       0
  8133 ;;      Locals:         1       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0
  8135 ;;      Totals:         1       0       0       0       0
  8136 ;;Total ram usage:        1 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_i2c_int_handler
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text48
  8146  000FBC                     __ptext48:
  8147                           	opt stack 0
  8148  000FBC                     _handle_start:
  8149                           	opt stack 18
  8150                           
  8151                           ;incstack = 0
  8152                           ;handle_start@data_read stored from wreg
  8153  000FBC  CFE8 F02F          	movff	wreg,handle_start@data_read
  8154                           
  8155                           ;my_i2c.c: 79: ic_ptr->event_count = 1;
  8156  000FC0  0101               	movlb	1	; () banked
  8157  000FC2  EE20 F00B          	lfsr	2,11
  8158  000FC6  0101               	movlb	1	; () banked
  8159  000FC8  5100               	movf	_ic_ptr& (0+255),w,b
  8160  000FCA  26D9               	addwf	fsr2l,f,c
  8161  000FCC  0101               	movlb	1	; () banked
  8162  000FCE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8163  000FD0  22DA               	addwfc	fsr2h,f,c
  8164  000FD2  0E01               	movlw	1
  8165  000FD4  6EDF               	movwf	indf2,c
  8166                           
  8167                           ;my_i2c.c: 80: ic_ptr->buflen = 0;
  8168  000FD6  0101               	movlb	1	; () banked
  8169  000FD8  EE20 F00A          	lfsr	2,10
  8170  000FDC  0101               	movlb	1	; () banked
  8171  000FDE  5100               	movf	_ic_ptr& (0+255),w,b
  8172  000FE0  26D9               	addwf	fsr2l,f,c
  8173  000FE2  0101               	movlb	1	; () banked
  8174  000FE4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8175  000FE6  22DA               	addwfc	fsr2h,f,c
  8176  000FE8  0E00               	movlw	0
  8177  000FEA  6EDF               	movwf	indf2,c
  8178                           
  8179                           ; BSR set to: 1
  8180                           ;my_i2c.c: 82: if (data_read) {
  8181  000FEC  502F               	movf	handle_start@data_read,w,c
  8182  000FEE  B4D8               	btfsc	status,2,c
  8183  000FF0  D03D               	goto	i2l3692
  8184                           
  8185                           ; BSR set to: 1
  8186                           ;my_i2c.c: 83: if (SSPSTATbits.D_A == 1) {
  8187  000FF2  AAC7               	btfss	4039,5,c	;volatile
  8188  000FF4  D021               	goto	i2l252
  8189                           
  8190                           ; BSR set to: 1
  8191                           ;my_i2c.c: 86: ic_ptr->status = 0x5;
  8192  000FF6  0101               	movlb	1	; () banked
  8193  000FF8  EE20 F00C          	lfsr	2,12
  8194  000FFC  0101               	movlb	1	; () banked
  8195  000FFE  5100               	movf	_ic_ptr& (0+255),w,b
  8196  001000  26D9               	addwf	fsr2l,f,c
  8197  001002  0101               	movlb	1	; () banked
  8198  001004  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8199  001006  22DA               	addwfc	fsr2h,f,c
  8200  001008  0E05               	movlw	5
  8201  00100A  6EDF               	movwf	indf2,c
  8202                           
  8203                           ;my_i2c.c: 87: ic_ptr->error_count++;
  8204  00100C  0101               	movlb	1	; () banked
  8205  00100E  EE20 F00E          	lfsr	2,14
  8206  001012  0101               	movlb	1	; () banked
  8207  001014  5100               	movf	_ic_ptr& (0+255),w,b
  8208  001016  26D9               	addwf	fsr2l,f,c
  8209  001018  0101               	movlb	1	; () banked
  8210  00101A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8211  00101C  22DA               	addwfc	fsr2h,f,c
  8212  00101E  2ADF               	incf	indf2,f,c
  8213                           
  8214                           ;my_i2c.c: 88: ic_ptr->error_code = 0x5;
  8215  001020  0101               	movlb	1	; () banked
  8216  001022  EE20 F00D          	lfsr	2,13
  8217  001026  0101               	movlb	1	; () banked
  8218  001028  5100               	movf	_ic_ptr& (0+255),w,b
  8219  00102A  26D9               	addwf	fsr2l,f,c
  8220  00102C  0101               	movlb	1	; () banked
  8221  00102E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8222  001030  22DA               	addwfc	fsr2h,f,c
  8223  001032  0E05               	movlw	5
  8224  001034  6EDF               	movwf	indf2,c
  8225                           
  8226                           ;my_i2c.c: 89: } else {
  8227  001036  0012               	return	
  8228  001038                     i2l252:
  8229                           
  8230                           ; BSR set to: 1
  8231                           ;my_i2c.c: 90: if (SSPSTATbits.R_W == 1) {
  8232  001038  A4C7               	btfss	4039,2,c	;volatile
  8233  00103A  D00C               	goto	i2l3690
  8234                           
  8235                           ; BSR set to: 1
  8236                           ;my_i2c.c: 91: ic_ptr->status = 0x8;
  8237  00103C  0101               	movlb	1	; () banked
  8238  00103E  EE20 F00C          	lfsr	2,12
  8239  001042  0101               	movlb	1	; () banked
  8240  001044  5100               	movf	_ic_ptr& (0+255),w,b
  8241  001046  26D9               	addwf	fsr2l,f,c
  8242  001048  0101               	movlb	1	; () banked
  8243  00104A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8244  00104C  22DA               	addwfc	fsr2h,f,c
  8245  00104E  0E08               	movlw	8
  8246  001050  6EDF               	movwf	indf2,c
  8247                           
  8248                           ;my_i2c.c: 92: } else {
  8249  001052  0012               	return	
  8250  001054                     i2l3690:
  8251                           
  8252                           ; BSR set to: 1
  8253                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  8254  001054  0101               	movlb	1	; () banked
  8255  001056  EE20 F00C          	lfsr	2,12
  8256  00105A  0101               	movlb	1	; () banked
  8257  00105C  5100               	movf	_ic_ptr& (0+255),w,b
  8258  00105E  26D9               	addwf	fsr2l,f,c
  8259  001060  0101               	movlb	1	; () banked
  8260  001062  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8261  001064  22DA               	addwfc	fsr2h,f,c
  8262  001066  0E07               	movlw	7
  8263  001068  6EDF               	movwf	indf2,c
  8264  00106A  0012               	return	
  8265  00106C                     i2l3692:
  8266                           
  8267                           ; BSR set to: 1
  8268                           ;my_i2c.c: 97: ic_ptr->status = 0x6;
  8269  00106C  0101               	movlb	1	; () banked
  8270  00106E  EE20 F00C          	lfsr	2,12
  8271  001072  0101               	movlb	1	; () banked
  8272  001074  5100               	movf	_ic_ptr& (0+255),w,b
  8273  001076  26D9               	addwf	fsr2l,f,c
  8274  001078  0101               	movlb	1	; () banked
  8275  00107A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8276  00107C  22DA               	addwfc	fsr2h,f,c
  8277  00107E  0E06               	movlw	6
  8278  001080  6EDF               	movwf	indf2,c
  8279  001082  0012               	return	
  8280  001084                     __end_of_handle_start:
  8281                           	opt stack 0
  8282                           pclatu	equ	0xFFB
  8283                           pclath	equ	0xFFA
  8284                           tblptru	equ	0xFF8
  8285                           tblptrh	equ	0xFF7
  8286                           tblptrl	equ	0xFF6
  8287                           tablat	equ	0xFF5
  8288                           prodh	equ	0xFF4
  8289                           prodl	equ	0xFF3
  8290                           intcon	equ	0xFF2
  8291                           postinc0	equ	0xFEE
  8292                           fsr0h	equ	0xFEA
  8293                           fsr0l	equ	0xFE9
  8294                           wreg	equ	0xFE8
  8295                           indf1	equ	0xFE7
  8296                           fsr1h	equ	0xFE2
  8297                           fsr1l	equ	0xFE1
  8298                           bsr	equ	0xFE0
  8299                           indf2	equ	0xFDF
  8300                           fsr2h	equ	0xFDA
  8301                           fsr2l	equ	0xFD9
  8302                           status	equ	0xFD8
  8303                           
  8304 ;; *************** function _SleepIfOkay *****************
  8305 ;; Defined at:
  8306 ;;		line 229 in file "../src/messages.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;		None               void
  8313 ;; Registers used:
  8314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8320 ;;      Params:         0       0       0       0       0
  8321 ;;      Locals:         0       0       0       0       0
  8322 ;;      Temps:          0       0       0       0       0
  8323 ;;      Totals:         0       0       0       0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    2
  8327 ;; This function calls:
  8328 ;;		_enter_sleep_mode
  8329 ;;		i2_check_msg
  8330 ;;		i2_in_high_int
  8331 ;;		i2_in_low_int
  8332 ;; This function is called by:
  8333 ;;		_InterruptHandlerHigh
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text49
  8338  00178C                     __ptext49:
  8339                           	opt stack 0
  8340  00178C                     _SleepIfOkay:
  8341                           	opt stack 17
  8342                           
  8343                           ;messages.c: 231: if (MQ_Main_Willing_to_block == 0) {
  8344                           
  8345                           ; BSR set to: 1
  8346                           ;incstack = 0
  8347  00178C  663C               	tstfsz	_MQ_Main_Willing_to_block,c
  8348  00178E  D001               	goto	i2l2494
  8349  001790  0012               	return	
  8350  001792                     i2l2494:
  8351                           
  8352                           ;messages.c: 233: }
  8353                           ;messages.c: 236: if (in_low_int()) {
  8354  001792  EC69  F00D         	call	i2_in_low_int	;wreg free
  8355  001796  5032               	movf	?i2_in_low_int+1,w,c
  8356  001798  1031               	iorwf	?i2_in_low_int,w,c
  8357  00179A  A4D8               	btfss	status,2,c
  8358  00179C  0012               	return	
  8359                           
  8360                           ;messages.c: 238: }
  8361                           ;messages.c: 241: if (!in_high_int()) {
  8362                           
  8363                           ;messages.c: 237: return;
  8364  00179E  EC23  F00E         	call	i2_in_high_int	;wreg free
  8365  0017A2  5030               	movf	?i2_in_high_int+1,w,c
  8366  0017A4  102F               	iorwf	?i2_in_high_int,w,c
  8367  0017A6  B4D8               	btfsc	status,2,c
  8368  0017A8  0012               	return	
  8369                           
  8370                           ;messages.c: 243: }
  8371                           ;messages.c: 248: if (check_msg(&ToMainHigh_MQ)) {
  8372                           
  8373                           ;messages.c: 242: return;
  8374  0017AA  0101               	movlb	1	; () banked
  8375  0017AC  0E01               	movlw	high _ToMainHigh_MQ
  8376  0017AE  6E30               	movwf	i2check_msg@qptr+1,c
  8377  0017B0  0101               	movlb	1	; () banked
  8378  0017B2  0E38               	movlw	low _ToMainHigh_MQ
  8379  0017B4  6E2F               	movwf	i2check_msg@qptr,c
  8380  0017B6  ECE3  F00D         	call	i2_check_msg	;wreg free
  8381  0017BA  0900               	iorlw	0
  8382  0017BC  A4D8               	btfss	status,2,c
  8383  0017BE  0012               	return	
  8384                           
  8385                           ;messages.c: 250: }
  8386                           ;messages.c: 251: if (check_msg(&ToMainLow_MQ)) {
  8387                           
  8388                           ;messages.c: 249: return;
  8389  0017C0  0101               	movlb	1	; () banked
  8390  0017C2  0E01               	movlw	high _ToMainLow_MQ
  8391  0017C4  6E30               	movwf	i2check_msg@qptr+1,c
  8392  0017C6  0101               	movlb	1	; () banked
  8393  0017C8  0E6E               	movlw	low _ToMainLow_MQ
  8394  0017CA  6E2F               	movwf	i2check_msg@qptr,c
  8395  0017CC  ECE3  F00D         	call	i2_check_msg	;wreg free
  8396  0017D0  0900               	iorlw	0
  8397  0017D2  B4D8               	btfsc	status,2,c
  8398                           
  8399                           ;messages.c: 253: }
  8400                           ;messages.c: 254: enter_sleep_mode();
  8401                           
  8402                           ;messages.c: 252: return;
  8403  0017D4  EC3A  F00E         	call	_enter_sleep_mode	;wreg free
  8404  0017D8  0012               	return	
  8405  0017DA                     __end_of_SleepIfOkay:
  8406                           	opt stack 0
  8407                           pclatu	equ	0xFFB
  8408                           pclath	equ	0xFFA
  8409                           tblptru	equ	0xFF8
  8410                           tblptrh	equ	0xFF7
  8411                           tblptrl	equ	0xFF6
  8412                           tablat	equ	0xFF5
  8413                           prodh	equ	0xFF4
  8414                           prodl	equ	0xFF3
  8415                           intcon	equ	0xFF2
  8416                           postinc0	equ	0xFEE
  8417                           fsr0h	equ	0xFEA
  8418                           fsr0l	equ	0xFE9
  8419                           wreg	equ	0xFE8
  8420                           indf1	equ	0xFE7
  8421                           fsr1h	equ	0xFE2
  8422                           fsr1l	equ	0xFE1
  8423                           bsr	equ	0xFE0
  8424                           indf2	equ	0xFDF
  8425                           fsr2h	equ	0xFDA
  8426                           fsr2l	equ	0xFD9
  8427                           status	equ	0xFD8
  8428                           
  8429 ;; *************** function i2_in_low_int *****************
  8430 ;; Defined at:
  8431 ;;		line 31 in file "../src/interrupts.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;		None
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  2   48[COMRAM] int 
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8445 ;;      Params:         2       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0
  8447 ;;      Temps:          0       0       0       0       0
  8448 ;;      Totals:         2       0       0       0       0
  8449 ;;Total ram usage:        2 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    1
  8452 ;; This function calls:
  8453 ;;		i2_in_high_int
  8454 ;; This function is called by:
  8455 ;;		_SleepIfOkay
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text50
  8460  001AD2                     __ptext50:
  8461                           	opt stack 0
  8462  001AD2                     i2_in_low_int:
  8463                           	opt stack 17
  8464                           
  8465                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8466                           
  8467                           ;incstack = 0
  8468  001AD2  ACF2               	btfss	intcon,6,c	;volatile
  8469  001AD4  D005               	goto	i2l3026
  8470                           
  8471                           ;interrupts.c: 33: return (0);
  8472  001AD6  0E00               	movlw	0
  8473  001AD8  6E32               	movwf	?i2_in_low_int+1,c
  8474  001ADA  0E00               	movlw	0
  8475  001ADC  6E31               	movwf	?i2_in_low_int,c
  8476  001ADE  0012               	return	
  8477  001AE0                     i2l3026:
  8478  001AE0  EC23  F00E         	call	i2_in_high_int	;wreg free
  8479  001AE4  5030               	movf	?i2_in_high_int+1,w,c
  8480  001AE6  102F               	iorwf	?i2_in_high_int,w,c
  8481  001AE8  B4D8               	btfsc	status,2,c
  8482  001AEA  D005               	goto	i2l3034
  8483                           
  8484                           ;interrupts.c: 35: return (0);
  8485  001AEC  0E00               	movlw	0
  8486  001AEE  6E32               	movwf	?i2_in_low_int+1,c
  8487  001AF0  0E00               	movlw	0
  8488  001AF2  6E31               	movwf	?i2_in_low_int,c
  8489  001AF4  0012               	return	
  8490  001AF6                     i2l3034:
  8491                           
  8492                           ;interrupts.c: 37: return (1);
  8493  001AF6  0E00               	movlw	0
  8494  001AF8  6E32               	movwf	?i2_in_low_int+1,c
  8495  001AFA  0E01               	movlw	1
  8496  001AFC  6E31               	movwf	?i2_in_low_int,c
  8497  001AFE  0012               	return	
  8498  001B00                     __end_ofi2_in_low_int:
  8499                           	opt stack 0
  8500                           pclatu	equ	0xFFB
  8501                           pclath	equ	0xFFA
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           postinc0	equ	0xFEE
  8510                           fsr0h	equ	0xFEA
  8511                           fsr0l	equ	0xFE9
  8512                           wreg	equ	0xFE8
  8513                           indf1	equ	0xFE7
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           bsr	equ	0xFE0
  8517                           indf2	equ	0xFDF
  8518                           fsr2h	equ	0xFDA
  8519                           fsr2l	equ	0xFD9
  8520                           status	equ	0xFD8
  8521                           
  8522 ;; *************** function i2_in_high_int *****************
  8523 ;; Defined at:
  8524 ;;		line 23 in file "../src/interrupts.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;		None
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  2   46[COMRAM] int 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8538 ;;      Params:         2       0       0       0       0
  8539 ;;      Locals:         0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0
  8541 ;;      Totals:         2       0       0       0       0
  8542 ;;Total ram usage:        2 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_SleepIfOkay
  8548 ;;		i2_in_low_int
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text51
  8553  001C46                     __ptext51:
  8554                           	opt stack 0
  8555  001C46                     i2_in_high_int:
  8556                           	opt stack 17
  8557                           
  8558                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8559                           
  8560                           ;incstack = 0
  8561  001C46  0E00               	movlw	0
  8562  001C48  AEF2               	btfss	intcon,7,c	;volatile
  8563  001C4A  0E01               	movlw	1
  8564  001C4C  6E2F               	movwf	?i2_in_high_int,c
  8565  001C4E  6A30               	clrf	?i2_in_high_int+1,c
  8566  001C50  0012               	return	
  8567  001C52                     __end_ofi2_in_high_int:
  8568                           	opt stack 0
  8569                           pclatu	equ	0xFFB
  8570                           pclath	equ	0xFFA
  8571                           tblptru	equ	0xFF8
  8572                           tblptrh	equ	0xFF7
  8573                           tblptrl	equ	0xFF6
  8574                           tablat	equ	0xFF5
  8575                           prodh	equ	0xFF4
  8576                           prodl	equ	0xFF3
  8577                           intcon	equ	0xFF2
  8578                           postinc0	equ	0xFEE
  8579                           fsr0h	equ	0xFEA
  8580                           fsr0l	equ	0xFE9
  8581                           wreg	equ	0xFE8
  8582                           indf1	equ	0xFE7
  8583                           fsr1h	equ	0xFE2
  8584                           fsr1l	equ	0xFE1
  8585                           bsr	equ	0xFE0
  8586                           indf2	equ	0xFDF
  8587                           fsr2h	equ	0xFDA
  8588                           fsr2l	equ	0xFD9
  8589                           status	equ	0xFD8
  8590                           
  8591 ;; *************** function i2_check_msg *****************
  8592 ;; Defined at:
  8593 ;;		line 223 in file "../src/messages.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8596 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;		None
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      unsigned char 
  8601 ;; Registers used:
  8602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8608 ;;      Params:         2       0       0       0       0
  8609 ;;      Locals:         0       0       0       0       0
  8610 ;;      Temps:          1       0       0       0       0
  8611 ;;      Totals:         3       0       0       0       0
  8612 ;;Total ram usage:        3 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_SleepIfOkay
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text52
  8622  001BC6                     __ptext52:
  8623                           	opt stack 0
  8624  001BC6                     i2_check_msg:
  8625                           	opt stack 18
  8626                           
  8627                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  8628                           
  8629                           ;incstack = 0
  8630  001BC6  EE20 F035          	lfsr	2,53
  8631  001BCA  502F               	movf	i2check_msg@qptr,w,c
  8632  001BCC  26D9               	addwf	fsr2l,f,c
  8633  001BCE  5030               	movf	i2check_msg@qptr+1,w,c
  8634  001BD0  22DA               	addwfc	fsr2h,f,c
  8635  001BD2  50DF               	movf	indf2,w,c
  8636  001BD4  6E31               	movwf	??i2_check_msg& (0+255),c
  8637  001BD6  5031               	movf	??i2_check_msg,w,c
  8638  001BD8  0D0D               	mullw	13
  8639  001BDA  50F3               	movf	prodl,w,c
  8640  001BDC  242F               	addwf	i2check_msg@qptr,w,c
  8641  001BDE  6ED9               	movwf	fsr2l,c
  8642  001BE0  50F4               	movf	prodh,w,c
  8643  001BE2  2030               	addwfc	i2check_msg@qptr+1,w,c
  8644  001BE4  6EDA               	movwf	fsr2h,c
  8645  001BE6  50DF               	movf	indf2,w,c
  8646  001BE8  0012               	return	
  8647  001BEA                     __end_ofi2_check_msg:
  8648                           	opt stack 0
  8649                           pclatu	equ	0xFFB
  8650                           pclath	equ	0xFFA
  8651                           tblptru	equ	0xFF8
  8652                           tblptrh	equ	0xFF7
  8653                           tblptrl	equ	0xFF6
  8654                           tablat	equ	0xFF5
  8655                           prodh	equ	0xFF4
  8656                           prodl	equ	0xFF3
  8657                           intcon	equ	0xFF2
  8658                           postinc0	equ	0xFEE
  8659                           fsr0h	equ	0xFEA
  8660                           fsr0l	equ	0xFE9
  8661                           wreg	equ	0xFE8
  8662                           indf1	equ	0xFE7
  8663                           fsr1h	equ	0xFE2
  8664                           fsr1l	equ	0xFE1
  8665                           bsr	equ	0xFE0
  8666                           indf2	equ	0xFDF
  8667                           fsr2h	equ	0xFDA
  8668                           fsr2l	equ	0xFD9
  8669                           status	equ	0xFD8
  8670                           
  8671 ;; *************** function _enter_sleep_mode *****************
  8672 ;; Defined at:
  8673 ;;		line 203 in file "../src/messages.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;		None               void
  8680 ;; Registers used:
  8681 ;;		None
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8687 ;;      Params:         0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0
  8690 ;;      Totals:         0       0       0       0       0
  8691 ;;Total ram usage:        0 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_SleepIfOkay
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text53
  8701  001C74                     __ptext53:
  8702                           	opt stack 0
  8703  001C74                     _enter_sleep_mode:
  8704                           	opt stack 18
  8705                           
  8706                           ;messages.c: 205: OSCCONbits.IDLEN = 1;
  8707                           
  8708                           ;incstack = 0
  8709  001C74  8ED3               	bsf	4051,7,c	;volatile
  8710  001C76  0003               	sleep		;# 
  8711  001C78  0012               	return	
  8712  001C7A                     __end_of_enter_sleep_mode:
  8713                           	opt stack 0
  8714  0000                     pclatu	equ	0xFFB
  8715                           pclath	equ	0xFFA
  8716                           tblptru	equ	0xFF8
  8717                           tblptrh	equ	0xFF7
  8718                           tblptrl	equ	0xFF6
  8719                           tablat	equ	0xFF5
  8720                           prodh	equ	0xFF4
  8721                           prodl	equ	0xFF3
  8722                           intcon	equ	0xFF2
  8723                           postinc0	equ	0xFEE
  8724                           fsr0h	equ	0xFEA
  8725                           fsr0l	equ	0xFE9
  8726                           wreg	equ	0xFE8
  8727                           indf1	equ	0xFE7
  8728                           fsr1h	equ	0xFE2
  8729                           fsr1l	equ	0xFE1
  8730                           bsr	equ	0xFE0
  8731                           indf2	equ	0xFDF
  8732                           fsr2h	equ	0xFDA
  8733                           fsr2l	equ	0xFD9
  8734                           status	equ	0xFD8
  8735                           pclatu	equ	0xFFB
  8736                           pclath	equ	0xFFA
  8737                           tblptru	equ	0xFF8
  8738                           tblptrh	equ	0xFF7
  8739                           tblptrl	equ	0xFF6
  8740                           tablat	equ	0xFF5
  8741                           prodh	equ	0xFF4
  8742                           prodl	equ	0xFF3
  8743                           intcon	equ	0xFF2
  8744                           postinc0	equ	0xFEE
  8745                           fsr0h	equ	0xFEA
  8746                           fsr0l	equ	0xFE9
  8747                           wreg	equ	0xFE8
  8748                           indf1	equ	0xFE7
  8749                           fsr1h	equ	0xFE2
  8750                           fsr1l	equ	0xFE1
  8751                           bsr	equ	0xFE0
  8752                           indf2	equ	0xFDF
  8753                           fsr2h	equ	0xFDA
  8754                           fsr2l	equ	0xFD9
  8755                           status	equ	0xFD8
  8756                           
  8757                           	psect	rparam
  8758  0000                     pclatu	equ	0xFFB
  8759                           pclath	equ	0xFFA
  8760                           tblptru	equ	0xFF8
  8761                           tblptrh	equ	0xFF7
  8762                           tblptrl	equ	0xFF6
  8763                           tablat	equ	0xFF5
  8764                           prodh	equ	0xFF4
  8765                           prodl	equ	0xFF3
  8766                           intcon	equ	0xFF2
  8767                           postinc0	equ	0xFEE
  8768                           fsr0h	equ	0xFEA
  8769                           fsr0l	equ	0xFE9
  8770                           wreg	equ	0xFE8
  8771                           indf1	equ	0xFE7
  8772                           fsr1h	equ	0xFE2
  8773                           fsr1l	equ	0xFE1
  8774                           bsr	equ	0xFE0
  8775                           indf2	equ	0xFDF
  8776                           fsr2h	equ	0xFDA
  8777                           fsr2l	equ	0xFD9
  8778                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         242
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     55      81
    BANK0           128    121     124
    BANK1           256     53     217
    BANK2           256     59     113
    BANK3           256      0       0

Pointer List with Targets:

    S1502$0$0	PTR struct . size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(BANK0[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK1[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(BANK0[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK1[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    addADDataPoints@data	PTR struct . size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    addDataPoints@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    setBrainReqData@buf	PTR unsigned char  size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    setBrainReqData@tempBrain	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    S1502$adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    unpackRoverMsg@handler.adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    unpackBrainMsg@buf	PTR unsigned char  size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    packADData@out	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), 

    packADData@data	PTR struct . size(2) Largest target is 11
		 -> ADacc(COMRAM[11]), 

    packReturnData@data	PTR unsigned char  size(2) Largest target is 11
		 -> ADacc(COMRAM[11]), 

    packReturnData@end	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff.payload(COMRAM[0]), sendADdata@outBuff(BANK0[100]), 

    packReturnData@dest	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff.payload(COMRAM[0]), sendADdata@outBuff(BANK0[100]), 

    packReturnData@msg	PTR struct . size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> reqADData@buf(BANK0[10]), i2c_int_handler@error_buf(BANK1[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> ADCBuffer(COMRAM[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(BANK0[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK1[3]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _setBrainReqData->_reqADData
    _reqADData->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _packADData->_packReturnData
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_adc_int_handler
    _adc_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _setBrainReqData->_reqADData
    _reqADData->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _sendRequestedData->_sendADdata
    _sendADdata->_packADData
    _packADData->_packReturnData

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _resetAccumulators->_resetADacc
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _addDataPoints->_addADDataPoints
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0    9244
                                             52 BANK1      1     1      0
                                              0 BANK2     59    59      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                      _addDataPoints
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                  _resetAccumulators
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     212
                                             23 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _resetAccumulators                                    0     0      0      68
                         _resetADacc
 ---------------------------------------------------------------------------------
 (2) _resetADacc                                           5     5      0      68
                                             23 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             27 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             23 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                             29 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _addDataPoints                                        6     0      6     870
                                             31 BANK1      6     0      6
                    _addADDataPoints
 ---------------------------------------------------------------------------------
 (2) _addADDataPoints                                      8     4      4     315
                                             23 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2515
                                             47 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2515
                                             47 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2268
                                             33 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     531
                                             23 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2819
                                             29 COMRAM    17    17      0
                    _adc_int_handler
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      3     3      0    2819
                                             26 COMRAM     3     3      0
                            _ReadADC
                  _ToMainLow_sendmsg
                          _addBuffer
 ---------------------------------------------------------------------------------
 (7) _addBuffer                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2767
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    2212
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     646
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    9147
                                              9 BANK1     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0      98
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      98
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    8813
                                            120 BANK0      1     1      0
                                              0 BANK1      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
                           _resetDBG
                  _sendRequestedData
                    _setBrainReqData
                             _setDBG
 ---------------------------------------------------------------------------------
 (12) _setDBG                                              1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _setBrainReqData                                     4     2      2    3168
                                             29 BANK0      4     2      2
                          _reqADData
                     _unpackBrainMsg
 ---------------------------------------------------------------------------------
 (13) _unpackBrainMsg                                      2     0      2     108
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _reqADData                                          12    12      0    2887
                                             54 COMRAM     1     1      0
                                             18 BANK0     11    11      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (14) _ToMainHigh_sendmsg                                  4     1      3    2748
                                             53 COMRAM     1     1      0
                                             15 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (15) i2_send_msg                                         12     6      6    2347
                                             52 COMRAM     1     1      0
                                              4 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           10     4      6     796
                                             46 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (12) _sendRequestedData                                   0     0      0    2220
                         _sendADdata
                       i2_resetADacc
 ---------------------------------------------------------------------------------
 (13) i2_resetADacc                                        5     5      0     186
                                             46 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) _sendADdata                                        102   102      0    2034
                                             18 BANK0    102   102      0
                         _packADData
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) i2_start_i2c_slave_reply                             5     3      2     318
                                             46 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) _packADData                                          8     0      8    1551
                                             10 BANK0      8     0      8
                     _packReturnData
 ---------------------------------------------------------------------------------
 (15) _packReturnData                                     17     7     10    1119
                                             46 COMRAM     7     7      0
                                              0 BANK0     10     0     10
 ---------------------------------------------------------------------------------
 (12) _resetDBG                                            1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _addDataPoints
     _addADDataPoints
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _resetAccumulators
     _resetADacc
   _start_i2c_slave_reply

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _addBuffer

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _resetDBG
     _sendRequestedData
       _sendADdata
         _packADData
           _packReturnData
         i2_start_i2c_slave_reply
       i2_resetADacc
     _setBrainReqData
       _reqADData
         _ToMainHigh_sendmsg
           i2_send_msg
             i2_memcpy
       _unpackBrainMsg
     _setDBG
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     3B      71       8       44.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     35      D9       6       84.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     79      7C       5       96.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     37      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     217       9        0.0%
DATA                 0      0     217       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 10 18:54:40 2014

               packReturnData@end 0032                 packReturnData@msg 0084  
              packReturnData@data 0080                packReturnData@dest 0034  
        _MQ_Main_Willing_to_block 003C                    ?_addDataPoints 01C3  
                     _SSPSTATbits 000FC7                                l91 077A  
                              l83 0738         __end_of_ToMainLow_recvmsg 18EA  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1BA2  
                    __CFG_CP0$OFF 000000              __end_ofi2_resetADacc 196E  
                             l611 12BC                               l612 12BE  
                             l613 12CC                               l614 12CE  
                             l607 129C                               l558 1B4E  
                             l559 1B50                               l840 1BEE  
            __size_of_WriteTimer0 0012                    _FromMainLow_MQ 0102  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 01BB  
         __size_of_packReturnData 0184              packReturnData@maxout 0086  
                            l3170 17EE                              l3402 07F0  
                            l3412 0856                              l3406 0818  
                            l3422 08CC                              l3520 129E  
                            l3512 1288                              l3192 1854  
                            l3440 09BE                              l3416 0892  
                            l3424 08DE                              l3432 095C  
                            l3178 1810                              l3434 0980  
                            l3612 16B0                              l3604 1442  
                            l3444 09FC                              l3428 091E  
                            l3390 0780                              l3632 0BFA  
                            l3618 16D4                              l3570 13F2  
                            l3564 13C6                              l3396 07A4  
                            l3558 139A                              l3582 0D64  
                            l3398 07B4                              l3648 0CC0  
                            l3850 116C                              l3842 1656  
                            l3578 0CE0                              l3838 1636  
                            l3856 11A6          setBrainReqData@tempBrain 009F  
                            _LATB 000F8A                              u2390 08B8  
                            u2917 1BF0                              i1l44 0066  
                 _FromMainHigh_MQ 023B                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 06D4  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 021B                              pclat 000FFA  
                     i2_check_msg 1BC6                              prodh 000FF4  
                            prodl 000FF3             handle_start@data_read 002F  
                            start 00AC                     __CFG_FOSC2$ON 000000  
                ?_adc_int_handler 0001                        i2_send_msg 0DD2  
       ToMainHigh_recvmsg@msgtype 01D3                   __end_of_ReadADC 1C5C  
                  send_msg@length 000D     i2start_i2c_slave_reply@length 0033  
     __size_of_timer0_int_handler 000E                       _Delay1KTCYx 1BEA  
                ?_addADDataPoints 01BB                             ?_main 0001  
                           _T0CON 000FD5                             _ADacc 003F  
                      i1memcpy@d1 0001                             i2l252 1038  
                           i2l502 11DC                             i2l262 051E  
                           i2l504 11E6                             i2l264 0178  
                           i2l505 11F4                             i2l506 1204  
                           i2l370 19FC                             i2l290 0490  
                           i2l282 0358                             i2l371 1A00  
                           i2l380 1A34                             i2l372 1A04  
                           i2l268 01BC                             i2l381 1A38  
                           i2l382 1A3C                             i2l383 1A40  
                           i2l367 19F4                             i2l369 19F8  
                           i2l378 1A30                        i1memcpy@s1 0003  
                           _RCREG 000FAE                     packADData@len 008C  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                   packADData@out 008E                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 002F  
                      i2memcpy@s1 0031                      ?_init_queues 0001  
       __size_of_enter_sleep_mode 0006                   __end_of_in_main 1864  
                           _count 003E        ToMainLow_recvmsg@maxlength 01D7  
                           main@j 0217           __end_of_setBrainReqData 19EE  
           addDataPoints@sensorid 01C3           i2c_configure_slave@addr 01BB  
                  _unpackBrainMsg 1C5C                             tablat 000FF5  
                           status 000FD8                  __end_ofi1_memcpy 19AE  
               unpackBrainMsg@buf 002F                  __end_ofi2_memcpy 173C  
                 __initialization 15BE                   ??_addDataPoints 01C9  
                    __end_of_main 0A0A        __size_of_ToMainLow_recvmsg 0042  
      __size_of_ToMainLow_sendmsg 0026             __size_ofi2_in_low_int 002E  
          packReturnData@sensorID 0088                            ??_main 01D8  
                 send_msg@msgtype 000E                     __activetblptr 000002  
                 send_msg@tlength 0012              __end_of_handle_start 1084  
          __end_of_unpackBrainMsg 1C66                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          i1l3912 199C                            i2l3034 1AF6  
                          i2l3026 1AE0                            i2l3202 1334  
                          i1l3906 1980                            i2l3230 016E  
                          i2l3320 04F2                            i2l3224 0156  
                          i2l3208 133E                            i1l3936 10BC  
                      _OpenTimer0 1B2A                            i2l3330 0540  
                          i2l3250 0220                            i2l3324 0530  
                          i2l3260 025C                    __CFG_WDTEN$OFF 000000  
                          i2l3352 06B4                            i2l3344 060E  
                          i2l3336 05A0                            i2l3248 01F4  
                          i2l3266 0274                            i2l3292 03CC  
                          i2l3268 02B4                            i2l2494 1792  
                          i2l3294 040E                            i2l3704 1A44  
                          i2l3298 0420                            i2l3900 194A  
                          i2l3820 120A                            i2l3822 1228  
                          i2l3690 1054                            i2l3922 172A  
                          i2l3692 106C                            i2l3772 0A48  
                          i2l3916 1706                            i2l3782 0AAE  
                          i2l3870 0E2E                            i2l3792 0B64  
                          i2l3794 0B70                            i2l3698 1A08  
                          i2l3788 0ACE                            i2l3884 0EE4  
                          i2l3888 0F58                            i2l3896 1936  
     __end_of_i2c_configure_slave 1B7C                     ??_SleepIfOkay 0033  
                  packADData@data 008A                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
                       ??_ReadADC 0003     __end_of_start_i2c_slave_reply 0DD2  
                    i2_in_low_int 1AD2                       ?i2_send_msg 0084  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0092  
           __size_ofi2_resetADacc 0042                   _i2c_int_handler 00B0  
                OpenTimer0@config 01BB                            _ic_ptr 0100  
                   main@msgbuffer 020B                  __end_of_init_i2c 15BE  
                          _setDBG 19EE                            _memcpy 168E  
                          clear_0 15C4                            clear_1 15D0  
                          clear_2 15E0                            _uc_ptr 003A  
                          main@ic 021F                  __end_of_recv_msg 0CC4  
     start_i2c_slave_reply@length 01BF                  __end_of_resetDBG 1A66  
                       ??_in_main 01C1                  __end_of_send_msg 112E  
                    __pdataCOMRAM 004F               adc_int_handler@data 001C  
                  _packReturnData 0A0A           i2c_int_handler@i2c_data 01A9  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 01BE  
        ?i2_start_i2c_slave_reply 002F                   ?_unpackBrainMsg 002F  
        ToMainLow_recvmsg@msgtype 01D3                 _sendRequestedData 1C00  
            __size_of_in_high_int 0012                __size_of_addBuffer 0024  
                    reqADData@buf 0092                  ?_setBrainReqData 009D  
                 __CFG_FOSC$HSPLL 000000                ?_sendRequestedData 0001  
                      __accesstop 0080           __end_of__initialization 161C  
      __end_of_ToMainHigh_recvmsg 192C        __end_of_ToMainHigh_sendmsg 1AD2  
                    i2_resetADacc 192C                     addBuffer@data 0001  
             ??_sendRequestedData 0036               __end_of_SleepIfOkay 17DA  
                  __pcstackCOMRAM 0001                      __pidataBANK0 1C7D  
          __size_ofi2_in_high_int 000C                __size_of_check_msg 0036  
                addDataPoints@len 01C7                      _BrainMsgRecv 0038  
          __end_of_packReturnData 0B8E                         ?i1_memcpy 0001  
   __size_of_InterruptHandlerHigh 1374       __end_of_InterruptHandlerLow 00AC  
                       ?i2_memcpy 002F                     _ToMainHigh_MQ 0138  
       __end_of_sendRequestedData 1C14                  _enter_sleep_mode 1C74  
             __size_ofi2_send_msg 00F6                 __end_of_OpenUSART 12FA  
                   check_msg@qptr 01BB           ??_block_on_To_msgqueues 01C1  
            __size_of_init_queues 006E                        __pbssBANK0 00FB  
                      __pbssBANK1 0100                        __pbssBANK2 023B  
                     ?_OpenTimer0 0001                __size_of_reqADData 009A  
              main@to_send_buffer 0200           __end_of_i2c_int_handler 06D4  
                    ?i2_check_msg 002F                 recv_msg@maxlength 01C7  
                 recv_msg@msgtype 01C8                   recv_msg@tlength 01CF  
           __size_of_handle_start 00C8                 __end_of_addBuffer 1BC6  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0031  
                         ?_setDBG 0001                           ?_memcpy 01BB  
                   ??_WriteTimer0 0031                   ?_packReturnData 0080  
 __end_ofi2_start_i2c_slave_reply 0FBC                        ??i1_memcpy 0007  
                      ??i2_memcpy 0035                        _packADData 173C  
      i2start_i2c_slave_reply@msg 002F                       resetADacc@i 01BE  
                   i2_in_high_int 1C46                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 1A9C                         ?_init_i2c 01BB  
                     _SleepIfOkay 178C                         _ADCBuffer 004A  
                         _ReadADC 1C52                         ?_recv_msg 01C5  
                      _in_low_int 17DA                      _handle_start 0FBC  
                       ?_resetDBG 0001                           __Hparam 0000  
                       ?_send_msg 000B                           __Lparam 0000  
      __end_of_timer0_int_handler 1C46                 _resetAccumulators 1C6E  
                 __CFG_STVREN$OFF 000000                           __pcinit 15BE  
               __end_of_reqADData 1268                   __size_of_setDBG 003C  
                 __size_of_memcpy 005E                ?_resetAccumulators 0001  
        __size_of_adc_int_handler 0044                        _init_queue 13FA  
                         __ramtop 0400               __size_of_OpenTimer0 002A  
                         __ptext0 06D4                           __ptext1 0CC4  
                         __ptext2 1C6E                           __ptext3 1626  
                         __ptext4 14E6                           __ptext5 13FA  
                         __ptext6 1554                           __ptext7 1B54  
                         __ptext8 1C66                           __ptext9 137C  
                       _T0CONbits 000FD5                           _in_main 1820  
                      _sendADdata 1474            sendADdata@bytes_packed 00F6  
             reqADData@numSamples 009C                           _sample1 00F9  
                         _sample2 00FA                           _sample3 004F  
                         _sample4 0050                           _sample5 0051  
             ??_resetAccumulators 01C0               __end_of_WriteTimer0 1C38  
      __size_of_sendRequestedData 0014                    ?i2_in_high_int 002F  
        __size_of_addADDataPoints 00A0                    __pintcode_body 12FA  
            end_of_initialization 161C                           setDBG@b 002F  
                         memcpy@d 01C1                           memcpy@n 01BF  
                         memcpy@s 01C3                        ??_init_i2c 01BD  
                      _resetADacc 1626       i2c_int_handler@data_written 01A7  
                   __Lmediumconst 0000                           int_func 12FA  
               sendADdata@outBuff 0092                  ?_i2c_int_handler 0001  
                      ??_recv_msg 01CC                        ??_resetDBG 002F  
                    ??i2_send_msg 0035                        ??_send_msg 0011  
       __end_of_resetAccumulators 1C74                         _RCSTAbits 000FAB  
                         postinc0 000FEE         ToMainHigh_sendmsg@msgtype 008F  
           __end_of_addDataPoints 1B2A                  addADDataPoints@i 01C1  
                ??_unpackBrainMsg 0031                       ?_packADData 008A  
                       _TRISAbits 000F92                         _TRISCbits 000F94  
              __end_ofi2_send_msg 0EC8                         _TXSTAbits 000FAC  
                      main@length 021E                       ?_in_low_int 01BD  
              setBrainReqData@buf 009D  __size_ofi2_start_i2c_slave_reply 00F4  
           _start_i2c_slave_reply 0CC4      __size_of_i2c_configure_slave 0028  
            __size_ofi2_check_msg 0024          __end_of_enter_sleep_mode 1C7A  
              _ToMainHigh_recvmsg 18EA                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 1A9C                         i1memcpy@n 0005  
                       i1memcpy@s 0009                     __pidataCOMRAM 1C7A  
                     ?_init_queue 01BB                         i2memcpy@d 0080  
                     _WriteTimer0 1C26                         i2memcpy@n 0033  
                       i2memcpy@s 0082                    __end_of_setDBG 1A2A  
                  __end_of_memcpy 16EC                 _enable_interrupts 1C66  
            __size_of_Delay1KTCYx 0016                       ?_sendADdata 0001  
             ?_ToMainHigh_recvmsg 01D3                   ??i2_in_high_int 0031  
        i2c_int_handler@data_read 01AC               ?_ToMainHigh_sendmsg 008F  
              ?_enable_interrupts 0001               start_initialization 15BE  
                   ??_in_high_int 01BD                 addDataPoints@data 01C5  
               ??_adc_int_handler 001B          packReturnData@payloadLen 0082  
               __size_ofi1_memcpy 0040                 __size_ofi2_memcpy 0050  
             ??_enable_interrupts 01BB                      ??_OpenTimer0 01BB  
  __size_of_block_on_To_msgqueues 007E     __end_of_block_on_To_msgqueues 13FA  
                       _OpenUSART 1268                       ?_resetADacc 0001  
               ??_addADDataPoints 01BF      __end_of_InterruptHandlerHigh 137C  
                      init_i2c@ic 01BB              ??_ToMainHigh_recvmsg 01D7  
            ??_ToMainHigh_sendmsg 0036          __size_of_setBrainReqData 0040  
      __size_of_resetAccumulators 0006               __size_of_packADData 0050  
                ??_packReturnData 002F          i2c_int_handler@error_buf 01A4  
                     __pdataBANK0 00F9                          ??_setDBG 002F  
       __end_of_enable_interrupts 1C6E                          ??_memcpy 01C1  
              __end_of_OpenTimer0 1B54                         _addBuffer 1BA2  
        i2c_int_handler@msg_ready 01AB                       __pbssCOMRAM 0038  
                   ??_init_queues 01BF                     __pcstackBANK0 0080  
                   __pcstackBANK1 01A4                     __pcstackBANK2 0200  
             __size_of_in_low_int 0046          start_i2c_slave_reply@msg 01BB  
             __CFG_CCP2MX$DEFAULT 000000                   Delay1KTCYx@unit 01BB  
        ToMainLow_sendmsg@msgtype 0017      __size_of_InterruptHandlerLow 0094  
             __end_of_in_high_int 1C26                        ?_OpenUSART 01BB  
                    ?_SleepIfOkay 0001             ToMainLow_recvmsg@data 01D5  
                    _ToMainLow_MQ 016E               __size_of_init_queue 007A  
                        ?_ReadADC 0001                         _check_msg 1A66  
          ?_start_i2c_slave_reply 01BB                 __size_of_init_i2c 006A  
             __size_of_sendADdata 0072                      recv_msg@data 01CA  
                    recv_msg@qmsg 01D1                      recv_msg@slot 01CE  
                    recv_msg@qptr 01C5                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_resetDBG 003C  
               __size_of_send_msg 00AA                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 01D5               __size_of_resetADacc 0068  
      i2c_int_handler@msg_to_send 01AA                          ?_in_main 01BF  
                      ?_addBuffer 0001                 WriteTimer0@timer0 002F  
              _timer0_int_handler 1C38                         _reqADData 11CE  
           ToMainLow_sendmsg@data 0018               ?_timer0_int_handler 0001  
             __end_of_init_queues 1554                          _LATBbits 000F8A  
                 i2check_msg@qptr 002F                        ?_check_msg 01BB  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0EC8                     ?i2_in_low_int 0031  
                        _PIR1bits 000F9E                          i2u277_45 0AD8  
                        i2u278_45 0B7A            ToMainHigh_sendmsg@data 0090  
                        _RCONbits 000FD0                  packADData@maxout 0090  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 0033  
      __size_of_enable_interrupts 0008                 ??_setBrainReqData 0038  
                       main@j_446 0219                        ?_reqADData 0001  
                        i1_memcpy 196E              _InterruptHandlerHigh 0008  
                    ??_packADData 0036                          i2_memcpy 16EC  
                     _in_high_int 1C14                      send_msg@data 000F  
             _i2c_configure_slave 1B54                      send_msg@qmsg 0015  
                    send_msg@slot 0014                      send_msg@qptr 000B  
                     ??_OpenUSART 01BD                     ?i2_resetADacc 0001  
                 OpenUSART@config 01C0                    ??i2_in_low_int 0033  
                    ??_in_low_int 01BF                  __size_of_ReadADC 000A  
                        __Hrparam 0000              ?_i2c_configure_slave 0001  
                        __Lrparam 0000                 ?_enter_sleep_mode 0001  
              __end_of_packADData 178C                   _adc_int_handler 1864  
        __size_of_i2c_int_handler 0624                ??_enter_sleep_mode 002F  
                    ??_init_queue 01BD                      ?_WriteTimer0 002F  
         ToMainLow_sendmsg@length 001A                       ??_addBuffer 0001  
                    ??_sendADdata 0036             ?_InterruptHandlerHigh 0001  
                __size_of_in_main 0044                 i2send_msg@msgtype 0087  
                 _addADDataPoints 112E       ToMainHigh_recvmsg@maxlength 01D7  
               i2send_msg@tlength 008A                       _init_queues 14E6  
              __end_of_in_low_int 1820                          __ptext10 1820  
                        __ptext11 17DA                          __ptext20 168E  
                        __ptext12 1C14                          __ptext21 1268  
                        __ptext13 1A66                          __ptext22 1B2A  
                        __ptext14 1BEA                          __ptext31 1C38  
                        __ptext15 1B00                          __ptext40 16EC  
                        __ptext32 1C26                          __ptext24 1864  
                        __ptext16 112E                          __ptext41 1C00  
                        __ptext33 00B0                          __ptext25 1BA2  
                        __ptext17 18A8                          __ptext50 1AD2  
                        __ptext42 192C                          __ptext34 19EE  
                        __ptext26 1B7C                          __ptext18 18EA  
                        __ptext51 1C46                          __ptext43 1474  
                        __ptext35 19AE                          __ptext27 1084  
                        __ptext19 0B8E                          __ptext52 1BC6  
                        __ptext44 0EC8                          __ptext36 1C5C  
                        __ptext28 196E                          __ptext53 1C74  
                        __ptext45 173C                          __ptext37 11CE  
                        __ptext29 1C52                          __ptext46 0A0A  
                        __ptext38 1A9C                          __ptext47 1A2A  
                        __ptext39 0DD2                          __ptext48 0FBC  
                        __ptext49 178C                         resetDBG@b 002F  
          __size_of_addDataPoints 002A                    ??i2_resetADacc 002F  
       ??i2_start_i2c_slave_reply 0031                      ??_resetADacc 01BB  
                        _init_i2c 1554               addADDataPoints@data 01BB  
                   __size_of_main 0336                     ??i2_check_msg 0031  
                     ??_check_msg 01BD                __end_of_init_queue 1474  
            __size_of_SleepIfOkay 004E                          _recv_msg 0B8E  
                        _resetDBG 1A2A             ??_i2c_configure_slave 01BB  
                        _send_msg 1084                __end_of_sendADdata 14E6  
                  init_queue@qptr 01BB                          _timesreq 00FB  
                   ??_Delay1KTCYx 01BB               _InterruptHandlerLow 0018  
              __end_of_resetADacc 168E                       ??_reqADData 0037  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 01BB                          memcpy@d1 01BB  
                        memcpy@s1 01BD             __end_ofi2_in_high_int 1C52  
           main@data_points_count 021C      i2c_int_handler@overrun_error 01A8  
                i2send_msg@length 0086                          intlevel1 0000  
                        intlevel2 0000              ?_InterruptHandlerLow 0001  
         ??_start_i2c_slave_reply 01BD           __size_of_unpackBrainMsg 000A  
           _block_on_To_msgqueues 137C                     ?_handle_start 0001  
              addADDataPoints@len 01BD       __size_of_ToMainHigh_recvmsg 0042  
         __end_of_adc_int_handler 18A8       __size_of_ToMainHigh_sendmsg 0036  
                      _OSCCONbits 000FD3          ToMainHigh_sendmsg@length 0036  
             __end_ofi2_check_msg 1BEA                     _addDataPoints 1B00  
         __end_of_addADDataPoints 11CE            ??_InterruptHandlerHigh 01AD  
               _ToMainLow_recvmsg 18A8                 _ToMainLow_sendmsg 1B7C  
              main@last_reg_recvd 0216              __end_ofi2_in_low_int 1B00  
              ?_ToMainLow_recvmsg 01D3               __end_of_Delay1KTCYx 1C00  
               ??_i2c_int_handler 00F8                ?_ToMainLow_sendmsg 0017  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                   i2resetADacc@i 0032                    i2send_msg@data 0088  
           ??_InterruptHandlerLow 001E               ??_ToMainLow_recvmsg 01D7  
                  i2send_msg@qmsg 008D                    i2send_msg@slot 008C  
                  i2send_msg@qptr 0084               ??_ToMainLow_sendmsg 001A  
                  ??_handle_start 002F                      _USART_Status 003D  
                 _setBrainReqData 19AE  
