

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Feb 20 05:13:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           	psect	idataCOMRAM
    59  0010E4                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _sample1
    63  0010E4  01                 	db	1
    64                           
    65                           ;initializer for _sample2
    66  0010E5  05                 	db	5
    67                           
    68                           ;initializer for _sample3
    69  0010E6  10                 	db	16
    70                           
    71                           ;initializer for _sample4
    72  0010E7  D8                 	db	216
    73                           
    74                           ;initializer for _sample5
    75  0010E8  FE                 	db	254
    76  0000                     _ADCON0	set	4034
    77  0000                     _ADCON0bits	set	4034
    78  0000                     _ADCON1	set	4033
    79  0000                     _ADCON2	set	4032
    80  0000                     _ADRESH	set	4036
    81  0000                     _ADRESL	set	4035
    82  0000                     _BAUDCONbits	set	4024
    83  0000                     _INTCONbits	set	4082
    84  0000                     _IPR1bits	set	3999
    85  0000                     _LATB	set	3978
    86  0000                     _LATBbits	set	3978
    87  0000                     _OSCCON	set	4051
    88  0000                     _OSCCONbits	set	4051
    89  0000                     _OSCTUNEbits	set	3995
    90  0000                     _PIE1bits	set	3997
    91  0000                     _PIR1bits	set	3998
    92  0000                     _RCONbits	set	4048
    93  0000                     _RCREG	set	4014
    94  0000                     _RCSTA	set	4011
    95  0000                     _RCSTAbits	set	4011
    96  0000                     _SPBRG	set	4015
    97  0000                     _SPBRGH	set	4016
    98  0000                     _SSPADD	set	4040
    99  0000                     _SSPBUF	set	4041
   100  0000                     _SSPCON1	set	4038
   101  0000                     _SSPCON1bits	set	4038
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPCON2bits	set	4037
   104  0000                     _SSPSTAT	set	4039
   105  0000                     _SSPSTATbits	set	4039
   106  0000                     _T0CON	set	4053
   107  0000                     _T0CONbits	set	4053
   108  0000                     _T1CON	set	4045
   109  0000                     _T1CONbits	set	4045
   110  0000                     _TMR0H	set	4055
   111  0000                     _TMR0L	set	4054
   112  0000                     _TMR1H	set	4047
   113  0000                     _TMR1L	set	4046
   114  0000                     _TRISAbits	set	3986
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISCbits	set	3988
   117  0000                     _TXREG	set	4013
   118  0000                     _TXSTA	set	4012
   119  0000                     _TXSTAbits	set	4012
   120                           
   121                           	psect	nvBANK0
   122  0000D3                     __pnvBANK0:
   123                           	opt stack 0
   124  0000D3                     _ic_ptr:
   125                           	opt stack 0
   126  0000D3                     	ds	2
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  000C80                     __pcinit:
   132                           	opt stack 0
   133  000C80                     start_initialization:
   134                           	opt stack 0
   135  000C80                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to BANK2 (54 bytes)
   139  000C80  EE02  F000         	lfsr	0,__pbssBANK2
   140  000C84  0E36               	movlw	54
   141  000C86                     clear_0:
   142  000C86  6AEE               	clrf	postinc0,c
   143  000C88  06E8               	decf	wreg,f,c
   144  000C8A  E1FD               	bnz	clear_0
   145                           
   146                           ; Clear objects allocated to BANK1 (108 bytes)
   147  000C8C  EE01  F089         	lfsr	0,__pbssBANK1
   148  000C90  0E6C               	movlw	108
   149  000C92                     clear_1:
   150  000C92  6AEE               	clrf	postinc0,c
   151  000C94  06E8               	decf	wreg,f,c
   152  000C96  E1FD               	bnz	clear_1
   153                           
   154                           ; Clear objects allocated to BANK0 (54 bytes)
   155  000C98  EE00  F080         	lfsr	0,__pbssBANK0
   156  000C9C  0E36               	movlw	54
   157  000C9E                     clear_2:
   158  000C9E  6AEE               	clrf	postinc0,c
   159  000CA0  06E8               	decf	wreg,f,c
   160  000CA2  E1FD               	bnz	clear_2
   161                           
   162                           ; Clear objects allocated to COMRAM (11 bytes)
   163  000CA4  EE00  F048         	lfsr	0,__pbssCOMRAM
   164  000CA8  0E0B               	movlw	11
   165  000CAA                     clear_3:
   166  000CAA  6AEE               	clrf	postinc0,c
   167  000CAC  06E8               	decf	wreg,f,c
   168  000CAE  E1FD               	bnz	clear_3
   169                           
   170                           ; Initialize objects allocated to COMRAM (5 bytes)
   171                           ; load TBLPTR registers with __pidataCOMRAM
   172  000CB0  0EE4               	movlw	low __pidataCOMRAM
   173  000CB2  6EF6               	movwf	tblptrl,c
   174  000CB4  0E10               	movlw	high __pidataCOMRAM
   175  000CB6  6EF7               	movwf	tblptrh,c
   176  000CB8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   177  000CBA  6EF8               	movwf	tblptru,c
   178  000CBC  EE00  F053         	lfsr	0,__pdataCOMRAM
   179  000CC0  EE10 F005          	lfsr	1,5
   180  000CC4                     copy_data0:
   181  000CC4  0009               	tblrd		*+
   182  000CC6  CFF5 FFEE          	movff	tablat,postinc0
   183  000CCA  50E5               	movf	postdec1,w,c
   184  000CCC  50E1               	movf	fsr1l,w,c
   185  000CCE  E1FA               	bnz	copy_data0
   186  000CD0                     end_of_initialization:
   187                           	opt stack 0
   188  000CD0                     __end_of__initialization:
   189                           	opt stack 0
   190  000CD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  000CD2  6EF8               	movwf	tblptru,c
   192  000CD4  0100               	movlb	0
   193  000CD6  EF5B  F003         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           postdec1	equ	0xFE5
   201                           fsr1l	equ	0xFE1
   202                           
   203                           	psect	bssCOMRAM
   204  000048                     __pbssCOMRAM:
   205                           	opt stack 0
   206  000048                     _uc_ptr:
   207                           	opt stack 0
   208  000048                     	ds	2
   209  00004A                     _MQ_Main_Willing_to_block:
   210                           	opt stack 0
   211  00004A                     	ds	1
   212  00004B                     _USART_Status:
   213                           	opt stack 0
   214  00004B                     	ds	1
   215  00004C                     _count:
   216                           	opt stack 0
   217  00004C                     	ds	1
   218  00004D                     _timesreq:
   219                           	opt stack 0
   220  00004D                     	ds	1
   221  00004E                     _ADCBuffer:
   222                           	opt stack 0
   223  00004E                     	ds	5
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           postdec1	equ	0xFE5
   231                           fsr1l	equ	0xFE1
   232                           
   233                           	psect	dataCOMRAM
   234  000053                     __pdataCOMRAM:
   235                           	opt stack 0
   236  000053                     _sample1:
   237                           	opt stack 0
   238  000053                     	ds	1
   239  000054                     _sample2:
   240                           	opt stack 0
   241  000054                     	ds	1
   242  000055                     _sample3:
   243                           	opt stack 0
   244  000055                     	ds	1
   245  000056                     _sample4:
   246                           	opt stack 0
   247  000056                     	ds	1
   248  000057                     _sample5:
   249                           	opt stack 0
   250  000057                     	ds	1
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           postdec1	equ	0xFE5
   258                           fsr1l	equ	0xFE1
   259                           
   260                           	psect	bssBANK0
   261  000080                     __pbssBANK0:
   262                           	opt stack 0
   263  000080                     _ToMainLow_MQ:
   264                           	opt stack 0
   265  000080                     	ds	54
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275                           	psect	bssBANK1
   276  000189                     __pbssBANK1:
   277                           	opt stack 0
   278  000189                     _FromMainLow_MQ:
   279                           	opt stack 0
   280  000189                     	ds	54
   281  0001BF                     _ToMainHigh_MQ:
   282                           	opt stack 0
   283  0001BF                     	ds	54
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	bssBANK2
   294  000200                     __pbssBANK2:
   295                           	opt stack 0
   296  000200                     _FromMainHigh_MQ:
   297                           	opt stack 0
   298  000200                     	ds	54
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	cstackBANK1
   309  000100                     __pcstackBANK1:
   310                           	opt stack 0
   311  000100                     main@msgbuffer:
   312                           	opt stack 0
   313                           
   314                           ; 11 bytes @ 0x0
   315  000100                     	ds	11
   316  00010B                     main@data_points_count:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0xB
   320  00010B                     	ds	2
   321  00010D                     main@last_reg_recvd:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0xD
   325  00010D                     	ds	1
   326  00010E                     main@length:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0xE
   330  00010E                     	ds	1
   331  00010F                     main@msgtype:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0xF
   335  00010F                     	ds	1
   336  000110                     main@ic:
   337                           	opt stack 0
   338                           
   339                           ; 121 bytes @ 0x10
   340  000110                     	ds	121
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	cstackBANK0
   351  0000B6                     __pcstackBANK0:
   352                           	opt stack 0
   353  0000B6                     ?_in_high_int:
   354                           	opt stack 0
   355  0000B6                     OpenTimer0@config:
   356                           	opt stack 0
   357  0000B6                     OpenTimer1@config:
   358                           	opt stack 0
   359  0000B6                     Delay1KTCYx@unit:
   360                           	opt stack 0
   361  0000B6                     init_queue@qptr:
   362                           	opt stack 0
   363  0000B6                     check_msg@qptr:
   364                           	opt stack 0
   365  0000B6                     init_i2c@ic:
   366                           	opt stack 0
   367  0000B6                     OpenUSART@spbrg:
   368                           	opt stack 0
   369  0000B6                     memcpy@d1:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x0
   373  0000B6                     	ds	2
   374  0000B8                     ??_OpenUSART:
   375  0000B8                     ??_init_queue:
   376  0000B8                     ??_check_msg:
   377  0000B8                     ?_in_low_int:
   378                           	opt stack 0
   379  0000B8                     memcpy@s1:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x2
   383  0000B8                     	ds	1
   384  0000B9                     init_queue@i:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388  0000B9                     	ds	1
   389  0000BA                     ??_init_queues:
   390  0000BA                     ?_in_main:
   391                           	opt stack 0
   392  0000BA                     memcpy@n:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x4
   396  0000BA                     	ds	1
   397  0000BB                     OpenUSART@config:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x5
   401  0000BB                     	ds	1
   402  0000BC                     ??_block_on_To_msgqueues:
   403  0000BC                     memcpy@d:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  0000BC                     	ds	2
   408  0000BE                     memcpy@s:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x8
   412  0000BE                     	ds	2
   413  0000C0                     recv_msg@qptr:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0xA
   417  0000C0                     	ds	2
   418  0000C2                     recv_msg@maxlength:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0xC
   422  0000C2                     	ds	1
   423  0000C3                     recv_msg@msgtype:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0xD
   427  0000C3                     	ds	2
   428  0000C5                     recv_msg@data:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0xF
   432  0000C5                     	ds	2
   433  0000C7                     ??_recv_msg:
   434                           
   435                           ; 0 bytes @ 0x11
   436  0000C7                     	ds	2
   437  0000C9                     recv_msg@slot:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x13
   441  0000C9                     	ds	1
   442  0000CA                     recv_msg@tlength:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x14
   446  0000CA                     	ds	2
   447  0000CC                     recv_msg@qmsg:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x16
   451  0000CC                     	ds	2
   452  0000CE                     ToMainLow_recvmsg@msgtype:
   453                           	opt stack 0
   454  0000CE                     ToMainHigh_recvmsg@msgtype:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x18
   458  0000CE                     	ds	2
   459  0000D0                     ToMainLow_recvmsg@data:
   460                           	opt stack 0
   461  0000D0                     ToMainHigh_recvmsg@data:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x1A
   465  0000D0                     	ds	2
   466  0000D2                     ToMainLow_recvmsg@maxlength:
   467                           	opt stack 0
   468  0000D2                     ToMainHigh_recvmsg@maxlength:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x1C
   472  0000D2                     	ds	1
   473  0000D3                     tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           postdec1	equ	0xFE5
   480                           fsr1l	equ	0xFE1
   481                           
   482                           ; 0 bytes @ 0x1D
   483                           
   484                           	psect	cstackCOMRAM
   485  000001                     __pcstackCOMRAM:
   486                           	opt stack 0
   487  000001                     setDBG@b:
   488                           	opt stack 0
   489  000001                     resetDBG@b:
   490                           	opt stack 0
   491  000001                     WriteUSART@data:
   492                           	opt stack 0
   493  000001                     WriteTimer1@timer1:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x0
   497  000001                     	ds	1
   498  000002                     uart_send@data:
   499                           	opt stack 0
   500  000002                     debugNum@num:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x1
   504  000002                     	ds	1
   505  000003                     WriteTimer1@timer:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x2
   509  000003                     	ds	1
   510  000004                     
   511                           ; 0 bytes @ 0x3
   512  000004                     	ds	1
   513  000005                     ??_InterruptHandlerLow:
   514                           
   515                           ; 0 bytes @ 0x4
   516  000005                     	ds	17
   517  000016                     ?i2_in_high_int:
   518                           	opt stack 0
   519  000016                     handle_start@data_read:
   520                           	opt stack 0
   521  000016                     i2check_msg@qptr:
   522                           	opt stack 0
   523  000016                     i2memcpy@d1:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x15
   527  000016                     	ds	2
   528  000018                     ??i2_check_msg:
   529  000018                     ?i2_in_low_int:
   530                           	opt stack 0
   531  000018                     i2memcpy@s1:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x17
   535  000018                     	ds	2
   536  00001A                     i2memcpy@n:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x19
   540  00001A                     	ds	2
   541  00001C                     i2memcpy@d:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x1B
   545  00001C                     	ds	2
   546  00001E                     i2memcpy@s:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x1D
   550  00001E                     	ds	2
   551  000020                     send_msg@qptr:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x1F
   555  000020                     	ds	2
   556  000022                     send_msg@length:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x21
   560  000022                     	ds	1
   561  000023                     send_msg@msgtype:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x22
   565  000023                     	ds	1
   566  000024                     send_msg@data:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x23
   570  000024                     	ds	2
   571  000026                     ??_send_msg:
   572                           
   573                           ; 0 bytes @ 0x25
   574  000026                     	ds	1
   575  000027                     send_msg@tlength:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x26
   579  000027                     	ds	2
   580  000029                     send_msg@slot:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x28
   584  000029                     	ds	1
   585  00002A                     send_msg@qmsg:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x29
   589  00002A                     	ds	2
   590  00002C                     ToMainHigh_sendmsg@msgtype:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x2B
   594  00002C                     	ds	1
   595  00002D                     ToMainHigh_sendmsg@data:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x2C
   599  00002D                     	ds	2
   600  00002F                     ToMainHigh_sendmsg@length:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x2E
   604  00002F                     	ds	1
   605  000030                     ??_i2c_int_handler:
   606                           
   607                           ; 0 bytes @ 0x2F
   608  000030                     	ds	1
   609  000031                     i2c_int_handler@error_buf:
   610                           	opt stack 0
   611                           
   612                           ; 3 bytes @ 0x30
   613  000031                     	ds	3
   614  000034                     i2c_int_handler@data_written:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x33
   618  000034                     	ds	1
   619  000035                     i2c_int_handler@overrun_error:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x34
   623  000035                     	ds	1
   624  000036                     i2c_int_handler@i2c_data:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x35
   628  000036                     	ds	1
   629  000037                     i2c_int_handler@msg_to_send:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x36
   633  000037                     	ds	1
   634  000038                     i2c_int_handler@msg_ready:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x37
   638  000038                     	ds	1
   639  000039                     i2c_int_handler@data_read:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x38
   643  000039                     	ds	1
   644  00003A                     ??_InterruptHandlerHigh:
   645                           
   646                           ; 0 bytes @ 0x39
   647  00003A                     	ds	14
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           postdec1	equ	0xFE5
   655                           fsr1l	equ	0xFE1
   656                           
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 191 in file "../src/main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  ic            121   16[BANK1 ] struct __i2c_comm
   667 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   668 ;;  to_send_buff   11    0        unsigned char [11]
   669 ;;  data_points_    2   11[BANK1 ] int 
   670 ;;  msgtype         1   15[BANK1 ] unsigned char 
   671 ;;  length          1   14[BANK1 ] char 
   672 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;		None               void
   675 ;; Registers used:
   676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       0     137       0       0
   684 ;;      Temps:          0       0       0       0       0
   685 ;;      Totals:         0       0     137       0       0
   686 ;;Total ram usage:      137 bytes
   687 ;; Hardware stack levels required when called:   13
   688 ;; This function calls:
   689 ;;		_OpenTimer0
   690 ;;		_OpenTimer1
   691 ;;		_OpenUSART
   692 ;;		_ToMainHigh_recvmsg
   693 ;;		_ToMainLow_recvmsg
   694 ;;		_block_on_To_msgqueues
   695 ;;		_enable_interrupts
   696 ;;		_init_i2c
   697 ;;		_init_queues
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text0
   704  0006B6                     __ptext0:
   705                           	opt stack 0
   706  0006B6                     _main:
   707                           	opt stack 18
   708                           
   709                           ;main.c: 193: signed char length;
   710                           ;main.c: 194: unsigned char msgtype;
   711                           ;main.c: 195: unsigned char last_reg_recvd;
   712                           ;main.c: 197: i2c_comm ic;
   713                           ;main.c: 198: unsigned char msgbuffer[10 + 1];
   714                           ;main.c: 199: unsigned char to_send_buffer[10+1];
   715                           ;main.c: 200: int data_points_count = 0;
   716                           
   717                           ;incstack = 0
   718  0006B6  0E00               	movlw	0
   719  0006B8  0101               	movlb	1	; () banked
   720  0006BA  0101               	movlb	1	; () banked
   721  0006BC  6F0C               	movwf	(main@data_points_count+1)& (0+255),b
   722  0006BE  0E00               	movlw	0
   723  0006C0  0101               	movlb	1	; () banked
   724  0006C2  6F0B               	movwf	main@data_points_count& (0+255),b
   725                           
   726                           ;main.c: 212: OSCCON = 0x82;
   727  0006C4  0E82               	movlw	130
   728  0006C6  6ED3               	movwf	4051,c	;volatile
   729                           
   730                           ; BSR set to: 1
   731                           ;main.c: 213: OSCTUNEbits.PLLEN = 0;
   732  0006C8  9C9B               	bcf	3995,6,c	;volatile
   733                           
   734                           ; BSR set to: 1
   735                           ;main.c: 234: init_i2c(&ic);
   736  0006CA  0101               	movlb	1	; () banked
   737  0006CC  0E01               	movlw	high main@ic
   738  0006CE  0100               	movlb	0	; () banked
   739  0006D0  0100               	movlb	0	; () banked
   740  0006D2  6FB7               	movwf	(init_i2c@ic+1)& (0+255),b
   741  0006D4  0101               	movlb	1	; () banked
   742  0006D6  0E10               	movlw	low main@ic
   743  0006D8  0100               	movlb	0	; () banked
   744  0006DA  0100               	movlb	0	; () banked
   745  0006DC  6FB6               	movwf	init_i2c@ic& (0+255),b
   746  0006DE  ECDC  F005         	call	_init_i2c	;wreg free
   747                           
   748                           ;main.c: 240: init_queues();
   749  0006E2  ECA5  F005         	call	_init_queues	;wreg free
   750                           
   751                           ;main.c: 244: TRISB = 0x0;
   752  0006E6  0E00               	movlw	0
   753  0006E8  6E93               	movwf	3987,c	;volatile
   754                           
   755                           ;main.c: 245: LATB = 0x0;
   756  0006EA  0E00               	movlw	0
   757  0006EC  6E8A               	movwf	3978,c	;volatile
   758                           
   759                           ;main.c: 258: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110001);
   760  0006EE  0E91               	movlw	145
   761  0006F0  ECEE  F007         	call	_OpenTimer0
   762                           
   763                           ;main.c: 267: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   764  0006F4  0EF5               	movlw	245
   765  0006F6  ECA0  F007         	call	_OpenTimer1
   766                           
   767                           ;main.c: 274: IPR1bits.TMR1IP = 0;
   768  0006FA  909F               	bcf	3999,0,c	;volatile
   769                           
   770                           ;main.c: 278: IPR1bits.SSPIP = 1;
   771  0006FC  869F               	bsf	3999,3,c	;volatile
   772                           
   773                           ;main.c: 298: PIE1bits.SSPIE = 1;
   774  0006FE  869D               	bsf	3997,3,c	;volatile
   775                           
   776                           ;main.c: 309: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   777                           ;main.c: 310: 0b11111111 & 0b11111111, 155);
   778  000700  0E00               	movlw	0
   779  000702  0100               	movlb	0	; () banked
   780  000704  0100               	movlb	0	; () banked
   781  000706  6FB7               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   782  000708  0E9B               	movlw	155
   783  00070A  0100               	movlb	0	; () banked
   784  00070C  6FB6               	movwf	OpenUSART@spbrg& (0+255),b
   785  00070E  0E7C               	movlw	124
   786  000710  EC9F  F004         	call	_OpenUSART
   787                           
   788                           ;main.c: 311: BAUDCONbits.BRG16 = 1;
   789  000714  86B8               	bsf	4024,3,c	;volatile
   790                           
   791                           ;main.c: 312: TXSTAbits.TXEN = 1;
   792  000716  8AAC               	bsf	4012,5,c	;volatile
   793                           
   794                           ;main.c: 313: RCSTAbits.SPEN = 1;
   795  000718  8EAB               	bsf	4011,7,c	;volatile
   796                           
   797                           ;main.c: 314: RCSTAbits.CREN = 1;
   798  00071A  88AB               	bsf	4011,4,c	;volatile
   799                           
   800                           ;main.c: 320: enable_interrupts();
   801  00071C  EC6B  F008         	call	_enable_interrupts	;wreg free
   802  000720                     l2279:
   803                           
   804                           ;main.c: 332: block_on_To_msgqueues();
   805  000720  EC29  F005         	call	_block_on_To_msgqueues	;wreg free
   806                           
   807                           ;main.c: 339: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   808  000724  0101               	movlb	1	; () banked
   809  000726  0E01               	movlw	high main@msgtype
   810  000728  0100               	movlb	0	; () banked
   811  00072A  0100               	movlb	0	; () banked
   812  00072C  6FCF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   813  00072E  0101               	movlb	1	; () banked
   814  000730  0E0F               	movlw	low main@msgtype
   815  000732  0100               	movlb	0	; () banked
   816  000734  0100               	movlb	0	; () banked
   817  000736  6FCE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   818  000738  0101               	movlb	1	; () banked
   819  00073A  0E01               	movlw	high main@msgbuffer
   820  00073C  0100               	movlb	0	; () banked
   821  00073E  0100               	movlb	0	; () banked
   822  000740  6FD1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   823  000742  0101               	movlb	1	; () banked
   824  000744  0E00               	movlw	low main@msgbuffer
   825  000746  0100               	movlb	0	; () banked
   826  000748  0100               	movlb	0	; () banked
   827  00074A  6FD0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   828  00074C  0E0A               	movlw	10
   829  00074E  EC23  F007         	call	_ToMainHigh_recvmsg
   830  000752  0101               	movlb	1	; () banked
   831  000754  0101               	movlb	1	; () banked
   832  000756  6F0E               	movwf	main@length& (0+255),b
   833                           
   834                           ; BSR set to: 1
   835                           ;main.c: 340: if (length < 0) {
   836  000758  0101               	movlb	1	; () banked
   837  00075A  0101               	movlb	1	; () banked
   838  00075C  BF0E               	btfsc	main@length& (0+255),7,b
   839  00075E  D013               	goto	l2291
   840  000760  D003               	goto	l2289
   841  000762                     l91:
   842                           
   843                           ; BSR set to: 1
   844                           ;main.c: 353: case 41:
   845                           ;main.c: 354: {
   846                           ;main.c: 357: last_reg_recvd = msgbuffer[0];
   847  000762  C100  F10D         	movff	main@msgbuffer,main@last_reg_recvd
   848                           
   849                           ;main.c: 358: break;
   850  000766  D00F               	goto	l2291
   851  000768                     l2289:
   852                           
   853                           ; BSR set to: 1
   854  000768  0101               	movlb	1	; () banked
   855  00076A  0101               	movlb	1	; () banked
   856  00076C  510F               	movf	main@msgtype& (0+255),w,b
   857                           
   858                           ; Switch size 1, requested type "space"
   859                           ; Number of cases is 5, Range of values is 10 to 50
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte           16     9 (average)
   863                           ;	Chosen strategy is simple_byte
   864  00076E  0A0A               	xorlw	10	; case 10
   865  000770  B4D8               	btfsc	status,2,c
   866  000772  D009               	goto	l2291
   867  000774  0A22               	xorlw	34	; case 40
   868  000776  B4D8               	btfsc	status,2,c
   869  000778  D7F4               	goto	l91
   870  00077A  0A01               	xorlw	1	; case 41
   871  00077C  B4D8               	btfsc	status,2,c
   872  00077E  D7F1               	goto	l91
   873  000780  0A03               	xorlw	3	; case 42
   874  000782  A4D8               	btfss	status,2,c
   875  000784  0A18               	xorlw	24	; case 50
   876  000786                     l2291:
   877                           
   878                           ; BSR set to: 1
   879                           ;main.c: 379: }
   880                           ;main.c: 382: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
   881  000786  0101               	movlb	1	; () banked
   882  000788  0E01               	movlw	high main@msgtype
   883  00078A  0100               	movlb	0	; () banked
   884  00078C  0100               	movlb	0	; () banked
   885  00078E  6FCF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
   886  000790  0101               	movlb	1	; () banked
   887  000792  0E0F               	movlw	low main@msgtype
   888  000794  0100               	movlb	0	; () banked
   889  000796  0100               	movlb	0	; () banked
   890  000798  6FCE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
   891  00079A  0101               	movlb	1	; () banked
   892  00079C  0E01               	movlw	high main@msgbuffer
   893  00079E  0100               	movlb	0	; () banked
   894  0007A0  0100               	movlb	0	; () banked
   895  0007A2  6FD1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
   896  0007A4  0101               	movlb	1	; () banked
   897  0007A6  0E00               	movlw	low main@msgbuffer
   898  0007A8  0100               	movlb	0	; () banked
   899  0007AA  0100               	movlb	0	; () banked
   900  0007AC  6FD0               	movwf	ToMainLow_recvmsg@data& (0+255),b
   901  0007AE  0E0A               	movlw	10
   902  0007B0  EC02  F007         	call	_ToMainLow_recvmsg
   903  0007B4  0101               	movlb	1	; () banked
   904  0007B6  0101               	movlb	1	; () banked
   905  0007B8  6F0E               	movwf	main@length& (0+255),b
   906                           
   907                           ; BSR set to: 1
   908                           ;main.c: 383: if (length < 0) {
   909  0007BA  0101               	movlb	1	; () banked
   910  0007BC  0101               	movlb	1	; () banked
   911  0007BE  BF0E               	btfsc	main@length& (0+255),7,b
   912  0007C0  D7AF               	goto	l2279
   913                           
   914                           ; BSR set to: 1
   915                           
   916                           ; BSR set to: 1
   917                           
   918                           ; BSR set to: 1
   919                           ;main.c: 412: };
   920                           ;main.c: 413: };
   921                           
   922                           ; BSR set to: 1
   923                           ;main.c: 409: {
   924                           ;main.c: 411: break;
   925                           
   926                           ;main.c: 396: };
   927                           ;main.c: 408: default:
   928                           
   929                           ; BSR set to: 1
   930                           ;main.c: 391: {
   931                           ;main.c: 395: break;
   932                           
   933                           ;main.c: 390: case 50:
   934                           
   935                           ; BSR set to: 1
   936                           ;main.c: 389: switch (msgtype) {
   937                           
   938                           ; BSR set to: 1
   939                           ;main.c: 387: }
   940                           ;main.c: 388: } else {
   941                           
   942                           ; BSR set to: 1
   943  0007C2  0101               	movlb	1	; () banked
   944  0007C4  0101               	movlb	1	; () banked
   945  0007C6  510F               	movf	main@msgtype& (0+255),w,b
   946                           
   947                           ; Switch size 1, requested type "space"
   948                           ; Number of cases is 1, Range of values is 50 to 50
   949                           ; switch strategies available:
   950                           ; Name         Instructions Cycles
   951                           ; simple_byte            4     3 (average)
   952                           ;	Chosen strategy is simple_byte
   953  0007C8  0A32               	xorlw	50	; case 50
   954  0007CA  D7AA               	goto	l2279
   955  0007CC                     __end_of_main:
   956                           	opt stack 0
   957                           tblptru	equ	0xFF8
   958                           tblptrh	equ	0xFF7
   959                           tblptrl	equ	0xFF6
   960                           tablat	equ	0xFF5
   961                           postinc0	equ	0xFEE
   962                           wreg	equ	0xFE8
   963                           postdec1	equ	0xFE5
   964                           fsr1l	equ	0xFE1
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _init_queues *****************
   968 ;; Defined at:
   969 ;;		line 195 in file "../src/messages.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       1       0       0       0
   986 ;;      Totals:         0       1       0       0       0
   987 ;;Total ram usage:        1 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:   10
   990 ;; This function calls:
   991 ;;		_init_queue
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text1
   998  000B4A                     __ptext1:
   999                           	opt stack 0
  1000  000B4A                     _init_queues:
  1001                           	opt stack 20
  1002                           
  1003                           ;messages.c: 196: MQ_Main_Willing_to_block = 0;
  1004                           
  1005                           ; BSR set to: 1
  1006                           ;incstack = 0
  1007  000B4A  0100               	movlb	0	; () banked
  1008  000B4C  6FBA               	movwf	??_init_queues& (0+255),b
  1009  000B4E  0E00               	movlw	0
  1010  000B50  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1011  000B52  0100               	movlb	0	; () banked
  1012  000B54  51BA               	movf	??_init_queues& (0+255),w,b
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;messages.c: 197: init_queue(&ToMainLow_MQ);
  1016  000B56  0100               	movlb	0	; () banked
  1017  000B58  0E00               	movlw	high _ToMainLow_MQ
  1018  000B5A  0100               	movlb	0	; () banked
  1019  000B5C  0100               	movlb	0	; () banked
  1020  000B5E  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
  1021  000B60  0100               	movlb	0	; () banked
  1022  000B62  0E80               	movlw	low _ToMainLow_MQ
  1023  000B64  0100               	movlb	0	; () banked
  1024  000B66  0100               	movlb	0	; () banked
  1025  000B68  6FB6               	movwf	init_queue@qptr& (0+255),b
  1026  000B6A  EC68  F005         	call	_init_queue	;wreg free
  1027                           
  1028                           ;messages.c: 198: init_queue(&ToMainHigh_MQ);
  1029  000B6E  0101               	movlb	1	; () banked
  1030  000B70  0E01               	movlw	high _ToMainHigh_MQ
  1031  000B72  0100               	movlb	0	; () banked
  1032  000B74  0100               	movlb	0	; () banked
  1033  000B76  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
  1034  000B78  0101               	movlb	1	; () banked
  1035  000B7A  0EBF               	movlw	low _ToMainHigh_MQ
  1036  000B7C  0100               	movlb	0	; () banked
  1037  000B7E  0100               	movlb	0	; () banked
  1038  000B80  6FB6               	movwf	init_queue@qptr& (0+255),b
  1039  000B82  EC68  F005         	call	_init_queue	;wreg free
  1040                           
  1041                           ;messages.c: 199: init_queue(&FromMainLow_MQ);
  1042  000B86  0101               	movlb	1	; () banked
  1043  000B88  0E01               	movlw	high _FromMainLow_MQ
  1044  000B8A  0100               	movlb	0	; () banked
  1045  000B8C  0100               	movlb	0	; () banked
  1046  000B8E  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
  1047  000B90  0101               	movlb	1	; () banked
  1048  000B92  0E89               	movlw	low _FromMainLow_MQ
  1049  000B94  0100               	movlb	0	; () banked
  1050  000B96  0100               	movlb	0	; () banked
  1051  000B98  6FB6               	movwf	init_queue@qptr& (0+255),b
  1052  000B9A  EC68  F005         	call	_init_queue	;wreg free
  1053                           
  1054                           ;messages.c: 200: init_queue(&FromMainHigh_MQ);
  1055  000B9E  0102               	movlb	2	; () banked
  1056  000BA0  0E02               	movlw	high _FromMainHigh_MQ
  1057  000BA2  0100               	movlb	0	; () banked
  1058  000BA4  0100               	movlb	0	; () banked
  1059  000BA6  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
  1060  000BA8  0102               	movlb	2	; () banked
  1061  000BAA  0E00               	movlw	low _FromMainHigh_MQ
  1062  000BAC  0100               	movlb	0	; () banked
  1063  000BAE  0100               	movlb	0	; () banked
  1064  000BB0  6FB6               	movwf	init_queue@qptr& (0+255),b
  1065  000BB2  EC68  F005         	call	_init_queue	;wreg free
  1066  000BB6  0012               	return	
  1067  000BB8                     __end_of_init_queues:
  1068                           	opt stack 0
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postdec1	equ	0xFE5
  1076                           fsr1l	equ	0xFE1
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _init_queue *****************
  1080 ;; Defined at:
  1081 ;;		line 15 in file "../src/messages.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  1084 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  i               1    3[BANK0 ] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;		None               void
  1089 ;; Registers used:
  1090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1096 ;;      Params:         0       2       0       0       0
  1097 ;;      Locals:         0       1       0       0       0
  1098 ;;      Temps:          0       1       0       0       0
  1099 ;;      Totals:         0       4       0       0       0
  1100 ;;Total ram usage:        4 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    9
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_init_queues
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text2
  1111  000AD0                     __ptext2:
  1112                           	opt stack 0
  1113  000AD0                     _init_queue:
  1114                           	opt stack 20
  1115                           
  1116                           ;messages.c: 16: unsigned char i;
  1117                           ;messages.c: 18: qptr->cur_write_ind = 0;
  1118                           
  1119                           ;incstack = 0
  1120  000AD0  0100               	movlb	0	; () banked
  1121  000AD2  EE20 F034          	lfsr	2,52
  1122  000AD6  0100               	movlb	0	; () banked
  1123  000AD8  51B6               	movf	init_queue@qptr& (0+255),w,b
  1124  000ADA  26D9               	addwf	fsr2l,f,c
  1125  000ADC  0100               	movlb	0	; () banked
  1126  000ADE  51B7               	movf	(init_queue@qptr+1)& (0+255),w,b
  1127  000AE0  22DA               	addwfc	fsr2h,f,c
  1128  000AE2  0E00               	movlw	0
  1129  000AE4  6EDF               	movwf	indf2,c
  1130                           
  1131                           ;messages.c: 19: qptr->cur_read_ind = 0;
  1132  000AE6  0100               	movlb	0	; () banked
  1133  000AE8  EE20 F035          	lfsr	2,53
  1134  000AEC  0100               	movlb	0	; () banked
  1135  000AEE  51B6               	movf	init_queue@qptr& (0+255),w,b
  1136  000AF0  26D9               	addwf	fsr2l,f,c
  1137  000AF2  0100               	movlb	0	; () banked
  1138  000AF4  51B7               	movf	(init_queue@qptr+1)& (0+255),w,b
  1139  000AF6  22DA               	addwfc	fsr2h,f,c
  1140  000AF8  0E00               	movlw	0
  1141  000AFA  6EDF               	movwf	indf2,c
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;messages.c: 20: for (i = 0; i < 4; i++) {
  1145  000AFC  0100               	movlb	0	; () banked
  1146  000AFE  6FB8               	movwf	??_init_queue& (0+255),b
  1147  000B00  0E00               	movlw	0
  1148  000B02  0100               	movlb	0	; () banked
  1149  000B04  0100               	movlb	0	; () banked
  1150  000B06  6FB9               	movwf	init_queue@i& (0+255),b
  1151  000B08  0100               	movlb	0	; () banked
  1152  000B0A  51B8               	movf	??_init_queue& (0+255),w,b
  1153                           
  1154                           ; BSR set to: 0
  1155  000B0C  0E03               	movlw	3
  1156  000B0E  0100               	movlb	0	; () banked
  1157  000B10  0100               	movlb	0	; () banked
  1158  000B12  65B9               	cpfsgt	init_queue@i& (0+255),b
  1159  000B14  D001               	goto	l2433
  1160  000B16  0012               	return	
  1161  000B18                     l2433:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;messages.c: 21: qptr->queue[i].full = 0;
  1165  000B18  0100               	movlb	0	; () banked
  1166  000B1A  0100               	movlb	0	; () banked
  1167  000B1C  51B9               	movf	init_queue@i& (0+255),w,b
  1168  000B1E  0D0D               	mullw	13
  1169  000B20  50F3               	movf	prodl,w,c
  1170  000B22  0100               	movlb	0	; () banked
  1171  000B24  0100               	movlb	0	; () banked
  1172  000B26  25B6               	addwf	init_queue@qptr& (0+255),w,b
  1173  000B28  6ED9               	movwf	fsr2l,c
  1174  000B2A  50F4               	movf	prodh,w,c
  1175  000B2C  0100               	movlb	0	; () banked
  1176  000B2E  0100               	movlb	0	; () banked
  1177  000B30  21B7               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1178  000B32  6EDA               	movwf	fsr2h,c
  1179  000B34  0E00               	movlw	0
  1180  000B36  6EDF               	movwf	indf2,c
  1181                           
  1182                           ; BSR set to: 0
  1183  000B38  0100               	movlb	0	; () banked
  1184  000B3A  0100               	movlb	0	; () banked
  1185  000B3C  2BB9               	incf	init_queue@i& (0+255),f,b
  1186                           
  1187                           ; BSR set to: 0
  1188  000B3E  0E03               	movlw	3
  1189  000B40  0100               	movlb	0	; () banked
  1190  000B42  0100               	movlb	0	; () banked
  1191  000B44  65B9               	cpfsgt	init_queue@i& (0+255),b
  1192  000B46  D7E8               	goto	l2433
  1193  000B48  0012               	return	
  1194  000B4A                     __end_of_init_queue:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           prodh	equ	0xFF4
  1201                           prodl	equ	0xFF3
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           postdec1	equ	0xFE5
  1205                           fsr1l	equ	0xFE1
  1206                           indf2	equ	0xFDF
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _init_i2c *****************
  1212 ;; Defined at:
  1213 ;;		line 23 in file "../src/my_i2c.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  ic              2    0[BANK0 ] PTR struct __i2c_comm
  1216 ;;		 -> main@ic(121), 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;		None               void
  1221 ;; Registers used:
  1222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1228 ;;      Params:         0       2       0       0       0
  1229 ;;      Locals:         0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0
  1231 ;;      Totals:         0       2       0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    9
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text3
  1243  000BB8                     __ptext3:
  1244                           	opt stack 0
  1245  000BB8                     _init_i2c:
  1246                           	opt stack 21
  1247                           
  1248                           ;my_i2c.c: 24: ic_ptr = ic;
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;incstack = 0
  1252  000BB8  0100               	movlb	0	; () banked
  1253  000BBA  0100               	movlb	0	; () banked
  1254  000BBC  C0B7  F0D4         	movff	init_i2c@ic+1,_ic_ptr+1
  1255  000BC0  0100               	movlb	0	; () banked
  1256  000BC2  0100               	movlb	0	; () banked
  1257  000BC4  C0B6  F0D3         	movff	init_i2c@ic,_ic_ptr
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;my_i2c.c: 25: ic_ptr->buflen = 0;
  1261  000BC8  0100               	movlb	0	; () banked
  1262  000BCA  EE20 F00A          	lfsr	2,10
  1263  000BCE  0100               	movlb	0	; () banked
  1264  000BD0  51D3               	movf	_ic_ptr& (0+255),w,b
  1265  000BD2  26D9               	addwf	fsr2l,f,c
  1266  000BD4  0100               	movlb	0	; () banked
  1267  000BD6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1268  000BD8  22DA               	addwfc	fsr2h,f,c
  1269  000BDA  0E00               	movlw	0
  1270  000BDC  6EDF               	movwf	indf2,c
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;my_i2c.c: 26: ic_ptr->event_count = 0;
  1274  000BDE  0100               	movlb	0	; () banked
  1275  000BE0  EE20 F00B          	lfsr	2,11
  1276  000BE4  0100               	movlb	0	; () banked
  1277  000BE6  51D3               	movf	_ic_ptr& (0+255),w,b
  1278  000BE8  26D9               	addwf	fsr2l,f,c
  1279  000BEA  0100               	movlb	0	; () banked
  1280  000BEC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1281  000BEE  22DA               	addwfc	fsr2h,f,c
  1282  000BF0  0E00               	movlw	0
  1283  000BF2  6EDF               	movwf	indf2,c
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;my_i2c.c: 27: ic_ptr->status = 0x5;
  1287  000BF4  0100               	movlb	0	; () banked
  1288  000BF6  EE20 F00C          	lfsr	2,12
  1289  000BFA  0100               	movlb	0	; () banked
  1290  000BFC  51D3               	movf	_ic_ptr& (0+255),w,b
  1291  000BFE  26D9               	addwf	fsr2l,f,c
  1292  000C00  0100               	movlb	0	; () banked
  1293  000C02  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1294  000C04  22DA               	addwfc	fsr2h,f,c
  1295  000C06  0E05               	movlw	5
  1296  000C08  6EDF               	movwf	indf2,c
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;my_i2c.c: 28: ic_ptr->error_count = 0;
  1300  000C0A  0100               	movlb	0	; () banked
  1301  000C0C  EE20 F00E          	lfsr	2,14
  1302  000C10  0100               	movlb	0	; () banked
  1303  000C12  51D3               	movf	_ic_ptr& (0+255),w,b
  1304  000C14  26D9               	addwf	fsr2l,f,c
  1305  000C16  0100               	movlb	0	; () banked
  1306  000C18  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1307  000C1A  22DA               	addwfc	fsr2h,f,c
  1308  000C1C  0E00               	movlw	0
  1309  000C1E  6EDF               	movwf	indf2,c
  1310                           
  1311                           ; BSR set to: 0
  1312  000C20  0012               	return	
  1313  000C22                     __end_of_init_i2c:
  1314                           	opt stack 0
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1l	equ	0xFE1
  1325                           indf2	equ	0xFDF
  1326                           fsr2h	equ	0xFDA
  1327                           fsr2l	equ	0xFD9
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function _enable_interrupts *****************
  1331 ;; Defined at:
  1332 ;;		line 16 in file "../src/interrupts.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;		None               void
  1339 ;; Registers used:
  1340 ;;		None
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0
  1349 ;;      Totals:         0       0       0       0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    9
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text4
  1361  0010D6                     __ptext4:
  1362                           	opt stack 0
  1363  0010D6                     _enable_interrupts:
  1364                           	opt stack 21
  1365                           
  1366                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;incstack = 0
  1370  0010D6  8ED0               	bsf	4048,7,c	;volatile
  1371                           
  1372                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  1373  0010D8  8EF2               	bsf	intcon,7,c	;volatile
  1374                           
  1375                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  1376  0010DA  8CF2               	bsf	intcon,6,c	;volatile
  1377  0010DC  0012               	return	
  1378  0010DE                     __end_of_enable_interrupts:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           prodh	equ	0xFF4
  1385                           prodl	equ	0xFF3
  1386                           intcon	equ	0xFF2
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           postdec1	equ	0xFE5
  1390                           fsr1l	equ	0xFE1
  1391                           indf2	equ	0xFDF
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _block_on_To_msgqueues *****************
  1397 ;; Defined at:
  1398 ;;		line 259 in file "../src/messages.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;		None               void
  1405 ;; Registers used:
  1406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          0       1       0       0       0
  1415 ;;      Totals:         0       1       0       0       0
  1416 ;;Total ram usage:        1 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:   12
  1419 ;; This function calls:
  1420 ;;		_Delay1KTCYx
  1421 ;;		_check_msg
  1422 ;;		_in_main
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text5
  1429  000A52                     __ptext5:
  1430                           	opt stack 0
  1431  000A52                     _block_on_To_msgqueues:
  1432                           	opt stack 18
  1433                           
  1434                           ;messages.c: 260: if (!in_main()) {
  1435                           
  1436                           ;incstack = 0
  1437  000A52  ECE0  F006         	call	_in_main	;wreg free
  1438  000A56  0100               	movlb	0	; () banked
  1439  000A58  0100               	movlb	0	; () banked
  1440  000A5A  51BB               	movf	(?_in_main+1)& (0+255),w,b
  1441  000A5C  0100               	movlb	0	; () banked
  1442  000A5E  11BA               	iorwf	?_in_main& (0+255),w,b
  1443  000A60  B4D8               	btfsc	status,2,c
  1444  000A62  0012               	return	
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;messages.c: 262: }
  1448                           ;messages.c: 264: MQ_Main_Willing_to_block = 1;
  1449                           
  1450                           ; BSR set to: 0
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;messages.c: 261: return;
  1454  000A64  0100               	movlb	0	; () banked
  1455  000A66  6FBC               	movwf	??_block_on_To_msgqueues& (0+255),b
  1456  000A68  0E01               	movlw	1
  1457  000A6A  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1458  000A6C  0100               	movlb	0	; () banked
  1459  000A6E  51BC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1460  000A70                     l2403:
  1461                           
  1462                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  1463  000A70  0101               	movlb	1	; () banked
  1464  000A72  0E01               	movlw	high _ToMainHigh_MQ
  1465  000A74  0100               	movlb	0	; () banked
  1466  000A76  0100               	movlb	0	; () banked
  1467  000A78  6FB7               	movwf	(check_msg@qptr+1)& (0+255),b
  1468  000A7A  0101               	movlb	1	; () banked
  1469  000A7C  0EBF               	movlw	low _ToMainHigh_MQ
  1470  000A7E  0100               	movlb	0	; () banked
  1471  000A80  0100               	movlb	0	; () banked
  1472  000A82  6FB6               	movwf	check_msg@qptr& (0+255),b
  1473  000A84  ECBC  F007         	call	_check_msg	;wreg free
  1474  000A88  0900               	iorlw	0
  1475  000A8A  B4D8               	btfsc	status,2,c
  1476  000A8C  D007               	goto	l2409
  1477                           
  1478                           ;messages.c: 267: MQ_Main_Willing_to_block = 0;
  1479  000A8E  0100               	movlb	0	; () banked
  1480  000A90  6FBC               	movwf	??_block_on_To_msgqueues& (0+255),b
  1481  000A92  0E00               	movlw	0
  1482  000A94  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1483  000A96  0100               	movlb	0	; () banked
  1484  000A98  51BC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1485  000A9A  0012               	return	
  1486  000A9C                     l2409:
  1487                           
  1488                           ;messages.c: 272: }
  1489                           ;messages.c: 273: if (check_msg(&ToMainLow_MQ)) {
  1490  000A9C  0100               	movlb	0	; () banked
  1491  000A9E  0E00               	movlw	high _ToMainLow_MQ
  1492  000AA0  0100               	movlb	0	; () banked
  1493  000AA2  0100               	movlb	0	; () banked
  1494  000AA4  6FB7               	movwf	(check_msg@qptr+1)& (0+255),b
  1495  000AA6  0100               	movlb	0	; () banked
  1496  000AA8  0E80               	movlw	low _ToMainLow_MQ
  1497  000AAA  0100               	movlb	0	; () banked
  1498  000AAC  0100               	movlb	0	; () banked
  1499  000AAE  6FB6               	movwf	check_msg@qptr& (0+255),b
  1500  000AB0  ECBC  F007         	call	_check_msg	;wreg free
  1501  000AB4  0900               	iorlw	0
  1502  000AB6  B4D8               	btfsc	status,2,c
  1503  000AB8  D007               	goto	l2415
  1504                           
  1505                           ;messages.c: 274: MQ_Main_Willing_to_block = 0;
  1506  000ABA  0100               	movlb	0	; () banked
  1507  000ABC  6FBC               	movwf	??_block_on_To_msgqueues& (0+255),b
  1508  000ABE  0E00               	movlw	0
  1509  000AC0  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1510  000AC2  0100               	movlb	0	; () banked
  1511  000AC4  51BC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1512  000AC6  0012               	return	
  1513  000AC8                     l2415:
  1514                           
  1515                           ;messages.c: 279: }
  1516                           ;messages.c: 280: Delay1KTCYx(10);
  1517  000AC8  0E0A               	movlw	10
  1518  000ACA  EC38  F008         	call	_Delay1KTCYx
  1519  000ACE  D7D0               	goto	l2403
  1520  000AD0                     __end_of_block_on_To_msgqueues:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           prodh	equ	0xFF4
  1527                           prodl	equ	0xFF3
  1528                           intcon	equ	0xFF2
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           postdec1	equ	0xFE5
  1532                           fsr1l	equ	0xFE1
  1533                           indf2	equ	0xFDF
  1534                           fsr2h	equ	0xFDA
  1535                           fsr2l	equ	0xFD9
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _in_main *****************
  1539 ;; Defined at:
  1540 ;;		line 42 in file "../src/interrupts.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    4[BANK0 ] int 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1554 ;;      Params:         0       2       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         0       2       0       0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:   11
  1561 ;; This function calls:
  1562 ;;		_in_high_int
  1563 ;;		_in_low_int
  1564 ;; This function is called by:
  1565 ;;		_block_on_To_msgqueues
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text6
  1570  000DC0                     __ptext6:
  1571                           	opt stack 0
  1572  000DC0                     _in_main:
  1573                           	opt stack 18
  1574                           
  1575                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  1576                           
  1577                           ;incstack = 0
  1578  000DC0  ECBD  F006         	call	_in_low_int	;wreg free
  1579  000DC4  0100               	movlb	0	; () banked
  1580  000DC6  0100               	movlb	0	; () banked
  1581  000DC8  51B9               	movf	(?_in_low_int+1)& (0+255),w,b
  1582  000DCA  0100               	movlb	0	; () banked
  1583  000DCC  11B8               	iorwf	?_in_low_int& (0+255),w,b
  1584  000DCE  A4D8               	btfss	status,2,c
  1585  000DD0  D011               	goto	l2069
  1586                           
  1587                           ; BSR set to: 0
  1588  000DD2  EC4D  F008         	call	_in_high_int	;wreg free
  1589  000DD6  0100               	movlb	0	; () banked
  1590  000DD8  0100               	movlb	0	; () banked
  1591  000DDA  51B7               	movf	(?_in_high_int+1)& (0+255),w,b
  1592  000DDC  0100               	movlb	0	; () banked
  1593  000DDE  11B6               	iorwf	?_in_high_int& (0+255),w,b
  1594  000DE0  A4D8               	btfss	status,2,c
  1595  000DE2  D008               	goto	l2069
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;interrupts.c: 44: return (1);
  1599  000DE4  0E00               	movlw	0
  1600  000DE6  0100               	movlb	0	; () banked
  1601  000DE8  0100               	movlb	0	; () banked
  1602  000DEA  6FBB               	movwf	(?_in_main+1)& (0+255),b
  1603  000DEC  0E01               	movlw	1
  1604  000DEE  0100               	movlb	0	; () banked
  1605  000DF0  6FBA               	movwf	?_in_main& (0+255),b
  1606  000DF2  0012               	return	
  1607  000DF4                     l2069:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;interrupts.c: 46: return (0);
  1611  000DF4  0E00               	movlw	0
  1612  000DF6  0100               	movlb	0	; () banked
  1613  000DF8  0100               	movlb	0	; () banked
  1614  000DFA  6FBB               	movwf	(?_in_main+1)& (0+255),b
  1615  000DFC  0E00               	movlw	0
  1616  000DFE  0100               	movlb	0	; () banked
  1617  000E00  6FBA               	movwf	?_in_main& (0+255),b
  1618  000E02  0012               	return	
  1619  000E04                     __end_of_in_main:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodh	equ	0xFF4
  1626                           prodl	equ	0xFF3
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           postdec1	equ	0xFE5
  1631                           fsr1l	equ	0xFE1
  1632                           indf2	equ	0xFDF
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _in_low_int *****************
  1638 ;; Defined at:
  1639 ;;		line 32 in file "../src/interrupts.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  2    2[BANK0 ] int 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1653 ;;      Params:         0       2       0       0       0
  1654 ;;      Locals:         0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0
  1656 ;;      Totals:         0       2       0       0       0
  1657 ;;Total ram usage:        2 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:   10
  1660 ;; This function calls:
  1661 ;;		_in_high_int
  1662 ;; This function is called by:
  1663 ;;		_in_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text7
  1668  000D7A                     __ptext7:
  1669                           	opt stack 0
  1670  000D7A                     _in_low_int:
  1671                           	opt stack 18
  1672                           
  1673                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;incstack = 0
  1677  000D7A  ACF2               	btfss	intcon,6,c	;volatile
  1678  000D7C  D008               	goto	l2047
  1679                           
  1680                           ;interrupts.c: 34: return (0);
  1681  000D7E  0E00               	movlw	0
  1682  000D80  0100               	movlb	0	; () banked
  1683  000D82  0100               	movlb	0	; () banked
  1684  000D84  6FB9               	movwf	(?_in_low_int+1)& (0+255),b
  1685  000D86  0E00               	movlw	0
  1686  000D88  0100               	movlb	0	; () banked
  1687  000D8A  6FB8               	movwf	?_in_low_int& (0+255),b
  1688  000D8C  0012               	return	
  1689  000D8E                     l2047:
  1690  000D8E  EC4D  F008         	call	_in_high_int	;wreg free
  1691  000D92  0100               	movlb	0	; () banked
  1692  000D94  0100               	movlb	0	; () banked
  1693  000D96  51B7               	movf	(?_in_high_int+1)& (0+255),w,b
  1694  000D98  0100               	movlb	0	; () banked
  1695  000D9A  11B6               	iorwf	?_in_high_int& (0+255),w,b
  1696  000D9C  B4D8               	btfsc	status,2,c
  1697  000D9E  D008               	goto	l2055
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;interrupts.c: 36: return (0);
  1701  000DA0  0E00               	movlw	0
  1702  000DA2  0100               	movlb	0	; () banked
  1703  000DA4  0100               	movlb	0	; () banked
  1704  000DA6  6FB9               	movwf	(?_in_low_int+1)& (0+255),b
  1705  000DA8  0E00               	movlw	0
  1706  000DAA  0100               	movlb	0	; () banked
  1707  000DAC  6FB8               	movwf	?_in_low_int& (0+255),b
  1708  000DAE  0012               	return	
  1709  000DB0                     l2055:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;interrupts.c: 38: return (1);
  1713  000DB0  0E00               	movlw	0
  1714  000DB2  0100               	movlb	0	; () banked
  1715  000DB4  0100               	movlb	0	; () banked
  1716  000DB6  6FB9               	movwf	(?_in_low_int+1)& (0+255),b
  1717  000DB8  0E01               	movlw	1
  1718  000DBA  0100               	movlb	0	; () banked
  1719  000DBC  6FB8               	movwf	?_in_low_int& (0+255),b
  1720  000DBE  0012               	return	
  1721  000DC0                     __end_of_in_low_int:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           postdec1	equ	0xFE5
  1733                           fsr1l	equ	0xFE1
  1734                           indf2	equ	0xFDF
  1735                           fsr2h	equ	0xFDA
  1736                           fsr2l	equ	0xFD9
  1737                           status	equ	0xFD8
  1738                           
  1739 ;; *************** function _in_high_int *****************
  1740 ;; Defined at:
  1741 ;;		line 24 in file "../src/interrupts.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  2    0[BANK0 ] int 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1755 ;;      Params:         0       2       0       0       0
  1756 ;;      Locals:         0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0
  1758 ;;      Totals:         0       2       0       0       0
  1759 ;;Total ram usage:        2 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; Hardware stack levels required when called:    9
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_in_low_int
  1766 ;;		_in_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text8
  1771  00109A                     __ptext8:
  1772                           	opt stack 0
  1773  00109A                     _in_high_int:
  1774                           	opt stack 18
  1775                           
  1776                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;incstack = 0
  1780  00109A  0E00               	movlw	0
  1781  00109C  AEF2               	btfss	intcon,7,c	;volatile
  1782  00109E  0E01               	movlw	1
  1783  0010A0  0100               	movlb	0	; () banked
  1784  0010A2  0100               	movlb	0	; () banked
  1785  0010A4  6FB6               	movwf	?_in_high_int& (0+255),b
  1786  0010A6  0100               	movlb	0	; () banked
  1787  0010A8  6BB7               	clrf	(?_in_high_int+1)& (0+255),b
  1788  0010AA  0012               	return	
  1789  0010AC                     __end_of_in_high_int:
  1790                           	opt stack 0
  1791                           tblptru	equ	0xFF8
  1792                           tblptrh	equ	0xFF7
  1793                           tblptrl	equ	0xFF6
  1794                           tablat	equ	0xFF5
  1795                           prodh	equ	0xFF4
  1796                           prodl	equ	0xFF3
  1797                           intcon	equ	0xFF2
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1l	equ	0xFE1
  1802                           indf2	equ	0xFDF
  1803                           fsr2h	equ	0xFDA
  1804                           fsr2l	equ	0xFD9
  1805                           status	equ	0xFD8
  1806                           
  1807 ;; *************** function _check_msg *****************
  1808 ;; Defined at:
  1809 ;;		line 223 in file "../src/messages.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  1812 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      unsigned char 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1824 ;;      Params:         0       2       0       0       0
  1825 ;;      Locals:         0       0       0       0       0
  1826 ;;      Temps:          0       1       0       0       0
  1827 ;;      Totals:         0       3       0       0       0
  1828 ;;Total ram usage:        3 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    9
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_block_on_To_msgqueues
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text9
  1839  000F78                     __ptext9:
  1840                           	opt stack 0
  1841  000F78                     _check_msg:
  1842                           	opt stack 20
  1843                           
  1844                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;incstack = 0
  1848  000F78  0100               	movlb	0	; () banked
  1849  000F7A  EE20 F035          	lfsr	2,53
  1850  000F7E  0100               	movlb	0	; () banked
  1851  000F80  51B6               	movf	check_msg@qptr& (0+255),w,b
  1852  000F82  26D9               	addwf	fsr2l,f,c
  1853  000F84  0100               	movlb	0	; () banked
  1854  000F86  51B7               	movf	(check_msg@qptr+1)& (0+255),w,b
  1855  000F88  22DA               	addwfc	fsr2h,f,c
  1856  000F8A  50DF               	movf	indf2,w,c
  1857  000F8C  0100               	movlb	0	; () banked
  1858  000F8E  6FB8               	movwf	??_check_msg& (0+255),b
  1859  000F90  0100               	movlb	0	; () banked
  1860  000F92  51B8               	movf	??_check_msg& (0+255),w,b
  1861  000F94  0D0D               	mullw	13
  1862  000F96  50F3               	movf	prodl,w,c
  1863  000F98  0100               	movlb	0	; () banked
  1864  000F9A  0100               	movlb	0	; () banked
  1865  000F9C  25B6               	addwf	check_msg@qptr& (0+255),w,b
  1866  000F9E  6ED9               	movwf	fsr2l,c
  1867  000FA0  50F4               	movf	prodh,w,c
  1868  000FA2  0100               	movlb	0	; () banked
  1869  000FA4  0100               	movlb	0	; () banked
  1870  000FA6  21B7               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  1871  000FA8  6EDA               	movwf	fsr2h,c
  1872  000FAA  50DF               	movf	indf2,w,c
  1873  000FAC  0012               	return	
  1874  000FAE                     __end_of_check_msg:
  1875                           	opt stack 0
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           prodh	equ	0xFF4
  1881                           prodl	equ	0xFF3
  1882                           intcon	equ	0xFF2
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postdec1	equ	0xFE5
  1886                           fsr1l	equ	0xFE1
  1887                           indf2	equ	0xFDF
  1888                           fsr2h	equ	0xFDA
  1889                           fsr2l	equ	0xFD9
  1890                           status	equ	0xFD8
  1891                           
  1892 ;; *************** function _Delay1KTCYx *****************
  1893 ;; Defined at:
  1894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  unit            1    wreg     unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  unit            1    0[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;		None               void
  1901 ;; Registers used:
  1902 ;;		wreg
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1908 ;;      Params:         0       0       0       0       0
  1909 ;;      Locals:         0       1       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         0       1       0       0       0
  1912 ;;Total ram usage:        1 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    9
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_block_on_To_msgqueues
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text10
  1923  001070                     __ptext10:
  1924                           	opt stack 0
  1925  001070                     _Delay1KTCYx:
  1926                           	opt stack 20
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;incstack = 0
  1930                           ;Delay1KTCYx@unit stored from wreg
  1931  001070  CFE8 F0B6          	movff	wreg,Delay1KTCYx@unit
  1932  001074                     l795:
  1933  001074  0EFA               	movlw	250
  1934  001076                     u1677:
  1935  001076  F000               	nop	
  1936  001078  2EE8               	decfsz	wreg,f,c
  1937  00107A  D7FD               	goto	u1677
  1938  00107C  0100               	movlb	0	; () banked
  1939  00107E  0100               	movlb	0	; () banked
  1940  001080  2FB6               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  1941  001082  D7F8               	goto	l795
  1942  001084  0012               	return	
  1943  001086                     __end_of_Delay1KTCYx:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           postdec1	equ	0xFE5
  1955                           fsr1l	equ	0xFE1
  1956                           indf2	equ	0xFDF
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function _ToMainLow_recvmsg *****************
  1962 ;; Defined at:
  1963 ;;		line 113 in file "../src/messages.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  maxlength       1    wreg     unsigned char 
  1966 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  1967 ;;		 -> main@msgtype(1), 
  1968 ;;  data            2   26[BANK0 ] PTR void 
  1969 ;;		 -> main@msgbuffer(11), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  maxlength       1   28[BANK0 ] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      char 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1981 ;;      Params:         0       4       0       0       0
  1982 ;;      Locals:         0       1       0       0       0
  1983 ;;      Temps:          0       0       0       0       0
  1984 ;;      Totals:         0       5       0       0       0
  1985 ;;Total ram usage:        5 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:   11
  1988 ;; This function calls:
  1989 ;;		_recv_msg
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text11
  1996  000E04                     __ptext11:
  1997                           	opt stack 0
  1998  000E04                     _ToMainLow_recvmsg:
  1999                           	opt stack 19
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;incstack = 0
  2003                           ;ToMainLow_recvmsg@maxlength stored from wreg
  2004  000E04  CFE8 F0D2          	movff	wreg,ToMainLow_recvmsg@maxlength
  2005                           
  2006                           ;messages.c: 119: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  2007  000E08  0100               	movlb	0	; () banked
  2008  000E0A  0E00               	movlw	high _ToMainLow_MQ
  2009  000E0C  0100               	movlb	0	; () banked
  2010  000E0E  0100               	movlb	0	; () banked
  2011  000E10  6FC1               	movwf	(recv_msg@qptr+1)& (0+255),b
  2012  000E12  0100               	movlb	0	; () banked
  2013  000E14  0E80               	movlw	low _ToMainLow_MQ
  2014  000E16  0100               	movlb	0	; () banked
  2015  000E18  0100               	movlb	0	; () banked
  2016  000E1A  6FC0               	movwf	recv_msg@qptr& (0+255),b
  2017  000E1C  C0D2  F0C2         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  2018  000E20  0100               	movlb	0	; () banked
  2019  000E22  0100               	movlb	0	; () banked
  2020  000E24  C0CF  F0C4         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  2021  000E28  0100               	movlb	0	; () banked
  2022  000E2A  0100               	movlb	0	; () banked
  2023  000E2C  C0CE  F0C3         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  2024  000E30  0100               	movlb	0	; () banked
  2025  000E32  0100               	movlb	0	; () banked
  2026  000E34  C0D1  F0C6         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  2027  000E38  0100               	movlb	0	; () banked
  2028  000E3A  0100               	movlb	0	; () banked
  2029  000E3C  C0D0  F0C5         	movff	ToMainLow_recvmsg@data,recv_msg@data
  2030  000E40  ECC0  F002         	call	_recv_msg	;wreg free
  2031  000E44  0012               	return	
  2032  000E46                     __end_of_ToMainLow_recvmsg:
  2033                           	opt stack 0
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           prodh	equ	0xFF4
  2039                           prodl	equ	0xFF3
  2040                           intcon	equ	0xFF2
  2041                           postinc0	equ	0xFEE
  2042                           wreg	equ	0xFE8
  2043                           postdec1	equ	0xFE5
  2044                           fsr1l	equ	0xFE1
  2045                           indf2	equ	0xFDF
  2046                           fsr2h	equ	0xFDA
  2047                           fsr2l	equ	0xFD9
  2048                           status	equ	0xFD8
  2049                           
  2050 ;; *************** function _ToMainHigh_recvmsg *****************
  2051 ;; Defined at:
  2052 ;;		line 136 in file "../src/messages.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  maxlength       1    wreg     unsigned char 
  2055 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  2056 ;;		 -> main@msgtype(1), 
  2057 ;;  data            2   26[BANK0 ] PTR void 
  2058 ;;		 -> main@msgbuffer(11), 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  maxlength       1   28[BANK0 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      char 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2070 ;;      Params:         0       4       0       0       0
  2071 ;;      Locals:         0       1       0       0       0
  2072 ;;      Temps:          0       0       0       0       0
  2073 ;;      Totals:         0       5       0       0       0
  2074 ;;Total ram usage:        5 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:   11
  2077 ;; This function calls:
  2078 ;;		_recv_msg
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text12
  2085  000E46                     __ptext12:
  2086                           	opt stack 0
  2087  000E46                     _ToMainHigh_recvmsg:
  2088                           	opt stack 19
  2089                           
  2090                           ;incstack = 0
  2091                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  2092  000E46  CFE8 F0D2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  2093                           
  2094                           ;messages.c: 142: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2095  000E4A  0101               	movlb	1	; () banked
  2096  000E4C  0E01               	movlw	high _ToMainHigh_MQ
  2097  000E4E  0100               	movlb	0	; () banked
  2098  000E50  0100               	movlb	0	; () banked
  2099  000E52  6FC1               	movwf	(recv_msg@qptr+1)& (0+255),b
  2100  000E54  0101               	movlb	1	; () banked
  2101  000E56  0EBF               	movlw	low _ToMainHigh_MQ
  2102  000E58  0100               	movlb	0	; () banked
  2103  000E5A  0100               	movlb	0	; () banked
  2104  000E5C  6FC0               	movwf	recv_msg@qptr& (0+255),b
  2105  000E5E  C0D2  F0C2         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  2106  000E62  0100               	movlb	0	; () banked
  2107  000E64  0100               	movlb	0	; () banked
  2108  000E66  C0CF  F0C4         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  2109  000E6A  0100               	movlb	0	; () banked
  2110  000E6C  0100               	movlb	0	; () banked
  2111  000E6E  C0CE  F0C3         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  2112  000E72  0100               	movlb	0	; () banked
  2113  000E74  0100               	movlb	0	; () banked
  2114  000E76  C0D1  F0C6         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  2115  000E7A  0100               	movlb	0	; () banked
  2116  000E7C  0100               	movlb	0	; () banked
  2117  000E7E  C0D0  F0C5         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  2118  000E82  ECC0  F002         	call	_recv_msg	;wreg free
  2119  000E86  0012               	return	
  2120  000E88                     __end_of_ToMainHigh_recvmsg:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           intcon	equ	0xFF2
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           postdec1	equ	0xFE5
  2132                           fsr1l	equ	0xFE1
  2133                           indf2	equ	0xFDF
  2134                           fsr2h	equ	0xFDA
  2135                           fsr2l	equ	0xFD9
  2136                           status	equ	0xFD8
  2137                           
  2138 ;; *************** function _recv_msg *****************
  2139 ;; Defined at:
  2140 ;;		line 64 in file "../src/messages.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  2143 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2144 ;;  maxlength       1   12[BANK0 ] unsigned char 
  2145 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  2146 ;;		 -> main@msgtype(1), 
  2147 ;;  data            2   15[BANK0 ] PTR void 
  2148 ;;		 -> main@msgbuffer(11), 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  qmsg            2   22[BANK0 ] PTR struct __msg
  2151 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2152 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2153 ;;  tlength         2   20[BANK0 ] unsigned int 
  2154 ;;  slot            1   19[BANK0 ] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      char 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2164 ;;      Params:         0       7       0       0       0
  2165 ;;      Locals:         0       5       0       0       0
  2166 ;;      Temps:          0       2       0       0       0
  2167 ;;      Totals:         0      14       0       0       0
  2168 ;;Total ram usage:       14 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:   10
  2171 ;; This function calls:
  2172 ;;		_memcpy
  2173 ;; This function is called by:
  2174 ;;		_ToMainLow_recvmsg
  2175 ;;		_ToMainHigh_recvmsg
  2176 ;;		_FromMainLow_recvmsg
  2177 ;;		_FromMainHigh_recvmsg
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text13
  2182  000580                     __ptext13:
  2183                           	opt stack 0
  2184  000580                     _recv_msg:
  2185                           	opt stack 19
  2186                           
  2187                           ;messages.c: 65: unsigned char slot;
  2188                           ;messages.c: 69: msg *qmsg;
  2189                           ;messages.c: 70: size_t tlength;
  2190                           ;messages.c: 73: slot = qptr->cur_read_ind;
  2191                           
  2192                           ;incstack = 0
  2193  000580  0100               	movlb	0	; () banked
  2194  000582  EE20 F035          	lfsr	2,53
  2195  000586  0100               	movlb	0	; () banked
  2196  000588  51C0               	movf	recv_msg@qptr& (0+255),w,b
  2197  00058A  26D9               	addwf	fsr2l,f,c
  2198  00058C  0100               	movlb	0	; () banked
  2199  00058E  51C1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2200  000590  22DA               	addwfc	fsr2h,f,c
  2201  000592  50DF               	movf	indf2,w,c
  2202  000594  0100               	movlb	0	; () banked
  2203  000596  0100               	movlb	0	; () banked
  2204  000598  6FC9               	movwf	recv_msg@slot& (0+255),b
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;messages.c: 74: qmsg = &(qptr->queue[slot]);
  2208  00059A  0100               	movlb	0	; () banked
  2209  00059C  0100               	movlb	0	; () banked
  2210  00059E  51C9               	movf	recv_msg@slot& (0+255),w,b
  2211  0005A0  0D0D               	mullw	13
  2212  0005A2  50F3               	movf	prodl,w,c
  2213  0005A4  0100               	movlb	0	; () banked
  2214  0005A6  0100               	movlb	0	; () banked
  2215  0005A8  25C0               	addwf	recv_msg@qptr& (0+255),w,b
  2216  0005AA  0100               	movlb	0	; () banked
  2217  0005AC  0100               	movlb	0	; () banked
  2218  0005AE  6FCC               	movwf	recv_msg@qmsg& (0+255),b
  2219  0005B0  50F4               	movf	prodh,w,c
  2220  0005B2  0100               	movlb	0	; () banked
  2221  0005B4  0100               	movlb	0	; () banked
  2222  0005B6  21C1               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2223  0005B8  0100               	movlb	0	; () banked
  2224  0005BA  6FCD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;messages.c: 75: if (qmsg->full == 1) {
  2228  0005BC  0E01               	movlw	1
  2229  0005BE  C0CC  FFD9         	movff	recv_msg@qmsg,fsr2l
  2230  0005C2  C0CD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2231  0005C6  62DF               	cpfseq	indf2,c
  2232  0005C8  D074               	goto	l2501
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;messages.c: 77: if (qmsg->length > maxlength) {
  2236  0005CA  0100               	movlb	0	; () banked
  2237  0005CC  EE20 F001          	lfsr	2,1
  2238  0005D0  0100               	movlb	0	; () banked
  2239  0005D2  51CC               	movf	recv_msg@qmsg& (0+255),w,b
  2240  0005D4  26D9               	addwf	fsr2l,f,c
  2241  0005D6  0100               	movlb	0	; () banked
  2242  0005D8  51CD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2243  0005DA  22DA               	addwfc	fsr2h,f,c
  2244  0005DC  50DF               	movf	indf2,w,c
  2245  0005DE  0100               	movlb	0	; () banked
  2246  0005E0  0100               	movlb	0	; () banked
  2247  0005E2  5DC2               	subwf	recv_msg@maxlength& (0+255),w,b
  2248  0005E4  B0D8               	btfsc	status,0,c
  2249  0005E6  D002               	goto	l2485
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;messages.c: 78: return (-3);
  2253  0005E8  0EFD               	movlw	253
  2254  0005EA  0012               	return	
  2255  0005EC                     l2485:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;messages.c: 79: }
  2259                           ;messages.c: 81: tlength = qmsg->length;
  2260  0005EC  0100               	movlb	0	; () banked
  2261  0005EE  EE20 F001          	lfsr	2,1
  2262  0005F2  0100               	movlb	0	; () banked
  2263  0005F4  51CC               	movf	recv_msg@qmsg& (0+255),w,b
  2264  0005F6  26D9               	addwf	fsr2l,f,c
  2265  0005F8  0100               	movlb	0	; () banked
  2266  0005FA  51CD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2267  0005FC  22DA               	addwfc	fsr2h,f,c
  2268  0005FE  50DF               	movf	indf2,w,c
  2269  000600  0100               	movlb	0	; () banked
  2270  000602  6FC7               	movwf	??_recv_msg& (0+255),b
  2271  000604  0100               	movlb	0	; () banked
  2272  000606  51C7               	movf	??_recv_msg& (0+255),w,b
  2273  000608  0100               	movlb	0	; () banked
  2274  00060A  0100               	movlb	0	; () banked
  2275  00060C  6FCA               	movwf	recv_msg@tlength& (0+255),b
  2276  00060E  0100               	movlb	0	; () banked
  2277  000610  6BCB               	clrf	(recv_msg@tlength+1)& (0+255),b
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;messages.c: 82: memcpy(data, qmsg->data, tlength);
  2281  000612  0100               	movlb	0	; () banked
  2282  000614  0100               	movlb	0	; () banked
  2283  000616  C0C6  F0B7         	movff	recv_msg@data+1,memcpy@d1+1
  2284  00061A  0100               	movlb	0	; () banked
  2285  00061C  0100               	movlb	0	; () banked
  2286  00061E  C0C5  F0B6         	movff	recv_msg@data,memcpy@d1
  2287  000622  0E03               	movlw	3
  2288  000624  0100               	movlb	0	; () banked
  2289  000626  0100               	movlb	0	; () banked
  2290  000628  25CC               	addwf	recv_msg@qmsg& (0+255),w,b
  2291  00062A  0100               	movlb	0	; () banked
  2292  00062C  6FC7               	movwf	??_recv_msg& (0+255),b
  2293  00062E  0E00               	movlw	0
  2294  000630  0100               	movlb	0	; () banked
  2295  000632  0100               	movlb	0	; () banked
  2296  000634  21CD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2297  000636  0100               	movlb	0	; () banked
  2298  000638  6FC8               	movwf	(??_recv_msg+1)& (0+255),b
  2299  00063A  C0C7  F0B8         	movff	??_recv_msg,memcpy@s1
  2300  00063E  C0C8  F0B9         	movff	??_recv_msg+1,memcpy@s1+1
  2301  000642  C0CA  F0BA         	movff	recv_msg@tlength,memcpy@n
  2302  000646  C0CB  F0BB         	movff	recv_msg@tlength+1,memcpy@n+1
  2303  00064A  EC11  F006         	call	_memcpy	;wreg free
  2304                           
  2305                           ;messages.c: 88: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2306  00064E  0100               	movlb	0	; () banked
  2307  000650  EE20 F035          	lfsr	2,53
  2308  000654  0100               	movlb	0	; () banked
  2309  000656  51C0               	movf	recv_msg@qptr& (0+255),w,b
  2310  000658  26D9               	addwf	fsr2l,f,c
  2311  00065A  0100               	movlb	0	; () banked
  2312  00065C  51C1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2313  00065E  22DA               	addwfc	fsr2h,f,c
  2314  000660  0100               	movlb	0	; () banked
  2315  000662  EE10 F035          	lfsr	1,53
  2316  000666  0100               	movlb	0	; () banked
  2317  000668  51C0               	movf	recv_msg@qptr& (0+255),w,b
  2318  00066A  26E1               	addwf	fsr1l,f,c
  2319  00066C  0100               	movlb	0	; () banked
  2320  00066E  51C1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2321  000670  22E2               	addwfc	fsr1h,f,c
  2322  000672  50E7               	movf	indf1,w,c
  2323  000674  0100               	movlb	0	; () banked
  2324  000676  6FC7               	movwf	??_recv_msg& (0+255),b
  2325  000678  0100               	movlb	0	; () banked
  2326  00067A  29C7               	incf	??_recv_msg& (0+255),w,b
  2327  00067C  0B03               	andlw	3
  2328  00067E  6EDF               	movwf	indf2,c
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;messages.c: 90: (*msgtype) = qmsg->msgtype;
  2332  000680  0100               	movlb	0	; () banked
  2333  000682  EE20 F002          	lfsr	2,2
  2334  000686  0100               	movlb	0	; () banked
  2335  000688  51CC               	movf	recv_msg@qmsg& (0+255),w,b
  2336  00068A  26D9               	addwf	fsr2l,f,c
  2337  00068C  0100               	movlb	0	; () banked
  2338  00068E  51CD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2339  000690  22DA               	addwfc	fsr2h,f,c
  2340  000692  C0C3  FFE1         	movff	recv_msg@msgtype,fsr1l
  2341  000696  C0C4  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2342  00069A  CFDF FFE7          	movff	indf2,indf1
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;messages.c: 92: qmsg->full = 0;
  2346  00069E  C0CC  FFD9         	movff	recv_msg@qmsg,fsr2l
  2347  0006A2  C0CD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2348  0006A6  0E00               	movlw	0
  2349  0006A8  6EDF               	movwf	indf2,c
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;messages.c: 93: return (tlength);
  2353  0006AA  0100               	movlb	0	; () banked
  2354  0006AC  0100               	movlb	0	; () banked
  2355  0006AE  51CA               	movf	recv_msg@tlength& (0+255),w,b
  2356  0006B0  0012               	return	
  2357  0006B2                     l2501:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;messages.c: 95: return (-4);
  2361  0006B2  0EFC               	movlw	252
  2362  0006B4  0012               	return	
  2363  0006B6                     __end_of_recv_msg:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           indf1	equ	0xFE7
  2375                           postdec1	equ	0xFE5
  2376                           fsr1h	equ	0xFE2
  2377                           fsr1l	equ	0xFE1
  2378                           indf2	equ	0xFDF
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8
  2382                           
  2383 ;; *************** function _memcpy *****************
  2384 ;; Defined at:
  2385 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  d1              2    0[BANK0 ] PTR void 
  2388 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2389 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2390 ;;		 -> main@msgbuffer(11), 
  2391 ;;  s1              2    2[BANK0 ] PTR const void 
  2392 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2393 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2394 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  2395 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2396 ;;  n               2    4[BANK0 ] unsigned int 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2399 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2400 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2401 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  2402 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2403 ;;  d               2    6[BANK0 ] PTR unsigned char 
  2404 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2405 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2406 ;;		 -> main@msgbuffer(11), 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  2    0[BANK0 ] PTR void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2416 ;;      Params:         0       6       0       0       0
  2417 ;;      Locals:         0       4       0       0       0
  2418 ;;      Temps:          0       0       0       0       0
  2419 ;;      Totals:         0      10       0       0       0
  2420 ;;Total ram usage:       10 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    9
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_recv_msg
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text14
  2431  000C22                     __ptext14:
  2432                           	opt stack 0
  2433  000C22                     _memcpy:
  2434                           	opt stack 19
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;incstack = 0
  2438  000C22  0100               	movlb	0	; () banked
  2439  000C24  0100               	movlb	0	; () banked
  2440  000C26  C0B9  F0BF         	movff	memcpy@s1+1,memcpy@s+1
  2441  000C2A  0100               	movlb	0	; () banked
  2442  000C2C  0100               	movlb	0	; () banked
  2443  000C2E  C0B8  F0BE         	movff	memcpy@s1,memcpy@s
  2444  000C32  0100               	movlb	0	; () banked
  2445  000C34  0100               	movlb	0	; () banked
  2446  000C36  C0B7  F0BD         	movff	memcpy@d1+1,memcpy@d+1
  2447  000C3A  0100               	movlb	0	; () banked
  2448  000C3C  0100               	movlb	0	; () banked
  2449  000C3E  C0B6  F0BC         	movff	memcpy@d1,memcpy@d
  2450  000C42  D012               	goto	l2471
  2451  000C44                     l2465:
  2452                           
  2453                           ; BSR set to: 0
  2454  000C44  C0BE  FFD9         	movff	memcpy@s,fsr2l
  2455  000C48  C0BF  FFDA         	movff	memcpy@s+1,fsr2h
  2456  000C4C  C0BC  FFE1         	movff	memcpy@d,fsr1l
  2457  000C50  C0BD  FFE2         	movff	memcpy@d+1,fsr1h
  2458  000C54  CFDF FFE7          	movff	indf2,indf1
  2459                           
  2460                           ; BSR set to: 0
  2461  000C58  0100               	movlb	0	; () banked
  2462  000C5A  0100               	movlb	0	; () banked
  2463  000C5C  4BBE               	infsnz	memcpy@s& (0+255),f,b
  2464  000C5E  2BBF               	incf	(memcpy@s+1)& (0+255),f,b
  2465                           
  2466                           ; BSR set to: 0
  2467  000C60  0100               	movlb	0	; () banked
  2468  000C62  0100               	movlb	0	; () banked
  2469  000C64  4BBC               	infsnz	memcpy@d& (0+255),f,b
  2470  000C66  2BBD               	incf	(memcpy@d+1)& (0+255),f,b
  2471  000C68                     l2471:
  2472                           
  2473                           ; BSR set to: 0
  2474  000C68  0100               	movlb	0	; () banked
  2475  000C6A  0100               	movlb	0	; () banked
  2476  000C6C  07BA               	decf	memcpy@n& (0+255),f,b
  2477  000C6E  A0D8               	btfss	status,0,c
  2478  000C70  07BB               	decf	(memcpy@n+1)& (0+255),f,b
  2479  000C72  0100               	movlb	0	; () banked
  2480  000C74  29BA               	incf	memcpy@n& (0+255),w,b
  2481  000C76  B4D8               	btfsc	status,2,c
  2482  000C78  29BB               	incf	(memcpy@n+1)& (0+255),w,b
  2483  000C7A  B4D8               	btfsc	status,2,c
  2484                           
  2485                           ; BSR set to: 0
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;	Return value of _memcpy is never used
  2489  000C7C  0012               	return	
  2490  000C7E  D7E2               	goto	l2465
  2491  000C80                     __end_of_memcpy:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           indf1	equ	0xFE7
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           indf2	equ	0xFDF
  2507                           fsr2h	equ	0xFDA
  2508                           fsr2l	equ	0xFD9
  2509                           status	equ	0xFD8
  2510                           
  2511 ;; *************** function _OpenUSART *****************
  2512 ;; Defined at:
  2513 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  config          1    wreg     unsigned char 
  2516 ;;  spbrg           2    0[BANK0 ] unsigned int 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  config          1    5[BANK0 ] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, status,2
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2528 ;;      Params:         0       2       0       0       0
  2529 ;;      Locals:         0       1       0       0       0
  2530 ;;      Temps:          0       3       0       0       0
  2531 ;;      Totals:         0       6       0       0       0
  2532 ;;Total ram usage:        6 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    9
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text15
  2543  00093E                     __ptext15:
  2544                           	opt stack 0
  2545  00093E                     _OpenUSART:
  2546                           	opt stack 21
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;incstack = 0
  2550                           ;OpenUSART@config stored from wreg
  2551  00093E  CFE8 F0BB          	movff	wreg,OpenUSART@config
  2552  000942  0E00               	movlw	0
  2553  000944  6EAC               	movwf	4012,c	;volatile
  2554  000946  0E00               	movlw	0
  2555  000948  6EAB               	movwf	4011,c	;volatile
  2556  00094A  0100               	movlb	0	; () banked
  2557  00094C  0100               	movlb	0	; () banked
  2558  00094E  B1BB               	btfsc	OpenUSART@config& (0+255),0,b
  2559                           
  2560                           ; BSR set to: 0
  2561  000950  88AC               	bsf	4012,4,c	;volatile
  2562                           
  2563                           ; BSR set to: 0
  2564                           
  2565                           ; BSR set to: 0
  2566  000952  0100               	movlb	0	; () banked
  2567  000954  0100               	movlb	0	; () banked
  2568  000956  A3BB               	btfss	OpenUSART@config& (0+255),1,b
  2569  000958  D002               	goto	l2357
  2570                           
  2571                           ; BSR set to: 0
  2572  00095A  8CAC               	bsf	4012,6,c	;volatile
  2573  00095C  8CAB               	bsf	4011,6,c	;volatile
  2574  00095E                     l2357:
  2575                           
  2576                           ; BSR set to: 0
  2577  00095E  0100               	movlb	0	; () banked
  2578  000960  0100               	movlb	0	; () banked
  2579  000962  B5BB               	btfsc	OpenUSART@config& (0+255),2,b
  2580                           
  2581                           ; BSR set to: 0
  2582  000964  8EAC               	bsf	4012,7,c	;volatile
  2583                           
  2584                           ; BSR set to: 0
  2585                           
  2586                           ; BSR set to: 0
  2587  000966  0100               	movlb	0	; () banked
  2588  000968  0100               	movlb	0	; () banked
  2589  00096A  A7BB               	btfss	OpenUSART@config& (0+255),3,b
  2590  00096C  D002               	goto	l551
  2591                           
  2592                           ; BSR set to: 0
  2593  00096E  88AB               	bsf	4011,4,c	;volatile
  2594  000970  D001               	goto	l2365
  2595  000972                     l551:
  2596                           
  2597                           ; BSR set to: 0
  2598  000972  8AAB               	bsf	4011,5,c	;volatile
  2599  000974                     l2365:
  2600                           
  2601                           ; BSR set to: 0
  2602  000974  0100               	movlb	0	; () banked
  2603  000976  0100               	movlb	0	; () banked
  2604  000978  B9BB               	btfsc	OpenUSART@config& (0+255),4,b
  2605                           
  2606                           ; BSR set to: 0
  2607  00097A  84AC               	bsf	4012,2,c	;volatile
  2608                           
  2609                           ; BSR set to: 0
  2610  00097C  989E               	bcf	3998,4,c	;volatile
  2611                           
  2612                           ; BSR set to: 0
  2613  00097E  0100               	movlb	0	; () banked
  2614  000980  0100               	movlb	0	; () banked
  2615  000982  BBBB               	btfsc	OpenUSART@config& (0+255),5,b
  2616                           
  2617                           ; BSR set to: 0
  2618  000984  86AB               	bsf	4011,3,c	;volatile
  2619                           
  2620                           ; BSR set to: 0
  2621                           
  2622                           ; BSR set to: 0
  2623  000986  0100               	movlb	0	; () banked
  2624  000988  0100               	movlb	0	; () banked
  2625  00098A  ADBB               	btfss	OpenUSART@config& (0+255),6,b
  2626  00098C  D002               	goto	l555
  2627                           
  2628                           ; BSR set to: 0
  2629  00098E  8A9D               	bsf	3997,5,c	;volatile
  2630  000990  D001               	goto	l556
  2631  000992                     l555:
  2632                           
  2633                           ; BSR set to: 0
  2634  000992  9A9D               	bcf	3997,5,c	;volatile
  2635  000994                     l556:
  2636                           
  2637                           ; BSR set to: 0
  2638  000994  9A9E               	bcf	3998,5,c	;volatile
  2639                           
  2640                           ; BSR set to: 0
  2641  000996  0100               	movlb	0	; () banked
  2642  000998  0100               	movlb	0	; () banked
  2643  00099A  AFBB               	btfss	OpenUSART@config& (0+255),7,b
  2644  00099C  D002               	goto	l557
  2645                           
  2646                           ; BSR set to: 0
  2647  00099E  889D               	bsf	3997,4,c	;volatile
  2648  0009A0  D001               	goto	l558
  2649  0009A2                     l557:
  2650                           
  2651                           ; BSR set to: 0
  2652  0009A2  989D               	bcf	3997,4,c	;volatile
  2653  0009A4                     l558:
  2654                           
  2655                           ; BSR set to: 0
  2656  0009A4  C0B6  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2657                           
  2658                           ; BSR set to: 0
  2659  0009A8  0100               	movlb	0	; () banked
  2660  0009AA  C0B7  F0B8         	movff	OpenUSART@spbrg+1,??_OpenUSART
  2661  0009AE  C0B8  F0B9         	movff	??_OpenUSART,??_OpenUSART+1
  2662  0009B2  0100               	movlb	0	; () banked
  2663  0009B4  6BBA               	clrf	(??_OpenUSART+2)& (0+255),b
  2664  0009B6  0100               	movlb	0	; () banked
  2665  0009B8  51B9               	movf	(??_OpenUSART+1)& (0+255),w,b
  2666  0009BA  6EB0               	movwf	4016,c	;volatile
  2667                           
  2668                           ; BSR set to: 0
  2669  0009BC  8AAC               	bsf	4012,5,c	;volatile
  2670                           
  2671                           ; BSR set to: 0
  2672  0009BE  8EAB               	bsf	4011,7,c	;volatile
  2673                           
  2674                           ; BSR set to: 0
  2675  0009C0  9C94               	bcf	3988,6,c	;volatile
  2676                           
  2677                           ; BSR set to: 0
  2678  0009C2  8E94               	bsf	3988,7,c	;volatile
  2679                           
  2680                           ; BSR set to: 0
  2681  0009C4  A8AC               	btfss	4012,4,c	;volatile
  2682  0009C6  0012               	return	
  2683                           
  2684                           ; BSR set to: 0
  2685  0009C8  BEAC               	btfsc	4012,7,c	;volatile
  2686  0009CA  0012               	return	
  2687                           
  2688                           ; BSR set to: 0
  2689  0009CC  8C94               	bsf	3988,6,c	;volatile
  2690  0009CE  0012               	return	
  2691  0009D0                     __end_of_OpenUSART:
  2692                           	opt stack 0
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           intcon	equ	0xFF2
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           indf1	equ	0xFE7
  2703                           postdec1	equ	0xFE5
  2704                           fsr1h	equ	0xFE2
  2705                           fsr1l	equ	0xFE1
  2706                           indf2	equ	0xFDF
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _OpenTimer1 *****************
  2712 ;; Defined at:
  2713 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  config          1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  config          1    0[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;		None               void
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         0       1       0       0       0
  2729 ;;      Temps:          0       0       0       0       0
  2730 ;;      Totals:         0       1       0       0       0
  2731 ;;Total ram usage:        1 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    9
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text16
  2742  000F40                     __ptext16:
  2743                           	opt stack 0
  2744  000F40                     _OpenTimer1:
  2745                           	opt stack 21
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;incstack = 0
  2749                           ;OpenTimer1@config stored from wreg
  2750  000F40  CFE8 F0B6          	movff	wreg,OpenTimer1@config
  2751  000F44  0100               	movlb	0	; () banked
  2752  000F46  0100               	movlb	0	; () banked
  2753  000F48  51B6               	movf	OpenTimer1@config& (0+255),w,b
  2754  000F4A  0B7E               	andlw	126
  2755  000F4C  6ECD               	movwf	4045,c	;volatile
  2756                           
  2757                           ; BSR set to: 0
  2758  000F4E  0100               	movlb	0	; () banked
  2759  000F50  0100               	movlb	0	; () banked
  2760  000F52  ADB6               	btfss	OpenTimer1@config& (0+255),6,b
  2761  000F54  D002               	goto	l514
  2762                           
  2763                           ; BSR set to: 0
  2764  000F56  8ECD               	bsf	4045,7,c	;volatile
  2765  000F58  D001               	goto	l2339
  2766  000F5A                     l514:
  2767                           
  2768                           ; BSR set to: 0
  2769  000F5A  9ECD               	bcf	4045,7,c	;volatile
  2770  000F5C                     l2339:
  2771                           
  2772                           ; BSR set to: 0
  2773  000F5C  0E00               	movlw	0
  2774  000F5E  6ECF               	movwf	4047,c	;volatile
  2775  000F60  0E00               	movlw	0
  2776  000F62  6ECE               	movwf	4046,c	;volatile
  2777                           
  2778                           ; BSR set to: 0
  2779  000F64  909E               	bcf	3998,0,c	;volatile
  2780                           
  2781                           ; BSR set to: 0
  2782  000F66  0100               	movlb	0	; () banked
  2783  000F68  0100               	movlb	0	; () banked
  2784  000F6A  AFB6               	btfss	OpenTimer1@config& (0+255),7,b
  2785  000F6C  D002               	goto	l516
  2786                           
  2787                           ; BSR set to: 0
  2788  000F6E  809D               	bsf	3997,0,c	;volatile
  2789  000F70  D001               	goto	l517
  2790  000F72                     l516:
  2791                           
  2792                           ; BSR set to: 0
  2793  000F72  909D               	bcf	3997,0,c	;volatile
  2794  000F74                     l517:
  2795                           
  2796                           ; BSR set to: 0
  2797  000F74  80CD               	bsf	4045,0,c	;volatile
  2798                           
  2799                           ; BSR set to: 0
  2800  000F76  0012               	return	
  2801  000F78                     __end_of_OpenTimer1:
  2802                           	opt stack 0
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           prodh	equ	0xFF4
  2808                           prodl	equ	0xFF3
  2809                           intcon	equ	0xFF2
  2810                           postinc0	equ	0xFEE
  2811                           wreg	equ	0xFE8
  2812                           indf1	equ	0xFE7
  2813                           postdec1	equ	0xFE5
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function _OpenTimer0 *****************
  2822 ;; Defined at:
  2823 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  config          1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  config          1    0[BANK0 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;		None               void
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2837 ;;      Params:         0       0       0       0       0
  2838 ;;      Locals:         0       1       0       0       0
  2839 ;;      Temps:          0       0       0       0       0
  2840 ;;      Totals:         0       1       0       0       0
  2841 ;;Total ram usage:        1 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    9
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text17
  2852  000FDC                     __ptext17:
  2853                           	opt stack 0
  2854  000FDC                     _OpenTimer0:
  2855                           	opt stack 21
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;incstack = 0
  2859                           ;OpenTimer0@config stored from wreg
  2860  000FDC  CFE8 F0B6          	movff	wreg,OpenTimer0@config
  2861  000FE0  0100               	movlb	0	; () banked
  2862  000FE2  0100               	movlb	0	; () banked
  2863  000FE4  51B6               	movf	OpenTimer0@config& (0+255),w,b
  2864  000FE6  0B7F               	andlw	127
  2865  000FE8  6ED5               	movwf	4053,c	;volatile
  2866                           
  2867                           ; BSR set to: 0
  2868  000FEA  0E00               	movlw	0
  2869  000FEC  6ED7               	movwf	4055,c	;volatile
  2870                           
  2871                           ; BSR set to: 0
  2872  000FEE  0E00               	movlw	0
  2873  000FF0  6ED6               	movwf	4054,c	;volatile
  2874                           
  2875                           ; BSR set to: 0
  2876  000FF2  94F2               	bcf	intcon,2,c	;volatile
  2877                           
  2878                           ; BSR set to: 0
  2879  000FF4  0100               	movlb	0	; () banked
  2880  000FF6  0100               	movlb	0	; () banked
  2881  000FF8  AFB6               	btfss	OpenTimer0@config& (0+255),7,b
  2882  000FFA  D002               	goto	l497
  2883                           
  2884                           ; BSR set to: 0
  2885  000FFC  8AF2               	bsf	intcon,5,c	;volatile
  2886  000FFE  D001               	goto	l498
  2887  001000                     l497:
  2888                           
  2889                           ; BSR set to: 0
  2890  001000  9AF2               	bcf	intcon,5,c	;volatile
  2891  001002                     l498:
  2892                           
  2893                           ; BSR set to: 0
  2894  001002  8ED5               	bsf	4053,7,c	;volatile
  2895                           
  2896                           ; BSR set to: 0
  2897  001004  0012               	return	
  2898  001006                     __end_of_OpenTimer0:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           indf1	equ	0xFE7
  2910                           postdec1	equ	0xFE5
  2911                           fsr1h	equ	0xFE2
  2912                           fsr1l	equ	0xFE1
  2913                           indf2	equ	0xFDF
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _InterruptHandlerLow *****************
  2919 ;; Defined at:
  2920 ;;		line 124 in file "../src/interrupts.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;		None               void
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0
  2936 ;;      Temps:         17       0       0       0       0
  2937 ;;      Totals:        17       0       0       0       0
  2938 ;;Total ram usage:       17 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    8
  2941 ;; This function calls:
  2942 ;;		_timer1_int_handler
  2943 ;; This function is called by:
  2944 ;;		Interrupt level 1
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	intcodelo
  2949  000018                     __pintcodelo:
  2950                           	opt stack 0
  2951  000018                     _InterruptHandlerLow:
  2952                           	opt stack 18
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;incstack = 0
  2956  000018  CFD8 F005          	movff	status,??_InterruptHandlerLow
  2957  00001C  CFE8 F006          	movff	wreg,??_InterruptHandlerLow+1
  2958  000020  CFE0 F007          	movff	bsr,??_InterruptHandlerLow+2
  2959  000024  CFFA F008          	movff	pclath,??_InterruptHandlerLow+3
  2960  000028  CFFB F009          	movff	pclatu,??_InterruptHandlerLow+4
  2961  00002C  CFE9 F00A          	movff	fsr0l,??_InterruptHandlerLow+5
  2962  000030  CFEA F00B          	movff	fsr0h,??_InterruptHandlerLow+6
  2963  000034  CFE1 F00C          	movff	fsr1l,??_InterruptHandlerLow+7
  2964  000038  CFE2 F00D          	movff	fsr1h,??_InterruptHandlerLow+8
  2965  00003C  CFD9 F00E          	movff	fsr2l,??_InterruptHandlerLow+9
  2966  000040  CFDA F00F          	movff	fsr2h,??_InterruptHandlerLow+10
  2967  000044  CFF3 F010          	movff	prodl,??_InterruptHandlerLow+11
  2968  000048  CFF4 F011          	movff	prodh,??_InterruptHandlerLow+12
  2969  00004C  CFF6 F012          	movff	tblptrl,??_InterruptHandlerLow+13
  2970  000050  CFF7 F013          	movff	tblptrh,??_InterruptHandlerLow+14
  2971  000054  CFF8 F014          	movff	tblptru,??_InterruptHandlerLow+15
  2972  000058  CFF5 F015          	movff	tablat,??_InterruptHandlerLow+16
  2973                           
  2974                           ;interrupts.c: 133: if (PIR1bits.TMR1IF) {
  2975  00005C  A09E               	btfss	3998,0,c	;volatile
  2976  00005E  D003               	goto	i1l44
  2977                           
  2978                           ;interrupts.c: 134: PIR1bits.TMR1IF = 0;
  2979  000060  909E               	bcf	3998,0,c	;volatile
  2980                           
  2981                           ;interrupts.c: 135: timer1_int_handler();
  2982  000062  EC28  F008         	call	_timer1_int_handler	;wreg free
  2983  000066                     i1l44:
  2984  000066  C015  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  2985  00006A  C014  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  2986  00006E  C013  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  2987  000072  C012  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  2988  000076  C011  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  2989  00007A  C010  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  2990  00007E  C00F  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  2991  000082  C00E  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  2992  000086  C00D  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  2993  00008A  C00C  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  2994  00008E  C00B  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  2995  000092  C00A  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  2996  000096  C009  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  2997  00009A  C008  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  2998  00009E  C007  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  2999  0000A2  C006  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  3000  0000A6  C005  FFD8         	movff	??_InterruptHandlerLow,status
  3001  0000AA  0010               	retfie	
  3002  0000AC                     __end_of_InterruptHandlerLow:
  3003                           	opt stack 0
  3004                           pclatu	equ	0xFFB
  3005                           pclath	equ	0xFFA
  3006                           tblptru	equ	0xFF8
  3007                           tblptrh	equ	0xFF7
  3008                           tblptrl	equ	0xFF6
  3009                           tablat	equ	0xFF5
  3010                           prodh	equ	0xFF4
  3011                           prodl	equ	0xFF3
  3012                           intcon	equ	0xFF2
  3013                           postinc0	equ	0xFEE
  3014                           fsr0h	equ	0xFEA
  3015                           fsr0l	equ	0xFE9
  3016                           wreg	equ	0xFE8
  3017                           indf1	equ	0xFE7
  3018                           postdec1	equ	0xFE5
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           bsr	equ	0xFE0
  3022                           indf2	equ	0xFDF
  3023                           fsr2h	equ	0xFDA
  3024                           fsr2l	equ	0xFD9
  3025                           status	equ	0xFD8
  3026                           
  3027 ;; *************** function _timer1_int_handler *****************
  3028 ;; Defined at:
  3029 ;;		line 28 in file "../src/user_interrupts.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;		None               void
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    7
  3050 ;; This function calls:
  3051 ;;		_WriteTimer1
  3052 ;;		_debugNum
  3053 ;;		_uart_send
  3054 ;; This function is called by:
  3055 ;;		_InterruptHandlerLow
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text19
  3060  001050                     __ptext19:
  3061                           	opt stack 0
  3062  001050                     _timer1_int_handler:
  3063                           	opt stack 18
  3064                           
  3065                           ;user_interrupts.c: 34: debugNum(4);
  3066                           
  3067                           ;incstack = 0
  3068  001050  0E00               	movlw	0
  3069  001052  6E03               	movwf	debugNum@num+1,c
  3070  001054  0E04               	movlw	4
  3071  001056  6E02               	movwf	debugNum@num,c
  3072  001058  EC6D  F006         	call	_debugNum	;wreg free
  3073                           
  3074                           ;user_interrupts.c: 35: uart_send((char) 0x55);
  3075  00105C  0E55               	movlw	85
  3076  00105E  EC5F  F008         	call	_uart_send
  3077                           
  3078                           ;user_interrupts.c: 40: WriteTimer1(0xFFFF-3750);
  3079  001062  0EF1               	movlw	241
  3080  001064  6E02               	movwf	WriteTimer1@timer1+1,c
  3081  001066  0E59               	movlw	89
  3082  001068  6E01               	movwf	WriteTimer1@timer1,c
  3083  00106A  EC56  F008         	call	_WriteTimer1	;wreg free
  3084  00106E  0012               	return	
  3085  001070                     __end_of_timer1_int_handler:
  3086                           	opt stack 0
  3087                           pclatu	equ	0xFFB
  3088                           pclath	equ	0xFFA
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           prodh	equ	0xFF4
  3094                           prodl	equ	0xFF3
  3095                           intcon	equ	0xFF2
  3096                           postinc0	equ	0xFEE
  3097                           fsr0h	equ	0xFEA
  3098                           fsr0l	equ	0xFE9
  3099                           wreg	equ	0xFE8
  3100                           indf1	equ	0xFE7
  3101                           postdec1	equ	0xFE5
  3102                           fsr1h	equ	0xFE2
  3103                           fsr1l	equ	0xFE1
  3104                           bsr	equ	0xFE0
  3105                           indf2	equ	0xFDF
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _uart_send *****************
  3111 ;; Defined at:
  3112 ;;		line 54 in file "../src/my_uart.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  data            1    wreg     unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  data            1    1[COMRAM] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;		None               void
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3126 ;;      Params:         0       0       0       0       0
  3127 ;;      Locals:         1       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0
  3129 ;;      Totals:         1       0       0       0       0
  3130 ;;Total ram usage:        1 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    6
  3133 ;; This function calls:
  3134 ;;		_WriteUSART
  3135 ;; This function is called by:
  3136 ;;		_timer1_int_handler
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text20
  3141  0010BE                     __ptext20:
  3142                           	opt stack 0
  3143  0010BE                     _uart_send:
  3144                           	opt stack 18
  3145                           
  3146                           ;incstack = 0
  3147                           ;uart_send@data stored from wreg
  3148  0010BE  CFE8 F002          	movff	wreg,uart_send@data
  3149                           
  3150                           ;my_uart.c: 55: WriteUSART(data);
  3151  0010C2  5002               	movf	uart_send@data,w,c
  3152  0010C4  EC43  F008         	call	_WriteUSART
  3153  0010C8  0012               	return	
  3154  0010CA                     __end_of_uart_send:
  3155                           	opt stack 0
  3156                           pclatu	equ	0xFFB
  3157                           pclath	equ	0xFFA
  3158                           tblptru	equ	0xFF8
  3159                           tblptrh	equ	0xFF7
  3160                           tblptrl	equ	0xFF6
  3161                           tablat	equ	0xFF5
  3162                           prodh	equ	0xFF4
  3163                           prodl	equ	0xFF3
  3164                           intcon	equ	0xFF2
  3165                           postinc0	equ	0xFEE
  3166                           fsr0h	equ	0xFEA
  3167                           fsr0l	equ	0xFE9
  3168                           wreg	equ	0xFE8
  3169                           indf1	equ	0xFE7
  3170                           postdec1	equ	0xFE5
  3171                           fsr1h	equ	0xFE2
  3172                           fsr1l	equ	0xFE1
  3173                           bsr	equ	0xFE0
  3174                           indf2	equ	0xFDF
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function _WriteUSART *****************
  3180 ;; Defined at:
  3181 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  data            1    wreg     unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  data            1    0[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;		None               void
  3188 ;; Registers used:
  3189 ;;		wreg
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3195 ;;      Params:         0       0       0       0       0
  3196 ;;      Locals:         1       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0
  3198 ;;      Totals:         1       0       0       0       0
  3199 ;;Total ram usage:        1 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    5
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_uart_send
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text21
  3210  001086                     __ptext21:
  3211                           	opt stack 0
  3212  001086                     _WriteUSART:
  3213                           	opt stack 18
  3214                           
  3215                           ;incstack = 0
  3216                           ;WriteUSART@data stored from wreg
  3217  001086  CFE8 F001          	movff	wreg,WriteUSART@data
  3218  00108A  ACAC               	btfss	4012,6,c	;volatile
  3219  00108C  D003               	goto	i1l1789
  3220  00108E  90AC               	bcf	4012,0,c	;volatile
  3221  001090  B24B               	btfsc	_USART_Status,1,c
  3222  001092  80AC               	bsf	4012,0,c	;volatile
  3223  001094                     i1l1789:
  3224  001094  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  3225  001098  0012               	return	
  3226  00109A                     __end_of_WriteUSART:
  3227                           	opt stack 0
  3228                           pclatu	equ	0xFFB
  3229                           pclath	equ	0xFFA
  3230                           tblptru	equ	0xFF8
  3231                           tblptrh	equ	0xFF7
  3232                           tblptrl	equ	0xFF6
  3233                           tablat	equ	0xFF5
  3234                           prodh	equ	0xFF4
  3235                           prodl	equ	0xFF3
  3236                           intcon	equ	0xFF2
  3237                           postinc0	equ	0xFEE
  3238                           fsr0h	equ	0xFEA
  3239                           fsr0l	equ	0xFE9
  3240                           wreg	equ	0xFE8
  3241                           indf1	equ	0xFE7
  3242                           postdec1	equ	0xFE5
  3243                           fsr1h	equ	0xFE2
  3244                           fsr1l	equ	0xFE1
  3245                           bsr	equ	0xFE0
  3246                           indf2	equ	0xFDF
  3247                           fsr2h	equ	0xFDA
  3248                           fsr2l	equ	0xFD9
  3249                           status	equ	0xFD8
  3250                           
  3251 ;; *************** function _debugNum *****************
  3252 ;; Defined at:
  3253 ;;		line 69 in file "../src/debug.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  num             2    1[COMRAM] int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3267 ;;      Params:         2       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0
  3270 ;;      Totals:         2       0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    6
  3274 ;; This function calls:
  3275 ;;		_resetDBG
  3276 ;;		_setDBG
  3277 ;; This function is called by:
  3278 ;;		_timer1_int_handler
  3279 ;;		_adc_int_handler
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text22
  3284  000CDA                     __ptext22:
  3285                           	opt stack 0
  3286  000CDA                     _debugNum:
  3287                           	opt stack 18
  3288                           
  3289                           ;debug.c: 70: if(num & 1){
  3290                           
  3291                           ;incstack = 0
  3292  000CDA  A002               	btfss	debugNum@num,0,c
  3293  000CDC  D006               	goto	i1l2003
  3294                           
  3295                           ;debug.c: 71: setDBG(DBG1);
  3296  000CDE  0E00               	movlw	0
  3297  000CE0  EC64  F007         	call	_setDBG
  3298                           
  3299                           ;debug.c: 72: resetDBG(DBG1);
  3300  000CE4  0E00               	movlw	0
  3301  000CE6  EC82  F007         	call	_resetDBG
  3302  000CEA                     i1l2003:
  3303                           
  3304                           ;debug.c: 73: }
  3305                           ;debug.c: 74: if(num & 2){
  3306  000CEA  A202               	btfss	debugNum@num,1,c
  3307  000CEC  D006               	goto	i1l2007
  3308                           
  3309                           ;debug.c: 75: setDBG(DBG2);
  3310  000CEE  0E01               	movlw	1
  3311  000CF0  EC64  F007         	call	_setDBG
  3312                           
  3313                           ;debug.c: 76: resetDBG(DBG2);
  3314  000CF4  0E01               	movlw	1
  3315  000CF6  EC82  F007         	call	_resetDBG
  3316  000CFA                     i1l2007:
  3317                           
  3318                           ;debug.c: 77: }
  3319                           ;debug.c: 78: if(num & 4){
  3320  000CFA  A402               	btfss	debugNum@num,2,c
  3321  000CFC  D006               	goto	i1l2011
  3322                           
  3323                           ;debug.c: 79: setDBG(DBG3);
  3324  000CFE  0E02               	movlw	2
  3325  000D00  EC64  F007         	call	_setDBG
  3326                           
  3327                           ;debug.c: 80: resetDBG(DBG3);
  3328  000D04  0E02               	movlw	2
  3329  000D06  EC82  F007         	call	_resetDBG
  3330  000D0A                     i1l2011:
  3331                           
  3332                           ;debug.c: 81: }
  3333                           ;debug.c: 82: if(num & 8){
  3334  000D0A  A602               	btfss	debugNum@num,3,c
  3335  000D0C  D006               	goto	i1l2015
  3336                           
  3337                           ;debug.c: 83: setDBG(DBG4);
  3338  000D0E  0E03               	movlw	3
  3339  000D10  EC64  F007         	call	_setDBG
  3340                           
  3341                           ;debug.c: 84: resetDBG(DBG4);
  3342  000D14  0E03               	movlw	3
  3343  000D16  EC82  F007         	call	_resetDBG
  3344  000D1A                     i1l2015:
  3345                           
  3346                           ;debug.c: 85: }
  3347                           ;debug.c: 86: if(num & 16){
  3348  000D1A  A802               	btfss	debugNum@num,4,c
  3349  000D1C  0012               	return	
  3350                           
  3351                           ;debug.c: 87: setDBG(DBG5);
  3352  000D1E  0E04               	movlw	4
  3353  000D20  EC64  F007         	call	_setDBG
  3354                           
  3355                           ;debug.c: 88: resetDBG(DBG5);
  3356  000D24  0E04               	movlw	4
  3357  000D26  EC82  F007         	call	_resetDBG
  3358  000D2A  0012               	return	
  3359  000D2C                     __end_of_debugNum:
  3360                           	opt stack 0
  3361                           pclatu	equ	0xFFB
  3362                           pclath	equ	0xFFA
  3363                           tblptru	equ	0xFF8
  3364                           tblptrh	equ	0xFF7
  3365                           tblptrl	equ	0xFF6
  3366                           tablat	equ	0xFF5
  3367                           prodh	equ	0xFF4
  3368                           prodl	equ	0xFF3
  3369                           intcon	equ	0xFF2
  3370                           postinc0	equ	0xFEE
  3371                           fsr0h	equ	0xFEA
  3372                           fsr0l	equ	0xFE9
  3373                           wreg	equ	0xFE8
  3374                           indf1	equ	0xFE7
  3375                           postdec1	equ	0xFE5
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           bsr	equ	0xFE0
  3379                           indf2	equ	0xFDF
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _setDBG *****************
  3385 ;; Defined at:
  3386 ;;		line 4 in file "../src/debug.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  b               1    wreg     unsigned char 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  b               1    0[COMRAM] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         1       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0
  3403 ;;      Totals:         1       0       0       0       0
  3404 ;;Total ram usage:        1 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    5
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_debugNum
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text23
  3415  000EC8                     __ptext23:
  3416                           	opt stack 0
  3417  000EC8                     _setDBG:
  3418                           	opt stack 18
  3419                           
  3420                           ;incstack = 0
  3421                           ;setDBG@b stored from wreg
  3422  000EC8  CFE8 F001          	movff	wreg,setDBG@b
  3423                           
  3424                           ;debug.c: 5: switch(b) {
  3425  000ECC  D00A               	goto	i1l1811
  3426  000ECE                     i1l343:
  3427                           
  3428                           ;debug.c: 7: LATBbits.LATB0 = 1;
  3429  000ECE  808A               	bsf	3978,0,c	;volatile
  3430                           
  3431                           ;debug.c: 8: break;
  3432  000ED0  0012               	return	
  3433  000ED2                     i1l345:
  3434                           
  3435                           ;debug.c: 10: LATBbits.LATB1 = 1;
  3436  000ED2  828A               	bsf	3978,1,c	;volatile
  3437                           
  3438                           ;debug.c: 11: break;
  3439  000ED4  0012               	return	
  3440  000ED6                     i1l346:
  3441                           
  3442                           ;debug.c: 13: LATBbits.LATB2 = 1;
  3443  000ED6  848A               	bsf	3978,2,c	;volatile
  3444                           
  3445                           ;debug.c: 14: break;
  3446  000ED8  0012               	return	
  3447  000EDA                     i1l347:
  3448                           
  3449                           ;debug.c: 16: LATBbits.LATB3 = 1;
  3450  000EDA  868A               	bsf	3978,3,c	;volatile
  3451                           
  3452                           ;debug.c: 17: break;
  3453  000EDC  0012               	return	
  3454  000EDE                     i1l348:
  3455                           
  3456                           ;debug.c: 19: LATBbits.LATB4 = 1;
  3457  000EDE  888A               	bsf	3978,4,c	;volatile
  3458                           
  3459                           ;debug.c: 20: break;
  3460  000EE0  0012               	return	
  3461  000EE2                     i1l1811:
  3462  000EE2  5001               	movf	setDBG@b,w,c
  3463                           
  3464                           ; Switch size 1, requested type "space"
  3465                           ; Number of cases is 5, Range of values is 0 to 4
  3466                           ; switch strategies available:
  3467                           ; Name         Instructions Cycles
  3468                           ; simple_byte           16     9 (average)
  3469                           ;	Chosen strategy is simple_byte
  3470  000EE4  0A00               	xorlw	0	; case 0
  3471  000EE6  B4D8               	btfsc	status,2,c
  3472  000EE8  D7F2               	goto	i1l343
  3473  000EEA  0A01               	xorlw	1	; case 1
  3474  000EEC  B4D8               	btfsc	status,2,c
  3475  000EEE  D7F1               	goto	i1l345
  3476  000EF0  0A03               	xorlw	3	; case 2
  3477  000EF2  B4D8               	btfsc	status,2,c
  3478  000EF4  D7F0               	goto	i1l346
  3479  000EF6  0A01               	xorlw	1	; case 3
  3480  000EF8  B4D8               	btfsc	status,2,c
  3481  000EFA  D7EF               	goto	i1l347
  3482  000EFC  0A07               	xorlw	7	; case 4
  3483  000EFE  A4D8               	btfss	status,2,c
  3484  000F00  0012               	return	
  3485  000F02  D7ED               	goto	i1l348
  3486  000F04                     __end_of_setDBG:
  3487                           	opt stack 0
  3488                           pclatu	equ	0xFFB
  3489                           pclath	equ	0xFFA
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           postinc0	equ	0xFEE
  3498                           fsr0h	equ	0xFEA
  3499                           fsr0l	equ	0xFE9
  3500                           wreg	equ	0xFE8
  3501                           indf1	equ	0xFE7
  3502                           postdec1	equ	0xFE5
  3503                           fsr1h	equ	0xFE2
  3504                           fsr1l	equ	0xFE1
  3505                           bsr	equ	0xFE0
  3506                           indf2	equ	0xFDF
  3507                           fsr2h	equ	0xFDA
  3508                           fsr2l	equ	0xFD9
  3509                           status	equ	0xFD8
  3510                           
  3511 ;; *************** function _resetDBG *****************
  3512 ;; Defined at:
  3513 ;;		line 26 in file "../src/debug.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  b               1    wreg     unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  b               1    0[COMRAM] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;		None               void
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3527 ;;      Params:         0       0       0       0       0
  3528 ;;      Locals:         1       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0
  3530 ;;      Totals:         1       0       0       0       0
  3531 ;;Total ram usage:        1 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    5
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_debugNum
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text24
  3542  000F04                     __ptext24:
  3543                           	opt stack 0
  3544  000F04                     _resetDBG:
  3545                           	opt stack 18
  3546                           
  3547                           ;incstack = 0
  3548                           ;resetDBG@b stored from wreg
  3549  000F04  CFE8 F001          	movff	wreg,resetDBG@b
  3550                           
  3551                           ;debug.c: 27: switch(b) {
  3552  000F08  D00A               	goto	i1l1817
  3553  000F0A                     i1l354:
  3554                           
  3555                           ;debug.c: 29: LATBbits.LATB0 = 0;
  3556  000F0A  908A               	bcf	3978,0,c	;volatile
  3557                           
  3558                           ;debug.c: 30: break;
  3559  000F0C  0012               	return	
  3560  000F0E                     i1l356:
  3561                           
  3562                           ;debug.c: 32: LATBbits.LATB1 = 0;
  3563  000F0E  928A               	bcf	3978,1,c	;volatile
  3564                           
  3565                           ;debug.c: 33: break;
  3566  000F10  0012               	return	
  3567  000F12                     i1l357:
  3568                           
  3569                           ;debug.c: 35: LATBbits.LATB2 = 0;
  3570  000F12  948A               	bcf	3978,2,c	;volatile
  3571                           
  3572                           ;debug.c: 36: break;
  3573  000F14  0012               	return	
  3574  000F16                     i1l358:
  3575                           
  3576                           ;debug.c: 38: LATBbits.LATB3 = 0;
  3577  000F16  968A               	bcf	3978,3,c	;volatile
  3578                           
  3579                           ;debug.c: 39: break;
  3580  000F18  0012               	return	
  3581  000F1A                     i1l359:
  3582                           
  3583                           ;debug.c: 41: LATBbits.LATB4 = 0;
  3584  000F1A  988A               	bcf	3978,4,c	;volatile
  3585                           
  3586                           ;debug.c: 42: break;
  3587  000F1C  0012               	return	
  3588  000F1E                     i1l1817:
  3589  000F1E  5001               	movf	resetDBG@b,w,c
  3590                           
  3591                           ; Switch size 1, requested type "space"
  3592                           ; Number of cases is 5, Range of values is 0 to 4
  3593                           ; switch strategies available:
  3594                           ; Name         Instructions Cycles
  3595                           ; simple_byte           16     9 (average)
  3596                           ;	Chosen strategy is simple_byte
  3597  000F20  0A00               	xorlw	0	; case 0
  3598  000F22  B4D8               	btfsc	status,2,c
  3599  000F24  D7F2               	goto	i1l354
  3600  000F26  0A01               	xorlw	1	; case 1
  3601  000F28  B4D8               	btfsc	status,2,c
  3602  000F2A  D7F1               	goto	i1l356
  3603  000F2C  0A03               	xorlw	3	; case 2
  3604  000F2E  B4D8               	btfsc	status,2,c
  3605  000F30  D7F0               	goto	i1l357
  3606  000F32  0A01               	xorlw	1	; case 3
  3607  000F34  B4D8               	btfsc	status,2,c
  3608  000F36  D7EF               	goto	i1l358
  3609  000F38  0A07               	xorlw	7	; case 4
  3610  000F3A  A4D8               	btfss	status,2,c
  3611  000F3C  0012               	return	
  3612  000F3E  D7ED               	goto	i1l359
  3613  000F40                     __end_of_resetDBG:
  3614                           	opt stack 0
  3615                           pclatu	equ	0xFFB
  3616                           pclath	equ	0xFFA
  3617                           tblptru	equ	0xFF8
  3618                           tblptrh	equ	0xFF7
  3619                           tblptrl	equ	0xFF6
  3620                           tablat	equ	0xFF5
  3621                           prodh	equ	0xFF4
  3622                           prodl	equ	0xFF3
  3623                           intcon	equ	0xFF2
  3624                           postinc0	equ	0xFEE
  3625                           fsr0h	equ	0xFEA
  3626                           fsr0l	equ	0xFE9
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           postdec1	equ	0xFE5
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           bsr	equ	0xFE0
  3633                           indf2	equ	0xFDF
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _WriteTimer1 *****************
  3639 ;; Defined at:
  3640 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  timer1          2    0[COMRAM] unsigned int 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  timer           2    2[COMRAM] struct Timers
  3645 ;; Return value:  Size  Location     Type
  3646 ;;		None               void
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3654 ;;      Params:         2       0       0       0       0
  3655 ;;      Locals:         2       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         4       0       0       0       0
  3658 ;;Total ram usage:        4 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    5
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_timer1_int_handler
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text25
  3669  0010AC                     __ptext25:
  3670                           	opt stack 0
  3671  0010AC                     _WriteTimer1:
  3672                           	opt stack 19
  3673                           
  3674                           ;incstack = 0
  3675  0010AC  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3676  0010B0  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3677  0010B4  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3678  0010B8  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3679  0010BC  0012               	return	
  3680  0010BE                     __end_of_WriteTimer1:
  3681                           	opt stack 0
  3682                           pclatu	equ	0xFFB
  3683                           pclath	equ	0xFFA
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           fsr0h	equ	0xFEA
  3693                           fsr0l	equ	0xFE9
  3694                           wreg	equ	0xFE8
  3695                           indf1	equ	0xFE7
  3696                           postdec1	equ	0xFE5
  3697                           fsr1h	equ	0xFE2
  3698                           fsr1l	equ	0xFE1
  3699                           bsr	equ	0xFE0
  3700                           indf2	equ	0xFDF
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705 ;; *************** function _InterruptHandlerHigh *****************
  3706 ;; Defined at:
  3707 ;;		line 85 in file "../src/interrupts.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;		None               void
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3721 ;;      Params:         0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0
  3723 ;;      Temps:         14       0       0       0       0
  3724 ;;      Totals:        14       0       0       0       0
  3725 ;;Total ram usage:       14 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    4
  3728 ;; This function calls:
  3729 ;;		_SleepIfOkay
  3730 ;;		_i2c_int_handler
  3731 ;;		_timer0_int_handler
  3732 ;; This function is called by:
  3733 ;;		Interrupt level 2
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	intcode
  3738  000008                     __pintcode:
  3739                           	opt stack 0
  3740  000008                     _InterruptHandlerHigh:
  3741                           	opt stack 18
  3742                           
  3743                           ;incstack = 0
  3744  000008  CFFA F03A          	movff	pclath,??_InterruptHandlerHigh
  3745  00000C  CFFB F03B          	movff	pclatu,??_InterruptHandlerHigh+1
  3746  000010  EFE8  F004         	goto	int_func
  3747                           pclatu	equ	0xFFB
  3748                           pclath	equ	0xFFA
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           prodh	equ	0xFF4
  3754                           prodl	equ	0xFF3
  3755                           intcon	equ	0xFF2
  3756                           postinc0	equ	0xFEE
  3757                           fsr0h	equ	0xFEA
  3758                           fsr0l	equ	0xFE9
  3759                           wreg	equ	0xFE8
  3760                           indf1	equ	0xFE7
  3761                           postdec1	equ	0xFE5
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           bsr	equ	0xFE0
  3765                           indf2	equ	0xFDF
  3766                           fsr2h	equ	0xFDA
  3767                           fsr2l	equ	0xFD9
  3768                           status	equ	0xFD8
  3769                           
  3770                           	psect	intcode_body
  3771  0009D0                     __pintcode_body:
  3772                           	opt stack 18
  3773  0009D0                     int_func:
  3774                           	opt stack 18
  3775  0009D0  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerHigh+2
  3776  0009D4  CFEA F03D          	movff	fsr0h,??_InterruptHandlerHigh+3
  3777  0009D8  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerHigh+4
  3778  0009DC  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerHigh+5
  3779  0009E0  CFD9 F040          	movff	fsr2l,??_InterruptHandlerHigh+6
  3780  0009E4  CFDA F041          	movff	fsr2h,??_InterruptHandlerHigh+7
  3781  0009E8  CFF3 F042          	movff	prodl,??_InterruptHandlerHigh+8
  3782  0009EC  CFF4 F043          	movff	prodh,??_InterruptHandlerHigh+9
  3783  0009F0  CFF6 F044          	movff	tblptrl,??_InterruptHandlerHigh+10
  3784  0009F4  CFF7 F045          	movff	tblptrh,??_InterruptHandlerHigh+11
  3785  0009F8  CFF8 F046          	movff	tblptru,??_InterruptHandlerHigh+12
  3786  0009FC  CFF5 F047          	movff	tablat,??_InterruptHandlerHigh+13
  3787                           
  3788                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  3789  000A00  A69E               	btfss	3998,3,c	;volatile
  3790  000A02  D003               	goto	i2l2079
  3791                           
  3792                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  3793  000A04  969E               	bcf	3998,3,c	;volatile
  3794                           
  3795                           ;interrupts.c: 94: i2c_int_handler();
  3796  000A06  EC58  F000         	call	_i2c_int_handler	;wreg free
  3797  000A0A                     i2l2079:
  3798                           
  3799                           ;interrupts.c: 95: }
  3800                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  3801  000A0A  A4F2               	btfss	intcon,2,c	;volatile
  3802  000A0C  D003               	goto	i2l2085
  3803                           
  3804                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  3805  000A0E  94F2               	bcf	intcon,2,c	;volatile
  3806                           
  3807                           ;interrupts.c: 101: timer0_int_handler();
  3808  000A10  EC75  F008         	call	_timer0_int_handler	;wreg free
  3809  000A14                     i2l2085:
  3810                           
  3811                           ;interrupts.c: 102: }
  3812                           ;interrupts.c: 111: SleepIfOkay();
  3813  000A14  EC96  F006         	call	_SleepIfOkay	;wreg free
  3814  000A18  C047  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  3815  000A1C  C046  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  3816  000A20  C045  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  3817  000A24  C044  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  3818  000A28  C043  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  3819  000A2C  C042  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  3820  000A30  C041  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  3821  000A34  C040  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  3822  000A38  C03F  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  3823  000A3C  C03E  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  3824  000A40  C03D  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  3825  000A44  C03C  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  3826  000A48  C03B  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  3827  000A4C  C03A  FFFA         	movff	??_InterruptHandlerHigh,pclath
  3828  000A50  0011               	retfie		f
  3829  000A52                     __end_of_InterruptHandlerHigh:
  3830                           	opt stack 0
  3831                           pclatu	equ	0xFFB
  3832                           pclath	equ	0xFFA
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           prodh	equ	0xFF4
  3838                           prodl	equ	0xFF3
  3839                           intcon	equ	0xFF2
  3840                           postinc0	equ	0xFEE
  3841                           fsr0h	equ	0xFEA
  3842                           fsr0l	equ	0xFE9
  3843                           wreg	equ	0xFE8
  3844                           indf1	equ	0xFE7
  3845                           postdec1	equ	0xFE5
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           bsr	equ	0xFE0
  3849                           indf2	equ	0xFDF
  3850                           fsr2h	equ	0xFDA
  3851                           fsr2l	equ	0xFD9
  3852                           status	equ	0xFD8
  3853                           
  3854 ;; *************** function _timer0_int_handler *****************
  3855 ;; Defined at:
  3856 ;;		line 17 in file "../src/user_interrupts.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;		None               void
  3863 ;; Registers used:
  3864 ;;		None
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3870 ;;      Params:         0       0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0
  3872 ;;      Temps:          0       0       0       0       0
  3873 ;;      Totals:         0       0       0       0       0
  3874 ;;Total ram usage:        0 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_InterruptHandlerHigh
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text27
  3884  0010EA                     __ptext27:
  3885                           	opt stack 0
  3886  0010EA                     _timer0_int_handler:
  3887                           	opt stack 21
  3888                           
  3889                           ;incstack = 0
  3890  0010EA  0012               	return	
  3891  0010EC                     __end_of_timer0_int_handler:
  3892                           	opt stack 0
  3893                           pclatu	equ	0xFFB
  3894                           pclath	equ	0xFFA
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           prodh	equ	0xFF4
  3900                           prodl	equ	0xFF3
  3901                           intcon	equ	0xFF2
  3902                           postinc0	equ	0xFEE
  3903                           fsr0h	equ	0xFEA
  3904                           fsr0l	equ	0xFE9
  3905                           wreg	equ	0xFE8
  3906                           indf1	equ	0xFE7
  3907                           postdec1	equ	0xFE5
  3908                           fsr1h	equ	0xFE2
  3909                           fsr1l	equ	0xFE1
  3910                           bsr	equ	0xFE0
  3911                           indf2	equ	0xFDF
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           
  3916 ;; *************** function _i2c_int_handler *****************
  3917 ;; Defined at:
  3918 ;;		line 131 in file "../src/my_i2c.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  error_buf       3   48[COMRAM] unsigned char [3]
  3923 ;;  data_read       1   56[COMRAM] unsigned char 
  3924 ;;  msg_ready       1   55[COMRAM] unsigned char 
  3925 ;;  msg_to_send     1   54[COMRAM] unsigned char 
  3926 ;;  i2c_data        1   53[COMRAM] unsigned char 
  3927 ;;  overrun_erro    1   52[COMRAM] unsigned char 
  3928 ;;  data_written    1   51[COMRAM] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;		None               void
  3931 ;; Registers used:
  3932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3938 ;;      Params:         0       0       0       0       0
  3939 ;;      Locals:         9       0       0       0       0
  3940 ;;      Temps:          1       0       0       0       0
  3941 ;;      Totals:        10       0       0       0       0
  3942 ;;Total ram usage:       10 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    3
  3945 ;; This function calls:
  3946 ;;		_ToMainHigh_sendmsg
  3947 ;;		_handle_start
  3948 ;; This function is called by:
  3949 ;;		_InterruptHandlerHigh
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text28
  3954  0000B0                     __ptext28:
  3955                           	opt stack 0
  3956  0000B0                     _i2c_int_handler:
  3957                           	opt stack 18
  3958                           
  3959                           ;my_i2c.c: 133: unsigned char i2c_data;
  3960                           ;my_i2c.c: 134: unsigned char data_read = 0;
  3961                           
  3962                           ;incstack = 0
  3963  0000B0  6E30               	movwf	??_i2c_int_handler& (0+255),c
  3964  0000B2  0E00               	movlw	0
  3965  0000B4  6E39               	movwf	i2c_int_handler@data_read,c
  3966  0000B6  5030               	movf	??_i2c_int_handler& (0+255),w,c
  3967                           
  3968                           ;my_i2c.c: 135: unsigned char data_written = 0;
  3969  0000B8  6E30               	movwf	??_i2c_int_handler& (0+255),c
  3970  0000BA  0E00               	movlw	0
  3971  0000BC  6E34               	movwf	i2c_int_handler@data_written,c
  3972  0000BE  5030               	movf	??_i2c_int_handler& (0+255),w,c
  3973                           
  3974                           ;my_i2c.c: 136: unsigned char msg_ready = 0;
  3975  0000C0  6E30               	movwf	??_i2c_int_handler& (0+255),c
  3976  0000C2  0E00               	movlw	0
  3977  0000C4  6E38               	movwf	i2c_int_handler@msg_ready,c
  3978  0000C6  5030               	movf	??_i2c_int_handler& (0+255),w,c
  3979                           
  3980                           ;my_i2c.c: 137: unsigned char msg_to_send = 0;
  3981  0000C8  6E30               	movwf	??_i2c_int_handler& (0+255),c
  3982  0000CA  0E00               	movlw	0
  3983  0000CC  6E37               	movwf	i2c_int_handler@msg_to_send,c
  3984  0000CE  5030               	movf	??_i2c_int_handler& (0+255),w,c
  3985                           
  3986                           ;my_i2c.c: 138: unsigned char overrun_error = 0;
  3987  0000D0  6E30               	movwf	??_i2c_int_handler& (0+255),c
  3988  0000D2  0E00               	movlw	0
  3989  0000D4  6E35               	movwf	i2c_int_handler@overrun_error,c
  3990  0000D6  5030               	movf	??_i2c_int_handler& (0+255),w,c
  3991                           
  3992                           ;my_i2c.c: 139: unsigned char error_buf[3];
  3993                           ;my_i2c.c: 142: if (SSPCON1bits.SSPOV == 1) {
  3994  0000D8  ACC6               	btfss	4038,6,c	;volatile
  3995  0000DA  D025               	goto	i2l2101
  3996                           
  3997                           ;my_i2c.c: 143: SSPCON1bits.SSPOV = 0;
  3998  0000DC  9CC6               	bcf	4038,6,c	;volatile
  3999                           
  4000                           ;my_i2c.c: 147: ic_ptr->status = 0x5;
  4001  0000DE  0100               	movlb	0	; () banked
  4002  0000E0  EE20 F00C          	lfsr	2,12
  4003  0000E4  0100               	movlb	0	; () banked
  4004  0000E6  51D3               	movf	_ic_ptr& (0+255),w,b
  4005  0000E8  26D9               	addwf	fsr2l,f,c
  4006  0000EA  0100               	movlb	0	; () banked
  4007  0000EC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4008  0000EE  22DA               	addwfc	fsr2h,f,c
  4009  0000F0  0E05               	movlw	5
  4010  0000F2  6EDF               	movwf	indf2,c
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;my_i2c.c: 148: overrun_error = 1;
  4014  0000F4  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4015  0000F6  0E01               	movlw	1
  4016  0000F8  6E35               	movwf	i2c_int_handler@overrun_error,c
  4017  0000FA  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;my_i2c.c: 149: ic_ptr->error_count++;
  4021  0000FC  0100               	movlb	0	; () banked
  4022  0000FE  EE20 F00E          	lfsr	2,14
  4023  000102  0100               	movlb	0	; () banked
  4024  000104  51D3               	movf	_ic_ptr& (0+255),w,b
  4025  000106  26D9               	addwf	fsr2l,f,c
  4026  000108  0100               	movlb	0	; () banked
  4027  00010A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4028  00010C  22DA               	addwfc	fsr2h,f,c
  4029  00010E  2ADF               	incf	indf2,f,c
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;my_i2c.c: 150: ic_ptr->error_code = 0x4;
  4033  000110  0100               	movlb	0	; () banked
  4034  000112  EE20 F00D          	lfsr	2,13
  4035  000116  0100               	movlb	0	; () banked
  4036  000118  51D3               	movf	_ic_ptr& (0+255),w,b
  4037  00011A  26D9               	addwf	fsr2l,f,c
  4038  00011C  0100               	movlb	0	; () banked
  4039  00011E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4040  000120  22DA               	addwfc	fsr2h,f,c
  4041  000122  0E04               	movlw	4
  4042  000124  6EDF               	movwf	indf2,c
  4043  000126                     i2l2101:
  4044                           
  4045                           ;my_i2c.c: 151: }
  4046                           ;my_i2c.c: 153: if (SSPSTATbits.BF == 1) {
  4047  000126  A0C7               	btfss	4039,0,c	;volatile
  4048  000128  D006               	goto	i2l2107
  4049                           
  4050                           ;my_i2c.c: 154: i2c_data = SSPBUF;
  4051  00012A  CFC9 F036          	movff	4041,i2c_int_handler@i2c_data	;volatile
  4052                           
  4053                           ;my_i2c.c: 155: data_read = 1;
  4054  00012E  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4055  000130  0E01               	movlw	1
  4056  000132  6E39               	movwf	i2c_int_handler@data_read,c
  4057  000134  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4058  000136                     i2l2107:
  4059                           
  4060                           ;my_i2c.c: 156: }
  4061                           ;my_i2c.c: 158: if (!overrun_error) {
  4062  000136  6635               	tstfsz	i2c_int_handler@overrun_error,c
  4063  000138  D19C               	goto	i2l236
  4064  00013A  D185               	goto	i2l2195
  4065  00013C                     i2l238:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;my_i2c.c: 161: {
  4069                           ;my_i2c.c: 163: if (SSPSTATbits.S == 1) {
  4070  00013C  A6C7               	btfss	4039,3,c	;volatile
  4071  00013E  D199               	goto	i2l236
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;my_i2c.c: 164: handle_start(data_read);
  4075  000140  5039               	movf	i2c_int_handler@data_read,w,c
  4076  000142  ECE6  F003         	call	_handle_start
  4077                           
  4078                           ;my_i2c.c: 166: if (ic_ptr->status == 0x8) {
  4079  000146  0100               	movlb	0	; () banked
  4080  000148  EE20 F00C          	lfsr	2,12
  4081  00014C  0100               	movlb	0	; () banked
  4082  00014E  51D3               	movf	_ic_ptr& (0+255),w,b
  4083  000150  26D9               	addwf	fsr2l,f,c
  4084  000152  0100               	movlb	0	; () banked
  4085  000154  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4086  000156  22DA               	addwfc	fsr2h,f,c
  4087  000158  0E08               	movlw	8
  4088  00015A  62DF               	cpfseq	indf2,c
  4089  00015C  D18A               	goto	i2l236
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;my_i2c.c: 167: data_read = 0;
  4093  00015E  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4094  000160  0E00               	movlw	0
  4095  000162  6E39               	movwf	i2c_int_handler@data_read,c
  4096  000164  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4097                           
  4098                           ;my_i2c.c: 168: msg_to_send = 1;
  4099  000166  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4100  000168  0E01               	movlw	1
  4101  00016A  6E37               	movwf	i2c_int_handler@msg_to_send,c
  4102  00016C  D15F               	goto	L6
  4103  00016E                     i2l242:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;my_i2c.c: 174: {
  4107                           ;my_i2c.c: 176: if (SSPSTATbits.P == 1) {
  4108  00016E  A8C7               	btfss	4039,4,c	;volatile
  4109  000170  D02A               	goto	i2l2127
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;my_i2c.c: 179: ic_ptr->event_count++;
  4113  000172  0100               	movlb	0	; () banked
  4114  000174  EE20 F00B          	lfsr	2,11
  4115  000178  0100               	movlb	0	; () banked
  4116  00017A  51D3               	movf	_ic_ptr& (0+255),w,b
  4117  00017C  26D9               	addwf	fsr2l,f,c
  4118  00017E  0100               	movlb	0	; () banked
  4119  000180  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4120  000182  22DA               	addwfc	fsr2h,f,c
  4121  000184  2ADF               	incf	indf2,f,c
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;my_i2c.c: 180: if (data_read) {
  4125  000186  5039               	movf	i2c_int_handler@data_read,w,c
  4126  000188  B4D8               	btfsc	status,2,c
  4127  00018A  D152               	goto	L8
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;my_i2c.c: 181: if (SSPSTATbits.D_A == 0) {
  4131  00018C  BAC7               	btfsc	4039,5,c	;volatile
  4132  00018E  D005               	goto	i2l2125
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;my_i2c.c: 182: msg_ready = 1;
  4136  000190  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4137  000192  0E01               	movlw	1
  4138  000194  6E38               	movwf	i2c_int_handler@msg_ready,c
  4139  000196  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4140                           
  4141                           ;my_i2c.c: 183: } else {
  4142  000198  D14B               	goto	L8
  4143  00019A                     i2l2125:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;my_i2c.c: 184: ic_ptr->error_count++;
  4147  00019A  0100               	movlb	0	; () banked
  4148  00019C  EE20 F00E          	lfsr	2,14
  4149  0001A0  0100               	movlb	0	; () banked
  4150  0001A2  51D3               	movf	_ic_ptr& (0+255),w,b
  4151  0001A4  26D9               	addwf	fsr2l,f,c
  4152  0001A6  0100               	movlb	0	; () banked
  4153  0001A8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4154  0001AA  22DA               	addwfc	fsr2h,f,c
  4155  0001AC  2ADF               	incf	indf2,f,c
  4156                           
  4157                           ;my_i2c.c: 185: ic_ptr->error_code = 0x6;
  4158  0001AE  0100               	movlb	0	; () banked
  4159  0001B0  EE20 F00D          	lfsr	2,13
  4160  0001B4  0100               	movlb	0	; () banked
  4161  0001B6  51D3               	movf	_ic_ptr& (0+255),w,b
  4162  0001B8  26D9               	addwf	fsr2l,f,c
  4163  0001BA  0100               	movlb	0	; () banked
  4164  0001BC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4165  0001BE  22DA               	addwfc	fsr2h,f,c
  4166  0001C0  0E06               	movlw	6
  4167  0001C2  6EDF               	movwf	indf2,c
  4168                           
  4169                           ; BSR set to: 0
  4170  0001C4  D135               	goto	L8
  4171  0001C6                     i2l2127:
  4172                           
  4173                           ; BSR set to: 0
  4174  0001C6  5039               	movf	i2c_int_handler@data_read,w,c
  4175  0001C8  B4D8               	btfsc	status,2,c
  4176  0001CA  D153               	goto	i2l236
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;my_i2c.c: 190: ic_ptr->event_count++;
  4180  0001CC  0100               	movlb	0	; () banked
  4181  0001CE  EE20 F00B          	lfsr	2,11
  4182  0001D2  0100               	movlb	0	; () banked
  4183  0001D4  51D3               	movf	_ic_ptr& (0+255),w,b
  4184  0001D6  26D9               	addwf	fsr2l,f,c
  4185  0001D8  0100               	movlb	0	; () banked
  4186  0001DA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4187  0001DC  22DA               	addwfc	fsr2h,f,c
  4188  0001DE  2ADF               	incf	indf2,f,c
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;my_i2c.c: 191: if (SSPSTATbits.D_A == 0) {
  4192  0001E0  BAC7               	btfsc	4039,5,c	;volatile
  4193  0001E2  D019               	goto	i2l2143
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;my_i2c.c: 192: if (SSPSTATbits.R_W == 0) {
  4197  0001E4  B4C7               	btfsc	4039,2,c	;volatile
  4198  0001E6  D00B               	goto	i2l2137
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;my_i2c.c: 193: ic_ptr->status = 0x7;
  4202  0001E8  0100               	movlb	0	; () banked
  4203  0001EA  EE20 F00C          	lfsr	2,12
  4204  0001EE  0100               	movlb	0	; () banked
  4205  0001F0  51D3               	movf	_ic_ptr& (0+255),w,b
  4206  0001F2  26D9               	addwf	fsr2l,f,c
  4207  0001F4  0100               	movlb	0	; () banked
  4208  0001F6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4209  0001F8  22DA               	addwfc	fsr2h,f,c
  4210  0001FA  0E07               	movlw	7
  4211  0001FC  D06F               	goto	L5
  4212  0001FE                     i2l2137:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;my_i2c.c: 195: ic_ptr->status = 0x8;
  4216  0001FE  0100               	movlb	0	; () banked
  4217  000200  EE20 F00C          	lfsr	2,12
  4218  000204  0100               	movlb	0	; () banked
  4219  000206  51D3               	movf	_ic_ptr& (0+255),w,b
  4220  000208  26D9               	addwf	fsr2l,f,c
  4221  00020A  0100               	movlb	0	; () banked
  4222  00020C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4223  00020E  22DA               	addwfc	fsr2h,f,c
  4224  000210  0E08               	movlw	8
  4225  000212  6EDF               	movwf	indf2,c
  4226  000214  D104               	goto	L9
  4227  000216                     i2l2143:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;my_i2c.c: 201: ic_ptr->error_count++;
  4231  000216  0100               	movlb	0	; () banked
  4232  000218  EE20 F00E          	lfsr	2,14
  4233  00021C  0100               	movlb	0	; () banked
  4234  00021E  51D3               	movf	_ic_ptr& (0+255),w,b
  4235  000220  26D9               	addwf	fsr2l,f,c
  4236  000222  0100               	movlb	0	; () banked
  4237  000224  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4238  000226  22DA               	addwfc	fsr2h,f,c
  4239  000228  2ADF               	incf	indf2,f,c
  4240                           
  4241                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  4242  00022A  0100               	movlb	0	; () banked
  4243  00022C  EE20 F00C          	lfsr	2,12
  4244  000230  0100               	movlb	0	; () banked
  4245  000232  51D3               	movf	_ic_ptr& (0+255),w,b
  4246  000234  26D9               	addwf	fsr2l,f,c
  4247  000236  0100               	movlb	0	; () banked
  4248  000238  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4249  00023A  22DA               	addwfc	fsr2h,f,c
  4250  00023C  0E05               	movlw	5
  4251  00023E  6EDF               	movwf	indf2,c
  4252                           
  4253                           ;my_i2c.c: 203: ic_ptr->error_code = 0x6;
  4254  000240  0100               	movlb	0	; () banked
  4255  000242  EE20 F00D          	lfsr	2,13
  4256  000246  0100               	movlb	0	; () banked
  4257  000248  51D3               	movf	_ic_ptr& (0+255),w,b
  4258  00024A  26D9               	addwf	fsr2l,f,c
  4259  00024C  0100               	movlb	0	; () banked
  4260  00024E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4261  000250  22DA               	addwfc	fsr2h,f,c
  4262  000252  0E06               	movlw	6
  4263  000254  D043               	goto	L5
  4264  000256                     i2l2145:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;my_i2c.c: 209: {
  4268                           ;my_i2c.c: 210: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  4269  000256  0100               	movlb	0	; () banked
  4270  000258  EE20 F077          	lfsr	2,119
  4271  00025C  0100               	movlb	0	; () banked
  4272  00025E  51D3               	movf	_ic_ptr& (0+255),w,b
  4273  000260  26D9               	addwf	fsr2l,f,c
  4274  000262  0100               	movlb	0	; () banked
  4275  000264  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4276  000266  22DA               	addwfc	fsr2h,f,c
  4277  000268  50DF               	movf	indf2,w,c
  4278  00026A  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4279  00026C  0100               	movlb	0	; () banked
  4280  00026E  EE20 F076          	lfsr	2,118
  4281  000272  0100               	movlb	0	; () banked
  4282  000274  51D3               	movf	_ic_ptr& (0+255),w,b
  4283  000276  26D9               	addwf	fsr2l,f,c
  4284  000278  0100               	movlb	0	; () banked
  4285  00027A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4286  00027C  22DA               	addwfc	fsr2h,f,c
  4287  00027E  50DF               	movf	indf2,w,c
  4288  000280  5C30               	subwf	??_i2c_int_handler,w,c
  4289  000282  B0D8               	btfsc	status,0,c
  4290  000284  D0D5               	goto	L8
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;my_i2c.c: 213: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  4294  000286  0100               	movlb	0	; () banked
  4295  000288  EE20 F077          	lfsr	2,119
  4296  00028C  0100               	movlb	0	; () banked
  4297  00028E  51D3               	movf	_ic_ptr& (0+255),w,b
  4298  000290  26D9               	addwf	fsr2l,f,c
  4299  000292  0100               	movlb	0	; () banked
  4300  000294  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4301  000296  22DA               	addwfc	fsr2h,f,c
  4302  000298  50DF               	movf	indf2,w,c
  4303  00029A  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4304  00029C  5030               	movf	??_i2c_int_handler,w,c
  4305  00029E  0D01               	mullw	1
  4306  0002A0  0E0F               	movlw	15
  4307  0002A2  26F3               	addwf	prodl,f,c
  4308  0002A4  0E00               	movlw	0
  4309  0002A6  22F4               	addwfc	prodh,f,c
  4310  0002A8  50F3               	movf	prodl,w,c
  4311  0002AA  0100               	movlb	0	; () banked
  4312  0002AC  0100               	movlb	0	; () banked
  4313  0002AE  25D3               	addwf	_ic_ptr& (0+255),w,b
  4314  0002B0  6ED9               	movwf	fsr2l,c
  4315  0002B2  50F4               	movf	prodh,w,c
  4316  0002B4  0100               	movlb	0	; () banked
  4317  0002B6  0100               	movlb	0	; () banked
  4318  0002B8  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4319  0002BA  6EDA               	movwf	fsr2h,c
  4320  0002BC  50DF               	movf	indf2,w,c
  4321  0002BE  6EC9               	movwf	4041,c	;volatile
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;my_i2c.c: 214: ic_ptr->outbufind++;
  4325  0002C0  0100               	movlb	0	; () banked
  4326  0002C2  EE20 F077          	lfsr	2,119
  4327  0002C6  0100               	movlb	0	; () banked
  4328  0002C8  51D3               	movf	_ic_ptr& (0+255),w,b
  4329  0002CA  26D9               	addwf	fsr2l,f,c
  4330  0002CC  0100               	movlb	0	; () banked
  4331  0002CE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4332  0002D0  22DA               	addwfc	fsr2h,f,c
  4333  0002D2  2ADF               	incf	indf2,f,c
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;my_i2c.c: 215: data_written = 1;
  4337  0002D4  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4338  0002D6  0E01               	movlw	1
  4339  0002D8  6E34               	movwf	i2c_int_handler@data_written,c
  4340  0002DA  D0A8               	goto	L6
  4341  0002DC                     L5:
  4342  0002DC  6EDF               	movwf	indf2,c
  4343  0002DE  D0C9               	goto	i2l236
  4344  0002E0                     i2l256:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;my_i2c.c: 223: {
  4348                           ;my_i2c.c: 225: if (SSPSTATbits.P == 1) {
  4349  0002E0  A8C7               	btfss	4039,4,c	;volatile
  4350  0002E2  D059               	goto	i2l2173
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;my_i2c.c: 227: ic_ptr->event_count++;
  4354  0002E4  0100               	movlb	0	; () banked
  4355  0002E6  EE20 F00B          	lfsr	2,11
  4356  0002EA  0100               	movlb	0	; () banked
  4357  0002EC  51D3               	movf	_ic_ptr& (0+255),w,b
  4358  0002EE  26D9               	addwf	fsr2l,f,c
  4359  0002F0  0100               	movlb	0	; () banked
  4360  0002F2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4361  0002F4  22DA               	addwfc	fsr2h,f,c
  4362  0002F6  2ADF               	incf	indf2,f,c
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;my_i2c.c: 228: if (data_read) {
  4366  0002F8  5039               	movf	i2c_int_handler@data_read,w,c
  4367  0002FA  B4D8               	btfsc	status,2,c
  4368  0002FC  D047               	goto	i2l2169
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;my_i2c.c: 229: if (SSPSTATbits.D_A == 1) {
  4372  0002FE  AAC7               	btfss	4039,5,c	;volatile
  4373  000300  D024               	goto	i2l2167
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;my_i2c.c: 230: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  4377  000302  0100               	movlb	0	; () banked
  4378  000304  EE20 F00A          	lfsr	2,10
  4379  000308  0100               	movlb	0	; () banked
  4380  00030A  51D3               	movf	_ic_ptr& (0+255),w,b
  4381  00030C  26D9               	addwf	fsr2l,f,c
  4382  00030E  0100               	movlb	0	; () banked
  4383  000310  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4384  000312  22DA               	addwfc	fsr2h,f,c
  4385  000314  50DF               	movf	indf2,w,c
  4386  000316  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4387  000318  5030               	movf	??_i2c_int_handler,w,c
  4388  00031A  0D01               	mullw	1
  4389  00031C  50F3               	movf	prodl,w,c
  4390  00031E  0100               	movlb	0	; () banked
  4391  000320  0100               	movlb	0	; () banked
  4392  000322  25D3               	addwf	_ic_ptr& (0+255),w,b
  4393  000324  6ED9               	movwf	fsr2l,c
  4394  000326  50F4               	movf	prodh,w,c
  4395  000328  0100               	movlb	0	; () banked
  4396  00032A  0100               	movlb	0	; () banked
  4397  00032C  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4398  00032E  6EDA               	movwf	fsr2h,c
  4399  000330  C036  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;my_i2c.c: 231: ic_ptr->buflen++;
  4403  000334  0100               	movlb	0	; () banked
  4404  000336  EE20 F00A          	lfsr	2,10
  4405  00033A  0100               	movlb	0	; () banked
  4406  00033C  51D3               	movf	_ic_ptr& (0+255),w,b
  4407  00033E  26D9               	addwf	fsr2l,f,c
  4408  000340  0100               	movlb	0	; () banked
  4409  000342  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4410  000344  22DA               	addwfc	fsr2h,f,c
  4411  000346  2ADF               	incf	indf2,f,c
  4412  000348  D021               	goto	i2l2169
  4413  00034A                     i2l2167:
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;my_i2c.c: 234: ic_ptr->error_count++;
  4417  00034A  0100               	movlb	0	; () banked
  4418  00034C  EE20 F00E          	lfsr	2,14
  4419  000350  0100               	movlb	0	; () banked
  4420  000352  51D3               	movf	_ic_ptr& (0+255),w,b
  4421  000354  26D9               	addwf	fsr2l,f,c
  4422  000356  0100               	movlb	0	; () banked
  4423  000358  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4424  00035A  22DA               	addwfc	fsr2h,f,c
  4425  00035C  2ADF               	incf	indf2,f,c
  4426                           
  4427                           ;my_i2c.c: 235: ic_ptr->error_code = 0x6;
  4428  00035E  0100               	movlb	0	; () banked
  4429  000360  EE20 F00D          	lfsr	2,13
  4430  000364  0100               	movlb	0	; () banked
  4431  000366  51D3               	movf	_ic_ptr& (0+255),w,b
  4432  000368  26D9               	addwf	fsr2l,f,c
  4433  00036A  0100               	movlb	0	; () banked
  4434  00036C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4435  00036E  22DA               	addwfc	fsr2h,f,c
  4436  000370  0E06               	movlw	6
  4437  000372  6EDF               	movwf	indf2,c
  4438                           
  4439                           ;my_i2c.c: 236: ic_ptr->status = 0x5;
  4440  000374  0100               	movlb	0	; () banked
  4441  000376  EE20 F00C          	lfsr	2,12
  4442  00037A  0100               	movlb	0	; () banked
  4443  00037C  51D3               	movf	_ic_ptr& (0+255),w,b
  4444  00037E  26D9               	addwf	fsr2l,f,c
  4445  000380  0100               	movlb	0	; () banked
  4446  000382  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4447  000384  22DA               	addwfc	fsr2h,f,c
  4448  000386  0E05               	movlw	5
  4449  000388  6EDF               	movwf	indf2,c
  4450  00038A  D052               	goto	L8
  4451  00038C                     i2l2169:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;my_i2c.c: 239: msg_ready = 1;
  4455  00038C  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4456  00038E  0E01               	movlw	1
  4457  000390  6E38               	movwf	i2c_int_handler@msg_ready,c
  4458  000392  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4459                           
  4460                           ; BSR set to: 0
  4461  000394  D04D               	goto	L8
  4462  000396                     i2l2173:
  4463                           
  4464                           ; BSR set to: 0
  4465  000396  5039               	movf	i2c_int_handler@data_read,w,c
  4466  000398  B4D8               	btfsc	status,2,c
  4467  00039A  D06B               	goto	i2l236
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;my_i2c.c: 243: ic_ptr->event_count++;
  4471  00039C  0100               	movlb	0	; () banked
  4472  00039E  EE20 F00B          	lfsr	2,11
  4473  0003A2  0100               	movlb	0	; () banked
  4474  0003A4  51D3               	movf	_ic_ptr& (0+255),w,b
  4475  0003A6  26D9               	addwf	fsr2l,f,c
  4476  0003A8  0100               	movlb	0	; () banked
  4477  0003AA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4478  0003AC  22DA               	addwfc	fsr2h,f,c
  4479  0003AE  2ADF               	incf	indf2,f,c
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;my_i2c.c: 244: if (SSPSTATbits.D_A == 1) {
  4483  0003B0  AAC7               	btfss	4039,5,c	;volatile
  4484  0003B2  D024               	goto	i2l264
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;my_i2c.c: 245: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  4488  0003B4  0100               	movlb	0	; () banked
  4489  0003B6  EE20 F00A          	lfsr	2,10
  4490  0003BA  0100               	movlb	0	; () banked
  4491  0003BC  51D3               	movf	_ic_ptr& (0+255),w,b
  4492  0003BE  26D9               	addwf	fsr2l,f,c
  4493  0003C0  0100               	movlb	0	; () banked
  4494  0003C2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4495  0003C4  22DA               	addwfc	fsr2h,f,c
  4496  0003C6  50DF               	movf	indf2,w,c
  4497  0003C8  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4498  0003CA  5030               	movf	??_i2c_int_handler,w,c
  4499  0003CC  0D01               	mullw	1
  4500  0003CE  50F3               	movf	prodl,w,c
  4501  0003D0  0100               	movlb	0	; () banked
  4502  0003D2  0100               	movlb	0	; () banked
  4503  0003D4  25D3               	addwf	_ic_ptr& (0+255),w,b
  4504  0003D6  6ED9               	movwf	fsr2l,c
  4505  0003D8  50F4               	movf	prodh,w,c
  4506  0003DA  0100               	movlb	0	; () banked
  4507  0003DC  0100               	movlb	0	; () banked
  4508  0003DE  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4509  0003E0  6EDA               	movwf	fsr2h,c
  4510  0003E2  C036  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;my_i2c.c: 246: ic_ptr->buflen++;
  4514  0003E6  0100               	movlb	0	; () banked
  4515  0003E8  EE20 F00A          	lfsr	2,10
  4516  0003EC  0100               	movlb	0	; () banked
  4517  0003EE  51D3               	movf	_ic_ptr& (0+255),w,b
  4518  0003F0  26D9               	addwf	fsr2l,f,c
  4519  0003F2  0100               	movlb	0	; () banked
  4520  0003F4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4521  0003F6  22DA               	addwfc	fsr2h,f,c
  4522  0003F8  2ADF               	incf	indf2,f,c
  4523                           
  4524                           ;my_i2c.c: 247: } else {
  4525  0003FA  D03B               	goto	i2l236
  4526  0003FC                     i2l264:
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;my_i2c.c: 248: if (SSPSTATbits.R_W == 1) {
  4530  0003FC  A4C7               	btfss	4039,2,c	;volatile
  4531  0003FE  D6CD               	goto	i2l2125
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;my_i2c.c: 249: ic_ptr->status = 0x8;
  4535  000400  0100               	movlb	0	; () banked
  4536  000402  EE20 F00C          	lfsr	2,12
  4537  000406  0100               	movlb	0	; () banked
  4538  000408  51D3               	movf	_ic_ptr& (0+255),w,b
  4539  00040A  26D9               	addwf	fsr2l,f,c
  4540  00040C  0100               	movlb	0	; () banked
  4541  00040E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4542  000410  22DA               	addwfc	fsr2h,f,c
  4543  000412  0E08               	movlw	8
  4544  000414  6EDF               	movwf	indf2,c
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;my_i2c.c: 250: msg_ready = 1;
  4548  000416  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4549  000418  0E01               	movlw	1
  4550  00041A  6E38               	movwf	i2c_int_handler@msg_ready,c
  4551  00041C  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4552  00041E                     L9:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;my_i2c.c: 251: msg_to_send = 1;
  4556  00041E  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4557  000420  0E01               	movlw	1
  4558  000422  6E37               	movwf	i2c_int_handler@msg_to_send,c
  4559  000424  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;my_i2c.c: 253: data_read = 0;
  4563  000426  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4564  000428  0E00               	movlw	0
  4565  00042A  6E39               	movwf	i2c_int_handler@data_read,c
  4566  00042C                     L6:
  4567  00042C  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4568                           
  4569                           ;my_i2c.c: 254: } else {
  4570  00042E  D021               	goto	i2l236
  4571  000430                     L8:
  4572                           
  4573                           ;my_i2c.c: 257: ic_ptr->status = 0x5;
  4574  000430  0100               	movlb	0	; () banked
  4575  000432  EE20 F00C          	lfsr	2,12
  4576  000436  0100               	movlb	0	; () banked
  4577  000438  51D3               	movf	_ic_ptr& (0+255),w,b
  4578  00043A  26D9               	addwf	fsr2l,f,c
  4579  00043C  0100               	movlb	0	; () banked
  4580  00043E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4581  000440  22DA               	addwfc	fsr2h,f,c
  4582  000442  0E05               	movlw	5
  4583  000444  D74B               	goto	L5
  4584  000446                     i2l2195:
  4585  000446  0100               	movlb	0	; () banked
  4586  000448  EE20 F00C          	lfsr	2,12
  4587  00044C  0100               	movlb	0	; () banked
  4588  00044E  51D3               	movf	_ic_ptr& (0+255),w,b
  4589  000450  26D9               	addwf	fsr2l,f,c
  4590  000452  0100               	movlb	0	; () banked
  4591  000454  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4592  000456  22DA               	addwfc	fsr2h,f,c
  4593  000458  50DF               	movf	indf2,w,c
  4594                           
  4595                           ; Switch size 1, requested type "space"
  4596                           ; Number of cases is 4, Range of values is 5 to 8
  4597                           ; switch strategies available:
  4598                           ; Name         Instructions Cycles
  4599                           ; simple_byte           13     7 (average)
  4600                           ;	Chosen strategy is simple_byte
  4601  00045A  0A05               	xorlw	5	; case 5
  4602  00045C  B4D8               	btfsc	status,2,c
  4603  00045E  D66E               	goto	i2l238
  4604  000460  0A03               	xorlw	3	; case 6
  4605  000462  B4D8               	btfsc	status,2,c
  4606  000464  D684               	goto	i2l242
  4607  000466  0A01               	xorlw	1	; case 7
  4608  000468  B4D8               	btfsc	status,2,c
  4609  00046A  D73A               	goto	i2l256
  4610  00046C  0A0F               	xorlw	15	; case 8
  4611  00046E  B4D8               	btfsc	status,2,c
  4612  000470  D6F2               	goto	i2l2145
  4613  000472                     i2l236:
  4614                           
  4615                           ;my_i2c.c: 264: }
  4616                           ;my_i2c.c: 267: if (data_read || data_written) {
  4617  000472  6639               	tstfsz	i2c_int_handler@data_read,c
  4618  000474  D003               	goto	i2l270
  4619  000476  5034               	movf	i2c_int_handler@data_written,w,c
  4620  000478  B4D8               	btfsc	status,2,c
  4621  00047A  D002               	goto	i2l2201
  4622  00047C                     i2l270:
  4623                           
  4624                           ;my_i2c.c: 272: if (SSPCON1bits.CKP == 0) {
  4625  00047C  A8C6               	btfss	4038,4,c	;volatile
  4626                           
  4627                           ;my_i2c.c: 273: SSPCON1bits.CKP = 1;
  4628  00047E  88C6               	bsf	4038,4,c	;volatile
  4629  000480                     i2l2201:
  4630                           
  4631                           ;my_i2c.c: 274: }
  4632                           ;my_i2c.c: 275: }
  4633                           ;my_i2c.c: 278: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  4634  000480  0100               	movlb	0	; () banked
  4635  000482  EE20 F00A          	lfsr	2,10
  4636  000486  0100               	movlb	0	; () banked
  4637  000488  51D3               	movf	_ic_ptr& (0+255),w,b
  4638  00048A  26D9               	addwf	fsr2l,f,c
  4639  00048C  0100               	movlb	0	; () banked
  4640  00048E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4641  000490  22DA               	addwfc	fsr2h,f,c
  4642  000492  0E08               	movlw	8
  4643  000494  64DF               	cpfsgt	indf2,c
  4644  000496  D022               	goto	i2l2207
  4645                           
  4646                           ; BSR set to: 0
  4647  000498  6638               	tstfsz	i2c_int_handler@msg_ready,c
  4648  00049A  D020               	goto	i2l2207
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;my_i2c.c: 279: ic_ptr->status = 0x5;
  4652  00049C  0100               	movlb	0	; () banked
  4653  00049E  EE20 F00C          	lfsr	2,12
  4654  0004A2  0100               	movlb	0	; () banked
  4655  0004A4  51D3               	movf	_ic_ptr& (0+255),w,b
  4656  0004A6  26D9               	addwf	fsr2l,f,c
  4657  0004A8  0100               	movlb	0	; () banked
  4658  0004AA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4659  0004AC  22DA               	addwfc	fsr2h,f,c
  4660  0004AE  0E05               	movlw	5
  4661  0004B0  6EDF               	movwf	indf2,c
  4662                           
  4663                           ;my_i2c.c: 280: ic_ptr->error_count++;
  4664  0004B2  0100               	movlb	0	; () banked
  4665  0004B4  EE20 F00E          	lfsr	2,14
  4666  0004B8  0100               	movlb	0	; () banked
  4667  0004BA  51D3               	movf	_ic_ptr& (0+255),w,b
  4668  0004BC  26D9               	addwf	fsr2l,f,c
  4669  0004BE  0100               	movlb	0	; () banked
  4670  0004C0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4671  0004C2  22DA               	addwfc	fsr2h,f,c
  4672  0004C4  2ADF               	incf	indf2,f,c
  4673                           
  4674                           ;my_i2c.c: 281: ic_ptr->error_code = 0x7;
  4675  0004C6  0100               	movlb	0	; () banked
  4676  0004C8  EE20 F00D          	lfsr	2,13
  4677  0004CC  0100               	movlb	0	; () banked
  4678  0004CE  51D3               	movf	_ic_ptr& (0+255),w,b
  4679  0004D0  26D9               	addwf	fsr2l,f,c
  4680  0004D2  0100               	movlb	0	; () banked
  4681  0004D4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4682  0004D6  22DA               	addwfc	fsr2h,f,c
  4683  0004D8  0E07               	movlw	7
  4684  0004DA  6EDF               	movwf	indf2,c
  4685  0004DC                     i2l2207:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;my_i2c.c: 282: }
  4689                           ;my_i2c.c: 284: if (msg_ready) {
  4690  0004DC  5038               	movf	i2c_int_handler@msg_ready,w,c
  4691  0004DE  B4D8               	btfsc	status,2,c
  4692  0004E0  D004               	goto	i2l2211
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;my_i2c.c: 291: ic_ptr->buflen = 0;
  4696  0004E2  0100               	movlb	0	; () banked
  4697  0004E4  EE20 F00A          	lfsr	2,10
  4698  0004E8  D03B               	goto	L7
  4699  0004EA                     i2l2211:
  4700                           
  4701                           ; BSR set to: 0
  4702  0004EA  0100               	movlb	0	; () banked
  4703  0004EC  EE20 F00E          	lfsr	2,14
  4704  0004F0  0100               	movlb	0	; () banked
  4705  0004F2  51D3               	movf	_ic_ptr& (0+255),w,b
  4706  0004F4  26D9               	addwf	fsr2l,f,c
  4707  0004F6  0100               	movlb	0	; () banked
  4708  0004F8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4709  0004FA  22DA               	addwfc	fsr2h,f,c
  4710  0004FC  50DF               	movf	indf2,w,c
  4711  0004FE  B4D8               	btfsc	status,2,c
  4712  000500  D037               	goto	i2l2219
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;my_i2c.c: 293: error_buf[0] = ic_ptr->error_count;
  4716  000502  0100               	movlb	0	; () banked
  4717  000504  EE20 F00E          	lfsr	2,14
  4718  000508  0100               	movlb	0	; () banked
  4719  00050A  51D3               	movf	_ic_ptr& (0+255),w,b
  4720  00050C  26D9               	addwf	fsr2l,f,c
  4721  00050E  0100               	movlb	0	; () banked
  4722  000510  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4723  000512  22DA               	addwfc	fsr2h,f,c
  4724  000514  50DF               	movf	indf2,w,c
  4725  000516  6E31               	movwf	i2c_int_handler@error_buf,c
  4726                           
  4727                           ;my_i2c.c: 294: error_buf[1] = ic_ptr->error_code;
  4728  000518  0100               	movlb	0	; () banked
  4729  00051A  EE20 F00D          	lfsr	2,13
  4730  00051E  0100               	movlb	0	; () banked
  4731  000520  51D3               	movf	_ic_ptr& (0+255),w,b
  4732  000522  26D9               	addwf	fsr2l,f,c
  4733  000524  0100               	movlb	0	; () banked
  4734  000526  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4735  000528  22DA               	addwfc	fsr2h,f,c
  4736  00052A  50DF               	movf	indf2,w,c
  4737  00052C  6E32               	movwf	i2c_int_handler@error_buf+1,c
  4738                           
  4739                           ;my_i2c.c: 295: error_buf[2] = ic_ptr->event_count;
  4740  00052E  0100               	movlb	0	; () banked
  4741  000530  EE20 F00B          	lfsr	2,11
  4742  000534  0100               	movlb	0	; () banked
  4743  000536  51D3               	movf	_ic_ptr& (0+255),w,b
  4744  000538  26D9               	addwf	fsr2l,f,c
  4745  00053A  0100               	movlb	0	; () banked
  4746  00053C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4747  00053E  22DA               	addwfc	fsr2h,f,c
  4748  000540  50DF               	movf	indf2,w,c
  4749  000542  6E33               	movwf	i2c_int_handler@error_buf+2,c
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;my_i2c.c: 296: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  4753  000544  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4754  000546  0E29               	movlw	41
  4755  000548  6E2C               	movwf	ToMainHigh_sendmsg@msgtype,c
  4756  00054A  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4757  00054C  0E00               	movlw	high i2c_int_handler@error_buf
  4758  00054E  6E2E               	movwf	ToMainHigh_sendmsg@data+1,c
  4759  000550  0E31               	movlw	low i2c_int_handler@error_buf
  4760  000552  6E2D               	movwf	ToMainHigh_sendmsg@data,c
  4761  000554  0E03               	movlw	3
  4762  000556  EC03  F008         	call	_ToMainHigh_sendmsg
  4763                           
  4764                           ;my_i2c.c: 297: ic_ptr->error_count = 0;
  4765  00055A  0100               	movlb	0	; () banked
  4766  00055C  EE20 F00E          	lfsr	2,14
  4767  000560                     L7:
  4768  000560  0100               	movlb	0	; () banked
  4769  000562  51D3               	movf	_ic_ptr& (0+255),w,b
  4770  000564  26D9               	addwf	fsr2l,f,c
  4771  000566  0100               	movlb	0	; () banked
  4772  000568  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4773  00056A  22DA               	addwfc	fsr2h,f,c
  4774  00056C  0E00               	movlw	0
  4775  00056E  6EDF               	movwf	indf2,c
  4776  000570                     i2l2219:
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;my_i2c.c: 298: }
  4780                           ;my_i2c.c: 299: if (msg_to_send) {
  4781  000570  5037               	movf	i2c_int_handler@msg_to_send,w,c
  4782  000572  B4D8               	btfsc	status,2,c
  4783  000574  0012               	return	
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;my_i2c.c: 303: msg_to_send = 0;
  4787  000576  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4788  000578  0E00               	movlw	0
  4789  00057A  6E37               	movwf	i2c_int_handler@msg_to_send,c
  4790  00057C  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4791  00057E  0012               	return	
  4792  000580                     __end_of_i2c_int_handler:
  4793                           	opt stack 0
  4794                           pclatu	equ	0xFFB
  4795                           pclath	equ	0xFFA
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           prodh	equ	0xFF4
  4801                           prodl	equ	0xFF3
  4802                           intcon	equ	0xFF2
  4803                           postinc0	equ	0xFEE
  4804                           fsr0h	equ	0xFEA
  4805                           fsr0l	equ	0xFE9
  4806                           wreg	equ	0xFE8
  4807                           indf1	equ	0xFE7
  4808                           postdec1	equ	0xFE5
  4809                           fsr1h	equ	0xFE2
  4810                           fsr1l	equ	0xFE1
  4811                           bsr	equ	0xFE0
  4812                           indf2	equ	0xFDF
  4813                           fsr2h	equ	0xFDA
  4814                           fsr2l	equ	0xFD9
  4815                           status	equ	0xFD8
  4816                           
  4817 ;; *************** function _handle_start *****************
  4818 ;; Defined at:
  4819 ;;		line 102 in file "../src/my_i2c.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  data_read       1    wreg     unsigned char 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  data_read       1   21[COMRAM] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4833 ;;      Params:         0       0       0       0       0
  4834 ;;      Locals:         1       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0
  4836 ;;      Totals:         1       0       0       0       0
  4837 ;;Total ram usage:        1 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_i2c_int_handler
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text29
  4847  0007CC                     __ptext29:
  4848                           	opt stack 0
  4849  0007CC                     _handle_start:
  4850                           	opt stack 20
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;incstack = 0
  4854                           ;handle_start@data_read stored from wreg
  4855  0007CC  CFE8 F016          	movff	wreg,handle_start@data_read
  4856                           
  4857                           ;my_i2c.c: 103: ic_ptr->event_count = 1;
  4858  0007D0  0100               	movlb	0	; () banked
  4859  0007D2  EE20 F00B          	lfsr	2,11
  4860  0007D6  0100               	movlb	0	; () banked
  4861  0007D8  51D3               	movf	_ic_ptr& (0+255),w,b
  4862  0007DA  26D9               	addwf	fsr2l,f,c
  4863  0007DC  0100               	movlb	0	; () banked
  4864  0007DE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4865  0007E0  22DA               	addwfc	fsr2h,f,c
  4866  0007E2  0E01               	movlw	1
  4867  0007E4  6EDF               	movwf	indf2,c
  4868                           
  4869                           ;my_i2c.c: 104: ic_ptr->buflen = 0;
  4870  0007E6  0100               	movlb	0	; () banked
  4871  0007E8  EE20 F00A          	lfsr	2,10
  4872  0007EC  0100               	movlb	0	; () banked
  4873  0007EE  51D3               	movf	_ic_ptr& (0+255),w,b
  4874  0007F0  26D9               	addwf	fsr2l,f,c
  4875  0007F2  0100               	movlb	0	; () banked
  4876  0007F4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4877  0007F6  22DA               	addwfc	fsr2h,f,c
  4878  0007F8  0E00               	movlw	0
  4879  0007FA  6EDF               	movwf	indf2,c
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;my_i2c.c: 106: if (data_read) {
  4883  0007FC  5016               	movf	handle_start@data_read,w,c
  4884  0007FE  B4D8               	btfsc	status,2,c
  4885  000800  D03D               	goto	i2l2563
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;my_i2c.c: 107: if (SSPSTATbits.D_A == 1) {
  4889  000802  AAC7               	btfss	4039,5,c	;volatile
  4890  000804  D021               	goto	i2l226
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;my_i2c.c: 110: ic_ptr->status = 0x5;
  4894  000806  0100               	movlb	0	; () banked
  4895  000808  EE20 F00C          	lfsr	2,12
  4896  00080C  0100               	movlb	0	; () banked
  4897  00080E  51D3               	movf	_ic_ptr& (0+255),w,b
  4898  000810  26D9               	addwf	fsr2l,f,c
  4899  000812  0100               	movlb	0	; () banked
  4900  000814  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4901  000816  22DA               	addwfc	fsr2h,f,c
  4902  000818  0E05               	movlw	5
  4903  00081A  6EDF               	movwf	indf2,c
  4904                           
  4905                           ;my_i2c.c: 111: ic_ptr->error_count++;
  4906  00081C  0100               	movlb	0	; () banked
  4907  00081E  EE20 F00E          	lfsr	2,14
  4908  000822  0100               	movlb	0	; () banked
  4909  000824  51D3               	movf	_ic_ptr& (0+255),w,b
  4910  000826  26D9               	addwf	fsr2l,f,c
  4911  000828  0100               	movlb	0	; () banked
  4912  00082A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4913  00082C  22DA               	addwfc	fsr2h,f,c
  4914  00082E  2ADF               	incf	indf2,f,c
  4915                           
  4916                           ;my_i2c.c: 112: ic_ptr->error_code = 0x5;
  4917  000830  0100               	movlb	0	; () banked
  4918  000832  EE20 F00D          	lfsr	2,13
  4919  000836  0100               	movlb	0	; () banked
  4920  000838  51D3               	movf	_ic_ptr& (0+255),w,b
  4921  00083A  26D9               	addwf	fsr2l,f,c
  4922  00083C  0100               	movlb	0	; () banked
  4923  00083E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4924  000840  22DA               	addwfc	fsr2h,f,c
  4925  000842  0E05               	movlw	5
  4926  000844  6EDF               	movwf	indf2,c
  4927                           
  4928                           ;my_i2c.c: 113: } else {
  4929  000846  0012               	return	
  4930  000848                     i2l226:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;my_i2c.c: 114: if (SSPSTATbits.R_W == 1) {
  4934  000848  A4C7               	btfss	4039,2,c	;volatile
  4935  00084A  D00C               	goto	i2l2561
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;my_i2c.c: 115: ic_ptr->status = 0x8;
  4939  00084C  0100               	movlb	0	; () banked
  4940  00084E  EE20 F00C          	lfsr	2,12
  4941  000852  0100               	movlb	0	; () banked
  4942  000854  51D3               	movf	_ic_ptr& (0+255),w,b
  4943  000856  26D9               	addwf	fsr2l,f,c
  4944  000858  0100               	movlb	0	; () banked
  4945  00085A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4946  00085C  22DA               	addwfc	fsr2h,f,c
  4947  00085E  0E08               	movlw	8
  4948  000860  6EDF               	movwf	indf2,c
  4949                           
  4950                           ;my_i2c.c: 116: } else {
  4951  000862  0012               	return	
  4952  000864                     i2l2561:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;my_i2c.c: 117: ic_ptr->status = 0x7;
  4956  000864  0100               	movlb	0	; () banked
  4957  000866  EE20 F00C          	lfsr	2,12
  4958  00086A  0100               	movlb	0	; () banked
  4959  00086C  51D3               	movf	_ic_ptr& (0+255),w,b
  4960  00086E  26D9               	addwf	fsr2l,f,c
  4961  000870  0100               	movlb	0	; () banked
  4962  000872  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4963  000874  22DA               	addwfc	fsr2h,f,c
  4964  000876  0E07               	movlw	7
  4965  000878  6EDF               	movwf	indf2,c
  4966  00087A  0012               	return	
  4967  00087C                     i2l2563:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;my_i2c.c: 121: ic_ptr->status = 0x6;
  4971  00087C  0100               	movlb	0	; () banked
  4972  00087E  EE20 F00C          	lfsr	2,12
  4973  000882  0100               	movlb	0	; () banked
  4974  000884  51D3               	movf	_ic_ptr& (0+255),w,b
  4975  000886  26D9               	addwf	fsr2l,f,c
  4976  000888  0100               	movlb	0	; () banked
  4977  00088A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4978  00088C  22DA               	addwfc	fsr2h,f,c
  4979  00088E  0E06               	movlw	6
  4980  000890  6EDF               	movwf	indf2,c
  4981  000892  0012               	return	
  4982  000894                     __end_of_handle_start:
  4983                           	opt stack 0
  4984                           pclatu	equ	0xFFB
  4985                           pclath	equ	0xFFA
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           prodh	equ	0xFF4
  4991                           prodl	equ	0xFF3
  4992                           intcon	equ	0xFF2
  4993                           postinc0	equ	0xFEE
  4994                           fsr0h	equ	0xFEA
  4995                           fsr0l	equ	0xFE9
  4996                           wreg	equ	0xFE8
  4997                           indf1	equ	0xFE7
  4998                           postdec1	equ	0xFE5
  4999                           fsr1h	equ	0xFE2
  5000                           fsr1l	equ	0xFE1
  5001                           bsr	equ	0xFE0
  5002                           indf2	equ	0xFDF
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _ToMainHigh_sendmsg *****************
  5008 ;; Defined at:
  5009 ;;		line 127 in file "../src/messages.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  length          1    wreg     unsigned char 
  5012 ;;  msgtype         1   43[COMRAM] unsigned char 
  5013 ;;  data            2   44[COMRAM] PTR void 
  5014 ;;		 -> ADCBuffer(5), reqADData@buf(10), i2c_int_handler@error_buf(3), 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  length          1   46[COMRAM] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      char 
  5019 ;; Registers used:
  5020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5026 ;;      Params:         3       0       0       0       0
  5027 ;;      Locals:         1       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0
  5029 ;;      Totals:         4       0       0       0       0
  5030 ;;Total ram usage:        4 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    2
  5033 ;; This function calls:
  5034 ;;		_send_msg
  5035 ;; This function is called by:
  5036 ;;		_i2c_int_handler
  5037 ;;		_reqADData
  5038 ;;		_adc_int_handler
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text30
  5043  001006                     __ptext30:
  5044                           	opt stack 0
  5045  001006                     _ToMainHigh_sendmsg:
  5046                           	opt stack 18
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;incstack = 0
  5050                           ;ToMainHigh_sendmsg@length stored from wreg
  5051  001006  CFE8 F02F          	movff	wreg,ToMainHigh_sendmsg@length
  5052                           
  5053                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5054                           ;	Return value of _ToMainHigh_sendmsg is never used
  5055  00100A  0101               	movlb	1	; () banked
  5056  00100C  0E01               	movlw	high _ToMainHigh_MQ
  5057  00100E  6E21               	movwf	send_msg@qptr+1,c
  5058  001010  0101               	movlb	1	; () banked
  5059  001012  0EBF               	movlw	low _ToMainHigh_MQ
  5060  001014  6E20               	movwf	send_msg@qptr,c
  5061  001016  C02F  F022         	movff	ToMainHigh_sendmsg@length,send_msg@length
  5062  00101A  C02C  F023         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  5063  00101E  C02E  F025         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  5064  001022  C02D  F024         	movff	ToMainHigh_sendmsg@data,send_msg@data
  5065  001026  EC4A  F004         	call	_send_msg	;wreg free
  5066  00102A  0012               	return	
  5067  00102C                     __end_of_ToMainHigh_sendmsg:
  5068                           	opt stack 0
  5069                           pclatu	equ	0xFFB
  5070                           pclath	equ	0xFFA
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           intcon	equ	0xFF2
  5078                           postinc0	equ	0xFEE
  5079                           fsr0h	equ	0xFEA
  5080                           fsr0l	equ	0xFE9
  5081                           wreg	equ	0xFE8
  5082                           indf1	equ	0xFE7
  5083                           postdec1	equ	0xFE5
  5084                           fsr1h	equ	0xFE2
  5085                           fsr1l	equ	0xFE1
  5086                           bsr	equ	0xFE0
  5087                           indf2	equ	0xFDF
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           status	equ	0xFD8
  5091                           
  5092 ;; *************** function _send_msg *****************
  5093 ;; Defined at:
  5094 ;;		line 25 in file "../src/messages.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  qptr            2   31[COMRAM] PTR struct __msg_queue
  5097 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5098 ;;  length          1   33[COMRAM] unsigned char 
  5099 ;;  msgtype         1   34[COMRAM] unsigned char 
  5100 ;;  data            2   35[COMRAM] PTR void 
  5101 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  qmsg            2   41[COMRAM] PTR struct __msg
  5104 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5105 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5106 ;;  tlength         2   38[COMRAM] unsigned int 
  5107 ;;  slot            1   40[COMRAM] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      char 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5117 ;;      Params:         6       0       0       0       0
  5118 ;;      Locals:         5       0       0       0       0
  5119 ;;      Temps:          1       0       0       0       0
  5120 ;;      Totals:        12       0       0       0       0
  5121 ;;Total ram usage:       12 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    1
  5124 ;; This function calls:
  5125 ;;		i2_memcpy
  5126 ;; This function is called by:
  5127 ;;		_ToMainHigh_sendmsg
  5128 ;;		_ToMainLow_sendmsg
  5129 ;;		_FromMainLow_sendmsg
  5130 ;;		_FromMainHigh_sendmsg
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text31
  5135  000894                     __ptext31:
  5136                           	opt stack 0
  5137  000894                     _send_msg:
  5138                           	opt stack 18
  5139                           
  5140                           ;messages.c: 26: unsigned char slot;
  5141                           ;messages.c: 28: msg *qmsg;
  5142                           ;messages.c: 29: size_t tlength = length;
  5143                           
  5144                           ;incstack = 0
  5145  000894  C022  F027         	movff	send_msg@length,send_msg@tlength
  5146  000898  6A28               	clrf	send_msg@tlength+1,c
  5147                           
  5148                           ;messages.c: 39: slot = qptr->cur_write_ind;
  5149  00089A  EE20 F034          	lfsr	2,52
  5150  00089E  5020               	movf	send_msg@qptr,w,c
  5151  0008A0  26D9               	addwf	fsr2l,f,c
  5152  0008A2  5021               	movf	send_msg@qptr+1,w,c
  5153  0008A4  22DA               	addwfc	fsr2h,f,c
  5154  0008A6  50DF               	movf	indf2,w,c
  5155  0008A8  6E29               	movwf	send_msg@slot,c
  5156                           
  5157                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  5158  0008AA  5029               	movf	send_msg@slot,w,c
  5159  0008AC  0D0D               	mullw	13
  5160  0008AE  50F3               	movf	prodl,w,c
  5161  0008B0  2420               	addwf	send_msg@qptr,w,c
  5162  0008B2  6E2A               	movwf	send_msg@qmsg,c
  5163  0008B4  50F4               	movf	prodh,w,c
  5164  0008B6  2021               	addwfc	send_msg@qptr+1,w,c
  5165  0008B8  6E2B               	movwf	send_msg@qmsg+1,c
  5166                           
  5167                           ;messages.c: 42: if (qmsg->full != 0) {
  5168  0008BA  C02A  FFD9         	movff	send_msg@qmsg,fsr2l
  5169  0008BE  C02B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5170  0008C2  50DF               	movf	indf2,w,c
  5171  0008C4  B4D8               	btfsc	status,2,c
  5172  0008C6  D002               	goto	i2l2451
  5173                           
  5174                           ;messages.c: 43: return (-1);
  5175  0008C8  0EFF               	movlw	255
  5176  0008CA  0012               	return	
  5177  0008CC                     i2l2451:
  5178                           
  5179                           ;messages.c: 44: }
  5180                           ;messages.c: 47: qmsg->length = length;
  5181  0008CC  EE20 F001          	lfsr	2,1
  5182  0008D0  502A               	movf	send_msg@qmsg,w,c
  5183  0008D2  26D9               	addwf	fsr2l,f,c
  5184  0008D4  502B               	movf	send_msg@qmsg+1,w,c
  5185  0008D6  22DA               	addwfc	fsr2h,f,c
  5186  0008D8  C022  FFDF         	movff	send_msg@length,indf2
  5187                           
  5188                           ;messages.c: 48: qmsg->msgtype = msgtype;
  5189  0008DC  EE20 F002          	lfsr	2,2
  5190  0008E0  502A               	movf	send_msg@qmsg,w,c
  5191  0008E2  26D9               	addwf	fsr2l,f,c
  5192  0008E4  502B               	movf	send_msg@qmsg+1,w,c
  5193  0008E6  22DA               	addwfc	fsr2h,f,c
  5194  0008E8  C023  FFDF         	movff	send_msg@msgtype,indf2
  5195                           
  5196                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  5197  0008EC  0E03               	movlw	3
  5198  0008EE  242A               	addwf	send_msg@qmsg,w,c
  5199  0008F0  6E16               	movwf	i2memcpy@d1,c
  5200  0008F2  0E00               	movlw	0
  5201  0008F4  202B               	addwfc	send_msg@qmsg+1,w,c
  5202  0008F6  6E17               	movwf	i2memcpy@d1+1,c
  5203  0008F8  C025  F019         	movff	send_msg@data+1,i2memcpy@s1+1
  5204  0008FC  C024  F018         	movff	send_msg@data,i2memcpy@s1
  5205  000900  C027  F01A         	movff	send_msg@tlength,i2memcpy@n
  5206  000904  C028  F01B         	movff	send_msg@tlength+1,i2memcpy@n+1
  5207  000908  EC44  F007         	call	i2_memcpy	;wreg free
  5208                           
  5209                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5210  00090C  EE20 F034          	lfsr	2,52
  5211  000910  5020               	movf	send_msg@qptr,w,c
  5212  000912  26D9               	addwf	fsr2l,f,c
  5213  000914  5021               	movf	send_msg@qptr+1,w,c
  5214  000916  22DA               	addwfc	fsr2h,f,c
  5215  000918  EE10 F034          	lfsr	1,52
  5216  00091C  5020               	movf	send_msg@qptr,w,c
  5217  00091E  26E1               	addwf	fsr1l,f,c
  5218  000920  5021               	movf	send_msg@qptr+1,w,c
  5219  000922  22E2               	addwfc	fsr1h,f,c
  5220  000924  50E7               	movf	indf1,w,c
  5221  000926  6E26               	movwf	??_send_msg& (0+255),c
  5222  000928  2826               	incf	??_send_msg,w,c
  5223  00092A  0B03               	andlw	3
  5224  00092C  6EDF               	movwf	indf2,c
  5225                           
  5226                           ;messages.c: 60: qmsg->full = 1;
  5227  00092E  C02A  FFD9         	movff	send_msg@qmsg,fsr2l
  5228  000932  C02B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5229  000936  0E01               	movlw	1
  5230  000938  6EDF               	movwf	indf2,c
  5231                           
  5232                           ;messages.c: 61: return (1);
  5233  00093A  0E01               	movlw	1
  5234  00093C  0012               	return	
  5235  00093E                     __end_of_send_msg:
  5236                           	opt stack 0
  5237                           pclatu	equ	0xFFB
  5238                           pclath	equ	0xFFA
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           prodh	equ	0xFF4
  5244                           prodl	equ	0xFF3
  5245                           intcon	equ	0xFF2
  5246                           postinc0	equ	0xFEE
  5247                           fsr0h	equ	0xFEA
  5248                           fsr0l	equ	0xFE9
  5249                           wreg	equ	0xFE8
  5250                           indf1	equ	0xFE7
  5251                           postdec1	equ	0xFE5
  5252                           fsr1h	equ	0xFE2
  5253                           fsr1l	equ	0xFE1
  5254                           bsr	equ	0xFE0
  5255                           indf2	equ	0xFDF
  5256                           fsr2h	equ	0xFDA
  5257                           fsr2l	equ	0xFD9
  5258                           status	equ	0xFD8
  5259                           
  5260 ;; *************** function i2_memcpy *****************
  5261 ;; Defined at:
  5262 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  d1              2   21[COMRAM] PTR void 
  5265 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5266 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5267 ;;		 -> main@msgbuffer(11), 
  5268 ;;  s1              2   23[COMRAM] PTR const void 
  5269 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5270 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5271 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5272 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5273 ;;  n               2   25[COMRAM] unsigned int 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  memcpy          2   29[COMRAM] PTR const unsigned char 
  5276 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5277 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5278 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5279 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5280 ;;  memcpy          2   27[COMRAM] PTR unsigned char 
  5281 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5282 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5283 ;;		 -> main@msgbuffer(11), 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  2   21[COMRAM] PTR void 
  5286 ;; Registers used:
  5287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5293 ;;      Params:         6       0       0       0       0
  5294 ;;      Locals:         4       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0
  5296 ;;      Totals:        10       0       0       0       0
  5297 ;;Total ram usage:       10 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_send_msg
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text32
  5307  000E88                     __ptext32:
  5308                           	opt stack 0
  5309  000E88                     i2_memcpy:
  5310                           	opt stack 18
  5311                           
  5312                           ;incstack = 0
  5313  000E88  C019  F01F         	movff	i2memcpy@s1+1,i2memcpy@s+1
  5314  000E8C  C018  F01E         	movff	i2memcpy@s1,i2memcpy@s
  5315  000E90  C017  F01D         	movff	i2memcpy@d1+1,i2memcpy@d+1
  5316  000E94  C016  F01C         	movff	i2memcpy@d1,i2memcpy@d
  5317  000E98  D00E               	goto	i2l2659
  5318  000E9A                     i2l2653:
  5319  000E9A  C01E  FFD9         	movff	i2memcpy@s,fsr2l
  5320  000E9E  C01F  FFDA         	movff	i2memcpy@s+1,fsr2h
  5321  000EA2  C01C  FFE1         	movff	i2memcpy@d,fsr1l
  5322  000EA6  C01D  FFE2         	movff	i2memcpy@d+1,fsr1h
  5323  000EAA  CFDF FFE7          	movff	indf2,indf1
  5324  000EAE  4A1E               	infsnz	i2memcpy@s,f,c
  5325  000EB0  2A1F               	incf	i2memcpy@s+1,f,c
  5326  000EB2  4A1C               	infsnz	i2memcpy@d,f,c
  5327  000EB4  2A1D               	incf	i2memcpy@d+1,f,c
  5328  000EB6                     i2l2659:
  5329  000EB6  061A               	decf	i2memcpy@n,f,c
  5330  000EB8  A0D8               	btfss	status,0,c
  5331  000EBA  061B               	decf	i2memcpy@n+1,f,c
  5332  000EBC  281A               	incf	i2memcpy@n& (0+255),w,c
  5333  000EBE  B4D8               	btfsc	status,2,c
  5334  000EC0  281B               	incf	(i2memcpy@n+1)& (0+255),w,c
  5335  000EC2  B4D8               	btfsc	status,2,c
  5336                           
  5337                           ;	Return value of i2_memcpy is never used
  5338  000EC4  0012               	return	
  5339  000EC6  D7E9               	goto	i2l2653
  5340  000EC8                     __end_ofi2_memcpy:
  5341                           	opt stack 0
  5342                           pclatu	equ	0xFFB
  5343                           pclath	equ	0xFFA
  5344                           tblptru	equ	0xFF8
  5345                           tblptrh	equ	0xFF7
  5346                           tblptrl	equ	0xFF6
  5347                           tablat	equ	0xFF5
  5348                           prodh	equ	0xFF4
  5349                           prodl	equ	0xFF3
  5350                           intcon	equ	0xFF2
  5351                           postinc0	equ	0xFEE
  5352                           fsr0h	equ	0xFEA
  5353                           fsr0l	equ	0xFE9
  5354                           wreg	equ	0xFE8
  5355                           indf1	equ	0xFE7
  5356                           postdec1	equ	0xFE5
  5357                           fsr1h	equ	0xFE2
  5358                           fsr1l	equ	0xFE1
  5359                           bsr	equ	0xFE0
  5360                           indf2	equ	0xFDF
  5361                           fsr2h	equ	0xFDA
  5362                           fsr2l	equ	0xFD9
  5363                           status	equ	0xFD8
  5364                           
  5365 ;; *************** function _SleepIfOkay *****************
  5366 ;; Defined at:
  5367 ;;		line 229 in file "../src/messages.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5381 ;;      Params:         0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0
  5384 ;;      Totals:         0       0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    2
  5388 ;; This function calls:
  5389 ;;		_enter_sleep_mode
  5390 ;;		i2_check_msg
  5391 ;;		i2_in_high_int
  5392 ;;		i2_in_low_int
  5393 ;; This function is called by:
  5394 ;;		_InterruptHandlerHigh
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text33
  5399  000D2C                     __ptext33:
  5400                           	opt stack 0
  5401  000D2C                     _SleepIfOkay:
  5402                           	opt stack 19
  5403                           
  5404                           ;messages.c: 231: if (MQ_Main_Willing_to_block == 0) {
  5405                           
  5406                           ;incstack = 0
  5407  000D2C  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  5408  000D2E  D001               	goto	i2l2227
  5409  000D30  0012               	return	
  5410  000D32                     i2l2227:
  5411                           
  5412                           ;messages.c: 233: }
  5413                           ;messages.c: 236: if (in_low_int()) {
  5414  000D32  ECD7  F007         	call	i2_in_low_int	;wreg free
  5415  000D36  5019               	movf	?i2_in_low_int+1,w,c
  5416  000D38  1018               	iorwf	?i2_in_low_int,w,c
  5417  000D3A  A4D8               	btfss	status,2,c
  5418  000D3C  0012               	return	
  5419                           
  5420                           ;messages.c: 238: }
  5421                           ;messages.c: 241: if (!in_high_int()) {
  5422                           
  5423                           ;messages.c: 237: return;
  5424  000D3E  EC65  F008         	call	i2_in_high_int	;wreg free
  5425  000D42  5017               	movf	?i2_in_high_int+1,w,c
  5426  000D44  1016               	iorwf	?i2_in_high_int,w,c
  5427  000D46  B4D8               	btfsc	status,2,c
  5428  000D48  0012               	return	
  5429                           
  5430                           ;messages.c: 243: }
  5431                           ;messages.c: 248: if (check_msg(&ToMainHigh_MQ)) {
  5432                           
  5433                           ;messages.c: 242: return;
  5434  000D4A  0101               	movlb	1	; () banked
  5435  000D4C  0E01               	movlw	high _ToMainHigh_MQ
  5436  000D4E  6E17               	movwf	i2check_msg@qptr+1,c
  5437  000D50  0101               	movlb	1	; () banked
  5438  000D52  0EBF               	movlw	low _ToMainHigh_MQ
  5439  000D54  6E16               	movwf	i2check_msg@qptr,c
  5440  000D56  EC16  F008         	call	i2_check_msg	;wreg free
  5441  000D5A  0900               	iorlw	0
  5442  000D5C  A4D8               	btfss	status,2,c
  5443  000D5E  0012               	return	
  5444                           
  5445                           ;messages.c: 250: }
  5446                           ;messages.c: 251: if (check_msg(&ToMainLow_MQ)) {
  5447                           
  5448                           ;messages.c: 249: return;
  5449  000D60  0100               	movlb	0	; () banked
  5450  000D62  0E00               	movlw	high _ToMainLow_MQ
  5451  000D64  6E17               	movwf	i2check_msg@qptr+1,c
  5452  000D66  0100               	movlb	0	; () banked
  5453  000D68  0E80               	movlw	low _ToMainLow_MQ
  5454  000D6A  6E16               	movwf	i2check_msg@qptr,c
  5455  000D6C  EC16  F008         	call	i2_check_msg	;wreg free
  5456  000D70  0900               	iorlw	0
  5457  000D72  B4D8               	btfsc	status,2,c
  5458                           
  5459                           ;messages.c: 253: }
  5460                           ;messages.c: 254: enter_sleep_mode();
  5461                           
  5462                           ;messages.c: 252: return;
  5463  000D74  EC6F  F008         	call	_enter_sleep_mode	;wreg free
  5464  000D78  0012               	return	
  5465  000D7A                     __end_of_SleepIfOkay:
  5466                           	opt stack 0
  5467                           pclatu	equ	0xFFB
  5468                           pclath	equ	0xFFA
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           intcon	equ	0xFF2
  5476                           postinc0	equ	0xFEE
  5477                           fsr0h	equ	0xFEA
  5478                           fsr0l	equ	0xFE9
  5479                           wreg	equ	0xFE8
  5480                           indf1	equ	0xFE7
  5481                           postdec1	equ	0xFE5
  5482                           fsr1h	equ	0xFE2
  5483                           fsr1l	equ	0xFE1
  5484                           bsr	equ	0xFE0
  5485                           indf2	equ	0xFDF
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function i2_in_low_int *****************
  5491 ;; Defined at:
  5492 ;;		line 32 in file "../src/interrupts.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  2   23[COMRAM] int 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5506 ;;      Params:         2       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0
  5509 ;;      Totals:         2       0       0       0       0
  5510 ;;Total ram usage:        2 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    1
  5513 ;; This function calls:
  5514 ;;		i2_in_high_int
  5515 ;; This function is called by:
  5516 ;;		_SleepIfOkay
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text34
  5521  000FAE                     __ptext34:
  5522                           	opt stack 0
  5523  000FAE                     i2_in_low_int:
  5524                           	opt stack 19
  5525                           
  5526                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  5527                           
  5528                           ;incstack = 0
  5529  000FAE  ACF2               	btfss	intcon,6,c	;volatile
  5530  000FB0  D005               	goto	i2l2635
  5531                           
  5532                           ;interrupts.c: 34: return (0);
  5533  000FB2  0E00               	movlw	0
  5534  000FB4  6E19               	movwf	?i2_in_low_int+1,c
  5535  000FB6  0E00               	movlw	0
  5536  000FB8  6E18               	movwf	?i2_in_low_int,c
  5537  000FBA  0012               	return	
  5538  000FBC                     i2l2635:
  5539  000FBC  EC65  F008         	call	i2_in_high_int	;wreg free
  5540  000FC0  5017               	movf	?i2_in_high_int+1,w,c
  5541  000FC2  1016               	iorwf	?i2_in_high_int,w,c
  5542  000FC4  B4D8               	btfsc	status,2,c
  5543  000FC6  D005               	goto	i2l2643
  5544                           
  5545                           ;interrupts.c: 36: return (0);
  5546  000FC8  0E00               	movlw	0
  5547  000FCA  6E19               	movwf	?i2_in_low_int+1,c
  5548  000FCC  0E00               	movlw	0
  5549  000FCE  6E18               	movwf	?i2_in_low_int,c
  5550  000FD0  0012               	return	
  5551  000FD2                     i2l2643:
  5552                           
  5553                           ;interrupts.c: 38: return (1);
  5554  000FD2  0E00               	movlw	0
  5555  000FD4  6E19               	movwf	?i2_in_low_int+1,c
  5556  000FD6  0E01               	movlw	1
  5557  000FD8  6E18               	movwf	?i2_in_low_int,c
  5558  000FDA  0012               	return	
  5559  000FDC                     __end_ofi2_in_low_int:
  5560                           	opt stack 0
  5561                           pclatu	equ	0xFFB
  5562                           pclath	equ	0xFFA
  5563                           tblptru	equ	0xFF8
  5564                           tblptrh	equ	0xFF7
  5565                           tblptrl	equ	0xFF6
  5566                           tablat	equ	0xFF5
  5567                           prodh	equ	0xFF4
  5568                           prodl	equ	0xFF3
  5569                           intcon	equ	0xFF2
  5570                           postinc0	equ	0xFEE
  5571                           fsr0h	equ	0xFEA
  5572                           fsr0l	equ	0xFE9
  5573                           wreg	equ	0xFE8
  5574                           indf1	equ	0xFE7
  5575                           postdec1	equ	0xFE5
  5576                           fsr1h	equ	0xFE2
  5577                           fsr1l	equ	0xFE1
  5578                           bsr	equ	0xFE0
  5579                           indf2	equ	0xFDF
  5580                           fsr2h	equ	0xFDA
  5581                           fsr2l	equ	0xFD9
  5582                           status	equ	0xFD8
  5583                           
  5584 ;; *************** function i2_in_high_int *****************
  5585 ;; Defined at:
  5586 ;;		line 24 in file "../src/interrupts.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  2   21[COMRAM] int 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5600 ;;      Params:         2       0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0
  5603 ;;      Totals:         2       0       0       0       0
  5604 ;;Total ram usage:        2 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_SleepIfOkay
  5610 ;;		i2_in_low_int
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text35
  5615  0010CA                     __ptext35:
  5616                           	opt stack 0
  5617  0010CA                     i2_in_high_int:
  5618                           	opt stack 19
  5619                           
  5620                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  5621                           
  5622                           ;incstack = 0
  5623  0010CA  0E00               	movlw	0
  5624  0010CC  AEF2               	btfss	intcon,7,c	;volatile
  5625  0010CE  0E01               	movlw	1
  5626  0010D0  6E16               	movwf	?i2_in_high_int,c
  5627  0010D2  6A17               	clrf	?i2_in_high_int+1,c
  5628  0010D4  0012               	return	
  5629  0010D6                     __end_ofi2_in_high_int:
  5630                           	opt stack 0
  5631                           pclatu	equ	0xFFB
  5632                           pclath	equ	0xFFA
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           postinc0	equ	0xFEE
  5641                           fsr0h	equ	0xFEA
  5642                           fsr0l	equ	0xFE9
  5643                           wreg	equ	0xFE8
  5644                           indf1	equ	0xFE7
  5645                           postdec1	equ	0xFE5
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           bsr	equ	0xFE0
  5649                           indf2	equ	0xFDF
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654 ;; *************** function i2_check_msg *****************
  5655 ;; Defined at:
  5656 ;;		line 223 in file "../src/messages.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  qptr            2   21[COMRAM] PTR struct __msg_queue
  5659 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      unsigned char 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5671 ;;      Params:         2       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0
  5673 ;;      Temps:          1       0       0       0       0
  5674 ;;      Totals:         3       0       0       0       0
  5675 ;;Total ram usage:        3 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_SleepIfOkay
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text36
  5685  00102C                     __ptext36:
  5686                           	opt stack 0
  5687  00102C                     i2_check_msg:
  5688                           	opt stack 20
  5689                           
  5690                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  5691                           
  5692                           ;incstack = 0
  5693  00102C  EE20 F035          	lfsr	2,53
  5694  001030  5016               	movf	i2check_msg@qptr,w,c
  5695  001032  26D9               	addwf	fsr2l,f,c
  5696  001034  5017               	movf	i2check_msg@qptr+1,w,c
  5697  001036  22DA               	addwfc	fsr2h,f,c
  5698  001038  50DF               	movf	indf2,w,c
  5699  00103A  6E18               	movwf	??i2_check_msg& (0+255),c
  5700  00103C  5018               	movf	??i2_check_msg,w,c
  5701  00103E  0D0D               	mullw	13
  5702  001040  50F3               	movf	prodl,w,c
  5703  001042  2416               	addwf	i2check_msg@qptr,w,c
  5704  001044  6ED9               	movwf	fsr2l,c
  5705  001046  50F4               	movf	prodh,w,c
  5706  001048  2017               	addwfc	i2check_msg@qptr+1,w,c
  5707  00104A  6EDA               	movwf	fsr2h,c
  5708  00104C  50DF               	movf	indf2,w,c
  5709  00104E  0012               	return	
  5710  001050                     __end_ofi2_check_msg:
  5711                           	opt stack 0
  5712                           pclatu	equ	0xFFB
  5713                           pclath	equ	0xFFA
  5714                           tblptru	equ	0xFF8
  5715                           tblptrh	equ	0xFF7
  5716                           tblptrl	equ	0xFF6
  5717                           tablat	equ	0xFF5
  5718                           prodh	equ	0xFF4
  5719                           prodl	equ	0xFF3
  5720                           intcon	equ	0xFF2
  5721                           postinc0	equ	0xFEE
  5722                           fsr0h	equ	0xFEA
  5723                           fsr0l	equ	0xFE9
  5724                           wreg	equ	0xFE8
  5725                           indf1	equ	0xFE7
  5726                           postdec1	equ	0xFE5
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           bsr	equ	0xFE0
  5730                           indf2	equ	0xFDF
  5731                           fsr2h	equ	0xFDA
  5732                           fsr2l	equ	0xFD9
  5733                           status	equ	0xFD8
  5734                           
  5735 ;; *************** function _enter_sleep_mode *****************
  5736 ;; Defined at:
  5737 ;;		line 203 in file "../src/messages.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;		None               void
  5744 ;; Registers used:
  5745 ;;		None
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5751 ;;      Params:         0       0       0       0       0
  5752 ;;      Locals:         0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0
  5754 ;;      Totals:         0       0       0       0       0
  5755 ;;Total ram usage:        0 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_SleepIfOkay
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text37
  5765  0010DE                     __ptext37:
  5766                           	opt stack 0
  5767  0010DE                     _enter_sleep_mode:
  5768                           	opt stack 20
  5769                           
  5770                           ;messages.c: 205: OSCCONbits.IDLEN = 1;
  5771                           
  5772                           ;incstack = 0
  5773  0010DE  8ED3               	bsf	4051,7,c	;volatile
  5774  0010E0  0003               	sleep		;# 
  5775  0010E2  0012               	return	
  5776  0010E4                     __end_of_enter_sleep_mode:
  5777                           	opt stack 0
  5778  0000                     pclatu	equ	0xFFB
  5779                           pclath	equ	0xFFA
  5780                           tblptru	equ	0xFF8
  5781                           tblptrh	equ	0xFF7
  5782                           tblptrl	equ	0xFF6
  5783                           tablat	equ	0xFF5
  5784                           prodh	equ	0xFF4
  5785                           prodl	equ	0xFF3
  5786                           intcon	equ	0xFF2
  5787                           postinc0	equ	0xFEE
  5788                           fsr0h	equ	0xFEA
  5789                           fsr0l	equ	0xFE9
  5790                           wreg	equ	0xFE8
  5791                           indf1	equ	0xFE7
  5792                           postdec1	equ	0xFE5
  5793                           fsr1h	equ	0xFE2
  5794                           fsr1l	equ	0xFE1
  5795                           bsr	equ	0xFE0
  5796                           indf2	equ	0xFDF
  5797                           fsr2h	equ	0xFDA
  5798                           fsr2l	equ	0xFD9
  5799                           status	equ	0xFD8
  5800                           pclatu	equ	0xFFB
  5801                           pclath	equ	0xFFA
  5802                           tblptru	equ	0xFF8
  5803                           tblptrh	equ	0xFF7
  5804                           tblptrl	equ	0xFF6
  5805                           tablat	equ	0xFF5
  5806                           prodh	equ	0xFF4
  5807                           prodl	equ	0xFF3
  5808                           intcon	equ	0xFF2
  5809                           postinc0	equ	0xFEE
  5810                           fsr0h	equ	0xFEA
  5811                           fsr0l	equ	0xFE9
  5812                           wreg	equ	0xFE8
  5813                           indf1	equ	0xFE7
  5814                           postdec1	equ	0xFE5
  5815                           fsr1h	equ	0xFE2
  5816                           fsr1l	equ	0xFE1
  5817                           bsr	equ	0xFE0
  5818                           indf2	equ	0xFDF
  5819                           fsr2h	equ	0xFDA
  5820                           fsr2l	equ	0xFD9
  5821                           status	equ	0xFD8
  5822                           
  5823                           	psect	rparam
  5824  0000                     pclatu	equ	0xFFB
  5825                           pclath	equ	0xFFA
  5826                           tblptru	equ	0xFF8
  5827                           tblptrh	equ	0xFF7
  5828                           tblptrl	equ	0xFF6
  5829                           tablat	equ	0xFF5
  5830                           prodh	equ	0xFF4
  5831                           prodl	equ	0xFF3
  5832                           intcon	equ	0xFF2
  5833                           postinc0	equ	0xFEE
  5834                           fsr0h	equ	0xFEA
  5835                           fsr0l	equ	0xFE9
  5836                           wreg	equ	0xFE8
  5837                           indf1	equ	0xFE7
  5838                           postdec1	equ	0xFE5
  5839                           fsr1h	equ	0xFE2
  5840                           fsr1l	equ	0xFE1
  5841                           bsr	equ	0xFE0
  5842                           indf2	equ	0xFDF
  5843                           fsr2h	equ	0xFDA
  5844                           fsr2l	equ	0xFD9
  5845                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         227
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      87
    BANK0           128     29      85
    BANK1           256    137     245
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    S1614$0$0	PTR struct . size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    S1614$adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    unpackRoverMsg@handler.adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 0

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 121
		 -> main@ic(BANK1[121]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK1[121]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), i2c_int_handler@error_buf(COMRAM[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _timer1_int_handler->_WriteTimer1
    _uart_send->_WriteUSART
    _debugNum->_resetDBG
    _debugNum->_setDBG

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               148   148      0    5532
                                              0 BANK1    137   137      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                           _init_i2c
                        _init_queues
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                              4 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                              6 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1999
                                             24 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1999
                                             24 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1805
                                             10 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     426
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0     339
                                              4 COMRAM    17    17      0
                 _timer1_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0     339
                        _WriteTimer1
                           _debugNum
                          _uart_send
 ---------------------------------------------------------------------------------
 (7) _uart_send                                            1     1      0      30
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (8) _WriteUSART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _debugNum                                             2     0      2     211
                                              1 COMRAM     2     0      2
                           _resetDBG
                             _setDBG
 ---------------------------------------------------------------------------------
 (8) _setDBG                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _resetDBG                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptHandlerHigh                                14    14      0    2975
                                             57 COMRAM    14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (10) _timer0_int_handler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _i2c_int_handler                                    10    10      0    2739
                                             47 COMRAM    10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (11) _handle_start                                        1     1      0      22
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _ToMainHigh_sendmsg                                  4     1      3    2337
                                             43 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (12) _send_msg                                           12     6      6    1887
                                             31 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_memcpy                                           10     4      6     530
                                             21 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (11) i2_in_low_int                                        2     0      2       0
                                             23 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) i2_check_msg                                         3     1      2     236
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _init_i2c
   _init_queues
     _init_queue

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
     _debugNum
       _resetDBG
       _setDBG
     _uart_send
       _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       _send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     89      F5       6       95.7%
BITBANK0            80      0       0       3        0.0%
BANK0               80     1D      55       4       66.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      57       1       68.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D7      11        0.0%
DATA                 0      0     1D7      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Feb 20 05:13:55 2014

      _MQ_Main_Willing_to_block 004A                     _SSPSTATbits 000FC7                              l91 0762  
     __end_of_ToMainLow_recvmsg 0E46                              bsr 000FE0                    __CFG_CP0$OFF 000000  
                           l514 0F5A                             l516 0F72                             l517 0F74  
                           l551 0972                             l555 0992                             l556 0994  
                           l557 09A2                             l558 09A4                             l497 1000  
                           l498 1002                             l795 1074            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0189                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00B6                            l2055 0DB0                            l2047 0D8E  
                          l2403 0A70                            l2501 06B2                            l2069 0DF4  
                          l2415 0AC8                            l2409 0A9C                            l2433 0B18  
                          l2339 0F5C                            l2291 0786                            l2365 0974  
                          l2357 095E                            l2471 0C68                            l2279 0720  
                          l2465 0C44                            l2289 0768                            l2485 05EC  
                          _LATB 000F8A                            u1677 1076                            i1l44 0066  
               _FromMainHigh_MQ 0200                   __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001  
                          _main 06B6                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                   main@msgtype 010F                            pclat 000FFA                     i2_check_msg 102C  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 0016  
                          start 00AC                   __CFG_FOSC2$ON 000000       ToMainHigh_recvmsg@msgtype 00CE  
                send_msg@length 0022     __size_of_timer0_int_handler 0002                     _Delay1KTCYx 1070  
                         ?_main 0001                           _T0CON 000FD5                           _T1CON 000FCD  
                         i1l343 0ECE                           i1l345 0ED2                           i1l354 0F0A  
                         i1l346 0ED6                           i1l347 0EDA                           i1l356 0F0E  
                         i1l348 0EDE                           i1l357 0F12                           i1l358 0F16  
                         i1l359 0F1A                           i2l226 0848                           i2l242 016E  
                         i2l236 0472                           i2l270 047C                           i2l238 013C  
                         i2l264 03FC                           i2l256 02E0                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR1L 000FCE                           _SPBRG 000FAF  
                         _TRISB 000F93                           _TXREG 000FAD                           _TXSTA 000FAC  
                    i2memcpy@d1 0016                      i2memcpy@s1 0018                    ?_init_queues 0001  
     __size_of_enter_sleep_mode 0006                 __end_of_in_main 0E04                           _count 004C  
    ToMainLow_recvmsg@maxlength 00D2                           tablat 000FF5                           status 000FD8  
              __end_ofi2_memcpy 0EC8                  WriteUSART@data 0001                 __initialization 0C80  
                  __end_of_main 07CC     __size_of_timer1_int_handler 0020      __size_of_ToMainLow_recvmsg 0042  
         __size_ofi2_in_low_int 002E                          ??_main 00D3                 send_msg@msgtype 0023  
                 __activetblptr 000002                 send_msg@tlength 0027            __end_of_handle_start 0894  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          i1l2011 0D0A  
                        i1l2003 0CEA                          i1l2015 0D1A                          i1l2007 0CFA  
                        i1l1811 0EE2                          i1l1817 0F1E                          i2l2101 0126  
                        i2l2201 0480                          i2l2211 04EA                          i2l2107 0136  
                        i2l2125 019A                          i1l1789 1094                          i2l2207 04DC  
                        i2l2143 0216                          i2l2127 01C6                          i2l2145 0256  
                        i2l2137 01FE                          i2l2227 0D32                          i2l2219 0570  
                        i2l2173 0396                          i2l2085 0A14                          i2l2167 034A  
                        i2l2079 0A0A                          i2l2169 038C                      _OpenTimer0 0FDC  
                    _OpenTimer1 0F40                          i2l2451 08CC                          i2l2195 0446  
                __CFG_WDTEN$OFF 000000                          i2l2561 0864                          i2l2643 0FD2  
                        i2l2635 0FBC                          i2l2563 087C                          i2l2653 0E9A  
                        i2l2659 0EB6                   ??_SleepIfOkay 001A                          _OSCCON 000FD3  
                        _SPBRGH 000FB0                          _SSPADD 000FC8                          _SSPBUF 000FC9  
              __end_of_debugNum 0D2C                    i2_in_low_int 0FAE                  __CFG_XINST$OFF 000000  
            __size_of_OpenUSART 0092                 _i2c_int_handler 00B0                OpenTimer0@config 00B6  
                        _ic_ptr 00D3                   main@msgbuffer 0100                __end_of_init_i2c 0C22  
              OpenTimer1@config 00B6                          _setDBG 0EC8                          _memcpy 0C22  
                        clear_0 0C86                          clear_1 0C92                          clear_2 0C9E  
                        clear_3 0CAA                          _uc_ptr 0048                          main@ic 0110  
              __end_of_recv_msg 06B6                __end_of_resetDBG 0F40                       ??_in_main 00BC  
              __end_of_send_msg 093E                    __pdataCOMRAM 0053         i2c_int_handler@i2c_data 0036  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   init_queue@i 00B9        ToMainLow_recvmsg@msgtype 00CE            __size_of_in_high_int 0012  
               __CFG_FOSC$HSPLL 000000                      __accesstop 0080         __end_of__initialization 0CD0  
    __end_of_ToMainHigh_recvmsg 0E88      __end_of_ToMainHigh_sendmsg 102C             __end_of_SleepIfOkay 0D7A  
                    _WriteUSART 1086                  __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C  
            __size_of_check_msg 0036   __size_of_InterruptHandlerHigh 0A4A     __end_of_InterruptHandlerLow 00AC  
                     ?i2_memcpy 0016                   _ToMainHigh_MQ 01BF                _enter_sleep_mode 10DE  
             __end_of_OpenUSART 09D0                   check_msg@qptr 00B6         ??_block_on_To_msgqueues 00BC  
          __size_of_init_queues 006E                      __pbssBANK0 0080                      __pbssBANK1 0189  
                    __pbssBANK2 0200                     ?_OpenTimer0 0001                     ?_OpenTimer1 0001  
       __end_of_i2c_int_handler 0580                    ?i2_check_msg 0016               recv_msg@maxlength 00C2  
               recv_msg@msgtype 00C3                 recv_msg@tlength 00CA           __size_of_handle_start 00C8  
                  ?_Delay1KTCYx 0001                         ?_setDBG 0001                         ?_memcpy 00B6  
              WriteTimer1@timer 0003                   ??_WriteTimer1 0003              __size_of_uart_send 000C  
                     ?_debugNum 0002                      ??i2_memcpy 001C                   i2_in_high_int 10CA  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
             __end_of_check_msg 0FAE                       ?_init_i2c 00B6                     _SleepIfOkay 0D2C  
                     _ADCBuffer 004E                       ?_recv_msg 00C0                      _in_low_int 0D7A  
                  _handle_start 07CC                       ?_resetDBG 0001                         __Hparam 0000  
                     ?_send_msg 0020                         __Lparam 0000      __end_of_timer0_int_handler 10EC  
                   ?_WriteUSART 0001                 __CFG_STVREN$OFF 000000                         __pcinit 0C80  
               __size_of_setDBG 003C                 __size_of_memcpy 005E                      _init_queue 0AD0  
                       __ramtop 0400             __size_of_OpenTimer0 002A             __size_of_OpenTimer1 0038  
                       __ptext0 06B6                         __ptext1 0B4A                         __ptext2 0AD0  
                       __ptext3 0BB8                         __ptext4 10D6                         __ptext5 0A52  
                       __ptext6 0DC0                         __ptext7 0D7A                         __ptext8 109A  
                       __ptext9 0F78                       _T0CONbits 000FD5                         _in_main 0DC0  
                     _T1CONbits 000FCD                      ??_debugNum 0004                         _sample1 0053  
                       _sample2 0054                         _sample3 0055                         _sample4 0056  
                       _sample5 0057             __end_of_WriteTimer1 10BE                  ?i2_in_high_int 0016  
                __pintcode_body 09D0            end_of_initialization 0CD0                         setDBG@b 0001  
                       memcpy@d 00BC                         memcpy@n 00BA                         memcpy@s 00BE  
                    ??_init_i2c 00B8     i2c_int_handler@data_written 0034                   __Lmediumconst 0000  
                       int_func 09D0                ?_i2c_int_handler 0001                      ??_recv_msg 00C7  
             __end_of_uart_send 10CA                      ??_resetDBG 0001                      ??_send_msg 0026  
    __end_of_timer1_int_handler 1070                       _RCSTAbits 000FAB                         postdec1 000FE5  
                       postinc0 000FEE       ToMainHigh_sendmsg@msgtype 002C                       _TRISAbits 000F92  
                     _TRISCbits 000F94             __size_of_WriteUSART 0014                       _TXSTAbits 000FAC  
                    main@length 010E                     ?_in_low_int 00B8            __size_ofi2_check_msg 0024  
      __end_of_enter_sleep_mode 10E4              _ToMainHigh_recvmsg 0E46              _ToMainHigh_sendmsg 1006  
                   _BAUDCONbits 000FB8                   __pidataCOMRAM 10E4                     ?_init_queue 00B6  
                     i2memcpy@d 001C                     _WriteTimer1 10AC                       i2memcpy@n 001A  
                     i2memcpy@s 001E                  __end_of_setDBG 0F04                  __end_of_memcpy 0C80  
             _enable_interrupts 10D6            __size_of_Delay1KTCYx 0016             ?_ToMainHigh_recvmsg 00CE  
               ??i2_in_high_int 0018        i2c_int_handler@data_read 0039             ?_ToMainHigh_sendmsg 002C  
            ?_enable_interrupts 0001             start_initialization 0C80                   ??_in_high_int 00B8  
             __size_ofi2_memcpy 0040             ??_enable_interrupts 00B6                    ??_OpenTimer0 00B6  
                  ??_OpenTimer1 00B6  __size_of_block_on_To_msgqueues 007E   __end_of_block_on_To_msgqueues 0AD0  
                     _OpenUSART 093E    __end_of_InterruptHandlerHigh 0A52                      init_i2c@ic 00B6  
          ??_ToMainHigh_recvmsg 00D2            ??_ToMainHigh_sendmsg 002F        i2c_int_handler@error_buf 0031  
                      ??_setDBG 0001       __end_of_enable_interrupts 10DE                        ??_memcpy 00BC  
            __end_of_OpenTimer0 1006              __end_of_OpenTimer1 0F78        i2c_int_handler@msg_ready 0038  
                   __pbssCOMRAM 0048                   ??_init_queues 00BA                   __pcstackBANK0 00B6  
                 __pcstackBANK1 0100             __size_of_in_low_int 0046               __size_of_debugNum 0052  
           __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 00B6    __size_of_InterruptHandlerLow 0094  
           __end_of_in_high_int 10AC                      ?_OpenUSART 00B6                    ?_SleepIfOkay 0001  
         ToMainLow_recvmsg@data 00D0                    _ToMainLow_MQ 0080             __size_of_init_queue 007A  
                     _check_msg 0F78                       __pnvBANK0 00D3               __size_of_init_i2c 006A  
                  recv_msg@data 00C5                    ??_WriteUSART 0001                    recv_msg@qmsg 00CC  
                  recv_msg@slot 00C9                    recv_msg@qptr 00C0               __size_of_recv_msg 0136  
                     __pintcode 0008               __size_of_resetDBG 003C               __size_of_send_msg 00AA  
                   __pintcodelo 0018          ToMainHigh_recvmsg@data 00D0      i2c_int_handler@msg_to_send 0037  
                      ?_in_main 00BA              _timer0_int_handler 10EA               WriteTimer1@timer1 0001  
           ?_timer0_int_handler 0001              __end_of_WriteUSART 109A             __end_of_init_queues 0BB8  
                      _LATBbits 000F8A                 i2check_msg@qptr 0016                      ?_check_msg 00B6  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                   ?i2_in_low_int 0018  
                      _PIR1bits 000F9E          ToMainHigh_sendmsg@data 002D                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                       _uart_send 10BE            ??_timer0_int_handler 0016  
    __size_of_enable_interrupts 0008                      _ADCON0bits 000FC2              _timer1_int_handler 1050  
          _InterruptHandlerHigh 0008                        i2_memcpy 0E88                     _in_high_int 109A  
                  send_msg@data 0024                    send_msg@qmsg 002A                    send_msg@slot 0029  
                  send_msg@qptr 0020                       copy_data0 0CC4             ?_timer1_int_handler 0001  
                   ??_OpenUSART 00B8                 OpenUSART@config 00BB                  ??i2_in_low_int 001A  
                  ??_in_low_int 00BA                        __Hrparam 0000                        __Lrparam 0000  
             ?_enter_sleep_mode 0001                      ?_uart_send 0001            ??_timer1_int_handler 0005  
      __size_of_i2c_int_handler 04D0              ??_enter_sleep_mode 0016                    ??_init_queue 00B8  
                  ?_WriteTimer1 0001           ?_InterruptHandlerHigh 0001                __size_of_in_main 0044  
                      _debugNum 0CDA     ToMainHigh_recvmsg@maxlength 00D2                     _init_queues 0B4A  
                   debugNum@num 0002              __end_of_in_low_int 0DC0                        __ptext10 1070  
                      __ptext11 0E04                        __ptext20 10BE                        __ptext12 0E46  
                      __ptext21 1086                        __ptext13 0580                        __ptext30 1006  
                      __ptext22 0CDA                        __ptext14 0C22                        __ptext31 0894  
                      __ptext23 0EC8                        __ptext15 093E                        __ptext32 0E88  
                      __ptext24 0F04                        __ptext16 0F40                        __ptext33 0D2C  
                      __ptext25 10AC                        __ptext17 0FDC                        __ptext34 0FAE  
                      __ptext35 10CA                        __ptext27 10EA                        __ptext19 1050  
                      __ptext36 102C                        __ptext28 00B0                        __ptext37 10DE  
                      __ptext29 07CC                       resetDBG@b 0001                        _init_i2c 0BB8  
                 __size_of_main 0116                   ??i2_check_msg 0018                     ??_check_msg 00B8  
            __end_of_init_queue 0B4A            __size_of_SleepIfOkay 004E                        _recv_msg 0580  
                      _resetDBG 0F04                        _send_msg 0894                  init_queue@qptr 00B6  
                      _timesreq 004D                   ??_Delay1KTCYx 00B6             _InterruptHandlerLow 0018  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                  OpenUSART@spbrg 00B6  
                      memcpy@d1 00B6                        memcpy@s1 00B8           __end_ofi2_in_high_int 10D6  
         main@data_points_count 010B    i2c_int_handler@overrun_error 0035                        intlevel1 0000  
                      intlevel2 0000            ?_InterruptHandlerLow 0001           _block_on_To_msgqueues 0A52  
                 ?_handle_start 0001     __size_of_ToMainHigh_recvmsg 0042     __size_of_ToMainHigh_sendmsg 0026  
                    _OSCCONbits 000FD3        ToMainHigh_sendmsg@length 002F                     ??_uart_send 0002  
           __end_ofi2_check_msg 1050                   uart_send@data 0002          ??_InterruptHandlerHigh 003A  
             _ToMainLow_recvmsg 0E04              main@last_reg_recvd 010D            __end_ofi2_in_low_int 0FDC  
            ?_ToMainLow_recvmsg 00CE             __end_of_Delay1KTCYx 1086               ??_i2c_int_handler 0030  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5           ??_InterruptHandlerLow 0005  
           ??_ToMainLow_recvmsg 00D2                  ??_handle_start 0016                    _USART_Status 004B  
