

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb 09 17:55:59 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           	psect	idataCOMRAM
    83  001EA0                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _sample1
    87  001EA0  01                 	db	1
    88                           
    89                           ;initializer for _sample2
    90  001EA1  05                 	db	5
    91                           
    92                           ;initializer for _sample3
    93  001EA2  10                 	db	16
    94                           
    95                           ;initializer for _sample4
    96  001EA3  D8                 	db	216
    97                           
    98                           ;initializer for _sample5
    99  001EA4  FE                 	db	254
   100  0000                     _INTCONbits	set	4082
   101  0000                     _IPR1bits	set	3999
   102  0000                     _LATB	set	3978
   103  0000                     _LATBbits	set	3978
   104  0000                     _OSCCON	set	4051
   105  0000                     _OSCCONbits	set	4051
   106  0000                     _OSCTUNEbits	set	3995
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _RCONbits	set	4048
   110  0000                     _RCREG	set	4014
   111  0000                     _RCSTA	set	4011
   112  0000                     _RCSTAbits	set	4011
   113  0000                     _SPBRG	set	4015
   114  0000                     _SPBRGH	set	4016
   115  0000                     _SSPADD	set	4040
   116  0000                     _SSPBUF	set	4041
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPCON1bits	set	4038
   119  0000                     _SSPCON2	set	4037
   120  0000                     _SSPCON2bits	set	4037
   121  0000                     _SSPSTAT	set	4039
   122  0000                     _SSPSTATbits	set	4039
   123  0000                     _T0CON	set	4053
   124  0000                     _T0CONbits	set	4053
   125  0000                     _T1CON	set	4045
   126  0000                     _T1CONbits	set	4045
   127  0000                     _TMR0H	set	4055
   128  0000                     _TMR0L	set	4054
   129  0000                     _TMR1H	set	4047
   130  0000                     _TMR1L	set	4046
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISCbits	set	3988
   133  0000                     _TXSTA	set	4012
   134  0000                     _TXSTAbits	set	4012
   135                           
   136                           	psect	nvCOMRAM
   137  000050                     __pnvCOMRAM:
   138                           	opt stack 0
   139  000050                     _uc_ptr:
   140                           	opt stack 0
   141  000050                     	ds	2
   142                           
   143                           	psect	nvBANK1
   144  0001A8                     __pnvBANK1:
   145                           	opt stack 0
   146  0001A8                     _ic_ptr:
   147                           	opt stack 0
   148  0001A8                     	ds	2
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  001914                     __pcinit:
   154                           	opt stack 0
   155  001914                     start_initialization:
   156                           	opt stack 0
   157  001914                     __initialization:
   158                           	opt stack 0
   159                           
   160                           ; Clear objects allocated to BANK2 (108 bytes)
   161  001914  EE02  F000         	lfsr	0,__pbssBANK2
   162  001918  0E6C               	movlw	108
   163  00191A                     clear_0:
   164  00191A  6AEE               	clrf	postinc0,c
   165  00191C  06E8               	decf	wreg,f,c
   166  00191E  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to BANK1 (108 bytes)
   169  001920  EE01  F000         	lfsr	0,__pbssBANK1
   170  001924  0E6C               	movlw	108
   171  001926                     clear_1:
   172  001926  6AEE               	clrf	postinc0,c
   173  001928  06E8               	decf	wreg,f,c
   174  00192A  E1FD               	bnz	clear_1
   175                           
   176                           ; Clear objects allocated to BANK0 (2 bytes)
   177  00192C  0100               	movlb	0
   178  00192E  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
   179  001930  6BF6               	clrf	__pbssBANK0& (0+255),b
   180                           
   181                           ; Clear objects allocated to COMRAM (3 bytes)
   182  001932  6A4F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   183  001934  6A4E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   184  001936  6A4D               	clrf	__pbssCOMRAM& (0+255),c
   185                           
   186                           ; Initialize objects allocated to COMRAM (5 bytes)
   187                           ; load TBLPTR registers with __pidataCOMRAM
   188  001938  0EA0               	movlw	low __pidataCOMRAM
   189  00193A  6EF6               	movwf	tblptrl,c
   190  00193C  0E1E               	movlw	high __pidataCOMRAM
   191  00193E  6EF7               	movwf	tblptrh,c
   192  001940  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   193  001942  6EF8               	movwf	tblptru,c
   194  001944  EE00  F048         	lfsr	0,__pdataCOMRAM
   195  001948  EE10 F005          	lfsr	1,5
   196  00194C                     copy_data0:
   197  00194C  0009               	tblrd		*+
   198  00194E  CFF5 FFEE          	movff	tablat,postinc0
   199  001952  50E5               	movf	postdec1,w,c
   200  001954  50E1               	movf	fsr1l,w,c
   201  001956  E1FA               	bnz	copy_data0
   202  001958                     end_of_initialization:
   203                           	opt stack 0
   204  001958                     __end_of__initialization:
   205                           	opt stack 0
   206  001958  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207  00195A  6EF8               	movwf	tblptru,c
   208  00195C  0100               	movlb	0
   209  00195E  EF5D  F003         	goto	_main	;jump to C main() function
   210                           tblptru	equ	0xFF8
   211                           tblptrh	equ	0xFF7
   212                           tblptrl	equ	0xFF6
   213                           tablat	equ	0xFF5
   214                           postinc0	equ	0xFEE
   215                           wreg	equ	0xFE8
   216                           postdec1	equ	0xFE5
   217                           fsr1l	equ	0xFE1
   218                           
   219                           	psect	bssCOMRAM
   220  00004D                     __pbssCOMRAM:
   221                           	opt stack 0
   222  00004D                     _MQ_Main_Willing_to_block:
   223                           	opt stack 0
   224  00004D                     	ds	1
   225  00004E                     _USART_Status:
   226                           	opt stack 0
   227  00004E                     	ds	1
   228  00004F                     _timesreq:
   229                           	opt stack 0
   230  00004F                     	ds	1
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	dataCOMRAM
   241  000048                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000048                     _sample1:
   244                           	opt stack 0
   245  000048                     	ds	1
   246  000049                     _sample2:
   247                           	opt stack 0
   248  000049                     	ds	1
   249  00004A                     _sample3:
   250                           	opt stack 0
   251  00004A                     	ds	1
   252  00004B                     _sample4:
   253                           	opt stack 0
   254  00004B                     	ds	1
   255  00004C                     _sample5:
   256                           	opt stack 0
   257  00004C                     	ds	1
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	bssBANK0
   268  0000F6                     __pbssBANK0:
   269                           	opt stack 0
   270  0000F6                     _BrainMsgRecv:
   271                           	opt stack 0
   272  0000F6                     	ds	2
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssBANK1
   283  000100                     __pbssBANK1:
   284                           	opt stack 0
   285  000100                     _ToMainHigh_MQ:
   286                           	opt stack 0
   287  000100                     	ds	54
   288  000136                     _ToMainLow_MQ:
   289                           	opt stack 0
   290  000136                     	ds	54
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bssBANK2
   301  000200                     __pbssBANK2:
   302                           	opt stack 0
   303  000200                     _FromMainHigh_MQ:
   304                           	opt stack 0
   305  000200                     	ds	54
   306  000236                     _FromMainLow_MQ:
   307                           	opt stack 0
   308  000236                     	ds	54
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           postdec1	equ	0xFE5
   316                           fsr1l	equ	0xFE1
   317                           
   318                           	psect	cstackBANK2
   319  00026C                     __pcstackBANK2:
   320                           	opt stack 0
   321  00026C                     main@to_send_buffer:
   322                           	opt stack 0
   323                           
   324                           ; 11 bytes @ 0x0
   325  00026C                     	ds	11
   326  000277                     main@uthread_data:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0xB
   330  000277                     	ds	2
   331  000279                     main@t0thread_data:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0xD
   335  000279                     	ds	2
   336  00027B                     main@msgbuffer:
   337                           	opt stack 0
   338                           
   339                           ; 11 bytes @ 0xF
   340  00027B                     	ds	11
   341  000286                     main@last_reg_recvd:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x1A
   345  000286                     	ds	1
   346  000287                     main@j:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x1B
   350  000287                     	ds	2
   351  000289                     main@j_502:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x1D
   355  000289                     	ds	2
   356  00028B                     main@t1thread_data:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x1F
   360  00028B                     	ds	2
   361  00028D                     main@uc:
   362                           	opt stack 0
   363                           
   364                           ; 5 bytes @ 0x21
   365  00028D                     	ds	5
   366  000292                     main@data_points_count:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x26
   370  000292                     	ds	2
   371  000294                     main@msgtype:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x28
   375  000294                     	ds	1
   376  000295                     main@length:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x29
   380  000295                     	ds	1
   381  000296                     main@ic:
   382                           	opt stack 0
   383                           
   384                           ; 28 bytes @ 0x2A
   385  000296                     	ds	28
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	cstackBANK1
   396  00016C                     __pcstackBANK1:
   397                           	opt stack 0
   398  00016C                     i2c_int_handler@error_buf:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x0
   402  00016C                     	ds	3
   403  00016F                     i2c_int_handler@data_written:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x3
   407  00016F                     	ds	1
   408  000170                     i2c_int_handler@overrun_error:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x4
   412  000170                     	ds	1
   413  000171                     i2c_int_handler@i2c_data:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x5
   417  000171                     	ds	1
   418  000172                     i2c_int_handler@msg_to_send:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x6
   422  000172                     	ds	1
   423  000173                     i2c_int_handler@msg_ready:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x7
   427  000173                     	ds	1
   428  000174                     i2c_int_handler@data_read:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x8
   432  000174                     	ds	1
   433  000175                     ??_InterruptHandlerHigh:
   434                           
   435                           ; 0 bytes @ 0x9
   436  000175                     	ds	14
   437  000183                     ?_in_high_int:
   438                           	opt stack 0
   439  000183                     ?___lwmod:
   440                           	opt stack 0
   441  000183                     i2c_configure_slave@addr:
   442                           	opt stack 0
   443  000183                     OpenTimer0@config:
   444                           	opt stack 0
   445  000183                     OpenTimer1@config:
   446                           	opt stack 0
   447  000183                     Delay1KTCYx@unit:
   448                           	opt stack 0
   449  000183                     init_queue@qptr:
   450                           	opt stack 0
   451  000183                     check_msg@qptr:
   452                           	opt stack 0
   453  000183                     start_i2c_slave_reply@msg:
   454                           	opt stack 0
   455  000183                     init_i2c@ic:
   456                           	opt stack 0
   457  000183                     init_uart_recv@uc:
   458                           	opt stack 0
   459  000183                     timer0_lthread@tptr:
   460                           	opt stack 0
   461  000183                     init_timer1_lthread@tptr:
   462                           	opt stack 0
   463  000183                     uart_lthread@uptr:
   464                           	opt stack 0
   465  000183                     OpenUSART@spbrg:
   466                           	opt stack 0
   467  000183                     ___lwmod@dividend:
   468                           	opt stack 0
   469  000183                     memcpy@d1:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x17
   473  000183                     	ds	2
   474  000185                     ??_OpenUSART:
   475  000185                     ??_start_i2c_slave_reply:
   476  000185                     ??_init_queue:
   477  000185                     ??_check_msg:
   478  000185                     ?_in_low_int:
   479                           	opt stack 0
   480  000185                     timer0_lthread@msgtype:
   481                           	opt stack 0
   482  000185                     uart_lthread@msgtype:
   483                           	opt stack 0
   484  000185                     ___lwmod@divisor:
   485                           	opt stack 0
   486  000185                     memcpy@s1:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x19
   490  000185                     	ds	1
   491  000186                     init_queue@i:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x1A
   495  000186                     	ds	1
   496  000187                     ??_init_queues:
   497  000187                     ??___lwmod:
   498  000187                     ?_in_main:
   499                           	opt stack 0
   500  000187                     start_i2c_slave_reply@length:
   501                           	opt stack 0
   502  000187                     timer0_lthread@length:
   503                           	opt stack 0
   504  000187                     uart_lthread@length:
   505                           	opt stack 0
   506  000187                     memcpy@n:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x1B
   510  000187                     	ds	1
   511  000188                     OpenUSART@config:
   512                           	opt stack 0
   513  000188                     ___lwmod@counter:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x1C
   517  000188                     	ds	1
   518  000189                     ??_block_on_To_msgqueues:
   519  000189                     timer0_lthread@msgbuffer:
   520                           	opt stack 0
   521  000189                     uart_lthread@msgbuffer:
   522                           	opt stack 0
   523  000189                     memcpy@d:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x1D
   527  000189                     	ds	2
   528  00018B                     timer0_lthread@msgval:
   529                           	opt stack 0
   530  00018B                     memcpy@s:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x1F
   534  00018B                     	ds	2
   535  00018D                     send_msg@qptr:
   536                           	opt stack 0
   537  00018D                     recv_msg@qptr:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x21
   541  00018D                     	ds	2
   542  00018F                     send_msg@length:
   543                           	opt stack 0
   544  00018F                     recv_msg@maxlength:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x23
   548  00018F                     	ds	1
   549  000190                     send_msg@msgtype:
   550                           	opt stack 0
   551  000190                     recv_msg@msgtype:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x24
   555  000190                     	ds	1
   556  000191                     send_msg@data:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x25
   560  000191                     	ds	1
   561  000192                     recv_msg@data:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x26
   565  000192                     	ds	1
   566  000193                     ??_send_msg:
   567                           
   568                           ; 0 bytes @ 0x27
   569  000193                     	ds	1
   570  000194                     ??_recv_msg:
   571  000194                     send_msg@tlength:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x28
   575  000194                     	ds	2
   576  000196                     send_msg@slot:
   577                           	opt stack 0
   578  000196                     recv_msg@slot:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x2A
   582  000196                     	ds	1
   583  000197                     send_msg@qmsg:
   584                           	opt stack 0
   585  000197                     recv_msg@tlength:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x2B
   589  000197                     	ds	2
   590  000199                     FromMainHigh_sendmsg@msgtype:
   591                           	opt stack 0
   592  000199                     recv_msg@qmsg:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x2D
   596  000199                     	ds	1
   597  00019A                     FromMainHigh_sendmsg@data:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x2E
   601  00019A                     	ds	1
   602  00019B                     ToMainLow_recvmsg@msgtype:
   603                           	opt stack 0
   604  00019B                     ToMainHigh_recvmsg@msgtype:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x2F
   608  00019B                     	ds	1
   609  00019C                     FromMainHigh_sendmsg@length:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x30
   613  00019C                     	ds	1
   614  00019D                     ToMainLow_recvmsg@data:
   615                           	opt stack 0
   616  00019D                     ToMainHigh_recvmsg@data:
   617                           	opt stack 0
   618  00019D                     timer1_lthread@tptr:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x31
   622  00019D                     	ds	2
   623  00019F                     ToMainLow_recvmsg@maxlength:
   624                           	opt stack 0
   625  00019F                     ToMainHigh_recvmsg@maxlength:
   626                           	opt stack 0
   627  00019F                     timer1_lthread@msgtype:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x33
   631  00019F                     	ds	2
   632  0001A1                     timer1_lthread@length:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x35
   636  0001A1                     	ds	2
   637  0001A3                     timer1_lthread@msgbuffer:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x37
   641  0001A3                     	ds	2
   642  0001A5                     ??_timer1_lthread:
   643                           
   644                           ; 0 bytes @ 0x39
   645  0001A5                     	ds	1
   646  0001A6                     timer1_lthread@retval:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x3A
   650  0001A6                     	ds	1
   651  0001A7                     ??_main:
   652                           
   653                           ; 0 bytes @ 0x3B
   654  0001A7                     	ds	1
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           postdec1	equ	0xFE5
   662                           fsr1l	equ	0xFE1
   663                           
   664                           	psect	cstackBANK0
   665  000080                     __pcstackBANK0:
   666                           	opt stack 0
   667  000080                     ToMainHigh_sendmsg@length:
   668                           	opt stack 0
   669  000080                     FromMainHigh_recvmsg@msgtype:
   670                           	opt stack 0
   671  000080                     sendADdata@data:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x0
   675  000080                     	ds	2
   676  000082                     FromMainHigh_recvmsg@data:
   677                           	opt stack 0
   678  000082                     sendADdata@len:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x2
   682  000082                     	ds	2
   683  000084                     ??_timer0_int_handler:
   684  000084                     sendADdata@outBuff:
   685                           	opt stack 0
   686                           
   687                           ; 100 bytes @ 0x4
   688  000084                     	ds	1
   689  000085                     timer0_int_handler@length:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x5
   693  000085                     	ds	2
   694  000087                     timer0_int_handler@msgtype:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x7
   698  000087                     	ds	2
   699  000089                     timer0_int_handler@val:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x9
   703  000089                     	ds	95
   704  0000E8                     sendADdata@bytes_packed:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x68
   708  0000E8                     	ds	2
   709  0000EA                     sendRequestedData@data:
   710                           	opt stack 0
   711                           
   712                           ; 10 bytes @ 0x6A
   713  0000EA                     	ds	10
   714  0000F4                     sendRequestedData@len:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x74
   718  0000F4                     	ds	1
   719  0000F5                     ??_i2c_int_handler:
   720                           
   721                           ; 0 bytes @ 0x75
   722  0000F5                     	ds	1
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           postdec1	equ	0xFE5
   730                           fsr1l	equ	0xFE1
   731                           
   732                           	psect	cstackCOMRAM
   733  000001                     __pcstackCOMRAM:
   734                           	opt stack 0
   735  000001                     ?_ReadTimer1:
   736                           	opt stack 0
   737  000001                     ReadUSART@data:
   738                           	opt stack 0
   739  000001                     WriteTimer1@timer1:
   740                           	opt stack 0
   741  000001                     i1memcpy@d1:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x0
   745  000001                     	ds	2
   746  000003                     ReadTimer1@timer:
   747                           	opt stack 0
   748  000003                     WriteTimer1@timer:
   749                           	opt stack 0
   750  000003                     i1memcpy@s1:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x2
   754  000003                     	ds	2
   755  000005                     i1memcpy@n:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x4
   759  000005                     	ds	2
   760  000007                     i1memcpy@d:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x6
   764  000007                     	ds	2
   765  000009                     i1memcpy@s:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x8
   769  000009                     	ds	2
   770  00000B                     i1send_msg@qptr:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0xA
   774  00000B                     	ds	2
   775  00000D                     i1send_msg@length:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0xC
   779  00000D                     	ds	1
   780  00000E                     i1send_msg@msgtype:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0xD
   784  00000E                     	ds	1
   785  00000F                     i1send_msg@data:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0xE
   789  00000F                     	ds	2
   790  000011                     ??i1_send_msg:
   791                           
   792                           ; 0 bytes @ 0x10
   793  000011                     	ds	1
   794  000012                     i1send_msg@tlength:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x11
   798  000012                     	ds	2
   799  000014                     i1send_msg@slot:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x13
   803  000014                     	ds	1
   804  000015                     i1send_msg@qmsg:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x14
   808  000015                     	ds	2
   809  000017                     ToMainLow_sendmsg@msgtype:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x16
   813  000017                     	ds	1
   814  000018                     ToMainLow_sendmsg@data:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x17
   818  000018                     	ds	2
   819  00001A                     ToMainLow_sendmsg@length:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x19
   823  00001A                     	ds	1
   824  00001B                     ??_timer1_int_handler:
   825  00001B                     ??_uart_recv_int_handler:
   826                           
   827                           ; 0 bytes @ 0x1A
   828  00001B                     	ds	1
   829  00001C                     timer1_int_handler@result:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x1B
   833  00001C                     	ds	2
   834  00001E                     ??_InterruptHandlerLow:
   835                           
   836                           ; 0 bytes @ 0x1D
   837  00001E                     	ds	17
   838  00002F                     ?_packReturnData:
   839                           	opt stack 0
   840  00002F                     ?_unpackBrainMsg:
   841                           	opt stack 0
   842  00002F                     ?i2_in_high_int:
   843                           	opt stack 0
   844  00002F                     handle_start@data_read:
   845                           	opt stack 0
   846  00002F                     packReturnData@data:
   847                           	opt stack 0
   848  00002F                     unpackBrainMsg@buf:
   849                           	opt stack 0
   850  00002F                     reqADData@buf:
   851                           	opt stack 0
   852  00002F                     WriteTimer0@timer0:
   853                           	opt stack 0
   854  00002F                     i2check_msg@qptr:
   855                           	opt stack 0
   856  00002F                     i2start_i2c_slave_reply@msg:
   857                           	opt stack 0
   858  00002F                     i2memcpy@d1:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x2E
   862  00002F                     	ds	2
   863  000031                     ??_reqADData:
   864  000031                     ??i2_check_msg:
   865  000031                     ??i2_start_i2c_slave_reply:
   866  000031                     ?i2_in_low_int:
   867                           	opt stack 0
   868  000031                     packReturnData@payloadLen:
   869                           	opt stack 0
   870  000031                     setBrainReqData@buf:
   871                           	opt stack 0
   872  000031                     WriteTimer0@timer:
   873                           	opt stack 0
   874  000031                     i2memcpy@s1:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x30
   878  000031                     	ds	1
   879  000032                     reqADData@numSamples:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x31
   883  000032                     	ds	1
   884  000033                     i2start_i2c_slave_reply@length:
   885                           	opt stack 0
   886  000033                     packReturnData@msg:
   887                           	opt stack 0
   888  000033                     i2memcpy@n:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x32
   892  000033                     	ds	2
   893  000035                     packReturnData@maxout:
   894                           	opt stack 0
   895  000035                     i2memcpy@d:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x34
   899  000035                     	ds	2
   900  000037                     packReturnData@sensorID:
   901                           	opt stack 0
   902  000037                     i2memcpy@s:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x36
   906  000037                     	ds	2
   907  000039                     ??_packReturnData:
   908  000039                     i2send_msg@qptr:
   909                           	opt stack 0
   910  000039                     i2recv_msg@qptr:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x38
   914  000039                     	ds	2
   915  00003B                     i2send_msg@length:
   916                           	opt stack 0
   917  00003B                     i2recv_msg@maxlength:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x3A
   921  00003B                     	ds	1
   922  00003C                     i2send_msg@msgtype:
   923                           	opt stack 0
   924  00003C                     packReturnData@end:
   925                           	opt stack 0
   926  00003C                     i2recv_msg@msgtype:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x3B
   930  00003C                     	ds	1
   931  00003D                     i2send_msg@data:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x3C
   935  00003D                     	ds	1
   936  00003E                     packReturnData@dest:
   937                           	opt stack 0
   938  00003E                     i2recv_msg@data:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x3D
   942  00003E                     	ds	1
   943  00003F                     ??i2_send_msg:
   944                           
   945                           ; 0 bytes @ 0x3E
   946  00003F                     	ds	1
   947  000040                     ??i2_recv_msg:
   948  000040                     ?_packADData:
   949                           	opt stack 0
   950  000040                     packADData@data:
   951                           	opt stack 0
   952  000040                     i2send_msg@tlength:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0x3F
   956  000040                     	ds	2
   957  000042                     i2send_msg@slot:
   958                           	opt stack 0
   959  000042                     i2recv_msg@slot:
   960                           	opt stack 0
   961  000042                     packADData@len:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x41
   965  000042                     	ds	1
   966  000043                     i2send_msg@qmsg:
   967                           	opt stack 0
   968  000043                     i2recv_msg@tlength:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x42
   972  000043                     	ds	1
   973  000044                     packADData@out:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x43
   977  000044                     	ds	1
   978  000045                     ToMainHigh_sendmsg@msgtype:
   979                           	opt stack 0
   980  000045                     i2recv_msg@qmsg:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x44
   984  000045                     	ds	1
   985  000046                     ToMainHigh_sendmsg@data:
   986                           	opt stack 0
   987  000046                     packADData@maxout:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x45
   991  000046                     	ds	1
   992  000047                     FromMainHigh_recvmsg@maxlength:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x46
   996  000047                     	ds	1
   997  000048                     tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           postinc0	equ	0xFEE
  1002                           wreg	equ	0xFE8
  1003                           postdec1	equ	0xFE5
  1004                           fsr1l	equ	0xFE1
  1005                           
  1006                           ; 0 bytes @ 0x47
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 186 in file "../src/main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  j               2   27[BANK2 ] int 
  1017 ;;  j               2   29[BANK2 ] int 
  1018 ;;  ic             28   42[BANK2 ] struct __i2c_comm
  1019 ;;  msgbuffer      11   15[BANK2 ] unsigned char [11]
  1020 ;;  to_send_buff   11    0[BANK2 ] unsigned char [11]
  1021 ;;  uc              5   33[BANK2 ] struct __uart_comm
  1022 ;;  data_points_    2   38[BANK2 ] int 
  1023 ;;  t1thread_dat    2   31[BANK2 ] struct __timer1_thread_s
  1024 ;;  t0thread_dat    2   13[BANK2 ] struct __timer0_thread_s
  1025 ;;  uthread_data    2   11[BANK2 ] struct __uart_thread_str
  1026 ;;  length          1   41[BANK2 ] char 
  1027 ;;  msgtype         1   40[BANK2 ] unsigned char 
  1028 ;;  last_reg_rec    1   26[BANK2 ] unsigned char 
  1029 ;;  i               1    0        unsigned char 
  1030 ;;  c               1    0        unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;		None               void
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0      70       0
  1042 ;;      Temps:          0       0       1       0       0
  1043 ;;      Totals:         0       0       1      70       0
  1044 ;;Total ram usage:       71 bytes
  1045 ;; Hardware stack levels required when called:   15
  1046 ;; This function calls:
  1047 ;;		_OpenTimer0
  1048 ;;		_OpenTimer1
  1049 ;;		_OpenUSART
  1050 ;;		_ToMainHigh_recvmsg
  1051 ;;		_ToMainLow_recvmsg
  1052 ;;		_block_on_To_msgqueues
  1053 ;;		_enable_interrupts
  1054 ;;		_i2c_configure_slave
  1055 ;;		_init_i2c
  1056 ;;		_init_queues
  1057 ;;		_init_timer1_lthread
  1058 ;;		_init_uart_recv
  1059 ;;		_start_i2c_slave_reply
  1060 ;;		_timer0_lthread
  1061 ;;		_timer1_lthread
  1062 ;;		_uart_lthread
  1063 ;; This function is called by:
  1064 ;;		Startup code after reset
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text0
  1069  0006BA                     __ptext0:
  1070                           	opt stack 0
  1071  0006BA                     _main:
  1072                           	opt stack 16
  1073                           
  1074                           ;main.c: 187: char c;
  1075                           ;main.c: 188: signed char length;
  1076                           ;main.c: 189: unsigned char msgtype;
  1077                           ;main.c: 190: unsigned char last_reg_recvd;
  1078                           ;main.c: 191: uart_comm uc;
  1079                           ;main.c: 192: i2c_comm ic;
  1080                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1081                           ;main.c: 194: unsigned char to_send_buffer[10+1];
  1082                           ;main.c: 195: int data_points_count = 0;
  1083                           
  1084                           ;incstack = 0
  1085  0006BA  0E00               	movlw	0
  1086  0006BC  0102               	movlb	2	; () banked
  1087  0006BE  0102               	movlb	2	; () banked
  1088  0006C0  6F93               	movwf	(main@data_points_count+1)& (0+255),b
  1089  0006C2  0E00               	movlw	0
  1090  0006C4  0102               	movlb	2	; () banked
  1091  0006C6  6F92               	movwf	main@data_points_count& (0+255),b
  1092                           
  1093                           ;main.c: 196: unsigned char i;
  1094                           ;main.c: 197: uart_thread_struct uthread_data;
  1095                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1096                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1097                           ;main.c: 207: OSCCON = 0x82;
  1098  0006C8  0E82               	movlw	130
  1099  0006CA  6ED3               	movwf	4051,c	;volatile
  1100                           
  1101                           ; BSR set to: 2
  1102                           ;main.c: 208: OSCTUNEbits.PLLEN = 0;
  1103  0006CC  9C9B               	bcf	3995,6,c	;volatile
  1104                           
  1105                           ; BSR set to: 2
  1106                           ;main.c: 226: init_uart_recv(&uc);
  1107  0006CE  0102               	movlb	2	; () banked
  1108  0006D0  0E02               	movlw	high main@uc
  1109  0006D2  0101               	movlb	1	; () banked
  1110  0006D4  0101               	movlb	1	; () banked
  1111  0006D6  6F84               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1112  0006D8  0102               	movlb	2	; () banked
  1113  0006DA  0E8D               	movlw	low main@uc
  1114  0006DC  0101               	movlb	1	; () banked
  1115  0006DE  0101               	movlb	1	; () banked
  1116  0006E0  6F83               	movwf	init_uart_recv@uc& (0+255),b
  1117  0006E2  ECD4  F00E         	call	_init_uart_recv	;wreg free
  1118                           
  1119                           ;main.c: 229: init_i2c(&ic);
  1120  0006E6  0102               	movlb	2	; () banked
  1121  0006E8  0E02               	movlw	high main@ic
  1122  0006EA  0101               	movlb	1	; () banked
  1123  0006EC  0101               	movlb	1	; () banked
  1124  0006EE  6F84               	movwf	(init_i2c@ic+1)& (0+255),b
  1125  0006F0  0102               	movlb	2	; () banked
  1126  0006F2  0E96               	movlw	low main@ic
  1127  0006F4  0101               	movlb	1	; () banked
  1128  0006F6  0101               	movlb	1	; () banked
  1129  0006F8  6F83               	movwf	init_i2c@ic& (0+255),b
  1130  0006FA  ECC8  F00B         	call	_init_i2c	;wreg free
  1131                           
  1132                           ;main.c: 232: init_timer1_lthread(&t1thread_data);
  1133  0006FE  0102               	movlb	2	; () banked
  1134  000700  0E02               	movlw	high main@t1thread_data
  1135  000702  0101               	movlb	1	; () banked
  1136  000704  0101               	movlb	1	; () banked
  1137  000706  6F84               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1138  000708  0102               	movlb	2	; () banked
  1139  00070A  0E8B               	movlw	low main@t1thread_data
  1140  00070C  0101               	movlb	1	; () banked
  1141  00070E  0101               	movlb	1	; () banked
  1142  000710  6F83               	movwf	init_timer1_lthread@tptr& (0+255),b
  1143  000712  EC11  F00F         	call	_init_timer1_lthread	;wreg free
  1144                           
  1145                           ;main.c: 235: init_queues();
  1146  000716  EC91  F00B         	call	_init_queues	;wreg free
  1147                           
  1148                           ;main.c: 239: TRISB = 0x0;
  1149  00071A  0E00               	movlw	0
  1150  00071C  6E93               	movwf	3987,c	;volatile
  1151                           
  1152                           ;main.c: 240: LATB = 0x0;
  1153  00071E  0E00               	movlw	0
  1154  000720  6E8A               	movwf	3978,c	;volatile
  1155                           
  1156                           ;main.c: 253: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
  1157  000722  0E90               	movlw	144
  1158  000724  EC73  F00E         	call	_OpenTimer0
  1159                           
  1160                           ;main.c: 262: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1161  000728  0EF5               	movlw	245
  1162  00072A  ECBE  F00D         	call	_OpenTimer1
  1163                           
  1164                           ;main.c: 269: IPR1bits.TMR1IP = 0;
  1165  00072E  909F               	bcf	3999,0,c	;volatile
  1166                           
  1167                           ;main.c: 271: IPR1bits.RCIP = 0;
  1168  000730  9A9F               	bcf	3999,5,c	;volatile
  1169                           
  1170                           ;main.c: 273: IPR1bits.SSPIP = 1;
  1171  000732  869F               	bsf	3999,3,c	;volatile
  1172                           
  1173                           ;main.c: 282: i2c_configure_slave(0x9E);
  1174  000734  0E9E               	movlw	158
  1175  000736  EC88  F00E         	call	_i2c_configure_slave
  1176                           
  1177                           ;main.c: 297: PIE1bits.SSPIE = 1;
  1178  00073A  869D               	bsf	3997,3,c	;volatile
  1179                           
  1180                           ;main.c: 308: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1181                           ;main.c: 309: 0b11111111 & 0b11101111, 0x19);
  1182  00073C  0E00               	movlw	0
  1183  00073E  0101               	movlb	1	; () banked
  1184  000740  0101               	movlb	1	; () banked
  1185  000742  6F84               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1186  000744  0E19               	movlw	25
  1187  000746  0101               	movlb	1	; () banked
  1188  000748  6F83               	movwf	OpenUSART@spbrg& (0+255),b
  1189  00074A  0E6C               	movlw	108
  1190  00074C  EC8E  F009         	call	_OpenUSART
  1191                           
  1192                           ;main.c: 315: enable_interrupts();
  1193  000750  EC49  F00F         	call	_enable_interrupts	;wreg free
  1194  000754                     l3477:
  1195                           
  1196                           ;main.c: 339: block_on_To_msgqueues();
  1197  000754  ECA0  F00A         	call	_block_on_To_msgqueues	;wreg free
  1198                           
  1199                           ;main.c: 346: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1200  000758  0102               	movlb	2	; () banked
  1201  00075A  0E02               	movlw	high main@msgtype
  1202  00075C  0101               	movlb	1	; () banked
  1203  00075E  0101               	movlb	1	; () banked
  1204  000760  6F9C               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1205  000762  0102               	movlb	2	; () banked
  1206  000764  0E94               	movlw	low main@msgtype
  1207  000766  0101               	movlb	1	; () banked
  1208  000768  0101               	movlb	1	; () banked
  1209  00076A  6F9B               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1210  00076C  0102               	movlb	2	; () banked
  1211  00076E  0E02               	movlw	high main@msgbuffer
  1212  000770  0101               	movlb	1	; () banked
  1213  000772  0101               	movlb	1	; () banked
  1214  000774  6F9E               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1215  000776  0102               	movlb	2	; () banked
  1216  000778  0E7B               	movlw	low main@msgbuffer
  1217  00077A  0101               	movlb	1	; () banked
  1218  00077C  0101               	movlb	1	; () banked
  1219  00077E  6F9D               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1220  000780  0E0A               	movlw	10
  1221  000782  EC3E  F00D         	call	_ToMainHigh_recvmsg
  1222  000786  0102               	movlb	2	; () banked
  1223  000788  0102               	movlb	2	; () banked
  1224  00078A  6F95               	movwf	main@length& (0+255),b
  1225                           
  1226                           ; BSR set to: 2
  1227                           ;main.c: 347: if (length < 0) {
  1228  00078C  0102               	movlb	2	; () banked
  1229  00078E  0102               	movlb	2	; () banked
  1230  000790  BF95               	btfsc	main@length& (0+255),7,b
  1231  000792  D0FB               	goto	l3527
  1232  000794  D0EB               	goto	l3525
  1233  000796                     l3485:
  1234                           
  1235                           ; BSR set to: 2
  1236                           ;main.c: 355: {
  1237                           ;main.c: 356: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1238  000796  0102               	movlb	2	; () banked
  1239  000798  0E02               	movlw	high main@t0thread_data
  1240  00079A  0101               	movlb	1	; () banked
  1241  00079C  0101               	movlb	1	; () banked
  1242  00079E  6F84               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1243  0007A0  0102               	movlb	2	; () banked
  1244  0007A2  0E79               	movlw	low main@t0thread_data
  1245  0007A4  0101               	movlb	1	; () banked
  1246  0007A6  0101               	movlb	1	; () banked
  1247  0007A8  6F83               	movwf	timer0_lthread@tptr& (0+255),b
  1248  0007AA  0102               	movlb	2	; () banked
  1249  0007AC  0101               	movlb	1	; () banked
  1250  0007AE  C294  F185         	movff	main@msgtype,timer0_lthread@msgtype
  1251  0007B2  0101               	movlb	1	; () banked
  1252  0007B4  0101               	movlb	1	; () banked
  1253  0007B6  6B86               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1254  0007B8  0102               	movlb	2	; () banked
  1255  0007BA  0102               	movlb	2	; () banked
  1256  0007BC  5195               	movf	main@length& (0+255),w,b
  1257  0007BE  0101               	movlb	1	; () banked
  1258  0007C0  0101               	movlb	1	; () banked
  1259  0007C2  6F87               	movwf	timer0_lthread@length& (0+255),b
  1260  0007C4  0101               	movlb	1	; () banked
  1261  0007C6  6B88               	clrf	(timer0_lthread@length+1)& (0+255),b
  1262  0007C8  0101               	movlb	1	; () banked
  1263  0007CA  BF87               	btfsc	timer0_lthread@length& (0+255),7,b
  1264  0007CC  0788               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1265  0007CE  0102               	movlb	2	; () banked
  1266  0007D0  0E02               	movlw	high main@msgbuffer
  1267  0007D2  0101               	movlb	1	; () banked
  1268  0007D4  0101               	movlb	1	; () banked
  1269  0007D6  6F8A               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1270  0007D8  0102               	movlb	2	; () banked
  1271  0007DA  0E7B               	movlw	low main@msgbuffer
  1272  0007DC  0101               	movlb	1	; () banked
  1273  0007DE  0101               	movlb	1	; () banked
  1274  0007E0  6F89               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1275  0007E2  EC08  F00F         	call	_timer0_lthread	;wreg free
  1276                           
  1277                           ;main.c: 357: break;
  1278  0007E6  D0D1               	goto	l3527
  1279  0007E8                     l102:
  1280                           
  1281                           ;main.c: 360: case 41:
  1282                           ;main.c: 361: {
  1283                           ;main.c: 364: last_reg_recvd = msgbuffer[0];
  1284  0007E8  C27B  F286         	movff	main@msgbuffer,main@last_reg_recvd
  1285                           
  1286                           ;main.c: 365: break;
  1287  0007EC  D0CE               	goto	l3527
  1288  0007EE                     l3487:
  1289                           
  1290                           ;main.c: 398: {
  1291                           ;main.c: 399: if(data_points_count == 0){
  1292  0007EE  0102               	movlb	2	; () banked
  1293  0007F0  0102               	movlb	2	; () banked
  1294  0007F2  5193               	movf	(main@data_points_count+1)& (0+255),w,b
  1295  0007F4  1192               	iorwf	main@data_points_count& (0+255),w,b
  1296  0007F6  A4D8               	btfss	status,2,c
  1297  0007F8  D00C               	goto	l3493
  1298                           
  1299                           ; BSR set to: 2
  1300                           ;main.c: 400: msgbuffer[0] = 0xff;
  1301  0007FA  0102               	movlb	2	; () banked
  1302  0007FC  0102               	movlb	2	; () banked
  1303  0007FE  697B               	setf	main@msgbuffer& (0+255),b
  1304                           
  1305                           ; BSR set to: 2
  1306                           ;main.c: 401: length = 1;
  1307  000800  0101               	movlb	1	; () banked
  1308  000802  6FA7               	movwf	??_main& (0+255),b
  1309  000804  0E01               	movlw	1
  1310  000806  0102               	movlb	2	; () banked
  1311  000808  0102               	movlb	2	; () banked
  1312  00080A  6F95               	movwf	main@length& (0+255),b
  1313  00080C  0101               	movlb	1	; () banked
  1314  00080E  51A7               	movf	??_main& (0+255),w,b
  1315                           
  1316                           ;main.c: 402: }
  1317  000810  D09D               	goto	l3521
  1318  000812                     l3493:
  1319                           
  1320                           ;main.c: 403: else{
  1321                           ;main.c: 404: for(int j = 0; j < data_points_count; j++){
  1322  000812  0E00               	movlw	0
  1323  000814  0102               	movlb	2	; () banked
  1324  000816  0102               	movlb	2	; () banked
  1325  000818  6F88               	movwf	(main@j+1)& (0+255),b
  1326  00081A  0E00               	movlw	0
  1327  00081C  0102               	movlb	2	; () banked
  1328  00081E  6F87               	movwf	main@j& (0+255),b
  1329  000820  D01E               	goto	l3499
  1330  000822                     l3495:
  1331                           
  1332                           ;main.c: 405: msgbuffer[j] = to_send_buffer[j];
  1333  000822  0102               	movlb	2	; () banked
  1334  000824  0E6C               	movlw	low main@to_send_buffer
  1335  000826  0102               	movlb	2	; () banked
  1336  000828  0102               	movlb	2	; () banked
  1337  00082A  2587               	addwf	main@j& (0+255),w,b
  1338  00082C  6ED9               	movwf	fsr2l,c
  1339  00082E  0102               	movlb	2	; () banked
  1340  000830  0E02               	movlw	high main@to_send_buffer
  1341  000832  0102               	movlb	2	; () banked
  1342  000834  0102               	movlb	2	; () banked
  1343  000836  2188               	addwfc	(main@j+1)& (0+255),w,b
  1344  000838  6EDA               	movwf	fsr2h,c
  1345  00083A  0102               	movlb	2	; () banked
  1346  00083C  0E7B               	movlw	low main@msgbuffer
  1347  00083E  0102               	movlb	2	; () banked
  1348  000840  0102               	movlb	2	; () banked
  1349  000842  2587               	addwf	main@j& (0+255),w,b
  1350  000844  6EE1               	movwf	fsr1l,c
  1351  000846  0102               	movlb	2	; () banked
  1352  000848  0E02               	movlw	high main@msgbuffer
  1353  00084A  0102               	movlb	2	; () banked
  1354  00084C  0102               	movlb	2	; () banked
  1355  00084E  2188               	addwfc	(main@j+1)& (0+255),w,b
  1356  000850  6EE2               	movwf	fsr1h,c
  1357  000852  CFDF FFE7          	movff	indf2,indf1
  1358                           
  1359                           ; BSR set to: 2
  1360  000856  0102               	movlb	2	; () banked
  1361  000858  0102               	movlb	2	; () banked
  1362  00085A  4B87               	infsnz	main@j& (0+255),f,b
  1363  00085C  2B88               	incf	(main@j+1)& (0+255),f,b
  1364  00085E                     l3499:
  1365                           
  1366                           ; BSR set to: 2
  1367  00085E  0102               	movlb	2	; () banked
  1368  000860  0102               	movlb	2	; () banked
  1369  000862  5188               	movf	(main@j+1)& (0+255),w,b
  1370  000864  0A80               	xorlw	128
  1371  000866  0101               	movlb	1	; () banked
  1372  000868  6FA7               	movwf	??_main& (0+255),b
  1373  00086A  0102               	movlb	2	; () banked
  1374  00086C  5192               	movf	main@data_points_count& (0+255),w,b
  1375  00086E  0102               	movlb	2	; () banked
  1376  000870  0102               	movlb	2	; () banked
  1377  000872  5D87               	subwf	main@j& (0+255),w,b
  1378  000874  0102               	movlb	2	; () banked
  1379  000876  0102               	movlb	2	; () banked
  1380  000878  5193               	movf	(main@data_points_count+1)& (0+255),w,b
  1381  00087A  0A80               	xorlw	128
  1382  00087C  0101               	movlb	1	; () banked
  1383  00087E  59A7               	subwfb	??_main& (0+255),w,b
  1384  000880  A0D8               	btfss	status,0,c
  1385  000882  D7CF               	goto	l3495
  1386  000884  D050               	goto	u2490
  1387  000886                     l3503:
  1388                           
  1389                           ; BSR set to: 2
  1390                           ;main.c: 413: {
  1391                           ;main.c: 414: to_send_buffer[0] = 0x04;
  1392  000886  0101               	movlb	1	; () banked
  1393  000888  6FA7               	movwf	??_main& (0+255),b
  1394  00088A  0E04               	movlw	4
  1395  00088C  0102               	movlb	2	; () banked
  1396  00088E  0102               	movlb	2	; () banked
  1397  000890  6F6C               	movwf	main@to_send_buffer& (0+255),b
  1398  000892  0101               	movlb	1	; () banked
  1399  000894  51A7               	movf	??_main& (0+255),w,b
  1400                           
  1401                           ;main.c: 415: to_send_buffer[1] = 0x0d;
  1402  000896  0101               	movlb	1	; () banked
  1403  000898  6FA7               	movwf	??_main& (0+255),b
  1404  00089A  0E0D               	movlw	13
  1405  00089C  0102               	movlb	2	; () banked
  1406  00089E  0102               	movlb	2	; () banked
  1407  0008A0  6F6D               	movwf	(main@to_send_buffer+1)& (0+255),b
  1408  0008A2  0101               	movlb	1	; () banked
  1409  0008A4  51A7               	movf	??_main& (0+255),w,b
  1410                           
  1411                           ; BSR set to: 1
  1412                           ;main.c: 416: data_points_count = 2;
  1413  0008A6  0E00               	movlw	0
  1414  0008A8  0102               	movlb	2	; () banked
  1415  0008AA  0102               	movlb	2	; () banked
  1416  0008AC  6F93               	movwf	(main@data_points_count+1)& (0+255),b
  1417  0008AE  0E02               	movlw	2
  1418  0008B0  0102               	movlb	2	; () banked
  1419  0008B2  6F92               	movwf	main@data_points_count& (0+255),b
  1420                           
  1421                           ; BSR set to: 2
  1422                           ;main.c: 417: for(int j = 0; j < data_points_count; j++){
  1423  0008B4  0E00               	movlw	0
  1424  0008B6  0102               	movlb	2	; () banked
  1425  0008B8  0102               	movlb	2	; () banked
  1426  0008BA  6F8A               	movwf	(main@j_502+1)& (0+255),b
  1427  0008BC  0E00               	movlw	0
  1428  0008BE  0102               	movlb	2	; () banked
  1429  0008C0  6F89               	movwf	main@j_502& (0+255),b
  1430  0008C2  D01E               	goto	l3513
  1431  0008C4                     l3509:
  1432                           
  1433                           ;main.c: 418: msgbuffer[j] = to_send_buffer[j];
  1434  0008C4  0102               	movlb	2	; () banked
  1435  0008C6  0E6C               	movlw	low main@to_send_buffer
  1436  0008C8  0102               	movlb	2	; () banked
  1437  0008CA  0102               	movlb	2	; () banked
  1438  0008CC  2589               	addwf	main@j_502& (0+255),w,b
  1439  0008CE  6ED9               	movwf	fsr2l,c
  1440  0008D0  0102               	movlb	2	; () banked
  1441  0008D2  0E02               	movlw	high main@to_send_buffer
  1442  0008D4  0102               	movlb	2	; () banked
  1443  0008D6  0102               	movlb	2	; () banked
  1444  0008D8  218A               	addwfc	(main@j_502+1)& (0+255),w,b
  1445  0008DA  6EDA               	movwf	fsr2h,c
  1446  0008DC  0102               	movlb	2	; () banked
  1447  0008DE  0E7B               	movlw	low main@msgbuffer
  1448  0008E0  0102               	movlb	2	; () banked
  1449  0008E2  0102               	movlb	2	; () banked
  1450  0008E4  2589               	addwf	main@j_502& (0+255),w,b
  1451  0008E6  6EE1               	movwf	fsr1l,c
  1452  0008E8  0102               	movlb	2	; () banked
  1453  0008EA  0E02               	movlw	high main@msgbuffer
  1454  0008EC  0102               	movlb	2	; () banked
  1455  0008EE  0102               	movlb	2	; () banked
  1456  0008F0  218A               	addwfc	(main@j_502+1)& (0+255),w,b
  1457  0008F2  6EE2               	movwf	fsr1h,c
  1458  0008F4  CFDF FFE7          	movff	indf2,indf1
  1459                           
  1460                           ; BSR set to: 2
  1461  0008F8  0102               	movlb	2	; () banked
  1462  0008FA  0102               	movlb	2	; () banked
  1463  0008FC  4B89               	infsnz	main@j_502& (0+255),f,b
  1464  0008FE  2B8A               	incf	(main@j_502+1)& (0+255),f,b
  1465  000900                     l3513:
  1466                           
  1467                           ; BSR set to: 2
  1468  000900  0102               	movlb	2	; () banked
  1469  000902  0102               	movlb	2	; () banked
  1470  000904  518A               	movf	(main@j_502+1)& (0+255),w,b
  1471  000906  0A80               	xorlw	128
  1472  000908  0101               	movlb	1	; () banked
  1473  00090A  6FA7               	movwf	??_main& (0+255),b
  1474  00090C  0102               	movlb	2	; () banked
  1475  00090E  5192               	movf	main@data_points_count& (0+255),w,b
  1476  000910  0102               	movlb	2	; () banked
  1477  000912  0102               	movlb	2	; () banked
  1478  000914  5D89               	subwf	main@j_502& (0+255),w,b
  1479  000916  0102               	movlb	2	; () banked
  1480  000918  0102               	movlb	2	; () banked
  1481  00091A  5193               	movf	(main@data_points_count+1)& (0+255),w,b
  1482  00091C  0A80               	xorlw	128
  1483  00091E  0101               	movlb	1	; () banked
  1484  000920  59A7               	subwfb	??_main& (0+255),w,b
  1485  000922  A0D8               	btfss	status,0,c
  1486  000924  D7CF               	goto	l3509
  1487  000926                     u2490:
  1488                           
  1489                           ; BSR set to: 1
  1490                           ;main.c: 419: }
  1491                           ;main.c: 420: length = data_points_count;
  1492  000926  C292  F295         	movff	main@data_points_count,main@length
  1493                           
  1494                           ; BSR set to: 1
  1495                           ;main.c: 421: data_points_count = 0;
  1496  00092A  0E00               	movlw	0
  1497  00092C  0102               	movlb	2	; () banked
  1498  00092E  0102               	movlb	2	; () banked
  1499  000930  6F93               	movwf	(main@data_points_count+1)& (0+255),b
  1500  000932  0E00               	movlw	0
  1501  000934  0102               	movlb	2	; () banked
  1502  000936  6F92               	movwf	main@data_points_count& (0+255),b
  1503                           
  1504                           ;main.c: 422: break;
  1505  000938  D009               	goto	l3521
  1506  00093A                     l3519:
  1507  00093A  0102               	movlb	2	; () banked
  1508  00093C  0102               	movlb	2	; () banked
  1509  00093E  5186               	movf	main@last_reg_recvd& (0+255),w,b
  1510                           
  1511                           ; Switch size 1, requested type "space"
  1512                           ; Number of cases is 2, Range of values is 170 to 171
  1513                           ; switch strategies available:
  1514                           ; Name         Instructions Cycles
  1515                           ; simple_byte            7     4 (average)
  1516                           ;	Chosen strategy is simple_byte
  1517  000940  0AAA               	xorlw	170	; case 170
  1518  000942  B4D8               	btfsc	status,2,c
  1519  000944  D754               	goto	l3487
  1520  000946  0A01               	xorlw	1	; case 171
  1521  000948  B4D8               	btfsc	status,2,c
  1522  00094A  D79D               	goto	l3503
  1523  00094C                     l3521:
  1524                           
  1525                           ;main.c: 425: start_i2c_slave_reply(length, msgbuffer);
  1526  00094C  0102               	movlb	2	; () banked
  1527  00094E  0E02               	movlw	high main@msgbuffer
  1528  000950  0101               	movlb	1	; () banked
  1529  000952  0101               	movlb	1	; () banked
  1530  000954  6F84               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1531  000956  0102               	movlb	2	; () banked
  1532  000958  0E7B               	movlw	low main@msgbuffer
  1533  00095A  0101               	movlb	1	; () banked
  1534  00095C  0101               	movlb	1	; () banked
  1535  00095E  6F83               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1536  000960  0102               	movlb	2	; () banked
  1537  000962  0102               	movlb	2	; () banked
  1538  000964  5195               	movf	main@length& (0+255),w,b
  1539  000966  ECF2  F005         	call	_start_i2c_slave_reply
  1540                           
  1541                           ;main.c: 426: break;
  1542  00096A  D00F               	goto	l3527
  1543  00096C                     l3525:
  1544  00096C  0102               	movlb	2	; () banked
  1545  00096E  0102               	movlb	2	; () banked
  1546  000970  5194               	movf	main@msgtype& (0+255),w,b
  1547                           
  1548                           ; Switch size 1, requested type "space"
  1549                           ; Number of cases is 4, Range of values is 10 to 42
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte           13     7 (average)
  1553                           ;	Chosen strategy is simple_byte
  1554  000972  0A0A               	xorlw	10	; case 10
  1555  000974  B4D8               	btfsc	status,2,c
  1556  000976  D70F               	goto	l3485
  1557  000978  0A22               	xorlw	34	; case 40
  1558  00097A  B4D8               	btfsc	status,2,c
  1559  00097C  D735               	goto	l102
  1560  00097E  0A01               	xorlw	1	; case 41
  1561  000980  B4D8               	btfsc	status,2,c
  1562  000982  D732               	goto	l102
  1563  000984  0A03               	xorlw	3	; case 42
  1564  000986  B4D8               	btfsc	status,2,c
  1565  000988  D7D8               	goto	l3519
  1566  00098A                     l3527:
  1567                           
  1568                           ;main.c: 434: }
  1569                           ;main.c: 437: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1570  00098A  0102               	movlb	2	; () banked
  1571  00098C  0E02               	movlw	high main@msgtype
  1572  00098E  0101               	movlb	1	; () banked
  1573  000990  0101               	movlb	1	; () banked
  1574  000992  6F9C               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1575  000994  0102               	movlb	2	; () banked
  1576  000996  0E94               	movlw	low main@msgtype
  1577  000998  0101               	movlb	1	; () banked
  1578  00099A  0101               	movlb	1	; () banked
  1579  00099C  6F9B               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1580  00099E  0102               	movlb	2	; () banked
  1581  0009A0  0E02               	movlw	high main@msgbuffer
  1582  0009A2  0101               	movlb	1	; () banked
  1583  0009A4  0101               	movlb	1	; () banked
  1584  0009A6  6F9E               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1585  0009A8  0102               	movlb	2	; () banked
  1586  0009AA  0E7B               	movlw	low main@msgbuffer
  1587  0009AC  0101               	movlb	1	; () banked
  1588  0009AE  0101               	movlb	1	; () banked
  1589  0009B0  6F9D               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1590  0009B2  0E0A               	movlw	10
  1591  0009B4  EC1D  F00D         	call	_ToMainLow_recvmsg
  1592  0009B8  0102               	movlb	2	; () banked
  1593  0009BA  0102               	movlb	2	; () banked
  1594  0009BC  6F95               	movwf	main@length& (0+255),b
  1595                           
  1596                           ; BSR set to: 2
  1597                           ;main.c: 438: if (length < 0) {
  1598  0009BE  0102               	movlb	2	; () banked
  1599  0009C0  0102               	movlb	2	; () banked
  1600  0009C2  BF95               	btfsc	main@length& (0+255),7,b
  1601  0009C4  D6C7               	goto	l3477
  1602  0009C6  D063               	goto	l3543
  1603  0009C8                     l3533:
  1604                           
  1605                           ; BSR set to: 2
  1606                           ;main.c: 446: {
  1607                           ;main.c: 447: if(data_points_count <= 10+1){
  1608  0009C8  0102               	movlb	2	; () banked
  1609  0009CA  0102               	movlb	2	; () banked
  1610  0009CC  5193               	movf	(main@data_points_count+1)& (0+255),w,b
  1611  0009CE  0A80               	xorlw	128
  1612  0009D0  6EF3               	movwf	prodl,c
  1613  0009D2  0E80               	movlw	128
  1614  0009D4  5CF3               	subwf	prodl,w,c
  1615  0009D6  0E0C               	movlw	12
  1616  0009D8  B4D8               	btfsc	status,2,c
  1617  0009DA  5D92               	subwf	main@data_points_count& (0+255),w,b
  1618  0009DC  B0D8               	btfsc	status,0,c
  1619  0009DE  D6BA               	goto	l3477
  1620                           
  1621                           ; BSR set to: 2
  1622                           ;main.c: 449: data_points_count++;
  1623  0009E0  0102               	movlb	2	; () banked
  1624  0009E2  0102               	movlb	2	; () banked
  1625  0009E4  4B92               	infsnz	main@data_points_count& (0+255),f,b
  1626  0009E6  2B93               	incf	(main@data_points_count+1)& (0+255),f,b
  1627  0009E8  D6B5               	goto	l3477
  1628  0009EA                     l3537:
  1629                           
  1630                           ; BSR set to: 2
  1631                           ;main.c: 454: {
  1632                           ;main.c: 455: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1633  0009EA  0102               	movlb	2	; () banked
  1634  0009EC  0E02               	movlw	high main@t1thread_data
  1635  0009EE  0101               	movlb	1	; () banked
  1636  0009F0  0101               	movlb	1	; () banked
  1637  0009F2  6F9E               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1638  0009F4  0102               	movlb	2	; () banked
  1639  0009F6  0E8B               	movlw	low main@t1thread_data
  1640  0009F8  0101               	movlb	1	; () banked
  1641  0009FA  0101               	movlb	1	; () banked
  1642  0009FC  6F9D               	movwf	timer1_lthread@tptr& (0+255),b
  1643  0009FE  0102               	movlb	2	; () banked
  1644  000A00  0101               	movlb	1	; () banked
  1645  000A02  C294  F19F         	movff	main@msgtype,timer1_lthread@msgtype
  1646  000A06  0101               	movlb	1	; () banked
  1647  000A08  0101               	movlb	1	; () banked
  1648  000A0A  6BA0               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1649  000A0C  0102               	movlb	2	; () banked
  1650  000A0E  0102               	movlb	2	; () banked
  1651  000A10  5195               	movf	main@length& (0+255),w,b
  1652  000A12  0101               	movlb	1	; () banked
  1653  000A14  0101               	movlb	1	; () banked
  1654  000A16  6FA1               	movwf	timer1_lthread@length& (0+255),b
  1655  000A18  0101               	movlb	1	; () banked
  1656  000A1A  6BA2               	clrf	(timer1_lthread@length+1)& (0+255),b
  1657  000A1C  0101               	movlb	1	; () banked
  1658  000A1E  BFA1               	btfsc	timer1_lthread@length& (0+255),7,b
  1659  000A20  07A2               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1660  000A22  0102               	movlb	2	; () banked
  1661  000A24  0E02               	movlw	high main@msgbuffer
  1662  000A26  0101               	movlb	1	; () banked
  1663  000A28  0101               	movlb	1	; () banked
  1664  000A2A  6FA4               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1665  000A2C  0102               	movlb	2	; () banked
  1666  000A2E  0E7B               	movlw	low main@msgbuffer
  1667  000A30  0101               	movlb	1	; () banked
  1668  000A32  0101               	movlb	1	; () banked
  1669  000A34  6FA3               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1670  000A36  EC58  F00B         	call	_timer1_lthread	;wreg free
  1671                           
  1672                           ;main.c: 456: break;
  1673  000A3A  D68C               	goto	l3477
  1674  000A3C                     l3539:
  1675                           
  1676                           ;main.c: 459: case 31:
  1677                           ;main.c: 460: {
  1678                           ;main.c: 461: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1679  000A3C  0102               	movlb	2	; () banked
  1680  000A3E  0E02               	movlw	high main@uthread_data
  1681  000A40  0101               	movlb	1	; () banked
  1682  000A42  0101               	movlb	1	; () banked
  1683  000A44  6F84               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1684  000A46  0102               	movlb	2	; () banked
  1685  000A48  0E77               	movlw	low main@uthread_data
  1686  000A4A  0101               	movlb	1	; () banked
  1687  000A4C  0101               	movlb	1	; () banked
  1688  000A4E  6F83               	movwf	uart_lthread@uptr& (0+255),b
  1689  000A50  0102               	movlb	2	; () banked
  1690  000A52  0101               	movlb	1	; () banked
  1691  000A54  C294  F185         	movff	main@msgtype,uart_lthread@msgtype
  1692  000A58  0101               	movlb	1	; () banked
  1693  000A5A  0101               	movlb	1	; () banked
  1694  000A5C  6B86               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1695  000A5E  0102               	movlb	2	; () banked
  1696  000A60  0102               	movlb	2	; () banked
  1697  000A62  5195               	movf	main@length& (0+255),w,b
  1698  000A64  0101               	movlb	1	; () banked
  1699  000A66  0101               	movlb	1	; () banked
  1700  000A68  6F87               	movwf	uart_lthread@length& (0+255),b
  1701  000A6A  0101               	movlb	1	; () banked
  1702  000A6C  6B88               	clrf	(uart_lthread@length+1)& (0+255),b
  1703  000A6E  0101               	movlb	1	; () banked
  1704  000A70  BF87               	btfsc	uart_lthread@length& (0+255),7,b
  1705  000A72  0788               	decf	(uart_lthread@length+1)& (0+255),f,b
  1706  000A74  0102               	movlb	2	; () banked
  1707  000A76  0E02               	movlw	high main@msgbuffer
  1708  000A78  0101               	movlb	1	; () banked
  1709  000A7A  0101               	movlb	1	; () banked
  1710  000A7C  6F8A               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1711  000A7E  0102               	movlb	2	; () banked
  1712  000A80  0E7B               	movlw	low main@msgbuffer
  1713  000A82  0101               	movlb	1	; () banked
  1714  000A84  0101               	movlb	1	; () banked
  1715  000A86  6F89               	movwf	uart_lthread@msgbuffer& (0+255),b
  1716  000A88  EC9F  F00D         	call	_uart_lthread	;wreg free
  1717                           
  1718                           ;main.c: 462: break;
  1719  000A8C  D663               	goto	l3477
  1720  000A8E                     l3543:
  1721  000A8E  0102               	movlb	2	; () banked
  1722  000A90  0102               	movlb	2	; () banked
  1723  000A92  5194               	movf	main@msgtype& (0+255),w,b
  1724                           
  1725                           ; Switch size 1, requested type "space"
  1726                           ; Number of cases is 4, Range of values is 11 to 50
  1727                           ; switch strategies available:
  1728                           ; Name         Instructions Cycles
  1729                           ; simple_byte           13     7 (average)
  1730                           ;	Chosen strategy is simple_byte
  1731  000A94  0A0B               	xorlw	11	; case 11
  1732  000A96  B4D8               	btfsc	status,2,c
  1733  000A98  D7A8               	goto	l3537
  1734  000A9A  0A15               	xorlw	21	; case 30
  1735  000A9C  B4D8               	btfsc	status,2,c
  1736  000A9E  D7CE               	goto	l3539
  1737  000AA0  0A01               	xorlw	1	; case 31
  1738  000AA2  B4D8               	btfsc	status,2,c
  1739  000AA4  D7CB               	goto	l3539
  1740  000AA6  0A2D               	xorlw	45	; case 50
  1741  000AA8  B4D8               	btfsc	status,2,c
  1742  000AAA  D78E               	goto	l3533
  1743  000AAC  D653               	goto	l3477
  1744  000AAE                     __end_of_main:
  1745                           	opt stack 0
  1746                           tblptru	equ	0xFF8
  1747                           tblptrh	equ	0xFF7
  1748                           tblptrl	equ	0xFF6
  1749                           tablat	equ	0xFF5
  1750                           prodl	equ	0xFF3
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           indf1	equ	0xFE7
  1754                           postdec1	equ	0xFE5
  1755                           fsr1h	equ	0xFE2
  1756                           fsr1l	equ	0xFE1
  1757                           indf2	equ	0xFDF
  1758                           fsr2h	equ	0xFDA
  1759                           fsr2l	equ	0xFD9
  1760                           status	equ	0xFD8
  1761                           
  1762 ;; *************** function _uart_lthread *****************
  1763 ;; Defined at:
  1764 ;;		line 9 in file "../src/uart_thread.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  uptr            2   23[BANK1 ] PTR struct __uart_thread
  1767 ;;		 -> main@uthread_data(2), 
  1768 ;;  msgtype         2   25[BANK1 ] int 
  1769 ;;  length          2   27[BANK1 ] int 
  1770 ;;  msgbuffer       2   29[BANK1 ] PTR unsigned char 
  1771 ;;		 -> main@msgbuffer(11), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  2   23[BANK1 ] int 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1783 ;;      Params:         0       0       8       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         0       0       8       0       0
  1787 ;;Total ram usage:        8 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:   11
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text1
  1798  001B3E                     __ptext1:
  1799                           	opt stack 0
  1800  001B3E                     _uart_lthread:
  1801                           	opt stack 19
  1802                           
  1803                           ;uart_thread.c: 10: if (msgtype == 30) {
  1804                           
  1805                           ; BSR set to: 2
  1806                           ;incstack = 0
  1807  001B3E  0101               	movlb	1	; () banked
  1808  001B40  0101               	movlb	1	; () banked
  1809  001B42  5185               	movf	uart_lthread@msgtype& (0+255),w,b
  1810  001B44  0A1E               	xorlw	30
  1811  001B46  1186               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1812  001B48  B4D8               	btfsc	status,2,c
  1813  001B4A  0012               	return	
  1814                           
  1815                           ; BSR set to: 1
  1816                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1817                           
  1818                           ; BSR set to: 1
  1819                           
  1820                           ; BSR set to: 1
  1821                           ;uart_thread.c: 11: }
  1822  001B4C  0101               	movlb	1	; () banked
  1823  001B4E  0101               	movlb	1	; () banked
  1824  001B50  5185               	movf	uart_lthread@msgtype& (0+255),w,b
  1825  001B52  0A1F               	xorlw	31
  1826  001B54  1186               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1827  001B56  A4D8               	btfss	status,2,c
  1828  001B58  0012               	return	
  1829                           
  1830                           ; BSR set to: 1
  1831                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1832  001B5A  0101               	movlb	1	; () banked
  1833  001B5C  0101               	movlb	1	; () banked
  1834  001B5E  5187               	movf	uart_lthread@length& (0+255),w,b
  1835  001B60  0101               	movlb	1	; () banked
  1836  001B62  0101               	movlb	1	; () banked
  1837  001B64  2589               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1838  001B66  6ED9               	movwf	fsr2l,c
  1839  001B68  0101               	movlb	1	; () banked
  1840  001B6A  0101               	movlb	1	; () banked
  1841  001B6C  5188               	movf	(uart_lthread@length+1)& (0+255),w,b
  1842  001B6E  0101               	movlb	1	; () banked
  1843  001B70  0101               	movlb	1	; () banked
  1844  001B72  218A               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1845  001B74  6EDA               	movwf	fsr2h,c
  1846  001B76  0E00               	movlw	0
  1847  001B78  6EDF               	movwf	indf2,c
  1848  001B7A  0012               	return	
  1849  001B7C                     __end_of_uart_lthread:
  1850                           	opt stack 0
  1851                           tblptru	equ	0xFF8
  1852                           tblptrh	equ	0xFF7
  1853                           tblptrl	equ	0xFF6
  1854                           tablat	equ	0xFF5
  1855                           prodl	equ	0xFF3
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           indf1	equ	0xFE7
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           indf2	equ	0xFDF
  1863                           fsr2h	equ	0xFDA
  1864                           fsr2l	equ	0xFD9
  1865                           status	equ	0xFD8
  1866                           
  1867 ;; *************** function _timer1_lthread *****************
  1868 ;; Defined at:
  1869 ;;		line 14 in file "../src/timer1_thread.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  tptr            2   49[BANK1 ] PTR struct __timer1_thre
  1872 ;;		 -> main@t1thread_data(2), 
  1873 ;;  msgtype         2   51[BANK1 ] int 
  1874 ;;  length          2   53[BANK1 ] int 
  1875 ;;  msgbuffer       2   55[BANK1 ] PTR unsigned char 
  1876 ;;		 -> main@msgbuffer(11), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  retval          1   58[BANK1 ] char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2   49[BANK1 ] int 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1888 ;;      Params:         0       0       8       0       0
  1889 ;;      Locals:         0       0       1       0       0
  1890 ;;      Temps:          0       0       1       0       0
  1891 ;;      Totals:         0       0      10       0       0
  1892 ;;Total ram usage:       10 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:   14
  1895 ;; This function calls:
  1896 ;;		_FromMainHigh_sendmsg
  1897 ;;		___lwmod
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text2
  1904  0016B0                     __ptext2:
  1905                           	opt stack 0
  1906  0016B0                     _timer1_lthread:
  1907                           	opt stack 16
  1908                           
  1909                           ;timer1_thread.c: 15: signed char retval;
  1910                           ;timer1_thread.c: 17: tptr->msgcount++;
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;incstack = 0
  1914  0016B0  C19D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1915  0016B4  C19E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1916  0016B8  2ADE               	incf	postinc2,f,c
  1917  0016BA  0E00               	movlw	0
  1918  0016BC  22DD               	addwfc	postdec2,f,c
  1919                           
  1920                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1921  0016BE  C19D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1922  0016C2  C19E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1923  0016C6  0101               	movlb	1	; () banked
  1924  0016C8  CFDE F183          	movff	postinc2,___lwmod@dividend
  1925  0016CC  0101               	movlb	1	; () banked
  1926  0016CE  CFDD F184          	movff	postdec2,___lwmod@dividend+1
  1927  0016D2  0E00               	movlw	0
  1928  0016D4  0101               	movlb	1	; () banked
  1929  0016D6  0101               	movlb	1	; () banked
  1930  0016D8  6F86               	movwf	(___lwmod@divisor+1)& (0+255),b
  1931  0016DA  0E0A               	movlw	10
  1932  0016DC  0101               	movlb	1	; () banked
  1933  0016DE  6F85               	movwf	___lwmod@divisor& (0+255),b
  1934  0016E0  ECD7  F009         	call	___lwmod	;wreg free
  1935  0016E4  0101               	movlb	1	; () banked
  1936  0016E6  0101               	movlb	1	; () banked
  1937  0016E8  5183               	movf	?___lwmod& (0+255),w,b
  1938  0016EA  0A09               	xorlw	9
  1939  0016EC  0101               	movlb	1	; () banked
  1940  0016EE  1184               	iorwf	(?___lwmod+1)& (0+255),w,b
  1941  0016F0  A4D8               	btfss	status,2,c
  1942  0016F2  0012               	return	
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1946  0016F4  0101               	movlb	1	; () banked
  1947  0016F6  6FA5               	movwf	??_timer1_lthread& (0+255),b
  1948  0016F8  0E14               	movlw	20
  1949  0016FA  0101               	movlb	1	; () banked
  1950  0016FC  0101               	movlb	1	; () banked
  1951  0016FE  6F99               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1952  001700  0101               	movlb	1	; () banked
  1953  001702  51A5               	movf	??_timer1_lthread& (0+255),w,b
  1954  001704  0101               	movlb	1	; () banked
  1955  001706  0101               	movlb	1	; () banked
  1956  001708  C19E  F19B         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1957  00170C  0101               	movlb	1	; () banked
  1958  00170E  0101               	movlb	1	; () banked
  1959  001710  C19D  F19A         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1960  001714  0E02               	movlw	2
  1961  001716  ECDA  F00D         	call	_FromMainHigh_sendmsg
  1962  00171A  0101               	movlb	1	; () banked
  1963  00171C  0101               	movlb	1	; () banked
  1964  00171E  6FA6               	movwf	timer1_lthread@retval& (0+255),b
  1965  001720  0012               	return	
  1966  001722                     __end_of_timer1_lthread:
  1967                           	opt stack 0
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           prodl	equ	0xFF3
  1973                           postinc0	equ	0xFEE
  1974                           wreg	equ	0xFE8
  1975                           indf1	equ	0xFE7
  1976                           postdec1	equ	0xFE5
  1977                           fsr1h	equ	0xFE2
  1978                           fsr1l	equ	0xFE1
  1979                           indf2	equ	0xFDF
  1980                           postinc2	equ	0xFDE
  1981                           postdec2	equ	0xFDD
  1982                           fsr2h	equ	0xFDA
  1983                           fsr2l	equ	0xFD9
  1984                           status	equ	0xFD8
  1985                           
  1986 ;; *************** function ___lwmod *****************
  1987 ;; Defined at:
  1988 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  dividend        2   23[BANK1 ] unsigned int 
  1991 ;;  divisor         2   25[BANK1 ] unsigned int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  counter         1   28[BANK1 ] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2   23[BANK1 ] unsigned int 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2003 ;;      Params:         0       0       4       0       0
  2004 ;;      Locals:         0       0       1       0       0
  2005 ;;      Temps:          0       0       1       0       0
  2006 ;;      Totals:         0       0       6       0       0
  2007 ;;Total ram usage:        6 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:   11
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_timer1_lthread
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text3
  2018  0013AE                     __ptext3:
  2019                           	opt stack 0
  2020  0013AE                     ___lwmod:
  2021                           	opt stack 18
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;incstack = 0
  2025  0013AE  0101               	movlb	1	; () banked
  2026  0013B0  0101               	movlb	1	; () banked
  2027  0013B2  5186               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2028  0013B4  1185               	iorwf	___lwmod@divisor& (0+255),w,b
  2029  0013B6  B4D8               	btfsc	status,2,c
  2030  0013B8  D03A               	goto	l1101
  2031                           
  2032                           ; BSR set to: 1
  2033  0013BA  0101               	movlb	1	; () banked
  2034  0013BC  6F87               	movwf	??___lwmod& (0+255),b
  2035  0013BE  0E01               	movlw	1
  2036  0013C0  0101               	movlb	1	; () banked
  2037  0013C2  0101               	movlb	1	; () banked
  2038  0013C4  6F88               	movwf	___lwmod@counter& (0+255),b
  2039  0013C6  0101               	movlb	1	; () banked
  2040  0013C8  5187               	movf	??___lwmod& (0+255),w,b
  2041  0013CA  D009               	goto	l3957
  2042  0013CC                     l3955:
  2043                           
  2044                           ; BSR set to: 1
  2045  0013CC  0101               	movlb	1	; () banked
  2046  0013CE  0101               	movlb	1	; () banked
  2047  0013D0  0101               	movlb	1	; () banked
  2048  0013D2  90D8               	bcf	status,0,c
  2049  0013D4  3785               	rlcf	___lwmod@divisor& (0+255),f,b
  2050  0013D6  3786               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2051  0013D8  0101               	movlb	1	; () banked
  2052  0013DA  0101               	movlb	1	; () banked
  2053  0013DC  2B88               	incf	___lwmod@counter& (0+255),f,b
  2054  0013DE                     l3957:
  2055                           
  2056                           ; BSR set to: 1
  2057  0013DE  0101               	movlb	1	; () banked
  2058  0013E0  0101               	movlb	1	; () banked
  2059  0013E2  AF86               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2060  0013E4  D7F3               	goto	l3955
  2061  0013E6                     l3959:
  2062                           
  2063                           ; BSR set to: 1
  2064  0013E6  0101               	movlb	1	; () banked
  2065  0013E8  0101               	movlb	1	; () banked
  2066  0013EA  5185               	movf	___lwmod@divisor& (0+255),w,b
  2067  0013EC  0101               	movlb	1	; () banked
  2068  0013EE  0101               	movlb	1	; () banked
  2069  0013F0  5D83               	subwf	___lwmod@dividend& (0+255),w,b
  2070  0013F2  0101               	movlb	1	; () banked
  2071  0013F4  0101               	movlb	1	; () banked
  2072  0013F6  5186               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2073  0013F8  0101               	movlb	1	; () banked
  2074  0013FA  0101               	movlb	1	; () banked
  2075  0013FC  5984               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2076  0013FE  A0D8               	btfss	status,0,c
  2077  001400  D00C               	goto	l3963
  2078                           
  2079                           ; BSR set to: 1
  2080  001402  0101               	movlb	1	; () banked
  2081  001404  0101               	movlb	1	; () banked
  2082  001406  5185               	movf	___lwmod@divisor& (0+255),w,b
  2083  001408  0101               	movlb	1	; () banked
  2084  00140A  0101               	movlb	1	; () banked
  2085  00140C  5F83               	subwf	___lwmod@dividend& (0+255),f,b
  2086  00140E  0101               	movlb	1	; () banked
  2087  001410  0101               	movlb	1	; () banked
  2088  001412  5186               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2089  001414  0101               	movlb	1	; () banked
  2090  001416  0101               	movlb	1	; () banked
  2091  001418  5B84               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2092  00141A                     l3963:
  2093                           
  2094                           ; BSR set to: 1
  2095  00141A  0101               	movlb	1	; () banked
  2096  00141C  0101               	movlb	1	; () banked
  2097  00141E  0101               	movlb	1	; () banked
  2098  001420  90D8               	bcf	status,0,c
  2099  001422  3386               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2100  001424  3385               	rrcf	___lwmod@divisor& (0+255),f,b
  2101                           
  2102                           ; BSR set to: 1
  2103  001426  0101               	movlb	1	; () banked
  2104  001428  0101               	movlb	1	; () banked
  2105  00142A  2F88               	decfsz	___lwmod@counter& (0+255),f,b
  2106  00142C  D7DC               	goto	l3959
  2107  00142E                     l1101:
  2108                           
  2109                           ; BSR set to: 1
  2110  00142E  C183  F183         	movff	___lwmod@dividend,?___lwmod
  2111  001432  C184  F184         	movff	___lwmod@dividend+1,?___lwmod+1
  2112                           
  2113                           ; BSR set to: 1
  2114  001436  0012               	return	
  2115  001438                     __end_of___lwmod:
  2116                           	opt stack 0
  2117                           tblptru	equ	0xFF8
  2118                           tblptrh	equ	0xFF7
  2119                           tblptrl	equ	0xFF6
  2120                           tablat	equ	0xFF5
  2121                           prodl	equ	0xFF3
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           indf1	equ	0xFE7
  2125                           postdec1	equ	0xFE5
  2126                           fsr1h	equ	0xFE2
  2127                           fsr1l	equ	0xFE1
  2128                           indf2	equ	0xFDF
  2129                           postinc2	equ	0xFDE
  2130                           postdec2	equ	0xFDD
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8
  2134                           
  2135 ;; *************** function _FromMainHigh_sendmsg *****************
  2136 ;; Defined at:
  2137 ;;		line 176 in file "../src/messages.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  length          1    wreg     unsigned char 
  2140 ;;  msgtype         1   45[BANK1 ] unsigned char 
  2141 ;;  data            2   46[BANK1 ] PTR void 
  2142 ;;		 -> main@t1thread_data(2), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  length          1   48[BANK1 ] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      char 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2154 ;;      Params:         0       0       3       0       0
  2155 ;;      Locals:         0       0       1       0       0
  2156 ;;      Temps:          0       0       0       0       0
  2157 ;;      Totals:         0       0       4       0       0
  2158 ;;Total ram usage:        4 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:   13
  2161 ;; This function calls:
  2162 ;;		_send_msg
  2163 ;; This function is called by:
  2164 ;;		_timer1_lthread
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text4
  2169  001BB4                     __ptext4:
  2170                           	opt stack 0
  2171  001BB4                     _FromMainHigh_sendmsg:
  2172                           	opt stack 16
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;incstack = 0
  2176                           ;FromMainHigh_sendmsg@length stored from wreg
  2177  001BB4  CFE8 F19C          	movff	wreg,FromMainHigh_sendmsg@length
  2178                           
  2179                           ;messages.c: 182: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2180  001BB8  0102               	movlb	2	; () banked
  2181  001BBA  0E02               	movlw	high _FromMainHigh_MQ
  2182  001BBC  0101               	movlb	1	; () banked
  2183  001BBE  0101               	movlb	1	; () banked
  2184  001BC0  6F8E               	movwf	(send_msg@qptr+1)& (0+255),b
  2185  001BC2  0102               	movlb	2	; () banked
  2186  001BC4  0E00               	movlw	low _FromMainHigh_MQ
  2187  001BC6  0101               	movlb	1	; () banked
  2188  001BC8  0101               	movlb	1	; () banked
  2189  001BCA  6F8D               	movwf	send_msg@qptr& (0+255),b
  2190  001BCC  C19C  F18F         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2191  001BD0  C199  F190         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2192  001BD4  0101               	movlb	1	; () banked
  2193  001BD6  0101               	movlb	1	; () banked
  2194  001BD8  C19B  F192         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2195  001BDC  0101               	movlb	1	; () banked
  2196  001BDE  0101               	movlb	1	; () banked
  2197  001BE0  C19A  F191         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2198  001BE4  EC79  F006         	call	_send_msg	;wreg free
  2199  001BE8  0012               	return	
  2200  001BEA                     __end_of_FromMainHigh_sendmsg:
  2201                           	opt stack 0
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           prodl	equ	0xFF3
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           indf1	equ	0xFE7
  2210                           postdec1	equ	0xFE5
  2211                           fsr1h	equ	0xFE2
  2212                           fsr1l	equ	0xFE1
  2213                           indf2	equ	0xFDF
  2214                           postinc2	equ	0xFDE
  2215                           postdec2	equ	0xFDD
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _send_msg *****************
  2221 ;; Defined at:
  2222 ;;		line 26 in file "../src/messages.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  qptr            2   33[BANK1 ] PTR struct __msg_queue
  2225 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2226 ;;  length          1   35[BANK1 ] unsigned char 
  2227 ;;  msgtype         1   36[BANK1 ] unsigned char 
  2228 ;;  data            2   37[BANK1 ] PTR void 
  2229 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  2230 ;;		 -> main@uc(5), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  qmsg            2   43[BANK1 ] PTR struct __msg
  2233 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2234 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2235 ;;  tlength         2   40[BANK1 ] unsigned int 
  2236 ;;  slot            1   42[BANK1 ] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      char 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2246 ;;      Params:         0       0       6       0       0
  2247 ;;      Locals:         0       0       5       0       0
  2248 ;;      Temps:          0       0       1       0       0
  2249 ;;      Totals:         0       0      12       0       0
  2250 ;;Total ram usage:       12 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:   12
  2253 ;; This function calls:
  2254 ;;		_memcpy
  2255 ;; This function is called by:
  2256 ;;		_FromMainHigh_sendmsg
  2257 ;;		_FromMainLow_sendmsg
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text5
  2262  000CF2                     __ptext5:
  2263                           	opt stack 0
  2264  000CF2                     _send_msg:
  2265                           	opt stack 16
  2266                           
  2267                           ;messages.c: 27: unsigned char slot;
  2268                           ;messages.c: 29: msg *qmsg;
  2269                           ;messages.c: 30: size_t tlength = length;
  2270                           
  2271                           ;incstack = 0
  2272  000CF2  0101               	movlb	1	; () banked
  2273  000CF4  0101               	movlb	1	; () banked
  2274  000CF6  C18F  F194         	movff	send_msg@length,send_msg@tlength
  2275  000CFA  0101               	movlb	1	; () banked
  2276  000CFC  0101               	movlb	1	; () banked
  2277  000CFE  6B95               	clrf	(send_msg@tlength+1)& (0+255),b
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;messages.c: 40: slot = qptr->cur_write_ind;
  2281  000D00  0101               	movlb	1	; () banked
  2282  000D02  EE20 F034          	lfsr	2,52
  2283  000D06  0101               	movlb	1	; () banked
  2284  000D08  518D               	movf	send_msg@qptr& (0+255),w,b
  2285  000D0A  26D9               	addwf	fsr2l,f,c
  2286  000D0C  0101               	movlb	1	; () banked
  2287  000D0E  518E               	movf	(send_msg@qptr+1)& (0+255),w,b
  2288  000D10  22DA               	addwfc	fsr2h,f,c
  2289  000D12  50DF               	movf	indf2,w,c
  2290  000D14  0101               	movlb	1	; () banked
  2291  000D16  0101               	movlb	1	; () banked
  2292  000D18  6F96               	movwf	send_msg@slot& (0+255),b
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;messages.c: 41: qmsg = &(qptr->queue[slot]);
  2296  000D1A  0101               	movlb	1	; () banked
  2297  000D1C  0101               	movlb	1	; () banked
  2298  000D1E  5196               	movf	send_msg@slot& (0+255),w,b
  2299  000D20  0D0D               	mullw	13
  2300  000D22  50F3               	movf	prodl,w,c
  2301  000D24  0101               	movlb	1	; () banked
  2302  000D26  0101               	movlb	1	; () banked
  2303  000D28  258D               	addwf	send_msg@qptr& (0+255),w,b
  2304  000D2A  0101               	movlb	1	; () banked
  2305  000D2C  0101               	movlb	1	; () banked
  2306  000D2E  6F97               	movwf	send_msg@qmsg& (0+255),b
  2307  000D30  50F4               	movf	prodh,w,c
  2308  000D32  0101               	movlb	1	; () banked
  2309  000D34  0101               	movlb	1	; () banked
  2310  000D36  218E               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2311  000D38  0101               	movlb	1	; () banked
  2312  000D3A  6F98               	movwf	(send_msg@qmsg+1)& (0+255),b
  2313                           
  2314                           ; BSR set to: 1
  2315                           ;messages.c: 43: if (qmsg->full != 0) {
  2316  000D3C  C197  FFD9         	movff	send_msg@qmsg,fsr2l
  2317  000D40  C198  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2318  000D44  50DF               	movf	indf2,w,c
  2319  000D46  B4D8               	btfsc	status,2,c
  2320  000D48  D002               	goto	l3753
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;messages.c: 44: return (-1);
  2324  000D4A  0EFF               	movlw	255
  2325  000D4C  0012               	return	
  2326  000D4E                     l3753:
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;messages.c: 45: }
  2330                           ;messages.c: 48: qmsg->length = length;
  2331  000D4E  0101               	movlb	1	; () banked
  2332  000D50  EE20 F001          	lfsr	2,1
  2333  000D54  0101               	movlb	1	; () banked
  2334  000D56  5197               	movf	send_msg@qmsg& (0+255),w,b
  2335  000D58  26D9               	addwf	fsr2l,f,c
  2336  000D5A  0101               	movlb	1	; () banked
  2337  000D5C  5198               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2338  000D5E  22DA               	addwfc	fsr2h,f,c
  2339  000D60  0101               	movlb	1	; () banked
  2340  000D62  C18F  FFDF         	movff	send_msg@length,indf2
  2341                           
  2342                           ;messages.c: 49: qmsg->msgtype = msgtype;
  2343  000D66  0101               	movlb	1	; () banked
  2344  000D68  EE20 F002          	lfsr	2,2
  2345  000D6C  0101               	movlb	1	; () banked
  2346  000D6E  5197               	movf	send_msg@qmsg& (0+255),w,b
  2347  000D70  26D9               	addwf	fsr2l,f,c
  2348  000D72  0101               	movlb	1	; () banked
  2349  000D74  5198               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2350  000D76  22DA               	addwfc	fsr2h,f,c
  2351  000D78  0101               	movlb	1	; () banked
  2352  000D7A  C190  FFDF         	movff	send_msg@msgtype,indf2
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;messages.c: 57: memcpy(qmsg->data, data, tlength);
  2356  000D7E  0E03               	movlw	3
  2357  000D80  0101               	movlb	1	; () banked
  2358  000D82  0101               	movlb	1	; () banked
  2359  000D84  2597               	addwf	send_msg@qmsg& (0+255),w,b
  2360  000D86  0101               	movlb	1	; () banked
  2361  000D88  0101               	movlb	1	; () banked
  2362  000D8A  6F83               	movwf	memcpy@d1& (0+255),b
  2363  000D8C  0E00               	movlw	0
  2364  000D8E  0101               	movlb	1	; () banked
  2365  000D90  0101               	movlb	1	; () banked
  2366  000D92  2198               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2367  000D94  0101               	movlb	1	; () banked
  2368  000D96  6F84               	movwf	(memcpy@d1+1)& (0+255),b
  2369  000D98  0101               	movlb	1	; () banked
  2370  000D9A  0101               	movlb	1	; () banked
  2371  000D9C  C192  F186         	movff	send_msg@data+1,memcpy@s1+1
  2372  000DA0  0101               	movlb	1	; () banked
  2373  000DA2  0101               	movlb	1	; () banked
  2374  000DA4  C191  F185         	movff	send_msg@data,memcpy@s1
  2375  000DA8  C194  F187         	movff	send_msg@tlength,memcpy@n
  2376  000DAC  C195  F188         	movff	send_msg@tlength+1,memcpy@n+1
  2377  000DB0  EC2F  F00C         	call	_memcpy	;wreg free
  2378                           
  2379                           ;messages.c: 58: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2380  000DB4  0101               	movlb	1	; () banked
  2381  000DB6  EE20 F034          	lfsr	2,52
  2382  000DBA  0101               	movlb	1	; () banked
  2383  000DBC  518D               	movf	send_msg@qptr& (0+255),w,b
  2384  000DBE  26D9               	addwf	fsr2l,f,c
  2385  000DC0  0101               	movlb	1	; () banked
  2386  000DC2  518E               	movf	(send_msg@qptr+1)& (0+255),w,b
  2387  000DC4  22DA               	addwfc	fsr2h,f,c
  2388  000DC6  0101               	movlb	1	; () banked
  2389  000DC8  EE10 F034          	lfsr	1,52
  2390  000DCC  0101               	movlb	1	; () banked
  2391  000DCE  518D               	movf	send_msg@qptr& (0+255),w,b
  2392  000DD0  26E1               	addwf	fsr1l,f,c
  2393  000DD2  0101               	movlb	1	; () banked
  2394  000DD4  518E               	movf	(send_msg@qptr+1)& (0+255),w,b
  2395  000DD6  22E2               	addwfc	fsr1h,f,c
  2396  000DD8  50E7               	movf	indf1,w,c
  2397  000DDA  0101               	movlb	1	; () banked
  2398  000DDC  6F93               	movwf	??_send_msg& (0+255),b
  2399  000DDE  0101               	movlb	1	; () banked
  2400  000DE0  2993               	incf	??_send_msg& (0+255),w,b
  2401  000DE2  0B03               	andlw	3
  2402  000DE4  6EDF               	movwf	indf2,c
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;messages.c: 61: qmsg->full = 1;
  2406  000DE6  C197  FFD9         	movff	send_msg@qmsg,fsr2l
  2407  000DEA  C198  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2408  000DEE  0E01               	movlw	1
  2409  000DF0  6EDF               	movwf	indf2,c
  2410                           
  2411                           ; BSR set to: 1
  2412                           ;messages.c: 62: return (1);
  2413  000DF2  0E01               	movlw	1
  2414  000DF4  0012               	return	
  2415  000DF6                     __end_of_send_msg:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           prodh	equ	0xFF4
  2422                           prodl	equ	0xFF3
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           indf1	equ	0xFE7
  2426                           postdec1	equ	0xFE5
  2427                           fsr1h	equ	0xFE2
  2428                           fsr1l	equ	0xFE1
  2429                           indf2	equ	0xFDF
  2430                           postinc2	equ	0xFDE
  2431                           postdec2	equ	0xFDD
  2432                           fsr2h	equ	0xFDA
  2433                           fsr2l	equ	0xFD9
  2434                           status	equ	0xFD8
  2435                           
  2436 ;; *************** function _timer0_lthread *****************
  2437 ;; Defined at:
  2438 ;;		line 9 in file "../src/timer0_thread.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  tptr            2   23[BANK1 ] PTR struct __timer0_thre
  2441 ;;		 -> main@t0thread_data(2), 
  2442 ;;  msgtype         2   25[BANK1 ] int 
  2443 ;;  length          2   27[BANK1 ] int 
  2444 ;;  msgbuffer       2   29[BANK1 ] PTR unsigned char 
  2445 ;;		 -> main@msgbuffer(11), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  msgval          2   31[BANK1 ] PTR unsigned int 
  2448 ;;		 -> main@msgbuffer(11), 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  2   23[BANK1 ] int 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2458 ;;      Params:         0       0       8       0       0
  2459 ;;      Locals:         0       0       2       0       0
  2460 ;;      Temps:          0       0       0       0       0
  2461 ;;      Totals:         0       0      10       0       0
  2462 ;;Total ram usage:       10 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:   11
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text6
  2473  001E10                     __ptext6:
  2474                           	opt stack 0
  2475  001E10                     _timer0_lthread:
  2476                           	opt stack 19
  2477                           
  2478                           ;timer0_thread.c: 10: unsigned int *msgval;
  2479                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2480                           
  2481                           ; BSR set to: 1
  2482                           ;incstack = 0
  2483  001E10  0101               	movlb	1	; () banked
  2484  001E12  0101               	movlb	1	; () banked
  2485  001E14  C18A  F18C         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2486  001E18  0101               	movlb	1	; () banked
  2487  001E1A  0101               	movlb	1	; () banked
  2488  001E1C  C189  F18B         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2489                           
  2490                           ; BSR set to: 1
  2491  001E20  0012               	return	
  2492  001E22                     __end_of_timer0_lthread:
  2493                           	opt stack 0
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           prodh	equ	0xFF4
  2499                           prodl	equ	0xFF3
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           indf1	equ	0xFE7
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           indf2	equ	0xFDF
  2507                           postinc2	equ	0xFDE
  2508                           postdec2	equ	0xFDD
  2509                           fsr2h	equ	0xFDA
  2510                           fsr2l	equ	0xFD9
  2511                           status	equ	0xFD8
  2512                           
  2513 ;; *************** function _start_i2c_slave_reply *****************
  2514 ;; Defined at:
  2515 ;;		line 54 in file "../src/my_i2c.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  length          1    wreg     unsigned char 
  2518 ;;  msg             2   23[BANK1 ] PTR unsigned char 
  2519 ;;		 -> sendADdata@outBuff(100), main@msgbuffer(11), 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  length          1   27[BANK1 ] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2531 ;;      Params:         0       0       2       0       0
  2532 ;;      Locals:         0       0       1       0       0
  2533 ;;      Temps:          0       0       2       0       0
  2534 ;;      Totals:         0       0       5       0       0
  2535 ;;Total ram usage:        5 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:   11
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text7
  2546  000BE4                     __ptext7:
  2547                           	opt stack 0
  2548  000BE4                     _start_i2c_slave_reply:
  2549                           	opt stack 19
  2550                           
  2551                           ; BSR set to: 1
  2552                           ;incstack = 0
  2553                           ;start_i2c_slave_reply@length stored from wreg
  2554  000BE4  CFE8 F187          	movff	wreg,start_i2c_slave_reply@length
  2555                           
  2556                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2557  000BE8  0101               	movlb	1	; () banked
  2558  000BEA  EE20 F019          	lfsr	2,25
  2559  000BEE  0101               	movlb	1	; () banked
  2560  000BF0  51A8               	movf	_ic_ptr& (0+255),w,b
  2561  000BF2  26D9               	addwf	fsr2l,f,c
  2562  000BF4  0101               	movlb	1	; () banked
  2563  000BF6  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2564  000BF8  22DA               	addwfc	fsr2h,f,c
  2565  000BFA  0E00               	movlw	0
  2566  000BFC  6EDF               	movwf	indf2,c
  2567  000BFE  D042               	goto	l3701
  2568  000C00                     l3697:
  2569                           
  2570                           ; BSR set to: 1
  2571                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2572  000C00  0101               	movlb	1	; () banked
  2573  000C02  EE20 F019          	lfsr	2,25
  2574  000C06  0101               	movlb	1	; () banked
  2575  000C08  51A8               	movf	_ic_ptr& (0+255),w,b
  2576  000C0A  26D9               	addwf	fsr2l,f,c
  2577  000C0C  0101               	movlb	1	; () banked
  2578  000C0E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2579  000C10  22DA               	addwfc	fsr2h,f,c
  2580  000C12  50DF               	movf	indf2,w,c
  2581  000C14  0101               	movlb	1	; () banked
  2582  000C16  6F85               	movwf	??_start_i2c_slave_reply& (0+255),b
  2583  000C18  0101               	movlb	1	; () banked
  2584  000C1A  5185               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2585  000C1C  0D01               	mullw	1
  2586  000C1E  50F3               	movf	prodl,w,c
  2587  000C20  0101               	movlb	1	; () banked
  2588  000C22  0101               	movlb	1	; () banked
  2589  000C24  2583               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2590  000C26  6ED9               	movwf	fsr2l,c
  2591  000C28  50F4               	movf	prodh,w,c
  2592  000C2A  0101               	movlb	1	; () banked
  2593  000C2C  0101               	movlb	1	; () banked
  2594  000C2E  2184               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2595  000C30  6EDA               	movwf	fsr2h,c
  2596  000C32  0101               	movlb	1	; () banked
  2597  000C34  EE10 F019          	lfsr	1,25
  2598  000C38  0101               	movlb	1	; () banked
  2599  000C3A  51A8               	movf	_ic_ptr& (0+255),w,b
  2600  000C3C  26E1               	addwf	fsr1l,f,c
  2601  000C3E  0101               	movlb	1	; () banked
  2602  000C40  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2603  000C42  22E2               	addwfc	fsr1h,f,c
  2604  000C44  50E7               	movf	indf1,w,c
  2605  000C46  0101               	movlb	1	; () banked
  2606  000C48  6F86               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2607  000C4A  0101               	movlb	1	; () banked
  2608  000C4C  5186               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2609  000C4E  0D01               	mullw	1
  2610  000C50  0E0F               	movlw	15
  2611  000C52  26F3               	addwf	prodl,f,c
  2612  000C54  0E00               	movlw	0
  2613  000C56  22F4               	addwfc	prodh,f,c
  2614  000C58  50F3               	movf	prodl,w,c
  2615  000C5A  0101               	movlb	1	; () banked
  2616  000C5C  0101               	movlb	1	; () banked
  2617  000C5E  25A8               	addwf	_ic_ptr& (0+255),w,b
  2618  000C60  6EE1               	movwf	fsr1l,c
  2619  000C62  50F4               	movf	prodh,w,c
  2620  000C64  0101               	movlb	1	; () banked
  2621  000C66  0101               	movlb	1	; () banked
  2622  000C68  21A9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2623  000C6A  6EE2               	movwf	fsr1h,c
  2624  000C6C  CFDF FFE7          	movff	indf2,indf1
  2625                           
  2626                           ; BSR set to: 1
  2627  000C70  0101               	movlb	1	; () banked
  2628  000C72  EE20 F019          	lfsr	2,25
  2629  000C76  0101               	movlb	1	; () banked
  2630  000C78  51A8               	movf	_ic_ptr& (0+255),w,b
  2631  000C7A  26D9               	addwf	fsr2l,f,c
  2632  000C7C  0101               	movlb	1	; () banked
  2633  000C7E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2634  000C80  22DA               	addwfc	fsr2h,f,c
  2635  000C82  2ADF               	incf	indf2,f,c
  2636  000C84                     l3701:
  2637                           
  2638                           ; BSR set to: 1
  2639  000C84  0101               	movlb	1	; () banked
  2640  000C86  EE20 F019          	lfsr	2,25
  2641  000C8A  0101               	movlb	1	; () banked
  2642  000C8C  51A8               	movf	_ic_ptr& (0+255),w,b
  2643  000C8E  26D9               	addwf	fsr2l,f,c
  2644  000C90  0101               	movlb	1	; () banked
  2645  000C92  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2646  000C94  22DA               	addwfc	fsr2h,f,c
  2647  000C96  50DF               	movf	indf2,w,c
  2648  000C98  0101               	movlb	1	; () banked
  2649  000C9A  6F85               	movwf	??_start_i2c_slave_reply& (0+255),b
  2650  000C9C  0101               	movlb	1	; () banked
  2651  000C9E  0101               	movlb	1	; () banked
  2652  000CA0  5187               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2653  000CA2  0101               	movlb	1	; () banked
  2654  000CA4  5D85               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2655  000CA6  A0D8               	btfss	status,0,c
  2656  000CA8  D7AB               	goto	l3697
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;my_i2c.c: 58: }
  2660                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  2661                           
  2662                           ; BSR set to: 1
  2663  000CAA  0101               	movlb	1	; () banked
  2664  000CAC  EE20 F019          	lfsr	2,25
  2665  000CB0  0101               	movlb	1	; () banked
  2666  000CB2  51A8               	movf	_ic_ptr& (0+255),w,b
  2667  000CB4  26D9               	addwf	fsr2l,f,c
  2668  000CB6  0101               	movlb	1	; () banked
  2669  000CB8  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2670  000CBA  22DA               	addwfc	fsr2h,f,c
  2671  000CBC  0101               	movlb	1	; () banked
  2672  000CBE  C187  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2673                           
  2674                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  2675  000CC2  0101               	movlb	1	; () banked
  2676  000CC4  EE20 F01A          	lfsr	2,26
  2677  000CC8  0101               	movlb	1	; () banked
  2678  000CCA  51A8               	movf	_ic_ptr& (0+255),w,b
  2679  000CCC  26D9               	addwf	fsr2l,f,c
  2680  000CCE  0101               	movlb	1	; () banked
  2681  000CD0  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2682  000CD2  22DA               	addwfc	fsr2h,f,c
  2683  000CD4  0E01               	movlw	1
  2684  000CD6  6EDF               	movwf	indf2,c
  2685                           
  2686                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  2687  000CD8  0101               	movlb	1	; () banked
  2688  000CDA  EE20 F00F          	lfsr	2,15
  2689  000CDE  0101               	movlb	1	; () banked
  2690  000CE0  51A8               	movf	_ic_ptr& (0+255),w,b
  2691  000CE2  26D9               	addwf	fsr2l,f,c
  2692  000CE4  0101               	movlb	1	; () banked
  2693  000CE6  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  2694  000CE8  22DA               	addwfc	fsr2h,f,c
  2695  000CEA  50DF               	movf	indf2,w,c
  2696  000CEC  6EC9               	movwf	4041,c	;volatile
  2697                           
  2698                           ; BSR set to: 1
  2699                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  2700  000CEE  88C6               	bsf	4038,4,c	;volatile
  2701                           
  2702                           ; BSR set to: 1
  2703  000CF0  0012               	return	
  2704  000CF2                     __end_of_start_i2c_slave_reply:
  2705                           	opt stack 0
  2706                           tblptru	equ	0xFF8
  2707                           tblptrh	equ	0xFF7
  2708                           tblptrl	equ	0xFF6
  2709                           tablat	equ	0xFF5
  2710                           prodh	equ	0xFF4
  2711                           prodl	equ	0xFF3
  2712                           postinc0	equ	0xFEE
  2713                           wreg	equ	0xFE8
  2714                           indf1	equ	0xFE7
  2715                           postdec1	equ	0xFE5
  2716                           fsr1h	equ	0xFE2
  2717                           fsr1l	equ	0xFE1
  2718                           indf2	equ	0xFDF
  2719                           postinc2	equ	0xFDE
  2720                           postdec2	equ	0xFDD
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _init_uart_recv *****************
  2726 ;; Defined at:
  2727 ;;		line 49 in file "../src/my_uart.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  uc              2   23[BANK1 ] PTR struct __uart_comm
  2730 ;;		 -> main@uc(5), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2742 ;;      Params:         0       0       2       0       0
  2743 ;;      Locals:         0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0
  2745 ;;      Totals:         0       0       2       0       0
  2746 ;;Total ram usage:        2 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:   11
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text8
  2757  001DA8                     __ptext8:
  2758                           	opt stack 0
  2759  001DA8                     _init_uart_recv:
  2760                           	opt stack 19
  2761                           
  2762                           ;my_uart.c: 50: uc_ptr = uc;
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;incstack = 0
  2766  001DA8  0101               	movlb	1	; () banked
  2767  001DAA  C184  F051         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2768  001DAE  0101               	movlb	1	; () banked
  2769  001DB0  C183  F050         	movff	init_uart_recv@uc,_uc_ptr
  2770                           
  2771                           ; BSR set to: 1
  2772                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2773  001DB4  EE20 F004          	lfsr	2,4
  2774  001DB8  5050               	movf	_uc_ptr,w,c
  2775  001DBA  26D9               	addwf	fsr2l,f,c
  2776  001DBC  5051               	movf	_uc_ptr+1,w,c
  2777  001DBE  22DA               	addwfc	fsr2h,f,c
  2778  001DC0  0E00               	movlw	0
  2779  001DC2  6EDF               	movwf	indf2,c
  2780                           
  2781                           ; BSR set to: 1
  2782  001DC4  0012               	return	
  2783  001DC6                     __end_of_init_uart_recv:
  2784                           	opt stack 0
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           prodh	equ	0xFF4
  2790                           prodl	equ	0xFF3
  2791                           postinc0	equ	0xFEE
  2792                           wreg	equ	0xFE8
  2793                           indf1	equ	0xFE7
  2794                           postdec1	equ	0xFE5
  2795                           fsr1h	equ	0xFE2
  2796                           fsr1l	equ	0xFE1
  2797                           indf2	equ	0xFDF
  2798                           postinc2	equ	0xFDE
  2799                           postdec2	equ	0xFDD
  2800                           fsr2h	equ	0xFDA
  2801                           fsr2l	equ	0xFD9
  2802                           status	equ	0xFD8
  2803                           
  2804 ;; *************** function _init_timer1_lthread *****************
  2805 ;; Defined at:
  2806 ;;		line 6 in file "../src/timer1_thread.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  tptr            2   23[BANK1 ] PTR struct __timer1_thre
  2809 ;;		 -> main@t1thread_data(2), 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;		None               void
  2814 ;; Registers used:
  2815 ;;		wreg, fsr2l, fsr2h
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2821 ;;      Params:         0       0       2       0       0
  2822 ;;      Locals:         0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         0       0       2       0       0
  2825 ;;Total ram usage:        2 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:   11
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text9
  2836  001E22                     __ptext9:
  2837                           	opt stack 0
  2838  001E22                     _init_timer1_lthread:
  2839                           	opt stack 19
  2840                           
  2841                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2842                           
  2843                           ; BSR set to: 1
  2844                           ;incstack = 0
  2845  001E22  C183  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2846  001E26  C184  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2847  001E2A  0E00               	movlw	0
  2848  001E2C  6EDE               	movwf	postinc2,c
  2849  001E2E  0E00               	movlw	0
  2850  001E30  6EDD               	movwf	postdec2,c
  2851  001E32  0012               	return	
  2852  001E34                     __end_of_init_timer1_lthread:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodh	equ	0xFF4
  2859                           prodl	equ	0xFF3
  2860                           postinc0	equ	0xFEE
  2861                           wreg	equ	0xFE8
  2862                           indf1	equ	0xFE7
  2863                           postdec1	equ	0xFE5
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _init_queues *****************
  2874 ;; Defined at:
  2875 ;;		line 196 in file "../src/messages.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2889 ;;      Params:         0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0
  2891 ;;      Temps:          0       0       1       0       0
  2892 ;;      Totals:         0       0       1       0       0
  2893 ;;Total ram usage:        1 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:   12
  2896 ;; This function calls:
  2897 ;;		_init_queue
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text10
  2904  001722                     __ptext10:
  2905                           	opt stack 0
  2906  001722                     _init_queues:
  2907                           	opt stack 18
  2908                           
  2909                           ;messages.c: 197: MQ_Main_Willing_to_block = 0;
  2910                           
  2911                           ;incstack = 0
  2912  001722  0101               	movlb	1	; () banked
  2913  001724  6F87               	movwf	??_init_queues& (0+255),b
  2914  001726  0E00               	movlw	0
  2915  001728  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2916  00172A  0101               	movlb	1	; () banked
  2917  00172C  5187               	movf	??_init_queues& (0+255),w,b
  2918                           
  2919                           ; BSR set to: 1
  2920                           ;messages.c: 198: init_queue(&ToMainLow_MQ);
  2921  00172E  0101               	movlb	1	; () banked
  2922  001730  0E01               	movlw	high _ToMainLow_MQ
  2923  001732  0101               	movlb	1	; () banked
  2924  001734  0101               	movlb	1	; () banked
  2925  001736  6F84               	movwf	(init_queue@qptr+1)& (0+255),b
  2926  001738  0101               	movlb	1	; () banked
  2927  00173A  0E36               	movlw	low _ToMainLow_MQ
  2928  00173C  0101               	movlb	1	; () banked
  2929  00173E  0101               	movlb	1	; () banked
  2930  001740  6F83               	movwf	init_queue@qptr& (0+255),b
  2931  001742  ECDF  F00A         	call	_init_queue	;wreg free
  2932                           
  2933                           ;messages.c: 199: init_queue(&ToMainHigh_MQ);
  2934  001746  0101               	movlb	1	; () banked
  2935  001748  0E01               	movlw	high _ToMainHigh_MQ
  2936  00174A  0101               	movlb	1	; () banked
  2937  00174C  0101               	movlb	1	; () banked
  2938  00174E  6F84               	movwf	(init_queue@qptr+1)& (0+255),b
  2939  001750  0101               	movlb	1	; () banked
  2940  001752  0E00               	movlw	low _ToMainHigh_MQ
  2941  001754  0101               	movlb	1	; () banked
  2942  001756  0101               	movlb	1	; () banked
  2943  001758  6F83               	movwf	init_queue@qptr& (0+255),b
  2944  00175A  ECDF  F00A         	call	_init_queue	;wreg free
  2945                           
  2946                           ;messages.c: 200: init_queue(&FromMainLow_MQ);
  2947  00175E  0102               	movlb	2	; () banked
  2948  001760  0E02               	movlw	high _FromMainLow_MQ
  2949  001762  0101               	movlb	1	; () banked
  2950  001764  0101               	movlb	1	; () banked
  2951  001766  6F84               	movwf	(init_queue@qptr+1)& (0+255),b
  2952  001768  0102               	movlb	2	; () banked
  2953  00176A  0E36               	movlw	low _FromMainLow_MQ
  2954  00176C  0101               	movlb	1	; () banked
  2955  00176E  0101               	movlb	1	; () banked
  2956  001770  6F83               	movwf	init_queue@qptr& (0+255),b
  2957  001772  ECDF  F00A         	call	_init_queue	;wreg free
  2958                           
  2959                           ;messages.c: 201: init_queue(&FromMainHigh_MQ);
  2960  001776  0102               	movlb	2	; () banked
  2961  001778  0E02               	movlw	high _FromMainHigh_MQ
  2962  00177A  0101               	movlb	1	; () banked
  2963  00177C  0101               	movlb	1	; () banked
  2964  00177E  6F84               	movwf	(init_queue@qptr+1)& (0+255),b
  2965  001780  0102               	movlb	2	; () banked
  2966  001782  0E00               	movlw	low _FromMainHigh_MQ
  2967  001784  0101               	movlb	1	; () banked
  2968  001786  0101               	movlb	1	; () banked
  2969  001788  6F83               	movwf	init_queue@qptr& (0+255),b
  2970  00178A  ECDF  F00A         	call	_init_queue	;wreg free
  2971  00178E  0012               	return	
  2972  001790                     __end_of_init_queues:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           postinc0	equ	0xFEE
  2981                           wreg	equ	0xFE8
  2982                           indf1	equ	0xFE7
  2983                           postdec1	equ	0xFE5
  2984                           fsr1h	equ	0xFE2
  2985                           fsr1l	equ	0xFE1
  2986                           indf2	equ	0xFDF
  2987                           postinc2	equ	0xFDE
  2988                           postdec2	equ	0xFDD
  2989                           fsr2h	equ	0xFDA
  2990                           fsr2l	equ	0xFD9
  2991                           status	equ	0xFD8
  2992                           
  2993 ;; *************** function _init_queue *****************
  2994 ;; Defined at:
  2995 ;;		line 16 in file "../src/messages.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  qptr            2   23[BANK1 ] PTR struct __msg_queue
  2998 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  i               1   26[BANK1 ] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;		None               void
  3003 ;; Registers used:
  3004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3010 ;;      Params:         0       0       2       0       0
  3011 ;;      Locals:         0       0       1       0       0
  3012 ;;      Temps:          0       0       1       0       0
  3013 ;;      Totals:         0       0       4       0       0
  3014 ;;Total ram usage:        4 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:   11
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_init_queues
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text11
  3025  0015BE                     __ptext11:
  3026                           	opt stack 0
  3027  0015BE                     _init_queue:
  3028                           	opt stack 18
  3029                           
  3030                           ;messages.c: 17: unsigned char i;
  3031                           ;messages.c: 19: qptr->cur_write_ind = 0;
  3032                           
  3033                           ;incstack = 0
  3034  0015BE  0101               	movlb	1	; () banked
  3035  0015C0  EE20 F034          	lfsr	2,52
  3036  0015C4  0101               	movlb	1	; () banked
  3037  0015C6  5183               	movf	init_queue@qptr& (0+255),w,b
  3038  0015C8  26D9               	addwf	fsr2l,f,c
  3039  0015CA  0101               	movlb	1	; () banked
  3040  0015CC  5184               	movf	(init_queue@qptr+1)& (0+255),w,b
  3041  0015CE  22DA               	addwfc	fsr2h,f,c
  3042  0015D0  0E00               	movlw	0
  3043  0015D2  6EDF               	movwf	indf2,c
  3044                           
  3045                           ;messages.c: 20: qptr->cur_read_ind = 0;
  3046  0015D4  0101               	movlb	1	; () banked
  3047  0015D6  EE20 F035          	lfsr	2,53
  3048  0015DA  0101               	movlb	1	; () banked
  3049  0015DC  5183               	movf	init_queue@qptr& (0+255),w,b
  3050  0015DE  26D9               	addwf	fsr2l,f,c
  3051  0015E0  0101               	movlb	1	; () banked
  3052  0015E2  5184               	movf	(init_queue@qptr+1)& (0+255),w,b
  3053  0015E4  22DA               	addwfc	fsr2h,f,c
  3054  0015E6  0E00               	movlw	0
  3055  0015E8  6EDF               	movwf	indf2,c
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;messages.c: 21: for (i = 0; i < 4; i++) {
  3059  0015EA  0101               	movlb	1	; () banked
  3060  0015EC  6F85               	movwf	??_init_queue& (0+255),b
  3061  0015EE  0E00               	movlw	0
  3062  0015F0  0101               	movlb	1	; () banked
  3063  0015F2  0101               	movlb	1	; () banked
  3064  0015F4  6F86               	movwf	init_queue@i& (0+255),b
  3065  0015F6  0101               	movlb	1	; () banked
  3066  0015F8  5185               	movf	??_init_queue& (0+255),w,b
  3067                           
  3068                           ; BSR set to: 1
  3069  0015FA  0E03               	movlw	3
  3070  0015FC  0101               	movlb	1	; () banked
  3071  0015FE  0101               	movlb	1	; () banked
  3072  001600  6586               	cpfsgt	init_queue@i& (0+255),b
  3073  001602  D001               	goto	l3735
  3074  001604  0012               	return	
  3075  001606                     l3735:
  3076                           
  3077                           ; BSR set to: 1
  3078                           ;messages.c: 22: qptr->queue[i].full = 0;
  3079  001606  0101               	movlb	1	; () banked
  3080  001608  0101               	movlb	1	; () banked
  3081  00160A  5186               	movf	init_queue@i& (0+255),w,b
  3082  00160C  0D0D               	mullw	13
  3083  00160E  50F3               	movf	prodl,w,c
  3084  001610  0101               	movlb	1	; () banked
  3085  001612  0101               	movlb	1	; () banked
  3086  001614  2583               	addwf	init_queue@qptr& (0+255),w,b
  3087  001616  6ED9               	movwf	fsr2l,c
  3088  001618  50F4               	movf	prodh,w,c
  3089  00161A  0101               	movlb	1	; () banked
  3090  00161C  0101               	movlb	1	; () banked
  3091  00161E  2184               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3092  001620  6EDA               	movwf	fsr2h,c
  3093  001622  0E00               	movlw	0
  3094  001624  6EDF               	movwf	indf2,c
  3095                           
  3096                           ; BSR set to: 1
  3097  001626  0101               	movlb	1	; () banked
  3098  001628  0101               	movlb	1	; () banked
  3099  00162A  2B86               	incf	init_queue@i& (0+255),f,b
  3100                           
  3101                           ; BSR set to: 1
  3102  00162C  0E03               	movlw	3
  3103  00162E  0101               	movlb	1	; () banked
  3104  001630  0101               	movlb	1	; () banked
  3105  001632  6586               	cpfsgt	init_queue@i& (0+255),b
  3106  001634  D7E8               	goto	l3735
  3107  001636  0012               	return	
  3108  001638                     __end_of_init_queue:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           postinc0	equ	0xFEE
  3117                           wreg	equ	0xFE8
  3118                           indf1	equ	0xFE7
  3119                           postdec1	equ	0xFE5
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           postinc2	equ	0xFDE
  3124                           postdec2	equ	0xFDD
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _init_i2c *****************
  3130 ;; Defined at:
  3131 ;;		line 272 in file "../src/my_i2c.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  ic              2   23[BANK1 ] PTR struct __i2c_comm
  3134 ;;		 -> main@ic(28), 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3146 ;;      Params:         0       0       2       0       0
  3147 ;;      Locals:         0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0
  3149 ;;      Totals:         0       0       2       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:   11
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text12
  3161  001790                     __ptext12:
  3162                           	opt stack 0
  3163  001790                     _init_i2c:
  3164                           	opt stack 19
  3165                           
  3166                           ;my_i2c.c: 273: ic_ptr = ic;
  3167                           
  3168                           ; BSR set to: 1
  3169                           ;incstack = 0
  3170  001790  0101               	movlb	1	; () banked
  3171  001792  0101               	movlb	1	; () banked
  3172  001794  C184  F1A9         	movff	init_i2c@ic+1,_ic_ptr+1
  3173  001798  0101               	movlb	1	; () banked
  3174  00179A  0101               	movlb	1	; () banked
  3175  00179C  C183  F1A8         	movff	init_i2c@ic,_ic_ptr
  3176                           
  3177                           ; BSR set to: 1
  3178                           ;my_i2c.c: 274: ic_ptr->buflen = 0;
  3179  0017A0  0101               	movlb	1	; () banked
  3180  0017A2  EE20 F00A          	lfsr	2,10
  3181  0017A6  0101               	movlb	1	; () banked
  3182  0017A8  51A8               	movf	_ic_ptr& (0+255),w,b
  3183  0017AA  26D9               	addwf	fsr2l,f,c
  3184  0017AC  0101               	movlb	1	; () banked
  3185  0017AE  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  3186  0017B0  22DA               	addwfc	fsr2h,f,c
  3187  0017B2  0E00               	movlw	0
  3188  0017B4  6EDF               	movwf	indf2,c
  3189                           
  3190                           ; BSR set to: 1
  3191                           ;my_i2c.c: 275: ic_ptr->event_count = 0;
  3192  0017B6  0101               	movlb	1	; () banked
  3193  0017B8  EE20 F00B          	lfsr	2,11
  3194  0017BC  0101               	movlb	1	; () banked
  3195  0017BE  51A8               	movf	_ic_ptr& (0+255),w,b
  3196  0017C0  26D9               	addwf	fsr2l,f,c
  3197  0017C2  0101               	movlb	1	; () banked
  3198  0017C4  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  3199  0017C6  22DA               	addwfc	fsr2h,f,c
  3200  0017C8  0E00               	movlw	0
  3201  0017CA  6EDF               	movwf	indf2,c
  3202                           
  3203                           ; BSR set to: 1
  3204                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  3205  0017CC  0101               	movlb	1	; () banked
  3206  0017CE  EE20 F00C          	lfsr	2,12
  3207  0017D2  0101               	movlb	1	; () banked
  3208  0017D4  51A8               	movf	_ic_ptr& (0+255),w,b
  3209  0017D6  26D9               	addwf	fsr2l,f,c
  3210  0017D8  0101               	movlb	1	; () banked
  3211  0017DA  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  3212  0017DC  22DA               	addwfc	fsr2h,f,c
  3213  0017DE  0E05               	movlw	5
  3214  0017E0  6EDF               	movwf	indf2,c
  3215                           
  3216                           ; BSR set to: 1
  3217                           ;my_i2c.c: 277: ic_ptr->error_count = 0;
  3218  0017E2  0101               	movlb	1	; () banked
  3219  0017E4  EE20 F00E          	lfsr	2,14
  3220  0017E8  0101               	movlb	1	; () banked
  3221  0017EA  51A8               	movf	_ic_ptr& (0+255),w,b
  3222  0017EC  26D9               	addwf	fsr2l,f,c
  3223  0017EE  0101               	movlb	1	; () banked
  3224  0017F0  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  3225  0017F2  22DA               	addwfc	fsr2h,f,c
  3226  0017F4  0E00               	movlw	0
  3227  0017F6  6EDF               	movwf	indf2,c
  3228                           
  3229                           ; BSR set to: 1
  3230  0017F8  0012               	return	
  3231  0017FA                     __end_of_init_i2c:
  3232                           	opt stack 0
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           postinc0	equ	0xFEE
  3240                           wreg	equ	0xFE8
  3241                           indf1	equ	0xFE7
  3242                           postdec1	equ	0xFE5
  3243                           fsr1h	equ	0xFE2
  3244                           fsr1l	equ	0xFE1
  3245                           indf2	equ	0xFDF
  3246                           postinc2	equ	0xFDE
  3247                           postdec2	equ	0xFDD
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _i2c_configure_slave *****************
  3253 ;; Defined at:
  3254 ;;		line 283 in file "../src/my_i2c.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  addr            1    wreg     unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  addr            1   23[BANK1 ] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3268 ;;      Params:         0       0       0       0       0
  3269 ;;      Locals:         0       0       1       0       0
  3270 ;;      Temps:          0       0       0       0       0
  3271 ;;      Totals:         0       0       1       0       0
  3272 ;;Total ram usage:        1 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:   11
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_main
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text13
  3283  001D10                     __ptext13:
  3284                           	opt stack 0
  3285  001D10                     _i2c_configure_slave:
  3286                           	opt stack 19
  3287                           
  3288                           ; BSR set to: 1
  3289                           ;incstack = 0
  3290                           ;i2c_configure_slave@addr stored from wreg
  3291  001D10  CFE8 F183          	movff	wreg,i2c_configure_slave@addr
  3292                           
  3293                           ;my_i2c.c: 295: TRISCbits.TRISC3 = 1;
  3294  001D14  8694               	bsf	3988,3,c	;volatile
  3295                           
  3296                           ;my_i2c.c: 296: TRISCbits.TRISC4 = 1;
  3297  001D16  8894               	bsf	3988,4,c	;volatile
  3298                           
  3299                           ;my_i2c.c: 301: SSPADD = addr;
  3300  001D18  C183  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3301                           
  3302                           ;my_i2c.c: 303: SSPSTAT = 0x0;
  3303  001D1C  0E00               	movlw	0
  3304  001D1E  6EC7               	movwf	4039,c	;volatile
  3305                           
  3306                           ;my_i2c.c: 304: SSPCON1 = 0x0;
  3307  001D20  0E00               	movlw	0
  3308  001D22  6EC6               	movwf	4038,c	;volatile
  3309                           
  3310                           ;my_i2c.c: 305: SSPCON2 = 0x0;
  3311  001D24  0E00               	movlw	0
  3312  001D26  6EC5               	movwf	4037,c	;volatile
  3313                           
  3314                           ;my_i2c.c: 306: SSPCON1 |= 0x0E;
  3315  001D28  0E0E               	movlw	14
  3316  001D2A  12C6               	iorwf	4038,f,c	;volatile
  3317                           
  3318                           ;my_i2c.c: 307: SSPSTAT |= 0b10000000;
  3319  001D2C  8EC7               	bsf	4039,7,c	;volatile
  3320                           
  3321                           ;my_i2c.c: 310: TRISCbits.TRISC3 = 1;
  3322  001D2E  8694               	bsf	3988,3,c	;volatile
  3323                           
  3324                           ;my_i2c.c: 311: TRISCbits.TRISC4 = 1;
  3325  001D30  8894               	bsf	3988,4,c	;volatile
  3326                           
  3327                           ;my_i2c.c: 332: SSPCON2bits.SEN = 1;
  3328  001D32  80C5               	bsf	4037,0,c	;volatile
  3329                           
  3330                           ;my_i2c.c: 333: SSPCON1 |= 0b00100000;
  3331  001D34  8AC6               	bsf	4038,5,c	;volatile
  3332  001D36  0012               	return	
  3333  001D38                     __end_of_i2c_configure_slave:
  3334                           	opt stack 0
  3335                           tblptru	equ	0xFF8
  3336                           tblptrh	equ	0xFF7
  3337                           tblptrl	equ	0xFF6
  3338                           tablat	equ	0xFF5
  3339                           prodh	equ	0xFF4
  3340                           prodl	equ	0xFF3
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           indf1	equ	0xFE7
  3344                           postdec1	equ	0xFE5
  3345                           fsr1h	equ	0xFE2
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           
  3354 ;; *************** function _enable_interrupts *****************
  3355 ;; Defined at:
  3356 ;;		line 14 in file "../src/interrupts.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;		None               void
  3363 ;; Registers used:
  3364 ;;		None
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3370 ;;      Params:         0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:   11
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text14
  3385  001E92                     __ptext14:
  3386                           	opt stack 0
  3387  001E92                     _enable_interrupts:
  3388                           	opt stack 19
  3389                           
  3390                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3391                           
  3392                           ;incstack = 0
  3393  001E92  8ED0               	bsf	4048,7,c	;volatile
  3394                           
  3395                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3396  001E94  8EF2               	bsf	intcon,7,c	;volatile
  3397                           
  3398                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3399  001E96  8CF2               	bsf	intcon,6,c	;volatile
  3400  001E98  0012               	return	
  3401  001E9A                     __end_of_enable_interrupts:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           intcon	equ	0xFF2
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           indf1	equ	0xFE7
  3413                           postdec1	equ	0xFE5
  3414                           fsr1h	equ	0xFE2
  3415                           fsr1l	equ	0xFE1
  3416                           indf2	equ	0xFDF
  3417                           postinc2	equ	0xFDE
  3418                           postdec2	equ	0xFDD
  3419                           fsr2h	equ	0xFDA
  3420                           fsr2l	equ	0xFD9
  3421                           status	equ	0xFD8
  3422                           
  3423 ;; *************** function _block_on_To_msgqueues *****************
  3424 ;; Defined at:
  3425 ;;		line 260 in file "../src/messages.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3439 ;;      Params:         0       0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0
  3441 ;;      Temps:          0       0       1       0       0
  3442 ;;      Totals:         0       0       1       0       0
  3443 ;;Total ram usage:        1 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:   14
  3446 ;; This function calls:
  3447 ;;		_Delay1KTCYx
  3448 ;;		_check_msg
  3449 ;;		_in_main
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text15
  3456  001540                     __ptext15:
  3457                           	opt stack 0
  3458  001540                     _block_on_To_msgqueues:
  3459                           	opt stack 16
  3460                           
  3461                           ;messages.c: 261: if (!in_main()) {
  3462                           
  3463                           ;incstack = 0
  3464  001540  ECFB  F00C         	call	_in_main	;wreg free
  3465  001544  0101               	movlb	1	; () banked
  3466  001546  0101               	movlb	1	; () banked
  3467  001548  5188               	movf	(?_in_main+1)& (0+255),w,b
  3468  00154A  0101               	movlb	1	; () banked
  3469  00154C  1187               	iorwf	?_in_main& (0+255),w,b
  3470  00154E  B4D8               	btfsc	status,2,c
  3471  001550  0012               	return	
  3472                           
  3473                           ; BSR set to: 1
  3474                           ;messages.c: 263: }
  3475                           ;messages.c: 265: MQ_Main_Willing_to_block = 1;
  3476                           
  3477                           ; BSR set to: 1
  3478                           
  3479                           ; BSR set to: 1
  3480                           ;messages.c: 262: return;
  3481  001552  0101               	movlb	1	; () banked
  3482  001554  6F89               	movwf	??_block_on_To_msgqueues& (0+255),b
  3483  001556  0E01               	movlw	1
  3484  001558  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3485  00155A  0101               	movlb	1	; () banked
  3486  00155C  5189               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3487  00155E                     l3675:
  3488                           
  3489                           ;messages.c: 267: if (check_msg(&ToMainHigh_MQ)) {
  3490  00155E  0101               	movlb	1	; () banked
  3491  001560  0E01               	movlw	high _ToMainHigh_MQ
  3492  001562  0101               	movlb	1	; () banked
  3493  001564  0101               	movlb	1	; () banked
  3494  001566  6F84               	movwf	(check_msg@qptr+1)& (0+255),b
  3495  001568  0101               	movlb	1	; () banked
  3496  00156A  0E00               	movlw	low _ToMainHigh_MQ
  3497  00156C  0101               	movlb	1	; () banked
  3498  00156E  0101               	movlb	1	; () banked
  3499  001570  6F83               	movwf	check_msg@qptr& (0+255),b
  3500  001572  ECF5  F00D         	call	_check_msg	;wreg free
  3501  001576  0900               	iorlw	0
  3502  001578  B4D8               	btfsc	status,2,c
  3503  00157A  D007               	goto	l3681
  3504                           
  3505                           ;messages.c: 268: MQ_Main_Willing_to_block = 0;
  3506  00157C  0101               	movlb	1	; () banked
  3507  00157E  6F89               	movwf	??_block_on_To_msgqueues& (0+255),b
  3508  001580  0E00               	movlw	0
  3509  001582  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3510  001584  0101               	movlb	1	; () banked
  3511  001586  5189               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3512  001588  0012               	return	
  3513  00158A                     l3681:
  3514                           
  3515                           ;messages.c: 273: }
  3516                           ;messages.c: 274: if (check_msg(&ToMainLow_MQ)) {
  3517  00158A  0101               	movlb	1	; () banked
  3518  00158C  0E01               	movlw	high _ToMainLow_MQ
  3519  00158E  0101               	movlb	1	; () banked
  3520  001590  0101               	movlb	1	; () banked
  3521  001592  6F84               	movwf	(check_msg@qptr+1)& (0+255),b
  3522  001594  0101               	movlb	1	; () banked
  3523  001596  0E36               	movlw	low _ToMainLow_MQ
  3524  001598  0101               	movlb	1	; () banked
  3525  00159A  0101               	movlb	1	; () banked
  3526  00159C  6F83               	movwf	check_msg@qptr& (0+255),b
  3527  00159E  ECF5  F00D         	call	_check_msg	;wreg free
  3528  0015A2  0900               	iorlw	0
  3529  0015A4  B4D8               	btfsc	status,2,c
  3530  0015A6  D007               	goto	l3687
  3531                           
  3532                           ;messages.c: 275: MQ_Main_Willing_to_block = 0;
  3533  0015A8  0101               	movlb	1	; () banked
  3534  0015AA  6F89               	movwf	??_block_on_To_msgqueues& (0+255),b
  3535  0015AC  0E00               	movlw	0
  3536  0015AE  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3537  0015B0  0101               	movlb	1	; () banked
  3538  0015B2  5189               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3539  0015B4  0012               	return	
  3540  0015B6                     l3687:
  3541                           
  3542                           ;messages.c: 280: }
  3543                           ;messages.c: 281: Delay1KTCYx(10);
  3544  0015B6  0E0A               	movlw	10
  3545  0015B8  ECF2  F00E         	call	_Delay1KTCYx
  3546  0015BC  D7D0               	goto	l3675
  3547  0015BE                     __end_of_block_on_To_msgqueues:
  3548                           	opt stack 0
  3549                           tblptru	equ	0xFF8
  3550                           tblptrh	equ	0xFF7
  3551                           tblptrl	equ	0xFF6
  3552                           tablat	equ	0xFF5
  3553                           prodh	equ	0xFF4
  3554                           prodl	equ	0xFF3
  3555                           intcon	equ	0xFF2
  3556                           postinc0	equ	0xFEE
  3557                           wreg	equ	0xFE8
  3558                           indf1	equ	0xFE7
  3559                           postdec1	equ	0xFE5
  3560                           fsr1h	equ	0xFE2
  3561                           fsr1l	equ	0xFE1
  3562                           indf2	equ	0xFDF
  3563                           postinc2	equ	0xFDE
  3564                           postdec2	equ	0xFDD
  3565                           fsr2h	equ	0xFDA
  3566                           fsr2l	equ	0xFD9
  3567                           status	equ	0xFD8
  3568                           
  3569 ;; *************** function _in_main *****************
  3570 ;; Defined at:
  3571 ;;		line 40 in file "../src/interrupts.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  2   27[BANK1 ] int 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3585 ;;      Params:         0       0       2       0       0
  3586 ;;      Locals:         0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0
  3588 ;;      Totals:         0       0       2       0       0
  3589 ;;Total ram usage:        2 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:   13
  3592 ;; This function calls:
  3593 ;;		_in_high_int
  3594 ;;		_in_low_int
  3595 ;; This function is called by:
  3596 ;;		_block_on_To_msgqueues
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text16
  3601  0019F6                     __ptext16:
  3602                           	opt stack 0
  3603  0019F6                     _in_main:
  3604                           	opt stack 16
  3605                           
  3606                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3607                           
  3608                           ;incstack = 0
  3609  0019F6  ECD8  F00C         	call	_in_low_int	;wreg free
  3610  0019FA  0101               	movlb	1	; () banked
  3611  0019FC  0101               	movlb	1	; () banked
  3612  0019FE  5186               	movf	(?_in_low_int+1)& (0+255),w,b
  3613  001A00  0101               	movlb	1	; () banked
  3614  001A02  1185               	iorwf	?_in_low_int& (0+255),w,b
  3615  001A04  A4D8               	btfss	status,2,c
  3616  001A06  D011               	goto	l3273
  3617                           
  3618                           ; BSR set to: 1
  3619  001A08  EC1A  F00F         	call	_in_high_int	;wreg free
  3620  001A0C  0101               	movlb	1	; () banked
  3621  001A0E  0101               	movlb	1	; () banked
  3622  001A10  5184               	movf	(?_in_high_int+1)& (0+255),w,b
  3623  001A12  0101               	movlb	1	; () banked
  3624  001A14  1183               	iorwf	?_in_high_int& (0+255),w,b
  3625  001A16  A4D8               	btfss	status,2,c
  3626  001A18  D008               	goto	l3273
  3627                           
  3628                           ; BSR set to: 1
  3629                           ;interrupts.c: 42: return (1);
  3630  001A1A  0E00               	movlw	0
  3631  001A1C  0101               	movlb	1	; () banked
  3632  001A1E  0101               	movlb	1	; () banked
  3633  001A20  6F88               	movwf	(?_in_main+1)& (0+255),b
  3634  001A22  0E01               	movlw	1
  3635  001A24  0101               	movlb	1	; () banked
  3636  001A26  6F87               	movwf	?_in_main& (0+255),b
  3637  001A28  0012               	return	
  3638  001A2A                     l3273:
  3639                           
  3640                           ; BSR set to: 1
  3641                           ;interrupts.c: 44: return (0);
  3642  001A2A  0E00               	movlw	0
  3643  001A2C  0101               	movlb	1	; () banked
  3644  001A2E  0101               	movlb	1	; () banked
  3645  001A30  6F88               	movwf	(?_in_main+1)& (0+255),b
  3646  001A32  0E00               	movlw	0
  3647  001A34  0101               	movlb	1	; () banked
  3648  001A36  6F87               	movwf	?_in_main& (0+255),b
  3649  001A38  0012               	return	
  3650  001A3A                     __end_of_in_main:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           indf1	equ	0xFE7
  3662                           postdec1	equ	0xFE5
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           indf2	equ	0xFDF
  3666                           postinc2	equ	0xFDE
  3667                           postdec2	equ	0xFDD
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _in_low_int *****************
  3673 ;; Defined at:
  3674 ;;		line 30 in file "../src/interrupts.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  2   25[BANK1 ] int 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3688 ;;      Params:         0       0       2       0       0
  3689 ;;      Locals:         0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0
  3691 ;;      Totals:         0       0       2       0       0
  3692 ;;Total ram usage:        2 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:   12
  3695 ;; This function calls:
  3696 ;;		_in_high_int
  3697 ;; This function is called by:
  3698 ;;		_in_main
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text17
  3703  0019B0                     __ptext17:
  3704                           	opt stack 0
  3705  0019B0                     _in_low_int:
  3706                           	opt stack 16
  3707                           
  3708                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3709                           
  3710                           ; BSR set to: 1
  3711                           ;incstack = 0
  3712  0019B0  ACF2               	btfss	intcon,6,c	;volatile
  3713  0019B2  D008               	goto	l3251
  3714                           
  3715                           ;interrupts.c: 32: return (0);
  3716  0019B4  0E00               	movlw	0
  3717  0019B6  0101               	movlb	1	; () banked
  3718  0019B8  0101               	movlb	1	; () banked
  3719  0019BA  6F86               	movwf	(?_in_low_int+1)& (0+255),b
  3720  0019BC  0E00               	movlw	0
  3721  0019BE  0101               	movlb	1	; () banked
  3722  0019C0  6F85               	movwf	?_in_low_int& (0+255),b
  3723  0019C2  0012               	return	
  3724  0019C4                     l3251:
  3725  0019C4  EC1A  F00F         	call	_in_high_int	;wreg free
  3726  0019C8  0101               	movlb	1	; () banked
  3727  0019CA  0101               	movlb	1	; () banked
  3728  0019CC  5184               	movf	(?_in_high_int+1)& (0+255),w,b
  3729  0019CE  0101               	movlb	1	; () banked
  3730  0019D0  1183               	iorwf	?_in_high_int& (0+255),w,b
  3731  0019D2  B4D8               	btfsc	status,2,c
  3732  0019D4  D008               	goto	l3259
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;interrupts.c: 34: return (0);
  3736  0019D6  0E00               	movlw	0
  3737  0019D8  0101               	movlb	1	; () banked
  3738  0019DA  0101               	movlb	1	; () banked
  3739  0019DC  6F86               	movwf	(?_in_low_int+1)& (0+255),b
  3740  0019DE  0E00               	movlw	0
  3741  0019E0  0101               	movlb	1	; () banked
  3742  0019E2  6F85               	movwf	?_in_low_int& (0+255),b
  3743  0019E4  0012               	return	
  3744  0019E6                     l3259:
  3745                           
  3746                           ; BSR set to: 1
  3747                           ;interrupts.c: 36: return (1);
  3748  0019E6  0E00               	movlw	0
  3749  0019E8  0101               	movlb	1	; () banked
  3750  0019EA  0101               	movlb	1	; () banked
  3751  0019EC  6F86               	movwf	(?_in_low_int+1)& (0+255),b
  3752  0019EE  0E01               	movlw	1
  3753  0019F0  0101               	movlb	1	; () banked
  3754  0019F2  6F85               	movwf	?_in_low_int& (0+255),b
  3755  0019F4  0012               	return	
  3756  0019F6                     __end_of_in_low_int:
  3757                           	opt stack 0
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           prodh	equ	0xFF4
  3763                           prodl	equ	0xFF3
  3764                           intcon	equ	0xFF2
  3765                           postinc0	equ	0xFEE
  3766                           wreg	equ	0xFE8
  3767                           indf1	equ	0xFE7
  3768                           postdec1	equ	0xFE5
  3769                           fsr1h	equ	0xFE2
  3770                           fsr1l	equ	0xFE1
  3771                           indf2	equ	0xFDF
  3772                           postinc2	equ	0xFDE
  3773                           postdec2	equ	0xFDD
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _in_high_int *****************
  3779 ;; Defined at:
  3780 ;;		line 22 in file "../src/interrupts.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  2   23[BANK1 ] int 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3794 ;;      Params:         0       0       2       0       0
  3795 ;;      Locals:         0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0
  3797 ;;      Totals:         0       0       2       0       0
  3798 ;;Total ram usage:        2 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:   11
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_in_low_int
  3805 ;;		_in_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text18
  3810  001E34                     __ptext18:
  3811                           	opt stack 0
  3812  001E34                     _in_high_int:
  3813                           	opt stack 16
  3814                           
  3815                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3816                           
  3817                           ; BSR set to: 1
  3818                           ;incstack = 0
  3819  001E34  0E00               	movlw	0
  3820  001E36  AEF2               	btfss	intcon,7,c	;volatile
  3821  001E38  0E01               	movlw	1
  3822  001E3A  0101               	movlb	1	; () banked
  3823  001E3C  0101               	movlb	1	; () banked
  3824  001E3E  6F83               	movwf	?_in_high_int& (0+255),b
  3825  001E40  0101               	movlb	1	; () banked
  3826  001E42  6B84               	clrf	(?_in_high_int+1)& (0+255),b
  3827  001E44  0012               	return	
  3828  001E46                     __end_of_in_high_int:
  3829                           	opt stack 0
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           prodh	equ	0xFF4
  3835                           prodl	equ	0xFF3
  3836                           intcon	equ	0xFF2
  3837                           postinc0	equ	0xFEE
  3838                           wreg	equ	0xFE8
  3839                           indf1	equ	0xFE7
  3840                           postdec1	equ	0xFE5
  3841                           fsr1h	equ	0xFE2
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _check_msg *****************
  3851 ;; Defined at:
  3852 ;;		line 224 in file "../src/messages.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  qptr            2   23[BANK1 ] PTR struct __msg_queue
  3855 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      unsigned char 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3867 ;;      Params:         0       0       2       0       0
  3868 ;;      Locals:         0       0       0       0       0
  3869 ;;      Temps:          0       0       1       0       0
  3870 ;;      Totals:         0       0       3       0       0
  3871 ;;Total ram usage:        3 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:   11
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_block_on_To_msgqueues
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text19
  3882  001BEA                     __ptext19:
  3883                           	opt stack 0
  3884  001BEA                     _check_msg:
  3885                           	opt stack 18
  3886                           
  3887                           ;messages.c: 225: return (qptr->queue[qptr->cur_read_ind].full);
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;incstack = 0
  3891  001BEA  0101               	movlb	1	; () banked
  3892  001BEC  EE20 F035          	lfsr	2,53
  3893  001BF0  0101               	movlb	1	; () banked
  3894  001BF2  5183               	movf	check_msg@qptr& (0+255),w,b
  3895  001BF4  26D9               	addwf	fsr2l,f,c
  3896  001BF6  0101               	movlb	1	; () banked
  3897  001BF8  5184               	movf	(check_msg@qptr+1)& (0+255),w,b
  3898  001BFA  22DA               	addwfc	fsr2h,f,c
  3899  001BFC  50DF               	movf	indf2,w,c
  3900  001BFE  0101               	movlb	1	; () banked
  3901  001C00  6F85               	movwf	??_check_msg& (0+255),b
  3902  001C02  0101               	movlb	1	; () banked
  3903  001C04  5185               	movf	??_check_msg& (0+255),w,b
  3904  001C06  0D0D               	mullw	13
  3905  001C08  50F3               	movf	prodl,w,c
  3906  001C0A  0101               	movlb	1	; () banked
  3907  001C0C  0101               	movlb	1	; () banked
  3908  001C0E  2583               	addwf	check_msg@qptr& (0+255),w,b
  3909  001C10  6ED9               	movwf	fsr2l,c
  3910  001C12  50F4               	movf	prodh,w,c
  3911  001C14  0101               	movlb	1	; () banked
  3912  001C16  0101               	movlb	1	; () banked
  3913  001C18  2184               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3914  001C1A  6EDA               	movwf	fsr2h,c
  3915  001C1C  50DF               	movf	indf2,w,c
  3916  001C1E  0012               	return	
  3917  001C20                     __end_of_check_msg:
  3918                           	opt stack 0
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           intcon	equ	0xFF2
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           indf1	equ	0xFE7
  3929                           postdec1	equ	0xFE5
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           indf2	equ	0xFDF
  3933                           postinc2	equ	0xFDE
  3934                           postdec2	equ	0xFDD
  3935                           fsr2h	equ	0xFDA
  3936                           fsr2l	equ	0xFD9
  3937                           status	equ	0xFD8
  3938                           
  3939 ;; *************** function _Delay1KTCYx *****************
  3940 ;; Defined at:
  3941 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  unit            1    wreg     unsigned char 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  unit            1   23[BANK1 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;		None               void
  3948 ;; Registers used:
  3949 ;;		wreg
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3955 ;;      Params:         0       0       0       0       0
  3956 ;;      Locals:         0       0       1       0       0
  3957 ;;      Temps:          0       0       0       0       0
  3958 ;;      Totals:         0       0       1       0       0
  3959 ;;Total ram usage:        1 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:   11
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_block_on_To_msgqueues
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text20
  3970  001DE4                     __ptext20:
  3971                           	opt stack 0
  3972  001DE4                     _Delay1KTCYx:
  3973                           	opt stack 18
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;incstack = 0
  3977                           ;Delay1KTCYx@unit stored from wreg
  3978  001DE4  CFE8 F183          	movff	wreg,Delay1KTCYx@unit
  3979  001DE8                     l789:
  3980  001DE8  0EFA               	movlw	250
  3981  001DEA                     u3057:
  3982  001DEA  F000               	nop	
  3983  001DEC  2EE8               	decfsz	wreg,f,c
  3984  001DEE  D7FD               	goto	u3057
  3985  001DF0  0101               	movlb	1	; () banked
  3986  001DF2  0101               	movlb	1	; () banked
  3987  001DF4  2F83               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3988  001DF6  D7F8               	goto	l789
  3989  001DF8  0012               	return	
  3990  001DFA                     __end_of_Delay1KTCYx:
  3991                           	opt stack 0
  3992                           tblptru	equ	0xFF8
  3993                           tblptrh	equ	0xFF7
  3994                           tblptrl	equ	0xFF6
  3995                           tablat	equ	0xFF5
  3996                           prodh	equ	0xFF4
  3997                           prodl	equ	0xFF3
  3998                           intcon	equ	0xFF2
  3999                           postinc0	equ	0xFEE
  4000                           wreg	equ	0xFE8
  4001                           indf1	equ	0xFE7
  4002                           postdec1	equ	0xFE5
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           indf2	equ	0xFDF
  4006                           postinc2	equ	0xFDE
  4007                           postdec2	equ	0xFDD
  4008                           fsr2h	equ	0xFDA
  4009                           fsr2l	equ	0xFD9
  4010                           status	equ	0xFD8
  4011                           
  4012 ;; *************** function _ToMainLow_recvmsg *****************
  4013 ;; Defined at:
  4014 ;;		line 114 in file "../src/messages.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  maxlength       1    wreg     unsigned char 
  4017 ;;  msgtype         2   47[BANK1 ] PTR unsigned char 
  4018 ;;		 -> main@msgtype(1), 
  4019 ;;  data            2   49[BANK1 ] PTR void 
  4020 ;;		 -> main@msgbuffer(11), 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  maxlength       1   51[BANK1 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      char 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4032 ;;      Params:         0       0       4       0       0
  4033 ;;      Locals:         0       0       1       0       0
  4034 ;;      Temps:          0       0       0       0       0
  4035 ;;      Totals:         0       0       5       0       0
  4036 ;;Total ram usage:        5 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:   13
  4039 ;; This function calls:
  4040 ;;		_recv_msg
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text21
  4047  001A3A                     __ptext21:
  4048                           	opt stack 0
  4049  001A3A                     _ToMainLow_recvmsg:
  4050                           	opt stack 17
  4051                           
  4052                           ; BSR set to: 1
  4053                           ;incstack = 0
  4054                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4055  001A3A  CFE8 F19F          	movff	wreg,ToMainLow_recvmsg@maxlength
  4056                           
  4057                           ;messages.c: 120: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4058  001A3E  0101               	movlb	1	; () banked
  4059  001A40  0E01               	movlw	high _ToMainLow_MQ
  4060  001A42  0101               	movlb	1	; () banked
  4061  001A44  0101               	movlb	1	; () banked
  4062  001A46  6F8E               	movwf	(recv_msg@qptr+1)& (0+255),b
  4063  001A48  0101               	movlb	1	; () banked
  4064  001A4A  0E36               	movlw	low _ToMainLow_MQ
  4065  001A4C  0101               	movlb	1	; () banked
  4066  001A4E  0101               	movlb	1	; () banked
  4067  001A50  6F8D               	movwf	recv_msg@qptr& (0+255),b
  4068  001A52  C19F  F18F         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4069  001A56  0101               	movlb	1	; () banked
  4070  001A58  0101               	movlb	1	; () banked
  4071  001A5A  C19C  F191         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4072  001A5E  0101               	movlb	1	; () banked
  4073  001A60  0101               	movlb	1	; () banked
  4074  001A62  C19B  F190         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4075  001A66  0101               	movlb	1	; () banked
  4076  001A68  0101               	movlb	1	; () banked
  4077  001A6A  C19E  F193         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4078  001A6E  0101               	movlb	1	; () banked
  4079  001A70  0101               	movlb	1	; () banked
  4080  001A72  C19D  F192         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4081  001A76  EC57  F005         	call	_recv_msg	;wreg free
  4082  001A7A  0012               	return	
  4083  001A7C                     __end_of_ToMainLow_recvmsg:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           indf1	equ	0xFE7
  4095                           postdec1	equ	0xFE5
  4096                           fsr1h	equ	0xFE2
  4097                           fsr1l	equ	0xFE1
  4098                           indf2	equ	0xFDF
  4099                           postinc2	equ	0xFDE
  4100                           postdec2	equ	0xFDD
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           
  4105 ;; *************** function _ToMainHigh_recvmsg *****************
  4106 ;; Defined at:
  4107 ;;		line 137 in file "../src/messages.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  maxlength       1    wreg     unsigned char 
  4110 ;;  msgtype         2   47[BANK1 ] PTR unsigned char 
  4111 ;;		 -> main@msgtype(1), 
  4112 ;;  data            2   49[BANK1 ] PTR void 
  4113 ;;		 -> main@msgbuffer(11), 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  maxlength       1   51[BANK1 ] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      char 
  4118 ;; Registers used:
  4119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4125 ;;      Params:         0       0       4       0       0
  4126 ;;      Locals:         0       0       1       0       0
  4127 ;;      Temps:          0       0       0       0       0
  4128 ;;      Totals:         0       0       5       0       0
  4129 ;;Total ram usage:        5 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:   13
  4132 ;; This function calls:
  4133 ;;		_recv_msg
  4134 ;; This function is called by:
  4135 ;;		_main
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text22
  4140  001A7C                     __ptext22:
  4141                           	opt stack 0
  4142  001A7C                     _ToMainHigh_recvmsg:
  4143                           	opt stack 17
  4144                           
  4145                           ;incstack = 0
  4146                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4147  001A7C  CFE8 F19F          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4148                           
  4149                           ;messages.c: 143: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4150  001A80  0101               	movlb	1	; () banked
  4151  001A82  0E01               	movlw	high _ToMainHigh_MQ
  4152  001A84  0101               	movlb	1	; () banked
  4153  001A86  0101               	movlb	1	; () banked
  4154  001A88  6F8E               	movwf	(recv_msg@qptr+1)& (0+255),b
  4155  001A8A  0101               	movlb	1	; () banked
  4156  001A8C  0E00               	movlw	low _ToMainHigh_MQ
  4157  001A8E  0101               	movlb	1	; () banked
  4158  001A90  0101               	movlb	1	; () banked
  4159  001A92  6F8D               	movwf	recv_msg@qptr& (0+255),b
  4160  001A94  C19F  F18F         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4161  001A98  0101               	movlb	1	; () banked
  4162  001A9A  0101               	movlb	1	; () banked
  4163  001A9C  C19C  F191         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4164  001AA0  0101               	movlb	1	; () banked
  4165  001AA2  0101               	movlb	1	; () banked
  4166  001AA4  C19B  F190         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4167  001AA8  0101               	movlb	1	; () banked
  4168  001AAA  0101               	movlb	1	; () banked
  4169  001AAC  C19E  F193         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4170  001AB0  0101               	movlb	1	; () banked
  4171  001AB2  0101               	movlb	1	; () banked
  4172  001AB4  C19D  F192         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4173  001AB8  EC57  F005         	call	_recv_msg	;wreg free
  4174  001ABC  0012               	return	
  4175  001ABE                     __end_of_ToMainHigh_recvmsg:
  4176                           	opt stack 0
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           prodh	equ	0xFF4
  4182                           prodl	equ	0xFF3
  4183                           intcon	equ	0xFF2
  4184                           postinc0	equ	0xFEE
  4185                           wreg	equ	0xFE8
  4186                           indf1	equ	0xFE7
  4187                           postdec1	equ	0xFE5
  4188                           fsr1h	equ	0xFE2
  4189                           fsr1l	equ	0xFE1
  4190                           indf2	equ	0xFDF
  4191                           postinc2	equ	0xFDE
  4192                           postdec2	equ	0xFDD
  4193                           fsr2h	equ	0xFDA
  4194                           fsr2l	equ	0xFD9
  4195                           status	equ	0xFD8
  4196                           
  4197 ;; *************** function _recv_msg *****************
  4198 ;; Defined at:
  4199 ;;		line 65 in file "../src/messages.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  qptr            2   33[BANK1 ] PTR struct __msg_queue
  4202 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4203 ;;  maxlength       1   35[BANK1 ] unsigned char 
  4204 ;;  msgtype         2   36[BANK1 ] PTR unsigned char 
  4205 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4206 ;;  data            2   38[BANK1 ] PTR void 
  4207 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  qmsg            2   45[BANK1 ] PTR struct __msg
  4210 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4211 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4212 ;;  tlength         2   43[BANK1 ] unsigned int 
  4213 ;;  slot            1   42[BANK1 ] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      char 
  4216 ;; Registers used:
  4217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4223 ;;      Params:         0       0       7       0       0
  4224 ;;      Locals:         0       0       5       0       0
  4225 ;;      Temps:          0       0       2       0       0
  4226 ;;      Totals:         0       0      14       0       0
  4227 ;;Total ram usage:       14 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:   12
  4230 ;; This function calls:
  4231 ;;		_memcpy
  4232 ;; This function is called by:
  4233 ;;		_ToMainLow_recvmsg
  4234 ;;		_ToMainHigh_recvmsg
  4235 ;;		_FromMainLow_recvmsg
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text23
  4240  000AAE                     __ptext23:
  4241                           	opt stack 0
  4242  000AAE                     _recv_msg:
  4243                           	opt stack 17
  4244                           
  4245                           ;messages.c: 66: unsigned char slot;
  4246                           ;messages.c: 70: msg *qmsg;
  4247                           ;messages.c: 71: size_t tlength;
  4248                           ;messages.c: 74: slot = qptr->cur_read_ind;
  4249                           
  4250                           ;incstack = 0
  4251  000AAE  0101               	movlb	1	; () banked
  4252  000AB0  EE20 F035          	lfsr	2,53
  4253  000AB4  0101               	movlb	1	; () banked
  4254  000AB6  518D               	movf	recv_msg@qptr& (0+255),w,b
  4255  000AB8  26D9               	addwf	fsr2l,f,c
  4256  000ABA  0101               	movlb	1	; () banked
  4257  000ABC  518E               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4258  000ABE  22DA               	addwfc	fsr2h,f,c
  4259  000AC0  50DF               	movf	indf2,w,c
  4260  000AC2  0101               	movlb	1	; () banked
  4261  000AC4  0101               	movlb	1	; () banked
  4262  000AC6  6F96               	movwf	recv_msg@slot& (0+255),b
  4263                           
  4264                           ; BSR set to: 1
  4265                           ;messages.c: 75: qmsg = &(qptr->queue[slot]);
  4266  000AC8  0101               	movlb	1	; () banked
  4267  000ACA  0101               	movlb	1	; () banked
  4268  000ACC  5196               	movf	recv_msg@slot& (0+255),w,b
  4269  000ACE  0D0D               	mullw	13
  4270  000AD0  50F3               	movf	prodl,w,c
  4271  000AD2  0101               	movlb	1	; () banked
  4272  000AD4  0101               	movlb	1	; () banked
  4273  000AD6  258D               	addwf	recv_msg@qptr& (0+255),w,b
  4274  000AD8  0101               	movlb	1	; () banked
  4275  000ADA  0101               	movlb	1	; () banked
  4276  000ADC  6F99               	movwf	recv_msg@qmsg& (0+255),b
  4277  000ADE  50F4               	movf	prodh,w,c
  4278  000AE0  0101               	movlb	1	; () banked
  4279  000AE2  0101               	movlb	1	; () banked
  4280  000AE4  218E               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4281  000AE6  0101               	movlb	1	; () banked
  4282  000AE8  6F9A               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4283                           
  4284                           ; BSR set to: 1
  4285                           ;messages.c: 76: if (qmsg->full == 1) {
  4286  000AEA  0E01               	movlw	1
  4287  000AEC  C199  FFD9         	movff	recv_msg@qmsg,fsr2l
  4288  000AF0  C19A  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4289  000AF4  62DF               	cpfseq	indf2,c
  4290  000AF6  D074               	goto	l3803
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;messages.c: 78: if (qmsg->length > maxlength) {
  4294  000AF8  0101               	movlb	1	; () banked
  4295  000AFA  EE20 F001          	lfsr	2,1
  4296  000AFE  0101               	movlb	1	; () banked
  4297  000B00  5199               	movf	recv_msg@qmsg& (0+255),w,b
  4298  000B02  26D9               	addwf	fsr2l,f,c
  4299  000B04  0101               	movlb	1	; () banked
  4300  000B06  519A               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4301  000B08  22DA               	addwfc	fsr2h,f,c
  4302  000B0A  50DF               	movf	indf2,w,c
  4303  000B0C  0101               	movlb	1	; () banked
  4304  000B0E  0101               	movlb	1	; () banked
  4305  000B10  5D8F               	subwf	recv_msg@maxlength& (0+255),w,b
  4306  000B12  B0D8               	btfsc	status,0,c
  4307  000B14  D002               	goto	l3787
  4308                           
  4309                           ; BSR set to: 1
  4310                           ;messages.c: 79: return (-3);
  4311  000B16  0EFD               	movlw	253
  4312  000B18  0012               	return	
  4313  000B1A                     l3787:
  4314                           
  4315                           ; BSR set to: 1
  4316                           ;messages.c: 80: }
  4317                           ;messages.c: 82: tlength = qmsg->length;
  4318  000B1A  0101               	movlb	1	; () banked
  4319  000B1C  EE20 F001          	lfsr	2,1
  4320  000B20  0101               	movlb	1	; () banked
  4321  000B22  5199               	movf	recv_msg@qmsg& (0+255),w,b
  4322  000B24  26D9               	addwf	fsr2l,f,c
  4323  000B26  0101               	movlb	1	; () banked
  4324  000B28  519A               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4325  000B2A  22DA               	addwfc	fsr2h,f,c
  4326  000B2C  50DF               	movf	indf2,w,c
  4327  000B2E  0101               	movlb	1	; () banked
  4328  000B30  6F94               	movwf	??_recv_msg& (0+255),b
  4329  000B32  0101               	movlb	1	; () banked
  4330  000B34  5194               	movf	??_recv_msg& (0+255),w,b
  4331  000B36  0101               	movlb	1	; () banked
  4332  000B38  0101               	movlb	1	; () banked
  4333  000B3A  6F97               	movwf	recv_msg@tlength& (0+255),b
  4334  000B3C  0101               	movlb	1	; () banked
  4335  000B3E  6B98               	clrf	(recv_msg@tlength+1)& (0+255),b
  4336                           
  4337                           ; BSR set to: 1
  4338                           ;messages.c: 83: memcpy(data, qmsg->data, tlength);
  4339  000B40  0101               	movlb	1	; () banked
  4340  000B42  0101               	movlb	1	; () banked
  4341  000B44  C193  F184         	movff	recv_msg@data+1,memcpy@d1+1
  4342  000B48  0101               	movlb	1	; () banked
  4343  000B4A  0101               	movlb	1	; () banked
  4344  000B4C  C192  F183         	movff	recv_msg@data,memcpy@d1
  4345  000B50  0E03               	movlw	3
  4346  000B52  0101               	movlb	1	; () banked
  4347  000B54  0101               	movlb	1	; () banked
  4348  000B56  2599               	addwf	recv_msg@qmsg& (0+255),w,b
  4349  000B58  0101               	movlb	1	; () banked
  4350  000B5A  6F94               	movwf	??_recv_msg& (0+255),b
  4351  000B5C  0E00               	movlw	0
  4352  000B5E  0101               	movlb	1	; () banked
  4353  000B60  0101               	movlb	1	; () banked
  4354  000B62  219A               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4355  000B64  0101               	movlb	1	; () banked
  4356  000B66  6F95               	movwf	(??_recv_msg+1)& (0+255),b
  4357  000B68  C194  F185         	movff	??_recv_msg,memcpy@s1
  4358  000B6C  C195  F186         	movff	??_recv_msg+1,memcpy@s1+1
  4359  000B70  C197  F187         	movff	recv_msg@tlength,memcpy@n
  4360  000B74  C198  F188         	movff	recv_msg@tlength+1,memcpy@n+1
  4361  000B78  EC2F  F00C         	call	_memcpy	;wreg free
  4362                           
  4363                           ;messages.c: 89: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4364  000B7C  0101               	movlb	1	; () banked
  4365  000B7E  EE20 F035          	lfsr	2,53
  4366  000B82  0101               	movlb	1	; () banked
  4367  000B84  518D               	movf	recv_msg@qptr& (0+255),w,b
  4368  000B86  26D9               	addwf	fsr2l,f,c
  4369  000B88  0101               	movlb	1	; () banked
  4370  000B8A  518E               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4371  000B8C  22DA               	addwfc	fsr2h,f,c
  4372  000B8E  0101               	movlb	1	; () banked
  4373  000B90  EE10 F035          	lfsr	1,53
  4374  000B94  0101               	movlb	1	; () banked
  4375  000B96  518D               	movf	recv_msg@qptr& (0+255),w,b
  4376  000B98  26E1               	addwf	fsr1l,f,c
  4377  000B9A  0101               	movlb	1	; () banked
  4378  000B9C  518E               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4379  000B9E  22E2               	addwfc	fsr1h,f,c
  4380  000BA0  50E7               	movf	indf1,w,c
  4381  000BA2  0101               	movlb	1	; () banked
  4382  000BA4  6F94               	movwf	??_recv_msg& (0+255),b
  4383  000BA6  0101               	movlb	1	; () banked
  4384  000BA8  2994               	incf	??_recv_msg& (0+255),w,b
  4385  000BAA  0B03               	andlw	3
  4386  000BAC  6EDF               	movwf	indf2,c
  4387                           
  4388                           ; BSR set to: 1
  4389                           ;messages.c: 91: (*msgtype) = qmsg->msgtype;
  4390  000BAE  0101               	movlb	1	; () banked
  4391  000BB0  EE20 F002          	lfsr	2,2
  4392  000BB4  0101               	movlb	1	; () banked
  4393  000BB6  5199               	movf	recv_msg@qmsg& (0+255),w,b
  4394  000BB8  26D9               	addwf	fsr2l,f,c
  4395  000BBA  0101               	movlb	1	; () banked
  4396  000BBC  519A               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4397  000BBE  22DA               	addwfc	fsr2h,f,c
  4398  000BC0  C190  FFE1         	movff	recv_msg@msgtype,fsr1l
  4399  000BC4  C191  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4400  000BC8  CFDF FFE7          	movff	indf2,indf1
  4401                           
  4402                           ; BSR set to: 1
  4403                           ;messages.c: 93: qmsg->full = 0;
  4404  000BCC  C199  FFD9         	movff	recv_msg@qmsg,fsr2l
  4405  000BD0  C19A  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4406  000BD4  0E00               	movlw	0
  4407  000BD6  6EDF               	movwf	indf2,c
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;messages.c: 94: return (tlength);
  4411  000BD8  0101               	movlb	1	; () banked
  4412  000BDA  0101               	movlb	1	; () banked
  4413  000BDC  5197               	movf	recv_msg@tlength& (0+255),w,b
  4414  000BDE  0012               	return	
  4415  000BE0                     l3803:
  4416                           
  4417                           ; BSR set to: 1
  4418                           ;messages.c: 96: return (-4);
  4419  000BE0  0EFC               	movlw	252
  4420  000BE2  0012               	return	
  4421  000BE4                     __end_of_recv_msg:
  4422                           	opt stack 0
  4423                           tblptru	equ	0xFF8
  4424                           tblptrh	equ	0xFF7
  4425                           tblptrl	equ	0xFF6
  4426                           tablat	equ	0xFF5
  4427                           prodh	equ	0xFF4
  4428                           prodl	equ	0xFF3
  4429                           intcon	equ	0xFF2
  4430                           postinc0	equ	0xFEE
  4431                           wreg	equ	0xFE8
  4432                           indf1	equ	0xFE7
  4433                           postdec1	equ	0xFE5
  4434                           fsr1h	equ	0xFE2
  4435                           fsr1l	equ	0xFE1
  4436                           indf2	equ	0xFDF
  4437                           postinc2	equ	0xFDE
  4438                           postdec2	equ	0xFDD
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8
  4442                           
  4443 ;; *************** function _memcpy *****************
  4444 ;; Defined at:
  4445 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  d1              2   23[BANK1 ] PTR void 
  4448 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4449 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4450 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4451 ;;  s1              2   25[BANK1 ] PTR const void 
  4452 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4453 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4454 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4455 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4456 ;;		 -> main@uc(5), 
  4457 ;;  n               2   27[BANK1 ] unsigned int 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  s               2   31[BANK1 ] PTR const unsigned char 
  4460 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4461 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4462 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4463 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4464 ;;		 -> main@uc(5), 
  4465 ;;  d               2   29[BANK1 ] PTR unsigned char 
  4466 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4467 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4468 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2   23[BANK1 ] PTR void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4478 ;;      Params:         0       0       6       0       0
  4479 ;;      Locals:         0       0       4       0       0
  4480 ;;      Temps:          0       0       0       0       0
  4481 ;;      Totals:         0       0      10       0       0
  4482 ;;Total ram usage:       10 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:   11
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_send_msg
  4489 ;;		_recv_msg
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text24
  4494  00185E                     __ptext24:
  4495                           	opt stack 0
  4496  00185E                     _memcpy:
  4497                           	opt stack 16
  4498                           
  4499                           ; BSR set to: 1
  4500                           ;incstack = 0
  4501  00185E  0101               	movlb	1	; () banked
  4502  001860  0101               	movlb	1	; () banked
  4503  001862  C186  F18C         	movff	memcpy@s1+1,memcpy@s+1
  4504  001866  0101               	movlb	1	; () banked
  4505  001868  0101               	movlb	1	; () banked
  4506  00186A  C185  F18B         	movff	memcpy@s1,memcpy@s
  4507  00186E  0101               	movlb	1	; () banked
  4508  001870  0101               	movlb	1	; () banked
  4509  001872  C184  F18A         	movff	memcpy@d1+1,memcpy@d+1
  4510  001876  0101               	movlb	1	; () banked
  4511  001878  0101               	movlb	1	; () banked
  4512  00187A  C183  F189         	movff	memcpy@d1,memcpy@d
  4513  00187E  D012               	goto	l3773
  4514  001880                     l3767:
  4515                           
  4516                           ; BSR set to: 1
  4517  001880  C18B  FFD9         	movff	memcpy@s,fsr2l
  4518  001884  C18C  FFDA         	movff	memcpy@s+1,fsr2h
  4519  001888  C189  FFE1         	movff	memcpy@d,fsr1l
  4520  00188C  C18A  FFE2         	movff	memcpy@d+1,fsr1h
  4521  001890  CFDF FFE7          	movff	indf2,indf1
  4522                           
  4523                           ; BSR set to: 1
  4524  001894  0101               	movlb	1	; () banked
  4525  001896  0101               	movlb	1	; () banked
  4526  001898  4B8B               	infsnz	memcpy@s& (0+255),f,b
  4527  00189A  2B8C               	incf	(memcpy@s+1)& (0+255),f,b
  4528                           
  4529                           ; BSR set to: 1
  4530  00189C  0101               	movlb	1	; () banked
  4531  00189E  0101               	movlb	1	; () banked
  4532  0018A0  4B89               	infsnz	memcpy@d& (0+255),f,b
  4533  0018A2  2B8A               	incf	(memcpy@d+1)& (0+255),f,b
  4534  0018A4                     l3773:
  4535                           
  4536                           ; BSR set to: 1
  4537  0018A4  0101               	movlb	1	; () banked
  4538  0018A6  0101               	movlb	1	; () banked
  4539  0018A8  0787               	decf	memcpy@n& (0+255),f,b
  4540  0018AA  A0D8               	btfss	status,0,c
  4541  0018AC  0788               	decf	(memcpy@n+1)& (0+255),f,b
  4542  0018AE  0101               	movlb	1	; () banked
  4543  0018B0  2987               	incf	memcpy@n& (0+255),w,b
  4544  0018B2  B4D8               	btfsc	status,2,c
  4545  0018B4  2988               	incf	(memcpy@n+1)& (0+255),w,b
  4546  0018B6  B4D8               	btfsc	status,2,c
  4547                           
  4548                           ; BSR set to: 1
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;	Return value of _memcpy is never used
  4552  0018B8  0012               	return	
  4553  0018BA  D7E2               	goto	l3767
  4554  0018BC                     __end_of_memcpy:
  4555                           	opt stack 0
  4556                           tblptru	equ	0xFF8
  4557                           tblptrh	equ	0xFF7
  4558                           tblptrl	equ	0xFF6
  4559                           tablat	equ	0xFF5
  4560                           prodh	equ	0xFF4
  4561                           prodl	equ	0xFF3
  4562                           intcon	equ	0xFF2
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           indf1	equ	0xFE7
  4566                           postdec1	equ	0xFE5
  4567                           fsr1h	equ	0xFE2
  4568                           fsr1l	equ	0xFE1
  4569                           indf2	equ	0xFDF
  4570                           postinc2	equ	0xFDE
  4571                           postdec2	equ	0xFDD
  4572                           fsr2h	equ	0xFDA
  4573                           fsr2l	equ	0xFD9
  4574                           status	equ	0xFD8
  4575                           
  4576 ;; *************** function _OpenUSART *****************
  4577 ;; Defined at:
  4578 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  config          1    wreg     unsigned char 
  4581 ;;  spbrg           2   23[BANK1 ] unsigned int 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  config          1   28[BANK1 ] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;		None               void
  4586 ;; Registers used:
  4587 ;;		wreg, status,2
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4593 ;;      Params:         0       0       2       0       0
  4594 ;;      Locals:         0       0       1       0       0
  4595 ;;      Temps:          0       0       3       0       0
  4596 ;;      Totals:         0       0       6       0       0
  4597 ;;Total ram usage:        6 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:   11
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text25
  4608  00131C                     __ptext25:
  4609                           	opt stack 0
  4610  00131C                     _OpenUSART:
  4611                           	opt stack 19
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;incstack = 0
  4615                           ;OpenUSART@config stored from wreg
  4616  00131C  CFE8 F188          	movff	wreg,OpenUSART@config
  4617  001320  0E00               	movlw	0
  4618  001322  6EAC               	movwf	4012,c	;volatile
  4619  001324  0E00               	movlw	0
  4620  001326  6EAB               	movwf	4011,c	;volatile
  4621  001328  0101               	movlb	1	; () banked
  4622  00132A  0101               	movlb	1	; () banked
  4623  00132C  B188               	btfsc	OpenUSART@config& (0+255),0,b
  4624                           
  4625                           ; BSR set to: 1
  4626  00132E  88AC               	bsf	4012,4,c	;volatile
  4627                           
  4628                           ; BSR set to: 1
  4629                           
  4630                           ; BSR set to: 1
  4631  001330  0101               	movlb	1	; () banked
  4632  001332  0101               	movlb	1	; () banked
  4633  001334  A388               	btfss	OpenUSART@config& (0+255),1,b
  4634  001336  D002               	goto	l3629
  4635                           
  4636                           ; BSR set to: 1
  4637  001338  8CAC               	bsf	4012,6,c	;volatile
  4638  00133A  8CAB               	bsf	4011,6,c	;volatile
  4639  00133C                     l3629:
  4640                           
  4641                           ; BSR set to: 1
  4642  00133C  0101               	movlb	1	; () banked
  4643  00133E  0101               	movlb	1	; () banked
  4644  001340  B588               	btfsc	OpenUSART@config& (0+255),2,b
  4645                           
  4646                           ; BSR set to: 1
  4647  001342  8EAC               	bsf	4012,7,c	;volatile
  4648                           
  4649                           ; BSR set to: 1
  4650                           
  4651                           ; BSR set to: 1
  4652  001344  0101               	movlb	1	; () banked
  4653  001346  0101               	movlb	1	; () banked
  4654  001348  A788               	btfss	OpenUSART@config& (0+255),3,b
  4655  00134A  D002               	goto	l556
  4656                           
  4657                           ; BSR set to: 1
  4658  00134C  88AB               	bsf	4011,4,c	;volatile
  4659  00134E  D001               	goto	l3637
  4660  001350                     l556:
  4661                           
  4662                           ; BSR set to: 1
  4663  001350  8AAB               	bsf	4011,5,c	;volatile
  4664  001352                     l3637:
  4665                           
  4666                           ; BSR set to: 1
  4667  001352  0101               	movlb	1	; () banked
  4668  001354  0101               	movlb	1	; () banked
  4669  001356  B988               	btfsc	OpenUSART@config& (0+255),4,b
  4670                           
  4671                           ; BSR set to: 1
  4672  001358  84AC               	bsf	4012,2,c	;volatile
  4673                           
  4674                           ; BSR set to: 1
  4675  00135A  989E               	bcf	3998,4,c	;volatile
  4676                           
  4677                           ; BSR set to: 1
  4678  00135C  0101               	movlb	1	; () banked
  4679  00135E  0101               	movlb	1	; () banked
  4680  001360  BB88               	btfsc	OpenUSART@config& (0+255),5,b
  4681                           
  4682                           ; BSR set to: 1
  4683  001362  86AB               	bsf	4011,3,c	;volatile
  4684                           
  4685                           ; BSR set to: 1
  4686                           
  4687                           ; BSR set to: 1
  4688  001364  0101               	movlb	1	; () banked
  4689  001366  0101               	movlb	1	; () banked
  4690  001368  AD88               	btfss	OpenUSART@config& (0+255),6,b
  4691  00136A  D002               	goto	l560
  4692                           
  4693                           ; BSR set to: 1
  4694  00136C  8A9D               	bsf	3997,5,c	;volatile
  4695  00136E  D001               	goto	l561
  4696  001370                     l560:
  4697                           
  4698                           ; BSR set to: 1
  4699  001370  9A9D               	bcf	3997,5,c	;volatile
  4700  001372                     l561:
  4701                           
  4702                           ; BSR set to: 1
  4703  001372  9A9E               	bcf	3998,5,c	;volatile
  4704                           
  4705                           ; BSR set to: 1
  4706  001374  0101               	movlb	1	; () banked
  4707  001376  0101               	movlb	1	; () banked
  4708  001378  AF88               	btfss	OpenUSART@config& (0+255),7,b
  4709  00137A  D002               	goto	l562
  4710                           
  4711                           ; BSR set to: 1
  4712  00137C  889D               	bsf	3997,4,c	;volatile
  4713  00137E  D001               	goto	l563
  4714  001380                     l562:
  4715                           
  4716                           ; BSR set to: 1
  4717  001380  989D               	bcf	3997,4,c	;volatile
  4718  001382                     l563:
  4719                           
  4720                           ; BSR set to: 1
  4721  001382  C183  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4722                           
  4723                           ; BSR set to: 1
  4724  001386  0101               	movlb	1	; () banked
  4725  001388  C184  F185         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4726  00138C  C185  F186         	movff	??_OpenUSART,??_OpenUSART+1
  4727  001390  0101               	movlb	1	; () banked
  4728  001392  6B87               	clrf	(??_OpenUSART+2)& (0+255),b
  4729  001394  0101               	movlb	1	; () banked
  4730  001396  5186               	movf	(??_OpenUSART+1)& (0+255),w,b
  4731  001398  6EB0               	movwf	4016,c	;volatile
  4732                           
  4733                           ; BSR set to: 1
  4734  00139A  8AAC               	bsf	4012,5,c	;volatile
  4735                           
  4736                           ; BSR set to: 1
  4737  00139C  8EAB               	bsf	4011,7,c	;volatile
  4738                           
  4739                           ; BSR set to: 1
  4740  00139E  9C94               	bcf	3988,6,c	;volatile
  4741                           
  4742                           ; BSR set to: 1
  4743  0013A0  8E94               	bsf	3988,7,c	;volatile
  4744                           
  4745                           ; BSR set to: 1
  4746  0013A2  A8AC               	btfss	4012,4,c	;volatile
  4747  0013A4  0012               	return	
  4748                           
  4749                           ; BSR set to: 1
  4750  0013A6  BEAC               	btfsc	4012,7,c	;volatile
  4751  0013A8  0012               	return	
  4752                           
  4753                           ; BSR set to: 1
  4754  0013AA  8C94               	bsf	3988,6,c	;volatile
  4755  0013AC  0012               	return	
  4756  0013AE                     __end_of_OpenUSART:
  4757                           	opt stack 0
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           prodh	equ	0xFF4
  4763                           prodl	equ	0xFF3
  4764                           intcon	equ	0xFF2
  4765                           postinc0	equ	0xFEE
  4766                           wreg	equ	0xFE8
  4767                           indf1	equ	0xFE7
  4768                           postdec1	equ	0xFE5
  4769                           fsr1h	equ	0xFE2
  4770                           fsr1l	equ	0xFE1
  4771                           indf2	equ	0xFDF
  4772                           postinc2	equ	0xFDE
  4773                           postdec2	equ	0xFDD
  4774                           fsr2h	equ	0xFDA
  4775                           fsr2l	equ	0xFD9
  4776                           status	equ	0xFD8
  4777                           
  4778 ;; *************** function _OpenTimer1 *****************
  4779 ;; Defined at:
  4780 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  config          1    wreg     unsigned char 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  config          1   23[BANK1 ] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;		None               void
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4794 ;;      Params:         0       0       0       0       0
  4795 ;;      Locals:         0       0       1       0       0
  4796 ;;      Temps:          0       0       0       0       0
  4797 ;;      Totals:         0       0       1       0       0
  4798 ;;Total ram usage:        1 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:   11
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text26
  4809  001B7C                     __ptext26:
  4810                           	opt stack 0
  4811  001B7C                     _OpenTimer1:
  4812                           	opt stack 19
  4813                           
  4814                           ; BSR set to: 1
  4815                           ;incstack = 0
  4816                           ;OpenTimer1@config stored from wreg
  4817  001B7C  CFE8 F183          	movff	wreg,OpenTimer1@config
  4818  001B80  0101               	movlb	1	; () banked
  4819  001B82  0101               	movlb	1	; () banked
  4820  001B84  5183               	movf	OpenTimer1@config& (0+255),w,b
  4821  001B86  0B7E               	andlw	126
  4822  001B88  6ECD               	movwf	4045,c	;volatile
  4823                           
  4824                           ; BSR set to: 1
  4825  001B8A  0101               	movlb	1	; () banked
  4826  001B8C  0101               	movlb	1	; () banked
  4827  001B8E  AD83               	btfss	OpenTimer1@config& (0+255),6,b
  4828  001B90  D002               	goto	l512
  4829                           
  4830                           ; BSR set to: 1
  4831  001B92  8ECD               	bsf	4045,7,c	;volatile
  4832  001B94  D001               	goto	l3589
  4833  001B96                     l512:
  4834                           
  4835                           ; BSR set to: 1
  4836  001B96  9ECD               	bcf	4045,7,c	;volatile
  4837  001B98                     l3589:
  4838                           
  4839                           ; BSR set to: 1
  4840  001B98  0E00               	movlw	0
  4841  001B9A  6ECF               	movwf	4047,c	;volatile
  4842  001B9C  0E00               	movlw	0
  4843  001B9E  6ECE               	movwf	4046,c	;volatile
  4844                           
  4845                           ; BSR set to: 1
  4846  001BA0  909E               	bcf	3998,0,c	;volatile
  4847                           
  4848                           ; BSR set to: 1
  4849  001BA2  0101               	movlb	1	; () banked
  4850  001BA4  0101               	movlb	1	; () banked
  4851  001BA6  AF83               	btfss	OpenTimer1@config& (0+255),7,b
  4852  001BA8  D002               	goto	l514
  4853                           
  4854                           ; BSR set to: 1
  4855  001BAA  809D               	bsf	3997,0,c	;volatile
  4856  001BAC  D001               	goto	l515
  4857  001BAE                     l514:
  4858                           
  4859                           ; BSR set to: 1
  4860  001BAE  909D               	bcf	3997,0,c	;volatile
  4861  001BB0                     l515:
  4862                           
  4863                           ; BSR set to: 1
  4864  001BB0  80CD               	bsf	4045,0,c	;volatile
  4865                           
  4866                           ; BSR set to: 1
  4867  001BB2  0012               	return	
  4868  001BB4                     __end_of_OpenTimer1:
  4869                           	opt stack 0
  4870                           tblptru	equ	0xFF8
  4871                           tblptrh	equ	0xFF7
  4872                           tblptrl	equ	0xFF6
  4873                           tablat	equ	0xFF5
  4874                           prodh	equ	0xFF4
  4875                           prodl	equ	0xFF3
  4876                           intcon	equ	0xFF2
  4877                           postinc0	equ	0xFEE
  4878                           wreg	equ	0xFE8
  4879                           indf1	equ	0xFE7
  4880                           postdec1	equ	0xFE5
  4881                           fsr1h	equ	0xFE2
  4882                           fsr1l	equ	0xFE1
  4883                           indf2	equ	0xFDF
  4884                           postinc2	equ	0xFDE
  4885                           postdec2	equ	0xFDD
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8
  4889                           
  4890 ;; *************** function _OpenTimer0 *****************
  4891 ;; Defined at:
  4892 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  config          1    wreg     unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  config          1   23[BANK1 ] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;		None               void
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4906 ;;      Params:         0       0       0       0       0
  4907 ;;      Locals:         0       0       1       0       0
  4908 ;;      Temps:          0       0       0       0       0
  4909 ;;      Totals:         0       0       1       0       0
  4910 ;;Total ram usage:        1 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:   11
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_main
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text27
  4921  001CE6                     __ptext27:
  4922                           	opt stack 0
  4923  001CE6                     _OpenTimer0:
  4924                           	opt stack 19
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;incstack = 0
  4928                           ;OpenTimer0@config stored from wreg
  4929  001CE6  CFE8 F183          	movff	wreg,OpenTimer0@config
  4930  001CEA  0101               	movlb	1	; () banked
  4931  001CEC  0101               	movlb	1	; () banked
  4932  001CEE  5183               	movf	OpenTimer0@config& (0+255),w,b
  4933  001CF0  0B7F               	andlw	127
  4934  001CF2  6ED5               	movwf	4053,c	;volatile
  4935                           
  4936                           ; BSR set to: 1
  4937  001CF4  0E00               	movlw	0
  4938  001CF6  6ED7               	movwf	4055,c	;volatile
  4939                           
  4940                           ; BSR set to: 1
  4941  001CF8  0E00               	movlw	0
  4942  001CFA  6ED6               	movwf	4054,c	;volatile
  4943                           
  4944                           ; BSR set to: 1
  4945  001CFC  94F2               	bcf	intcon,2,c	;volatile
  4946                           
  4947                           ; BSR set to: 1
  4948  001CFE  0101               	movlb	1	; () banked
  4949  001D00  0101               	movlb	1	; () banked
  4950  001D02  AF83               	btfss	OpenTimer0@config& (0+255),7,b
  4951  001D04  D002               	goto	l488
  4952                           
  4953                           ; BSR set to: 1
  4954  001D06  8AF2               	bsf	intcon,5,c	;volatile
  4955  001D08  D001               	goto	l489
  4956  001D0A                     l488:
  4957                           
  4958                           ; BSR set to: 1
  4959  001D0A  9AF2               	bcf	intcon,5,c	;volatile
  4960  001D0C                     l489:
  4961                           
  4962                           ; BSR set to: 1
  4963  001D0C  8ED5               	bsf	4053,7,c	;volatile
  4964                           
  4965                           ; BSR set to: 1
  4966  001D0E  0012               	return	
  4967  001D10                     __end_of_OpenTimer0:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           intcon	equ	0xFF2
  4976                           postinc0	equ	0xFEE
  4977                           wreg	equ	0xFE8
  4978                           indf1	equ	0xFE7
  4979                           postdec1	equ	0xFE5
  4980                           fsr1h	equ	0xFE2
  4981                           fsr1l	equ	0xFE1
  4982                           indf2	equ	0xFDF
  4983                           postinc2	equ	0xFDE
  4984                           postdec2	equ	0xFDD
  4985                           fsr2h	equ	0xFDA
  4986                           fsr2l	equ	0xFD9
  4987                           status	equ	0xFD8
  4988                           
  4989 ;; *************** function _InterruptHandlerLow *****************
  4990 ;; Defined at:
  4991 ;;		line 122 in file "../src/interrupts.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;		None               void
  4998 ;; Registers used:
  4999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5005 ;;      Params:         0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0
  5007 ;;      Temps:         17       0       0       0       0
  5008 ;;      Totals:        17       0       0       0       0
  5009 ;;Total ram usage:       17 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:   10
  5012 ;; This function calls:
  5013 ;;		_timer1_int_handler
  5014 ;;		_uart_recv_int_handler
  5015 ;; This function is called by:
  5016 ;;		Interrupt level 1
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	intcodelo
  5021  000018                     __pintcodelo:
  5022                           	opt stack 0
  5023  000018                     _InterruptHandlerLow:
  5024                           	opt stack 16
  5025                           
  5026                           ; BSR set to: 1
  5027                           ;incstack = 0
  5028  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  5029  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  5030  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  5031  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  5032  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  5033  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  5034  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  5035  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  5036  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  5037  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  5038  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  5039  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  5040  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  5041  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  5042  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  5043  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5044  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5045                           
  5046                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5047  00005C  A09E               	btfss	3998,0,c	;volatile
  5048  00005E  D003               	goto	i1l4113
  5049                           
  5050                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5051  000060  909E               	bcf	3998,0,c	;volatile
  5052                           
  5053                           ;interrupts.c: 126: timer1_int_handler();
  5054  000062  EC44  F00E         	call	_timer1_int_handler	;wreg free
  5055  000066                     i1l4113:
  5056                           
  5057                           ;interrupts.c: 127: }
  5058                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5059  000066  AA9E               	btfss	3998,5,c	;volatile
  5060  000068  D003               	goto	i1l47
  5061                           
  5062                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5063  00006A  9A9E               	bcf	3998,5,c	;volatile
  5064                           
  5065                           ;interrupts.c: 132: uart_recv_int_handler();
  5066  00006C  EC40  F009         	call	_uart_recv_int_handler	;wreg free
  5067  000070                     i1l47:
  5068  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5069  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5070  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5071  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5072  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5073  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5074  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5075  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5076  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5077  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5078  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5079  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5080  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5081  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5082  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5083  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5084  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5085  0000B4  0010               	retfie	
  5086  0000B6                     __end_of_InterruptHandlerLow:
  5087                           	opt stack 0
  5088                           pclatu	equ	0xFFB
  5089                           pclath	equ	0xFFA
  5090                           tblptru	equ	0xFF8
  5091                           tblptrh	equ	0xFF7
  5092                           tblptrl	equ	0xFF6
  5093                           tablat	equ	0xFF5
  5094                           prodh	equ	0xFF4
  5095                           prodl	equ	0xFF3
  5096                           intcon	equ	0xFF2
  5097                           postinc0	equ	0xFEE
  5098                           fsr0h	equ	0xFEA
  5099                           fsr0l	equ	0xFE9
  5100                           wreg	equ	0xFE8
  5101                           indf1	equ	0xFE7
  5102                           postdec1	equ	0xFE5
  5103                           fsr1h	equ	0xFE2
  5104                           fsr1l	equ	0xFE1
  5105                           bsr	equ	0xFE0
  5106                           indf2	equ	0xFDF
  5107                           postinc2	equ	0xFDE
  5108                           postdec2	equ	0xFDD
  5109                           fsr2h	equ	0xFDA
  5110                           fsr2l	equ	0xFD9
  5111                           status	equ	0xFD8
  5112                           
  5113 ;; *************** function _uart_recv_int_handler *****************
  5114 ;; Defined at:
  5115 ;;		line 11 in file "../src/my_uart.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;		None               void
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5129 ;;      Params:         0       0       0       0       0
  5130 ;;      Locals:         0       0       0       0       0
  5131 ;;      Temps:          1       0       0       0       0
  5132 ;;      Totals:         1       0       0       0       0
  5133 ;;Total ram usage:        1 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    9
  5136 ;; This function calls:
  5137 ;;		_ReadUSART
  5138 ;;		_ToMainLow_sendmsg
  5139 ;; This function is called by:
  5140 ;;		_InterruptHandlerLow
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text29
  5145  001280                     __ptext29:
  5146                           	opt stack 0
  5147  001280                     _uart_recv_int_handler:
  5148                           	opt stack 16
  5149                           
  5150                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5151                           
  5152                           ;incstack = 0
  5153  001280  AA9E               	btfss	3998,5,c	;volatile
  5154  001282  D03C               	goto	i1l4101
  5155                           
  5156                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5157  001284  EE20 F004          	lfsr	2,4
  5158  001288  5050               	movf	_uc_ptr,w,c
  5159  00128A  26D9               	addwf	fsr2l,f,c
  5160  00128C  5051               	movf	_uc_ptr+1,w,c
  5161  00128E  22DA               	addwfc	fsr2h,f,c
  5162  001290  50DF               	movf	indf2,w,c
  5163  001292  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5164  001294  501B               	movf	??_uart_recv_int_handler,w,c
  5165  001296  0D01               	mullw	1
  5166  001298  50F3               	movf	prodl,w,c
  5167  00129A  2450               	addwf	_uc_ptr,w,c
  5168  00129C  6ED9               	movwf	fsr2l,c
  5169  00129E  50F4               	movf	prodh,w,c
  5170  0012A0  2051               	addwfc	_uc_ptr+1,w,c
  5171  0012A2  6EDA               	movwf	fsr2h,c
  5172  0012A4  ECE3  F00E         	call	_ReadUSART	;wreg free
  5173  0012A8  6EDF               	movwf	indf2,c
  5174                           
  5175                           ;my_uart.c: 25: uc_ptr->buflen++;
  5176  0012AA  EE20 F004          	lfsr	2,4
  5177  0012AE  5050               	movf	_uc_ptr,w,c
  5178  0012B0  26D9               	addwf	fsr2l,f,c
  5179  0012B2  5051               	movf	_uc_ptr+1,w,c
  5180  0012B4  22DA               	addwfc	fsr2h,f,c
  5181  0012B6  2ADF               	incf	indf2,f,c
  5182                           
  5183                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5184  0012B8  EE20 F004          	lfsr	2,4
  5185  0012BC  5050               	movf	_uc_ptr,w,c
  5186  0012BE  26D9               	addwf	fsr2l,f,c
  5187  0012C0  5051               	movf	_uc_ptr+1,w,c
  5188  0012C2  22DA               	addwfc	fsr2h,f,c
  5189  0012C4  0E04               	movlw	4
  5190  0012C6  62DF               	cpfseq	indf2,c
  5191  0012C8  D019               	goto	i1l4101
  5192                           
  5193                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5194  0012CA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5195  0012CC  0E1F               	movlw	31
  5196  0012CE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5197  0012D0  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5198  0012D2  C051  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5199  0012D6  C050  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5200  0012DA  EE20 F004          	lfsr	2,4
  5201  0012DE  5050               	movf	_uc_ptr,w,c
  5202  0012E0  26D9               	addwf	fsr2l,f,c
  5203  0012E2  5051               	movf	_uc_ptr+1,w,c
  5204  0012E4  22DA               	addwfc	fsr2h,f,c
  5205  0012E6  50DF               	movf	indf2,w,c
  5206  0012E8  EC9C  F00E         	call	_ToMainLow_sendmsg
  5207                           
  5208                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5209  0012EC  EE20 F004          	lfsr	2,4
  5210  0012F0  5050               	movf	_uc_ptr,w,c
  5211  0012F2  26D9               	addwf	fsr2l,f,c
  5212  0012F4  5051               	movf	_uc_ptr+1,w,c
  5213  0012F6  22DA               	addwfc	fsr2h,f,c
  5214  0012F8  0E00               	movlw	0
  5215  0012FA  6EDF               	movwf	indf2,c
  5216  0012FC                     i1l4101:
  5217                           
  5218                           ;my_uart.c: 30: }
  5219                           ;my_uart.c: 31: }
  5220                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5221  0012FC  A64E               	btfss	_USART_Status,3,c
  5222  0012FE  0012               	return	
  5223                           
  5224                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5225  001300  98AB               	bcf	4011,4,c	;volatile
  5226                           
  5227                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5228  001302  88AB               	bsf	4011,4,c	;volatile
  5229                           
  5230                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5231  001304  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5232  001306  0E1E               	movlw	30
  5233  001308  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5234  00130A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5235  00130C  0E00               	movlw	0
  5236  00130E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5237  001310  0E00               	movlw	0
  5238  001312  6E18               	movwf	ToMainLow_sendmsg@data,c
  5239  001314  0E00               	movlw	0
  5240  001316  EC9C  F00E         	call	_ToMainLow_sendmsg
  5241  00131A  0012               	return	
  5242  00131C                     __end_of_uart_recv_int_handler:
  5243                           	opt stack 0
  5244                           pclatu	equ	0xFFB
  5245                           pclath	equ	0xFFA
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           postinc0	equ	0xFEE
  5254                           fsr0h	equ	0xFEA
  5255                           fsr0l	equ	0xFE9
  5256                           wreg	equ	0xFE8
  5257                           indf1	equ	0xFE7
  5258                           postdec1	equ	0xFE5
  5259                           fsr1h	equ	0xFE2
  5260                           fsr1l	equ	0xFE1
  5261                           bsr	equ	0xFE0
  5262                           indf2	equ	0xFDF
  5263                           postinc2	equ	0xFDE
  5264                           postdec2	equ	0xFDD
  5265                           fsr2h	equ	0xFDA
  5266                           fsr2l	equ	0xFD9
  5267                           status	equ	0xFD8
  5268                           
  5269 ;; *************** function _ReadUSART *****************
  5270 ;; Defined at:
  5271 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  data            1    0[COMRAM] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      unsigned char 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5285 ;;      Params:         0       0       0       0       0
  5286 ;;      Locals:         1       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0
  5288 ;;      Totals:         1       0       0       0       0
  5289 ;;Total ram usage:        1 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    6
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_uart_recv_int_handler
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text30
  5300  001DC6                     __ptext30:
  5301                           	opt stack 0
  5302  001DC6                     _ReadUSART:
  5303                           	opt stack 18
  5304                           
  5305                           ;incstack = 0
  5306  001DC6  0EF2               	movlw	242
  5307  001DC8  164E               	andwf	_USART_Status,f,c
  5308  001DCA  ACAB               	btfss	4011,6,c	;volatile
  5309  001DCC  D003               	goto	i1l574
  5310  001DCE  904E               	bcf	_USART_Status,0,c
  5311  001DD0  B0AB               	btfsc	4011,0,c	;volatile
  5312  001DD2  804E               	bsf	_USART_Status,0,c
  5313  001DD4                     i1l574:
  5314  001DD4  B4AB               	btfsc	4011,2,c	;volatile
  5315  001DD6  844E               	bsf	_USART_Status,2,c
  5316  001DD8  B2AB               	btfsc	4011,1,c	;volatile
  5317  001DDA  864E               	bsf	_USART_Status,3,c
  5318  001DDC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5319  001DE0  5001               	movf	ReadUSART@data,w,c
  5320  001DE2  0012               	return	
  5321  001DE4                     __end_of_ReadUSART:
  5322                           	opt stack 0
  5323                           pclatu	equ	0xFFB
  5324                           pclath	equ	0xFFA
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           prodh	equ	0xFF4
  5330                           prodl	equ	0xFF3
  5331                           intcon	equ	0xFF2
  5332                           postinc0	equ	0xFEE
  5333                           fsr0h	equ	0xFEA
  5334                           fsr0l	equ	0xFE9
  5335                           wreg	equ	0xFE8
  5336                           indf1	equ	0xFE7
  5337                           postdec1	equ	0xFE5
  5338                           fsr1h	equ	0xFE2
  5339                           fsr1l	equ	0xFE1
  5340                           bsr	equ	0xFE0
  5341                           indf2	equ	0xFDF
  5342                           postinc2	equ	0xFDE
  5343                           postdec2	equ	0xFDD
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8
  5347                           
  5348 ;; *************** function _timer1_int_handler *****************
  5349 ;; Defined at:
  5350 ;;		line 39 in file "../src/user_interrupts.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  result          2   27[COMRAM] unsigned int 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;		None               void
  5357 ;; Registers used:
  5358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5364 ;;      Params:         0       0       0       0       0
  5365 ;;      Locals:         2       0       0       0       0
  5366 ;;      Temps:          1       0       0       0       0
  5367 ;;      Totals:         3       0       0       0       0
  5368 ;;Total ram usage:        3 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    9
  5371 ;; This function calls:
  5372 ;;		_ReadTimer1
  5373 ;;		_ToMainLow_sendmsg
  5374 ;;		_WriteTimer1
  5375 ;; This function is called by:
  5376 ;;		_InterruptHandlerLow
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text31
  5381  001C88                     __ptext31:
  5382                           	opt stack 0
  5383  001C88                     _timer1_int_handler:
  5384                           	opt stack 16
  5385                           
  5386                           ;user_interrupts.c: 40: unsigned int result;
  5387                           ;user_interrupts.c: 47: result = ReadTimer1();
  5388                           
  5389                           ;incstack = 0
  5390  001C88  EC2C  F00F         	call	_ReadTimer1	;wreg free
  5391  001C8C  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5392  001C90  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5393                           
  5394                           ;user_interrupts.c: 48: ToMainLow_sendmsg(0, 11, (void *) 0);
  5395  001C94  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5396  001C96  0E0B               	movlw	11
  5397  001C98  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5398  001C9A  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5399  001C9C  0E00               	movlw	0
  5400  001C9E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5401  001CA0  0E00               	movlw	0
  5402  001CA2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5403  001CA4  0E00               	movlw	0
  5404  001CA6  EC9C  F00E         	call	_ToMainLow_sendmsg
  5405                           
  5406                           ;user_interrupts.c: 51: WriteTimer1(0);
  5407  001CAA  0E00               	movlw	0
  5408  001CAC  6E02               	movwf	WriteTimer1@timer1+1,c
  5409  001CAE  0E00               	movlw	0
  5410  001CB0  6E01               	movwf	WriteTimer1@timer1,c
  5411  001CB2  EC23  F00F         	call	_WriteTimer1	;wreg free
  5412  001CB6  0012               	return	
  5413  001CB8                     __end_of_timer1_int_handler:
  5414                           	opt stack 0
  5415                           pclatu	equ	0xFFB
  5416                           pclath	equ	0xFFA
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           prodh	equ	0xFF4
  5422                           prodl	equ	0xFF3
  5423                           intcon	equ	0xFF2
  5424                           postinc0	equ	0xFEE
  5425                           fsr0h	equ	0xFEA
  5426                           fsr0l	equ	0xFE9
  5427                           wreg	equ	0xFE8
  5428                           indf1	equ	0xFE7
  5429                           postdec1	equ	0xFE5
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           bsr	equ	0xFE0
  5433                           indf2	equ	0xFDF
  5434                           postinc2	equ	0xFDE
  5435                           postdec2	equ	0xFDD
  5436                           fsr2h	equ	0xFDA
  5437                           fsr2l	equ	0xFD9
  5438                           status	equ	0xFD8
  5439                           
  5440 ;; *************** function _WriteTimer1 *****************
  5441 ;; Defined at:
  5442 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  timer1          2    0[COMRAM] unsigned int 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  timer           2    2[COMRAM] struct Timers
  5447 ;; Return value:  Size  Location     Type
  5448 ;;		None               void
  5449 ;; Registers used:
  5450 ;;		None
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5456 ;;      Params:         2       0       0       0       0
  5457 ;;      Locals:         2       0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0
  5459 ;;      Totals:         4       0       0       0       0
  5460 ;;Total ram usage:        4 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    6
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_timer1_int_handler
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text32
  5471  001E46                     __ptext32:
  5472                           	opt stack 0
  5473  001E46                     _WriteTimer1:
  5474                           	opt stack 18
  5475                           
  5476                           ;incstack = 0
  5477  001E46  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5478  001E4A  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5479  001E4E  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5480  001E52  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5481  001E56  0012               	return	
  5482  001E58                     __end_of_WriteTimer1:
  5483                           	opt stack 0
  5484                           pclatu	equ	0xFFB
  5485                           pclath	equ	0xFFA
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           prodh	equ	0xFF4
  5491                           prodl	equ	0xFF3
  5492                           intcon	equ	0xFF2
  5493                           postinc0	equ	0xFEE
  5494                           fsr0h	equ	0xFEA
  5495                           fsr0l	equ	0xFE9
  5496                           wreg	equ	0xFE8
  5497                           indf1	equ	0xFE7
  5498                           postdec1	equ	0xFE5
  5499                           fsr1h	equ	0xFE2
  5500                           fsr1l	equ	0xFE1
  5501                           bsr	equ	0xFE0
  5502                           indf2	equ	0xFDF
  5503                           postinc2	equ	0xFDE
  5504                           postdec2	equ	0xFDD
  5505                           fsr2h	equ	0xFDA
  5506                           fsr2l	equ	0xFD9
  5507                           status	equ	0xFD8
  5508                           
  5509 ;; *************** function _ToMainLow_sendmsg *****************
  5510 ;; Defined at:
  5511 ;;		line 105 in file "../src/messages.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  length          1    wreg     unsigned char 
  5514 ;;  msgtype         1   22[COMRAM] unsigned char 
  5515 ;;  data            2   23[COMRAM] PTR void 
  5516 ;;		 -> NULL(0), main@uc(5), 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;  length          1   25[COMRAM] unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      char 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5528 ;;      Params:         3       0       0       0       0
  5529 ;;      Locals:         1       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0
  5531 ;;      Totals:         4       0       0       0       0
  5532 ;;Total ram usage:        4 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    8
  5535 ;; This function calls:
  5536 ;;		i1_send_msg
  5537 ;; This function is called by:
  5538 ;;		_uart_recv_int_handler
  5539 ;;		_timer1_int_handler
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text33
  5544  001D38                     __ptext33:
  5545                           	opt stack 0
  5546  001D38                     _ToMainLow_sendmsg:
  5547                           	opt stack 16
  5548                           
  5549                           ;incstack = 0
  5550                           ;ToMainLow_sendmsg@length stored from wreg
  5551  001D38  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5552                           
  5553                           ;messages.c: 111: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5554                           ;	Return value of _ToMainLow_sendmsg is never used
  5555  001D3C  0101               	movlb	1	; () banked
  5556  001D3E  0E01               	movlw	high _ToMainLow_MQ
  5557  001D40  6E0C               	movwf	i1send_msg@qptr+1,c
  5558  001D42  0101               	movlb	1	; () banked
  5559  001D44  0E36               	movlw	low _ToMainLow_MQ
  5560  001D46  6E0B               	movwf	i1send_msg@qptr,c
  5561  001D48  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5562  001D4C  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5563  001D50  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5564  001D54  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5565  001D58  EC42  F008         	call	i1_send_msg	;wreg free
  5566  001D5C  0012               	return	
  5567  001D5E                     __end_of_ToMainLow_sendmsg:
  5568                           	opt stack 0
  5569                           pclatu	equ	0xFFB
  5570                           pclath	equ	0xFFA
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           postinc0	equ	0xFEE
  5579                           fsr0h	equ	0xFEA
  5580                           fsr0l	equ	0xFE9
  5581                           wreg	equ	0xFE8
  5582                           indf1	equ	0xFE7
  5583                           postdec1	equ	0xFE5
  5584                           fsr1h	equ	0xFE2
  5585                           fsr1l	equ	0xFE1
  5586                           bsr	equ	0xFE0
  5587                           indf2	equ	0xFDF
  5588                           postinc2	equ	0xFDE
  5589                           postdec2	equ	0xFDD
  5590                           fsr2h	equ	0xFDA
  5591                           fsr2l	equ	0xFD9
  5592                           status	equ	0xFD8
  5593                           
  5594 ;; *************** function i1_send_msg *****************
  5595 ;; Defined at:
  5596 ;;		line 26 in file "../src/messages.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5599 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5600 ;;  length          1   12[COMRAM] unsigned char 
  5601 ;;  msgtype         1   13[COMRAM] unsigned char 
  5602 ;;  data            2   14[COMRAM] PTR void 
  5603 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  5604 ;;		 -> main@uc(5), 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5607 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5608 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5609 ;;  send_msg        2   17[COMRAM] unsigned int 
  5610 ;;  send_msg        1   19[COMRAM] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      char 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5620 ;;      Params:         6       0       0       0       0
  5621 ;;      Locals:         5       0       0       0       0
  5622 ;;      Temps:          1       0       0       0       0
  5623 ;;      Totals:        12       0       0       0       0
  5624 ;;Total ram usage:       12 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    7
  5627 ;; This function calls:
  5628 ;;		i1_memcpy
  5629 ;; This function is called by:
  5630 ;;		_ToMainLow_sendmsg
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text34
  5635  001084                     __ptext34:
  5636                           	opt stack 0
  5637  001084                     i1_send_msg:
  5638                           	opt stack 16
  5639                           
  5640                           ;messages.c: 27: unsigned char slot;
  5641                           ;messages.c: 29: msg *qmsg;
  5642                           ;messages.c: 30: size_t tlength = length;
  5643                           
  5644                           ;incstack = 0
  5645  001084  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5646  001088  6A13               	clrf	i1send_msg@tlength+1,c
  5647                           
  5648                           ;messages.c: 40: slot = qptr->cur_write_ind;
  5649  00108A  EE20 F034          	lfsr	2,52
  5650  00108E  500B               	movf	i1send_msg@qptr,w,c
  5651  001090  26D9               	addwf	fsr2l,f,c
  5652  001092  500C               	movf	i1send_msg@qptr+1,w,c
  5653  001094  22DA               	addwfc	fsr2h,f,c
  5654  001096  50DF               	movf	indf2,w,c
  5655  001098  6E14               	movwf	i1send_msg@slot,c
  5656                           
  5657                           ;messages.c: 41: qmsg = &(qptr->queue[slot]);
  5658  00109A  5014               	movf	i1send_msg@slot,w,c
  5659  00109C  0D0D               	mullw	13
  5660  00109E  50F3               	movf	prodl,w,c
  5661  0010A0  240B               	addwf	i1send_msg@qptr,w,c
  5662  0010A2  6E15               	movwf	i1send_msg@qmsg,c
  5663  0010A4  50F4               	movf	prodh,w,c
  5664  0010A6  200C               	addwfc	i1send_msg@qptr+1,w,c
  5665  0010A8  6E16               	movwf	i1send_msg@qmsg+1,c
  5666                           
  5667                           ;messages.c: 43: if (qmsg->full != 0) {
  5668  0010AA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5669  0010AE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5670  0010B2  50DF               	movf	indf2,w,c
  5671  0010B4  B4D8               	btfsc	status,2,c
  5672  0010B6  D002               	goto	i1l4067
  5673                           
  5674                           ;messages.c: 44: return (-1);
  5675  0010B8  0EFF               	movlw	255
  5676  0010BA  0012               	return	
  5677  0010BC                     i1l4067:
  5678                           
  5679                           ;messages.c: 45: }
  5680                           ;messages.c: 48: qmsg->length = length;
  5681  0010BC  EE20 F001          	lfsr	2,1
  5682  0010C0  5015               	movf	i1send_msg@qmsg,w,c
  5683  0010C2  26D9               	addwf	fsr2l,f,c
  5684  0010C4  5016               	movf	i1send_msg@qmsg+1,w,c
  5685  0010C6  22DA               	addwfc	fsr2h,f,c
  5686  0010C8  C00D  FFDF         	movff	i1send_msg@length,indf2
  5687                           
  5688                           ;messages.c: 49: qmsg->msgtype = msgtype;
  5689  0010CC  EE20 F002          	lfsr	2,2
  5690  0010D0  5015               	movf	i1send_msg@qmsg,w,c
  5691  0010D2  26D9               	addwf	fsr2l,f,c
  5692  0010D4  5016               	movf	i1send_msg@qmsg+1,w,c
  5693  0010D6  22DA               	addwfc	fsr2h,f,c
  5694  0010D8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5695                           
  5696                           ;messages.c: 57: memcpy(qmsg->data, data, tlength);
  5697  0010DC  0E03               	movlw	3
  5698  0010DE  2415               	addwf	i1send_msg@qmsg,w,c
  5699  0010E0  6E01               	movwf	i1memcpy@d1,c
  5700  0010E2  0E00               	movlw	0
  5701  0010E4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5702  0010E6  6E02               	movwf	i1memcpy@d1+1,c
  5703  0010E8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5704  0010EC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5705  0010F0  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5706  0010F4  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5707  0010F8  EC5F  F00D         	call	i1_memcpy	;wreg free
  5708                           
  5709                           ;messages.c: 58: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5710  0010FC  EE20 F034          	lfsr	2,52
  5711  001100  500B               	movf	i1send_msg@qptr,w,c
  5712  001102  26D9               	addwf	fsr2l,f,c
  5713  001104  500C               	movf	i1send_msg@qptr+1,w,c
  5714  001106  22DA               	addwfc	fsr2h,f,c
  5715  001108  EE10 F034          	lfsr	1,52
  5716  00110C  500B               	movf	i1send_msg@qptr,w,c
  5717  00110E  26E1               	addwf	fsr1l,f,c
  5718  001110  500C               	movf	i1send_msg@qptr+1,w,c
  5719  001112  22E2               	addwfc	fsr1h,f,c
  5720  001114  50E7               	movf	indf1,w,c
  5721  001116  6E11               	movwf	??i1_send_msg& (0+255),c
  5722  001118  2811               	incf	??i1_send_msg,w,c
  5723  00111A  0B03               	andlw	3
  5724  00111C  6EDF               	movwf	indf2,c
  5725                           
  5726                           ;messages.c: 61: qmsg->full = 1;
  5727  00111E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5728  001122  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5729  001126  0E01               	movlw	1
  5730  001128  6EDF               	movwf	indf2,c
  5731                           
  5732                           ;messages.c: 62: return (1);
  5733  00112A  0E01               	movlw	1
  5734  00112C  0012               	return	
  5735  00112E                     __end_ofi1_send_msg:
  5736                           	opt stack 0
  5737                           pclatu	equ	0xFFB
  5738                           pclath	equ	0xFFA
  5739                           tblptru	equ	0xFF8
  5740                           tblptrh	equ	0xFF7
  5741                           tblptrl	equ	0xFF6
  5742                           tablat	equ	0xFF5
  5743                           prodh	equ	0xFF4
  5744                           prodl	equ	0xFF3
  5745                           intcon	equ	0xFF2
  5746                           postinc0	equ	0xFEE
  5747                           fsr0h	equ	0xFEA
  5748                           fsr0l	equ	0xFE9
  5749                           wreg	equ	0xFE8
  5750                           indf1	equ	0xFE7
  5751                           postdec1	equ	0xFE5
  5752                           fsr1h	equ	0xFE2
  5753                           fsr1l	equ	0xFE1
  5754                           bsr	equ	0xFE0
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           postdec2	equ	0xFDD
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function i1_memcpy *****************
  5763 ;; Defined at:
  5764 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  d1              2    0[COMRAM] PTR void 
  5767 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5768 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5769 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5770 ;;  s1              2    2[COMRAM] PTR const void 
  5771 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5772 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5773 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5774 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5775 ;;		 -> main@uc(5), 
  5776 ;;  n               2    4[COMRAM] unsigned int 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5779 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5780 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5781 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5782 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5783 ;;		 -> main@uc(5), 
  5784 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5785 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5786 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5787 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  2    0[COMRAM] PTR void 
  5790 ;; Registers used:
  5791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5797 ;;      Params:         6       0       0       0       0
  5798 ;;      Locals:         4       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0
  5800 ;;      Totals:        10       0       0       0       0
  5801 ;;Total ram usage:       10 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    6
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		i1_send_msg
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text35
  5812  001ABE                     __ptext35:
  5813                           	opt stack 0
  5814  001ABE                     i1_memcpy:
  5815                           	opt stack 16
  5816                           
  5817                           ;incstack = 0
  5818  001ABE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5819  001AC2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5820  001AC6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5821  001ACA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5822  001ACE  D00E               	goto	i1l4043
  5823  001AD0                     i1l4037:
  5824  001AD0  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5825  001AD4  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5826  001AD8  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5827  001ADC  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5828  001AE0  CFDF FFE7          	movff	indf2,indf1
  5829  001AE4  4A09               	infsnz	i1memcpy@s,f,c
  5830  001AE6  2A0A               	incf	i1memcpy@s+1,f,c
  5831  001AE8  4A07               	infsnz	i1memcpy@d,f,c
  5832  001AEA  2A08               	incf	i1memcpy@d+1,f,c
  5833  001AEC                     i1l4043:
  5834  001AEC  0605               	decf	i1memcpy@n,f,c
  5835  001AEE  A0D8               	btfss	status,0,c
  5836  001AF0  0606               	decf	i1memcpy@n+1,f,c
  5837  001AF2  2805               	incf	i1memcpy@n& (0+255),w,c
  5838  001AF4  B4D8               	btfsc	status,2,c
  5839  001AF6  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5840  001AF8  B4D8               	btfsc	status,2,c
  5841                           
  5842                           ;	Return value of i1_memcpy is never used
  5843  001AFA  0012               	return	
  5844  001AFC  D7E9               	goto	i1l4037
  5845  001AFE                     __end_ofi1_memcpy:
  5846                           	opt stack 0
  5847                           pclatu	equ	0xFFB
  5848                           pclath	equ	0xFFA
  5849                           tblptru	equ	0xFF8
  5850                           tblptrh	equ	0xFF7
  5851                           tblptrl	equ	0xFF6
  5852                           tablat	equ	0xFF5
  5853                           prodh	equ	0xFF4
  5854                           prodl	equ	0xFF3
  5855                           intcon	equ	0xFF2
  5856                           postinc0	equ	0xFEE
  5857                           fsr0h	equ	0xFEA
  5858                           fsr0l	equ	0xFE9
  5859                           wreg	equ	0xFE8
  5860                           indf1	equ	0xFE7
  5861                           postdec1	equ	0xFE5
  5862                           fsr1h	equ	0xFE2
  5863                           fsr1l	equ	0xFE1
  5864                           bsr	equ	0xFE0
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _ReadTimer1 *****************
  5873 ;; Defined at:
  5874 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  timer           2    2[COMRAM] struct Timers
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  2    0[COMRAM] unsigned int 
  5881 ;; Registers used:
  5882 ;;		None
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5888 ;;      Params:         2       0       0       0       0
  5889 ;;      Locals:         2       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0
  5891 ;;      Totals:         4       0       0       0       0
  5892 ;;Total ram usage:        4 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    6
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_timer1_int_handler
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text36
  5903  001E58                     __ptext36:
  5904                           	opt stack 0
  5905  001E58                     _ReadTimer1:
  5906                           	opt stack 18
  5907                           
  5908                           ;incstack = 0
  5909  001E58  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5910  001E5C  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5911  001E60  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5912  001E64  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5913  001E68  0012               	return	
  5914  001E6A                     __end_of_ReadTimer1:
  5915                           	opt stack 0
  5916                           pclatu	equ	0xFFB
  5917                           pclath	equ	0xFFA
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodh	equ	0xFF4
  5923                           prodl	equ	0xFF3
  5924                           intcon	equ	0xFF2
  5925                           postinc0	equ	0xFEE
  5926                           fsr0h	equ	0xFEA
  5927                           fsr0l	equ	0xFE9
  5928                           wreg	equ	0xFE8
  5929                           indf1	equ	0xFE7
  5930                           postdec1	equ	0xFE5
  5931                           fsr1h	equ	0xFE2
  5932                           fsr1l	equ	0xFE1
  5933                           bsr	equ	0xFE0
  5934                           indf2	equ	0xFDF
  5935                           postinc2	equ	0xFDE
  5936                           postdec2	equ	0xFDD
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _InterruptHandlerHigh *****************
  5942 ;; Defined at:
  5943 ;;		line 83 in file "../src/interrupts.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;		None               void
  5950 ;; Registers used:
  5951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5957 ;;      Params:         0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0
  5959 ;;      Temps:          0       0      14       0       0
  5960 ;;      Totals:         0       0      14       0       0
  5961 ;;Total ram usage:       14 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    5
  5964 ;; This function calls:
  5965 ;;		_SleepIfOkay
  5966 ;;		_i2c_int_handler
  5967 ;;		_timer0_int_handler
  5968 ;; This function is called by:
  5969 ;;		Interrupt level 2
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	intcode
  5974  000008                     __pintcode:
  5975                           	opt stack 0
  5976  000008                     _InterruptHandlerHigh:
  5977                           	opt stack 16
  5978                           
  5979                           ;incstack = 0
  5980  000008  CFFA F175          	movff	pclath,??_InterruptHandlerHigh
  5981  00000C  CFFB F176          	movff	pclatu,??_InterruptHandlerHigh+1
  5982  000010  EF5F  F00A         	goto	int_func
  5983                           pclatu	equ	0xFFB
  5984                           pclath	equ	0xFFA
  5985                           tblptru	equ	0xFF8
  5986                           tblptrh	equ	0xFF7
  5987                           tblptrl	equ	0xFF6
  5988                           tablat	equ	0xFF5
  5989                           prodh	equ	0xFF4
  5990                           prodl	equ	0xFF3
  5991                           intcon	equ	0xFF2
  5992                           postinc0	equ	0xFEE
  5993                           fsr0h	equ	0xFEA
  5994                           fsr0l	equ	0xFE9
  5995                           wreg	equ	0xFE8
  5996                           indf1	equ	0xFE7
  5997                           postdec1	equ	0xFE5
  5998                           fsr1h	equ	0xFE2
  5999                           fsr1l	equ	0xFE1
  6000                           bsr	equ	0xFE0
  6001                           indf2	equ	0xFDF
  6002                           postinc2	equ	0xFDE
  6003                           postdec2	equ	0xFDD
  6004                           fsr2h	equ	0xFDA
  6005                           fsr2l	equ	0xFD9
  6006                           status	equ	0xFD8
  6007                           
  6008                           	psect	intcode_body
  6009  0014BE                     __pintcode_body:
  6010                           	opt stack 16
  6011  0014BE                     int_func:
  6012                           	opt stack 16
  6013  0014BE  CFE9 F177          	movff	fsr0l,??_InterruptHandlerHigh+2
  6014  0014C2  CFEA F178          	movff	fsr0h,??_InterruptHandlerHigh+3
  6015  0014C6  CFE1 F179          	movff	fsr1l,??_InterruptHandlerHigh+4
  6016  0014CA  CFE2 F17A          	movff	fsr1h,??_InterruptHandlerHigh+5
  6017  0014CE  CFD9 F17B          	movff	fsr2l,??_InterruptHandlerHigh+6
  6018  0014D2  CFDA F17C          	movff	fsr2h,??_InterruptHandlerHigh+7
  6019  0014D6  CFF3 F17D          	movff	prodl,??_InterruptHandlerHigh+8
  6020  0014DA  CFF4 F17E          	movff	prodh,??_InterruptHandlerHigh+9
  6021  0014DE  CFF6 F17F          	movff	tblptrl,??_InterruptHandlerHigh+10
  6022  0014E2  CFF7 F180          	movff	tblptrh,??_InterruptHandlerHigh+11
  6023  0014E6  CFF8 F181          	movff	tblptru,??_InterruptHandlerHigh+12
  6024  0014EA  CFF5 F182          	movff	tablat,??_InterruptHandlerHigh+13
  6025                           
  6026                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6027  0014EE  A69E               	btfss	3998,3,c	;volatile
  6028  0014F0  D003               	goto	i2l3283
  6029                           
  6030                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6031  0014F2  969E               	bcf	3998,3,c	;volatile
  6032                           
  6033                           ;interrupts.c: 92: i2c_int_handler();
  6034  0014F4  EC5D  F000         	call	_i2c_int_handler	;wreg free
  6035  0014F8                     i2l3283:
  6036                           
  6037                           ;interrupts.c: 93: }
  6038                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6039  0014F8  A4F2               	btfss	intcon,2,c	;volatile
  6040  0014FA  D003               	goto	i2l3289
  6041                           
  6042                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6043  0014FC  94F2               	bcf	intcon,2,c	;volatile
  6044                           
  6045                           ;interrupts.c: 99: timer0_int_handler();
  6046  0014FE  EC1C  F00B         	call	_timer0_int_handler	;wreg free
  6047  001502                     i2l3289:
  6048                           
  6049                           ;interrupts.c: 100: }
  6050                           ;interrupts.c: 109: SleepIfOkay();
  6051  001502  ECB1  F00C         	call	_SleepIfOkay	;wreg free
  6052  001506  C182  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6053  00150A  C181  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6054  00150E  C180  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6055  001512  C17F  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6056  001516  C17E  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6057  00151A  C17D  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6058  00151E  C17C  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6059  001522  C17B  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6060  001526  C17A  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6061  00152A  C179  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6062  00152E  C178  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6063  001532  C177  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6064  001536  C176  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6065  00153A  C175  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6066  00153E  0011               	retfie		f
  6067  001540                     __end_of_InterruptHandlerHigh:
  6068                           	opt stack 0
  6069                           pclatu	equ	0xFFB
  6070                           pclath	equ	0xFFA
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           prodh	equ	0xFF4
  6076                           prodl	equ	0xFF3
  6077                           intcon	equ	0xFF2
  6078                           postinc0	equ	0xFEE
  6079                           fsr0h	equ	0xFEA
  6080                           fsr0l	equ	0xFE9
  6081                           wreg	equ	0xFE8
  6082                           indf1	equ	0xFE7
  6083                           postdec1	equ	0xFE5
  6084                           fsr1h	equ	0xFE2
  6085                           fsr1l	equ	0xFE1
  6086                           bsr	equ	0xFE0
  6087                           indf2	equ	0xFDF
  6088                           postinc2	equ	0xFDE
  6089                           postdec2	equ	0xFDD
  6090                           fsr2h	equ	0xFDA
  6091                           fsr2l	equ	0xFD9
  6092                           status	equ	0xFD8
  6093                           
  6094 ;; *************** function _timer0_int_handler *****************
  6095 ;; Defined at:
  6096 ;;		line 17 in file "../src/user_interrupts.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  val             2    9[BANK0 ] unsigned int 
  6101 ;;  msgtype         2    7[BANK0 ] int 
  6102 ;;  length          2    5[BANK0 ] int 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6112 ;;      Params:         0       0       0       0       0
  6113 ;;      Locals:         0       6       0       0       0
  6114 ;;      Temps:          0       1       0       0       0
  6115 ;;      Totals:         0       7       0       0       0
  6116 ;;Total ram usage:        7 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    3
  6119 ;; This function calls:
  6120 ;;		_FromMainHigh_recvmsg
  6121 ;;		_ToMainHigh_sendmsg
  6122 ;;		_WriteTimer0
  6123 ;; This function is called by:
  6124 ;;		_InterruptHandlerHigh
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text38
  6129  001638                     __ptext38:
  6130                           	opt stack 0
  6131  001638                     _timer0_int_handler:
  6132                           	opt stack 17
  6133                           
  6134                           ;user_interrupts.c: 18: unsigned int val;
  6135                           ;user_interrupts.c: 19: int length, msgtype;
  6136                           ;user_interrupts.c: 27: WriteTimer0(0xF800);
  6137                           
  6138                           ;incstack = 0
  6139  001638  0EF8               	movlw	248
  6140  00163A  6E30               	movwf	WriteTimer0@timer0+1,c
  6141  00163C  0E00               	movlw	0
  6142  00163E  6E2F               	movwf	WriteTimer0@timer0,c
  6143  001640  EC35  F00F         	call	_WriteTimer0	;wreg free
  6144                           
  6145                           ;user_interrupts.c: 29: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6146  001644  0100               	movlb	0	; () banked
  6147  001646  0E00               	movlw	high timer0_int_handler@msgtype
  6148  001648  0100               	movlb	0	; () banked
  6149  00164A  0100               	movlb	0	; () banked
  6150  00164C  6F81               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6151  00164E  0100               	movlb	0	; () banked
  6152  001650  0E87               	movlw	low timer0_int_handler@msgtype
  6153  001652  0100               	movlb	0	; () banked
  6154  001654  0100               	movlb	0	; () banked
  6155  001656  6F80               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6156  001658  0100               	movlb	0	; () banked
  6157  00165A  0E00               	movlw	high timer0_int_handler@val
  6158  00165C  0100               	movlb	0	; () banked
  6159  00165E  0100               	movlb	0	; () banked
  6160  001660  6F83               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6161  001662  0100               	movlb	0	; () banked
  6162  001664  0E89               	movlw	low timer0_int_handler@val
  6163  001666  0100               	movlb	0	; () banked
  6164  001668  0100               	movlb	0	; () banked
  6165  00166A  6F82               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6166  00166C  0E02               	movlw	2
  6167  00166E  EC2B  F00E         	call	_FromMainHigh_recvmsg
  6168  001672  0100               	movlb	0	; () banked
  6169  001674  0100               	movlb	0	; () banked
  6170  001676  6F85               	movwf	timer0_int_handler@length& (0+255),b
  6171  001678  0100               	movlb	0	; () banked
  6172  00167A  6B86               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6173  00167C  0100               	movlb	0	; () banked
  6174  00167E  BF85               	btfsc	timer0_int_handler@length& (0+255),7,b
  6175  001680  0786               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;user_interrupts.c: 30: if (length == sizeof (val)) {
  6179  001682  0100               	movlb	0	; () banked
  6180  001684  0100               	movlb	0	; () banked
  6181  001686  5185               	movf	timer0_int_handler@length& (0+255),w,b
  6182  001688  0A02               	xorlw	2
  6183  00168A  1186               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6184  00168C  A4D8               	btfss	status,2,c
  6185  00168E  0012               	return	
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;user_interrupts.c: 31: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6189  001690  0100               	movlb	0	; () banked
  6190  001692  6F84               	movwf	??_timer0_int_handler& (0+255),b
  6191  001694  0E0A               	movlw	10
  6192  001696  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6193  001698  0100               	movlb	0	; () banked
  6194  00169A  5184               	movf	??_timer0_int_handler& (0+255),w,b
  6195  00169C  0100               	movlb	0	; () banked
  6196  00169E  0E00               	movlw	high timer0_int_handler@val
  6197  0016A0  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6198  0016A2  0100               	movlb	0	; () banked
  6199  0016A4  0E89               	movlw	low timer0_int_handler@val
  6200  0016A6  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6201  0016A8  0E02               	movlw	2
  6202  0016AA  ECAF  F00E         	call	_ToMainHigh_sendmsg
  6203  0016AE  0012               	return	
  6204  0016B0                     __end_of_timer0_int_handler:
  6205                           	opt stack 0
  6206                           pclatu	equ	0xFFB
  6207                           pclath	equ	0xFFA
  6208                           tblptru	equ	0xFF8
  6209                           tblptrh	equ	0xFF7
  6210                           tblptrl	equ	0xFF6
  6211                           tablat	equ	0xFF5
  6212                           prodh	equ	0xFF4
  6213                           prodl	equ	0xFF3
  6214                           intcon	equ	0xFF2
  6215                           postinc0	equ	0xFEE
  6216                           fsr0h	equ	0xFEA
  6217                           fsr0l	equ	0xFE9
  6218                           wreg	equ	0xFE8
  6219                           indf1	equ	0xFE7
  6220                           postdec1	equ	0xFE5
  6221                           fsr1h	equ	0xFE2
  6222                           fsr1l	equ	0xFE1
  6223                           bsr	equ	0xFE0
  6224                           indf2	equ	0xFDF
  6225                           postinc2	equ	0xFDE
  6226                           postdec2	equ	0xFDD
  6227                           fsr2h	equ	0xFDA
  6228                           fsr2l	equ	0xFD9
  6229                           status	equ	0xFD8
  6230                           
  6231 ;; *************** function _WriteTimer0 *****************
  6232 ;; Defined at:
  6233 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  timer0          2   46[COMRAM] unsigned int 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  timer           2   48[COMRAM] struct Timers
  6238 ;; Return value:  Size  Location     Type
  6239 ;;		None               void
  6240 ;; Registers used:
  6241 ;;		None
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6247 ;;      Params:         2       0       0       0       0
  6248 ;;      Locals:         2       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0
  6250 ;;      Totals:         4       0       0       0       0
  6251 ;;Total ram usage:        4 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_timer0_int_handler
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text39
  6261  001E6A                     __ptext39:
  6262                           	opt stack 0
  6263  001E6A                     _WriteTimer0:
  6264                           	opt stack 19
  6265                           
  6266                           ;incstack = 0
  6267  001E6A  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6268  001E6E  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6269  001E72  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6270  001E76  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6271  001E7A  0012               	return	
  6272  001E7C                     __end_of_WriteTimer0:
  6273                           	opt stack 0
  6274                           pclatu	equ	0xFFB
  6275                           pclath	equ	0xFFA
  6276                           tblptru	equ	0xFF8
  6277                           tblptrh	equ	0xFF7
  6278                           tblptrl	equ	0xFF6
  6279                           tablat	equ	0xFF5
  6280                           prodh	equ	0xFF4
  6281                           prodl	equ	0xFF3
  6282                           intcon	equ	0xFF2
  6283                           postinc0	equ	0xFEE
  6284                           fsr0h	equ	0xFEA
  6285                           fsr0l	equ	0xFE9
  6286                           wreg	equ	0xFE8
  6287                           indf1	equ	0xFE7
  6288                           postdec1	equ	0xFE5
  6289                           fsr1h	equ	0xFE2
  6290                           fsr1l	equ	0xFE1
  6291                           bsr	equ	0xFE0
  6292                           indf2	equ	0xFDF
  6293                           postinc2	equ	0xFDE
  6294                           postdec2	equ	0xFDD
  6295                           fsr2h	equ	0xFDA
  6296                           fsr2l	equ	0xFD9
  6297                           status	equ	0xFD8
  6298                           
  6299 ;; *************** function _FromMainHigh_recvmsg *****************
  6300 ;; Defined at:
  6301 ;;		line 185 in file "../src/messages.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  maxlength       1    wreg     unsigned char 
  6304 ;;  msgtype         2    0[BANK0 ] PTR unsigned char 
  6305 ;;		 -> timer0_int_handler@msgtype(2), 
  6306 ;;  data            2    2[BANK0 ] PTR void 
  6307 ;;		 -> timer0_int_handler@val(2), 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  maxlength       1   70[COMRAM] unsigned char 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      char 
  6312 ;; Registers used:
  6313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6319 ;;      Params:         0       4       0       0       0
  6320 ;;      Locals:         1       0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0
  6322 ;;      Totals:         1       4       0       0       0
  6323 ;;Total ram usage:        5 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    2
  6326 ;; This function calls:
  6327 ;;		i2_recv_msg
  6328 ;; This function is called by:
  6329 ;;		_timer0_int_handler
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text40
  6334  001C56                     __ptext40:
  6335                           	opt stack 0
  6336  001C56                     _FromMainHigh_recvmsg:
  6337                           	opt stack 17
  6338                           
  6339                           ;incstack = 0
  6340                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6341  001C56  CFE8 F047          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6342                           
  6343                           ;messages.c: 191: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6344  001C5A  0102               	movlb	2	; () banked
  6345  001C5C  0E02               	movlw	high _FromMainHigh_MQ
  6346  001C5E  6E3A               	movwf	i2recv_msg@qptr+1,c
  6347  001C60  0102               	movlb	2	; () banked
  6348  001C62  0E00               	movlw	low _FromMainHigh_MQ
  6349  001C64  6E39               	movwf	i2recv_msg@qptr,c
  6350  001C66  C047  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6351  001C6A  0100               	movlb	0	; () banked
  6352  001C6C  C081  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6353  001C70  0100               	movlb	0	; () banked
  6354  001C72  C080  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6355  001C76  0100               	movlb	0	; () banked
  6356  001C78  C083  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6357  001C7C  0100               	movlb	0	; () banked
  6358  001C7E  C082  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6359  001C82  EC75  F007         	call	i2_recv_msg	;wreg free
  6360  001C86  0012               	return	
  6361  001C88                     __end_of_FromMainHigh_recvmsg:
  6362                           	opt stack 0
  6363                           pclatu	equ	0xFFB
  6364                           pclath	equ	0xFFA
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           postinc0	equ	0xFEE
  6373                           fsr0h	equ	0xFEA
  6374                           fsr0l	equ	0xFE9
  6375                           wreg	equ	0xFE8
  6376                           indf1	equ	0xFE7
  6377                           postdec1	equ	0xFE5
  6378                           fsr1h	equ	0xFE2
  6379                           fsr1l	equ	0xFE1
  6380                           bsr	equ	0xFE0
  6381                           indf2	equ	0xFDF
  6382                           postinc2	equ	0xFDE
  6383                           postdec2	equ	0xFDD
  6384                           fsr2h	equ	0xFDA
  6385                           fsr2l	equ	0xFD9
  6386                           status	equ	0xFD8
  6387                           
  6388 ;; *************** function i2_recv_msg *****************
  6389 ;; Defined at:
  6390 ;;		line 65 in file "../src/messages.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6393 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6394 ;;  maxlength       1   58[COMRAM] unsigned char 
  6395 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6396 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6397 ;;  data            2   61[COMRAM] PTR void 
  6398 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6401 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6402 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6403 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6404 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      char 
  6407 ;; Registers used:
  6408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6414 ;;      Params:         7       0       0       0       0
  6415 ;;      Locals:         5       0       0       0       0
  6416 ;;      Temps:          2       0       0       0       0
  6417 ;;      Totals:        14       0       0       0       0
  6418 ;;Total ram usage:       14 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    1
  6421 ;; This function calls:
  6422 ;;		i2_memcpy
  6423 ;; This function is called by:
  6424 ;;		_FromMainHigh_recvmsg
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text41
  6429  000EEA                     __ptext41:
  6430                           	opt stack 0
  6431  000EEA                     i2_recv_msg:
  6432                           	opt stack 17
  6433                           
  6434                           ;messages.c: 66: unsigned char slot;
  6435                           ;messages.c: 70: msg *qmsg;
  6436                           ;messages.c: 71: size_t tlength;
  6437                           ;messages.c: 74: slot = qptr->cur_read_ind;
  6438                           
  6439                           ;incstack = 0
  6440  000EEA  EE20 F035          	lfsr	2,53
  6441  000EEE  5039               	movf	i2recv_msg@qptr,w,c
  6442  000EF0  26D9               	addwf	fsr2l,f,c
  6443  000EF2  503A               	movf	i2recv_msg@qptr+1,w,c
  6444  000EF4  22DA               	addwfc	fsr2h,f,c
  6445  000EF6  50DF               	movf	indf2,w,c
  6446  000EF8  6E42               	movwf	i2recv_msg@slot,c
  6447                           
  6448                           ;messages.c: 75: qmsg = &(qptr->queue[slot]);
  6449  000EFA  5042               	movf	i2recv_msg@slot,w,c
  6450  000EFC  0D0D               	mullw	13
  6451  000EFE  50F3               	movf	prodl,w,c
  6452  000F00  2439               	addwf	i2recv_msg@qptr,w,c
  6453  000F02  6E45               	movwf	i2recv_msg@qmsg,c
  6454  000F04  50F4               	movf	prodh,w,c
  6455  000F06  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6456  000F08  6E46               	movwf	i2recv_msg@qmsg+1,c
  6457                           
  6458                           ;messages.c: 76: if (qmsg->full == 1) {
  6459  000F0A  0E01               	movlw	1
  6460  000F0C  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6461  000F10  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6462  000F14  62DF               	cpfseq	indf2,c
  6463  000F16  D050               	goto	i2l4019
  6464                           
  6465                           ;messages.c: 78: if (qmsg->length > maxlength) {
  6466  000F18  EE20 F001          	lfsr	2,1
  6467  000F1C  5045               	movf	i2recv_msg@qmsg,w,c
  6468  000F1E  26D9               	addwf	fsr2l,f,c
  6469  000F20  5046               	movf	i2recv_msg@qmsg+1,w,c
  6470  000F22  22DA               	addwfc	fsr2h,f,c
  6471  000F24  50DF               	movf	indf2,w,c
  6472  000F26  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6473  000F28  B0D8               	btfsc	status,0,c
  6474  000F2A  D002               	goto	i2l4003
  6475                           
  6476                           ;messages.c: 79: return (-3);
  6477  000F2C  0EFD               	movlw	253
  6478  000F2E  0012               	return	
  6479  000F30                     i2l4003:
  6480                           
  6481                           ;messages.c: 80: }
  6482                           ;messages.c: 82: tlength = qmsg->length;
  6483  000F30  EE20 F001          	lfsr	2,1
  6484  000F34  5045               	movf	i2recv_msg@qmsg,w,c
  6485  000F36  26D9               	addwf	fsr2l,f,c
  6486  000F38  5046               	movf	i2recv_msg@qmsg+1,w,c
  6487  000F3A  22DA               	addwfc	fsr2h,f,c
  6488  000F3C  50DF               	movf	indf2,w,c
  6489  000F3E  6E40               	movwf	??i2_recv_msg& (0+255),c
  6490  000F40  5040               	movf	??i2_recv_msg,w,c
  6491  000F42  6E43               	movwf	i2recv_msg@tlength,c
  6492  000F44  6A44               	clrf	i2recv_msg@tlength+1,c
  6493                           
  6494                           ;messages.c: 83: memcpy(data, qmsg->data, tlength);
  6495  000F46  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6496  000F4A  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6497  000F4E  0E03               	movlw	3
  6498  000F50  2445               	addwf	i2recv_msg@qmsg,w,c
  6499  000F52  6E40               	movwf	??i2_recv_msg& (0+255),c
  6500  000F54  0E00               	movlw	0
  6501  000F56  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6502  000F58  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6503  000F5A  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6504  000F5E  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6505  000F62  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6506  000F66  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6507  000F6A  EC7F  F00D         	call	i2_memcpy	;wreg free
  6508                           
  6509                           ;messages.c: 89: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6510  000F6E  EE20 F035          	lfsr	2,53
  6511  000F72  5039               	movf	i2recv_msg@qptr,w,c
  6512  000F74  26D9               	addwf	fsr2l,f,c
  6513  000F76  503A               	movf	i2recv_msg@qptr+1,w,c
  6514  000F78  22DA               	addwfc	fsr2h,f,c
  6515  000F7A  EE10 F035          	lfsr	1,53
  6516  000F7E  5039               	movf	i2recv_msg@qptr,w,c
  6517  000F80  26E1               	addwf	fsr1l,f,c
  6518  000F82  503A               	movf	i2recv_msg@qptr+1,w,c
  6519  000F84  22E2               	addwfc	fsr1h,f,c
  6520  000F86  50E7               	movf	indf1,w,c
  6521  000F88  6E40               	movwf	??i2_recv_msg& (0+255),c
  6522  000F8A  2840               	incf	??i2_recv_msg,w,c
  6523  000F8C  0B03               	andlw	3
  6524  000F8E  6EDF               	movwf	indf2,c
  6525                           
  6526                           ;messages.c: 91: (*msgtype) = qmsg->msgtype;
  6527  000F90  EE20 F002          	lfsr	2,2
  6528  000F94  5045               	movf	i2recv_msg@qmsg,w,c
  6529  000F96  26D9               	addwf	fsr2l,f,c
  6530  000F98  5046               	movf	i2recv_msg@qmsg+1,w,c
  6531  000F9A  22DA               	addwfc	fsr2h,f,c
  6532  000F9C  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6533  000FA0  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6534  000FA4  CFDF FFE7          	movff	indf2,indf1
  6535                           
  6536                           ;messages.c: 93: qmsg->full = 0;
  6537  000FA8  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6538  000FAC  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6539  000FB0  0E00               	movlw	0
  6540  000FB2  6EDF               	movwf	indf2,c
  6541                           
  6542                           ;messages.c: 94: return (tlength);
  6543  000FB4  5043               	movf	i2recv_msg@tlength,w,c
  6544  000FB6  0012               	return	
  6545  000FB8                     i2l4019:
  6546                           
  6547                           ;messages.c: 96: return (-4);
  6548  000FB8  0EFC               	movlw	252
  6549  000FBA  0012               	return	
  6550  000FBC                     __end_ofi2_recv_msg:
  6551                           	opt stack 0
  6552                           pclatu	equ	0xFFB
  6553                           pclath	equ	0xFFA
  6554                           tblptru	equ	0xFF8
  6555                           tblptrh	equ	0xFF7
  6556                           tblptrl	equ	0xFF6
  6557                           tablat	equ	0xFF5
  6558                           prodh	equ	0xFF4
  6559                           prodl	equ	0xFF3
  6560                           intcon	equ	0xFF2
  6561                           postinc0	equ	0xFEE
  6562                           fsr0h	equ	0xFEA
  6563                           fsr0l	equ	0xFE9
  6564                           wreg	equ	0xFE8
  6565                           indf1	equ	0xFE7
  6566                           postdec1	equ	0xFE5
  6567                           fsr1h	equ	0xFE2
  6568                           fsr1l	equ	0xFE1
  6569                           bsr	equ	0xFE0
  6570                           indf2	equ	0xFDF
  6571                           postinc2	equ	0xFDE
  6572                           postdec2	equ	0xFDD
  6573                           fsr2h	equ	0xFDA
  6574                           fsr2l	equ	0xFD9
  6575                           status	equ	0xFD8
  6576                           
  6577 ;; *************** function _i2c_int_handler *****************
  6578 ;; Defined at:
  6579 ;;		line 101 in file "../src/my_i2c.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  error_buf       3    0[BANK1 ] unsigned char [3]
  6584 ;;  data_read       1    8[BANK1 ] unsigned char 
  6585 ;;  msg_ready       1    7[BANK1 ] unsigned char 
  6586 ;;  msg_to_send     1    6[BANK1 ] unsigned char 
  6587 ;;  i2c_data        1    5[BANK1 ] unsigned char 
  6588 ;;  overrun_erro    1    4[BANK1 ] unsigned char 
  6589 ;;  data_written    1    3[BANK1 ] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;		None               void
  6592 ;; Registers used:
  6593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6599 ;;      Params:         0       0       0       0       0
  6600 ;;      Locals:         0       0       9       0       0
  6601 ;;      Temps:          0       1       0       0       0
  6602 ;;      Totals:         0       1       9       0       0
  6603 ;;Total ram usage:       10 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    4
  6606 ;; This function calls:
  6607 ;;		_ToMainHigh_sendmsg
  6608 ;;		_handle_start
  6609 ;;		_sendRequestedData
  6610 ;;		_setBrainReqData
  6611 ;; This function is called by:
  6612 ;;		_InterruptHandlerHigh
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text42
  6617  0000BA                     __ptext42:
  6618                           	opt stack 0
  6619  0000BA                     _i2c_int_handler:
  6620                           	opt stack 16
  6621                           
  6622                           ;my_i2c.c: 102: unsigned char i2c_data;
  6623                           ;my_i2c.c: 103: unsigned char data_read = 0;
  6624                           
  6625                           ;incstack = 0
  6626  0000BA  0100               	movlb	0	; () banked
  6627  0000BC  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6628  0000BE  0E00               	movlw	0
  6629  0000C0  0101               	movlb	1	; () banked
  6630  0000C2  0101               	movlb	1	; () banked
  6631  0000C4  6F74               	movwf	i2c_int_handler@data_read& (0+255),b
  6632  0000C6  0100               	movlb	0	; () banked
  6633  0000C8  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6634                           
  6635                           ;my_i2c.c: 104: unsigned char data_written = 0;
  6636  0000CA  0100               	movlb	0	; () banked
  6637  0000CC  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6638  0000CE  0E00               	movlw	0
  6639  0000D0  0101               	movlb	1	; () banked
  6640  0000D2  0101               	movlb	1	; () banked
  6641  0000D4  6F6F               	movwf	i2c_int_handler@data_written& (0+255),b
  6642  0000D6  0100               	movlb	0	; () banked
  6643  0000D8  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6644                           
  6645                           ;my_i2c.c: 105: unsigned char msg_ready = 0;
  6646  0000DA  0100               	movlb	0	; () banked
  6647  0000DC  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6648  0000DE  0E00               	movlw	0
  6649  0000E0  0101               	movlb	1	; () banked
  6650  0000E2  0101               	movlb	1	; () banked
  6651  0000E4  6F73               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6652  0000E6  0100               	movlb	0	; () banked
  6653  0000E8  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6654                           
  6655                           ;my_i2c.c: 106: unsigned char msg_to_send = 0;
  6656  0000EA  0100               	movlb	0	; () banked
  6657  0000EC  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6658  0000EE  0E00               	movlw	0
  6659  0000F0  0101               	movlb	1	; () banked
  6660  0000F2  0101               	movlb	1	; () banked
  6661  0000F4  6F72               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6662  0000F6  0100               	movlb	0	; () banked
  6663  0000F8  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6664                           
  6665                           ;my_i2c.c: 107: unsigned char overrun_error = 0;
  6666  0000FA  0100               	movlb	0	; () banked
  6667  0000FC  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6668  0000FE  0E00               	movlw	0
  6669  000100  0101               	movlb	1	; () banked
  6670  000102  0101               	movlb	1	; () banked
  6671  000104  6F70               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6672  000106  0100               	movlb	0	; () banked
  6673  000108  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;my_i2c.c: 108: unsigned char error_buf[3];
  6677                           ;my_i2c.c: 111: if (SSPCON1bits.SSPOV == 1) {
  6678  00010A  ACC6               	btfss	4038,6,c	;volatile
  6679  00010C  D029               	goto	i2l3305
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;my_i2c.c: 112: SSPCON1bits.SSPOV = 0;
  6683  00010E  9CC6               	bcf	4038,6,c	;volatile
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;my_i2c.c: 116: ic_ptr->status = 0x5;
  6687  000110  0101               	movlb	1	; () banked
  6688  000112  EE20 F00C          	lfsr	2,12
  6689  000116  0101               	movlb	1	; () banked
  6690  000118  51A8               	movf	_ic_ptr& (0+255),w,b
  6691  00011A  26D9               	addwf	fsr2l,f,c
  6692  00011C  0101               	movlb	1	; () banked
  6693  00011E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6694  000120  22DA               	addwfc	fsr2h,f,c
  6695  000122  0E05               	movlw	5
  6696  000124  6EDF               	movwf	indf2,c
  6697                           
  6698                           ; BSR set to: 1
  6699                           ;my_i2c.c: 117: overrun_error = 1;
  6700  000126  0100               	movlb	0	; () banked
  6701  000128  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6702  00012A  0E01               	movlw	1
  6703  00012C  0101               	movlb	1	; () banked
  6704  00012E  0101               	movlb	1	; () banked
  6705  000130  6F70               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6706  000132  0100               	movlb	0	; () banked
  6707  000134  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;my_i2c.c: 118: ic_ptr->error_count++;
  6711  000136  0101               	movlb	1	; () banked
  6712  000138  EE20 F00E          	lfsr	2,14
  6713  00013C  0101               	movlb	1	; () banked
  6714  00013E  51A8               	movf	_ic_ptr& (0+255),w,b
  6715  000140  26D9               	addwf	fsr2l,f,c
  6716  000142  0101               	movlb	1	; () banked
  6717  000144  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6718  000146  22DA               	addwfc	fsr2h,f,c
  6719  000148  2ADF               	incf	indf2,f,c
  6720                           
  6721                           ; BSR set to: 1
  6722                           ;my_i2c.c: 119: ic_ptr->error_code = 0x4;
  6723  00014A  0101               	movlb	1	; () banked
  6724  00014C  EE20 F00D          	lfsr	2,13
  6725  000150  0101               	movlb	1	; () banked
  6726  000152  51A8               	movf	_ic_ptr& (0+255),w,b
  6727  000154  26D9               	addwf	fsr2l,f,c
  6728  000156  0101               	movlb	1	; () banked
  6729  000158  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6730  00015A  22DA               	addwfc	fsr2h,f,c
  6731  00015C  0E04               	movlw	4
  6732  00015E  6EDF               	movwf	indf2,c
  6733  000160                     i2l3305:
  6734                           
  6735                           ;my_i2c.c: 120: }
  6736                           ;my_i2c.c: 122: if (SSPSTATbits.BF == 1) {
  6737  000160  A0C7               	btfss	4039,0,c	;volatile
  6738  000162  D00A               	goto	i2l3311
  6739                           
  6740                           ;my_i2c.c: 123: i2c_data = SSPBUF;
  6741  000164  CFC9 F171          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6742                           
  6743                           ;my_i2c.c: 124: data_read = 1;
  6744  000168  0100               	movlb	0	; () banked
  6745  00016A  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6746  00016C  0E01               	movlw	1
  6747  00016E  0101               	movlb	1	; () banked
  6748  000170  0101               	movlb	1	; () banked
  6749  000172  6F74               	movwf	i2c_int_handler@data_read& (0+255),b
  6750  000174  0100               	movlb	0	; () banked
  6751  000176  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6752  000178                     i2l3311:
  6753                           
  6754                           ;my_i2c.c: 125: }
  6755                           ;my_i2c.c: 127: if (!overrun_error) {
  6756  000178  0101               	movlb	1	; () banked
  6757  00017A  0101               	movlb	1	; () banked
  6758  00017C  6770               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6759  00017E  D1CE               	goto	i2l272
  6760  000180  D1B7               	goto	i2l3399
  6761  000182                     i2l274:
  6762                           
  6763                           ; BSR set to: 1
  6764                           ;my_i2c.c: 130: {
  6765                           ;my_i2c.c: 132: if (SSPSTATbits.S == 1) {
  6766  000182  A6C7               	btfss	4039,3,c	;volatile
  6767  000184  D1CB               	goto	i2l272
  6768                           
  6769                           ; BSR set to: 1
  6770                           ;my_i2c.c: 133: handle_start(data_read);
  6771  000186  0101               	movlb	1	; () banked
  6772  000188  0101               	movlb	1	; () banked
  6773  00018A  5174               	movf	i2c_int_handler@data_read& (0+255),w,b
  6774  00018C  ECDE  F007         	call	_handle_start
  6775                           
  6776                           ;my_i2c.c: 135: if (ic_ptr->status == 0x8) {
  6777  000190  0101               	movlb	1	; () banked
  6778  000192  EE20 F00C          	lfsr	2,12
  6779  000196  0101               	movlb	1	; () banked
  6780  000198  51A8               	movf	_ic_ptr& (0+255),w,b
  6781  00019A  26D9               	addwf	fsr2l,f,c
  6782  00019C  0101               	movlb	1	; () banked
  6783  00019E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6784  0001A0  22DA               	addwfc	fsr2h,f,c
  6785  0001A2  0E08               	movlw	8
  6786  0001A4  62DF               	cpfseq	indf2,c
  6787  0001A6  D1BA               	goto	i2l272
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;my_i2c.c: 136: data_read = 0;
  6791  0001A8  0100               	movlb	0	; () banked
  6792  0001AA  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6793  0001AC  0E00               	movlw	0
  6794  0001AE  0101               	movlb	1	; () banked
  6795  0001B0  0101               	movlb	1	; () banked
  6796  0001B2  6F74               	movwf	i2c_int_handler@data_read& (0+255),b
  6797  0001B4  0100               	movlb	0	; () banked
  6798  0001B6  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6799                           
  6800                           ;my_i2c.c: 137: msg_to_send = 1;
  6801  0001B8  0100               	movlb	0	; () banked
  6802  0001BA  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6803  0001BC  0E01               	movlw	1
  6804  0001BE  0101               	movlb	1	; () banked
  6805  0001C0  0101               	movlb	1	; () banked
  6806  0001C2  6F72               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6807  0001C4  D187               	goto	L6
  6808  0001C6                     i2l278:
  6809                           
  6810                           ; BSR set to: 1
  6811                           ;my_i2c.c: 143: {
  6812                           ;my_i2c.c: 145: if (SSPSTATbits.P == 1) {
  6813  0001C6  A8C7               	btfss	4039,4,c	;volatile
  6814  0001C8  D030               	goto	i2l3331
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;my_i2c.c: 148: ic_ptr->event_count++;
  6818  0001CA  0101               	movlb	1	; () banked
  6819  0001CC  EE20 F00B          	lfsr	2,11
  6820  0001D0  0101               	movlb	1	; () banked
  6821  0001D2  51A8               	movf	_ic_ptr& (0+255),w,b
  6822  0001D4  26D9               	addwf	fsr2l,f,c
  6823  0001D6  0101               	movlb	1	; () banked
  6824  0001D8  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6825  0001DA  22DA               	addwfc	fsr2h,f,c
  6826  0001DC  2ADF               	incf	indf2,f,c
  6827                           
  6828                           ; BSR set to: 1
  6829                           ;my_i2c.c: 149: if (data_read) {
  6830  0001DE  0101               	movlb	1	; () banked
  6831  0001E0  0101               	movlb	1	; () banked
  6832  0001E2  5174               	movf	i2c_int_handler@data_read& (0+255),w,b
  6833  0001E4  B4D8               	btfsc	status,2,c
  6834  0001E6  D179               	goto	L8
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;my_i2c.c: 150: if (SSPSTATbits.D_A == 0) {
  6838  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  6839  0001EA  D009               	goto	i2l3329
  6840                           
  6841                           ; BSR set to: 1
  6842                           ;my_i2c.c: 151: msg_ready = 1;
  6843  0001EC  0100               	movlb	0	; () banked
  6844  0001EE  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6845  0001F0  0E01               	movlw	1
  6846  0001F2  0101               	movlb	1	; () banked
  6847  0001F4  0101               	movlb	1	; () banked
  6848  0001F6  6F73               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6849  0001F8  0100               	movlb	0	; () banked
  6850  0001FA  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  6851                           
  6852                           ;my_i2c.c: 152: } else {
  6853  0001FC  D16E               	goto	L8
  6854  0001FE                     i2l3329:
  6855                           
  6856                           ;my_i2c.c: 153: ic_ptr->error_count++;
  6857  0001FE  0101               	movlb	1	; () banked
  6858  000200  EE20 F00E          	lfsr	2,14
  6859  000204  0101               	movlb	1	; () banked
  6860  000206  51A8               	movf	_ic_ptr& (0+255),w,b
  6861  000208  26D9               	addwf	fsr2l,f,c
  6862  00020A  0101               	movlb	1	; () banked
  6863  00020C  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6864  00020E  22DA               	addwfc	fsr2h,f,c
  6865  000210  2ADF               	incf	indf2,f,c
  6866                           
  6867                           ;my_i2c.c: 154: ic_ptr->error_code = 0x6;
  6868  000212  0101               	movlb	1	; () banked
  6869  000214  EE20 F00D          	lfsr	2,13
  6870  000218  0101               	movlb	1	; () banked
  6871  00021A  51A8               	movf	_ic_ptr& (0+255),w,b
  6872  00021C  26D9               	addwf	fsr2l,f,c
  6873  00021E  0101               	movlb	1	; () banked
  6874  000220  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6875  000222  22DA               	addwfc	fsr2h,f,c
  6876  000224  0E06               	movlw	6
  6877  000226  6EDF               	movwf	indf2,c
  6878                           
  6879                           ; BSR set to: 1
  6880  000228  D158               	goto	L8
  6881  00022A                     i2l3331:
  6882                           
  6883                           ; BSR set to: 1
  6884  00022A  0101               	movlb	1	; () banked
  6885  00022C  0101               	movlb	1	; () banked
  6886  00022E  5174               	movf	i2c_int_handler@data_read& (0+255),w,b
  6887  000230  B4D8               	btfsc	status,2,c
  6888  000232  D174               	goto	i2l272
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;my_i2c.c: 159: ic_ptr->event_count++;
  6892  000234  0101               	movlb	1	; () banked
  6893  000236  EE20 F00B          	lfsr	2,11
  6894  00023A  0101               	movlb	1	; () banked
  6895  00023C  51A8               	movf	_ic_ptr& (0+255),w,b
  6896  00023E  26D9               	addwf	fsr2l,f,c
  6897  000240  0101               	movlb	1	; () banked
  6898  000242  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6899  000244  22DA               	addwfc	fsr2h,f,c
  6900  000246  2ADF               	incf	indf2,f,c
  6901                           
  6902                           ; BSR set to: 1
  6903                           ;my_i2c.c: 160: if (SSPSTATbits.D_A == 0) {
  6904  000248  BAC7               	btfsc	4039,5,c	;volatile
  6905  00024A  D019               	goto	i2l3347
  6906                           
  6907                           ; BSR set to: 1
  6908                           ;my_i2c.c: 161: if (SSPSTATbits.R_W == 0) {
  6909  00024C  B4C7               	btfsc	4039,2,c	;volatile
  6910  00024E  D00B               	goto	i2l3341
  6911                           
  6912                           ; BSR set to: 1
  6913                           ;my_i2c.c: 162: ic_ptr->status = 0x7;
  6914  000250  0101               	movlb	1	; () banked
  6915  000252  EE20 F00C          	lfsr	2,12
  6916  000256  0101               	movlb	1	; () banked
  6917  000258  51A8               	movf	_ic_ptr& (0+255),w,b
  6918  00025A  26D9               	addwf	fsr2l,f,c
  6919  00025C  0101               	movlb	1	; () banked
  6920  00025E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6921  000260  22DA               	addwfc	fsr2h,f,c
  6922  000262  0E07               	movlw	7
  6923  000264  D076               	goto	L5
  6924  000266                     i2l3341:
  6925                           
  6926                           ; BSR set to: 1
  6927                           ;my_i2c.c: 164: ic_ptr->status = 0x8;
  6928  000266  0101               	movlb	1	; () banked
  6929  000268  EE20 F00C          	lfsr	2,12
  6930  00026C  0101               	movlb	1	; () banked
  6931  00026E  51A8               	movf	_ic_ptr& (0+255),w,b
  6932  000270  26D9               	addwf	fsr2l,f,c
  6933  000272  0101               	movlb	1	; () banked
  6934  000274  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6935  000276  22DA               	addwfc	fsr2h,f,c
  6936  000278  0E08               	movlw	8
  6937  00027A  6EDF               	movwf	indf2,c
  6938  00027C  D11D               	goto	L9
  6939  00027E                     i2l3347:
  6940                           
  6941                           ;my_i2c.c: 170: ic_ptr->error_count++;
  6942  00027E  0101               	movlb	1	; () banked
  6943  000280  EE20 F00E          	lfsr	2,14
  6944  000284  0101               	movlb	1	; () banked
  6945  000286  51A8               	movf	_ic_ptr& (0+255),w,b
  6946  000288  26D9               	addwf	fsr2l,f,c
  6947  00028A  0101               	movlb	1	; () banked
  6948  00028C  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6949  00028E  22DA               	addwfc	fsr2h,f,c
  6950  000290  2ADF               	incf	indf2,f,c
  6951                           
  6952                           ;my_i2c.c: 171: ic_ptr->status = 0x5;
  6953  000292  0101               	movlb	1	; () banked
  6954  000294  EE20 F00C          	lfsr	2,12
  6955  000298  0101               	movlb	1	; () banked
  6956  00029A  51A8               	movf	_ic_ptr& (0+255),w,b
  6957  00029C  26D9               	addwf	fsr2l,f,c
  6958  00029E  0101               	movlb	1	; () banked
  6959  0002A0  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6960  0002A2  22DA               	addwfc	fsr2h,f,c
  6961  0002A4  0E05               	movlw	5
  6962  0002A6  6EDF               	movwf	indf2,c
  6963                           
  6964                           ;my_i2c.c: 172: ic_ptr->error_code = 0x6;
  6965  0002A8  0101               	movlb	1	; () banked
  6966  0002AA  EE20 F00D          	lfsr	2,13
  6967  0002AE  0101               	movlb	1	; () banked
  6968  0002B0  51A8               	movf	_ic_ptr& (0+255),w,b
  6969  0002B2  26D9               	addwf	fsr2l,f,c
  6970  0002B4  0101               	movlb	1	; () banked
  6971  0002B6  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6972  0002B8  22DA               	addwfc	fsr2h,f,c
  6973  0002BA  0E06               	movlw	6
  6974  0002BC  D04A               	goto	L5
  6975  0002BE                     i2l3349:
  6976                           
  6977                           ; BSR set to: 1
  6978                           ;my_i2c.c: 178: {
  6979                           ;my_i2c.c: 179: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6980  0002BE  0101               	movlb	1	; () banked
  6981  0002C0  EE20 F01A          	lfsr	2,26
  6982  0002C4  0101               	movlb	1	; () banked
  6983  0002C6  51A8               	movf	_ic_ptr& (0+255),w,b
  6984  0002C8  26D9               	addwf	fsr2l,f,c
  6985  0002CA  0101               	movlb	1	; () banked
  6986  0002CC  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6987  0002CE  22DA               	addwfc	fsr2h,f,c
  6988  0002D0  50DF               	movf	indf2,w,c
  6989  0002D2  0100               	movlb	0	; () banked
  6990  0002D4  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  6991  0002D6  0101               	movlb	1	; () banked
  6992  0002D8  EE20 F019          	lfsr	2,25
  6993  0002DC  0101               	movlb	1	; () banked
  6994  0002DE  51A8               	movf	_ic_ptr& (0+255),w,b
  6995  0002E0  26D9               	addwf	fsr2l,f,c
  6996  0002E2  0101               	movlb	1	; () banked
  6997  0002E4  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  6998  0002E6  22DA               	addwfc	fsr2h,f,c
  6999  0002E8  50DF               	movf	indf2,w,c
  7000  0002EA  0100               	movlb	0	; () banked
  7001  0002EC  5DF5               	subwf	??_i2c_int_handler& (0+255),w,b
  7002  0002EE  B0D8               	btfsc	status,0,c
  7003  0002F0  D0F4               	goto	L8
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;my_i2c.c: 180: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7007  0002F2  0101               	movlb	1	; () banked
  7008  0002F4  EE20 F01A          	lfsr	2,26
  7009  0002F8  0101               	movlb	1	; () banked
  7010  0002FA  51A8               	movf	_ic_ptr& (0+255),w,b
  7011  0002FC  26D9               	addwf	fsr2l,f,c
  7012  0002FE  0101               	movlb	1	; () banked
  7013  000300  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7014  000302  22DA               	addwfc	fsr2h,f,c
  7015  000304  50DF               	movf	indf2,w,c
  7016  000306  0100               	movlb	0	; () banked
  7017  000308  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7018  00030A  0100               	movlb	0	; () banked
  7019  00030C  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7020  00030E  0D01               	mullw	1
  7021  000310  0E0F               	movlw	15
  7022  000312  26F3               	addwf	prodl,f,c
  7023  000314  0E00               	movlw	0
  7024  000316  22F4               	addwfc	prodh,f,c
  7025  000318  50F3               	movf	prodl,w,c
  7026  00031A  0101               	movlb	1	; () banked
  7027  00031C  0101               	movlb	1	; () banked
  7028  00031E  25A8               	addwf	_ic_ptr& (0+255),w,b
  7029  000320  6ED9               	movwf	fsr2l,c
  7030  000322  50F4               	movf	prodh,w,c
  7031  000324  0101               	movlb	1	; () banked
  7032  000326  0101               	movlb	1	; () banked
  7033  000328  21A9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7034  00032A  6EDA               	movwf	fsr2h,c
  7035  00032C  50DF               	movf	indf2,w,c
  7036  00032E  6EC9               	movwf	4041,c	;volatile
  7037                           
  7038                           ; BSR set to: 1
  7039                           ;my_i2c.c: 181: ic_ptr->outbufind++;
  7040  000330  0101               	movlb	1	; () banked
  7041  000332  EE20 F01A          	lfsr	2,26
  7042  000336  0101               	movlb	1	; () banked
  7043  000338  51A8               	movf	_ic_ptr& (0+255),w,b
  7044  00033A  26D9               	addwf	fsr2l,f,c
  7045  00033C  0101               	movlb	1	; () banked
  7046  00033E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7047  000340  22DA               	addwfc	fsr2h,f,c
  7048  000342  2ADF               	incf	indf2,f,c
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;my_i2c.c: 182: data_written = 1;
  7052  000344  0100               	movlb	0	; () banked
  7053  000346  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7054  000348  0E01               	movlw	1
  7055  00034A  0101               	movlb	1	; () banked
  7056  00034C  0101               	movlb	1	; () banked
  7057  00034E  6F6F               	movwf	i2c_int_handler@data_written& (0+255),b
  7058  000350  D0C1               	goto	L6
  7059  000352                     L5:
  7060  000352  6EDF               	movwf	indf2,c
  7061  000354  D0E3               	goto	i2l272
  7062  000356                     i2l292:
  7063                           
  7064                           ; BSR set to: 1
  7065                           ;my_i2c.c: 190: {
  7066                           ;my_i2c.c: 192: if (SSPSTATbits.P == 1) {
  7067  000356  A8C7               	btfss	4039,4,c	;volatile
  7068  000358  D062               	goto	i2l3377
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;my_i2c.c: 194: ic_ptr->event_count++;
  7072  00035A  0101               	movlb	1	; () banked
  7073  00035C  EE20 F00B          	lfsr	2,11
  7074  000360  0101               	movlb	1	; () banked
  7075  000362  51A8               	movf	_ic_ptr& (0+255),w,b
  7076  000364  26D9               	addwf	fsr2l,f,c
  7077  000366  0101               	movlb	1	; () banked
  7078  000368  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7079  00036A  22DA               	addwfc	fsr2h,f,c
  7080  00036C  2ADF               	incf	indf2,f,c
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;my_i2c.c: 195: if (data_read) {
  7084  00036E  0101               	movlb	1	; () banked
  7085  000370  0101               	movlb	1	; () banked
  7086  000372  5174               	movf	i2c_int_handler@data_read& (0+255),w,b
  7087  000374  B4D8               	btfsc	status,2,c
  7088  000376  D04A               	goto	i2l3373
  7089                           
  7090                           ; BSR set to: 1
  7091                           ;my_i2c.c: 196: if (SSPSTATbits.D_A == 1) {
  7092  000378  AAC7               	btfss	4039,5,c	;volatile
  7093  00037A  D027               	goto	i2l3371
  7094                           
  7095                           ; BSR set to: 1
  7096                           ;my_i2c.c: 197: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7097  00037C  0101               	movlb	1	; () banked
  7098  00037E  EE20 F00A          	lfsr	2,10
  7099  000382  0101               	movlb	1	; () banked
  7100  000384  51A8               	movf	_ic_ptr& (0+255),w,b
  7101  000386  26D9               	addwf	fsr2l,f,c
  7102  000388  0101               	movlb	1	; () banked
  7103  00038A  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7104  00038C  22DA               	addwfc	fsr2h,f,c
  7105  00038E  50DF               	movf	indf2,w,c
  7106  000390  0100               	movlb	0	; () banked
  7107  000392  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7108  000394  0100               	movlb	0	; () banked
  7109  000396  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7110  000398  0D01               	mullw	1
  7111  00039A  50F3               	movf	prodl,w,c
  7112  00039C  0101               	movlb	1	; () banked
  7113  00039E  0101               	movlb	1	; () banked
  7114  0003A0  25A8               	addwf	_ic_ptr& (0+255),w,b
  7115  0003A2  6ED9               	movwf	fsr2l,c
  7116  0003A4  50F4               	movf	prodh,w,c
  7117  0003A6  0101               	movlb	1	; () banked
  7118  0003A8  0101               	movlb	1	; () banked
  7119  0003AA  21A9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7120  0003AC  6EDA               	movwf	fsr2h,c
  7121  0003AE  0101               	movlb	1	; () banked
  7122  0003B0  C171  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;my_i2c.c: 198: ic_ptr->buflen++;
  7126  0003B4  0101               	movlb	1	; () banked
  7127  0003B6  EE20 F00A          	lfsr	2,10
  7128  0003BA  0101               	movlb	1	; () banked
  7129  0003BC  51A8               	movf	_ic_ptr& (0+255),w,b
  7130  0003BE  26D9               	addwf	fsr2l,f,c
  7131  0003C0  0101               	movlb	1	; () banked
  7132  0003C2  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7133  0003C4  22DA               	addwfc	fsr2h,f,c
  7134  0003C6  2ADF               	incf	indf2,f,c
  7135  0003C8  D021               	goto	i2l3373
  7136  0003CA                     i2l3371:
  7137                           
  7138                           ;my_i2c.c: 201: ic_ptr->error_count++;
  7139  0003CA  0101               	movlb	1	; () banked
  7140  0003CC  EE20 F00E          	lfsr	2,14
  7141  0003D0  0101               	movlb	1	; () banked
  7142  0003D2  51A8               	movf	_ic_ptr& (0+255),w,b
  7143  0003D4  26D9               	addwf	fsr2l,f,c
  7144  0003D6  0101               	movlb	1	; () banked
  7145  0003D8  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7146  0003DA  22DA               	addwfc	fsr2h,f,c
  7147  0003DC  2ADF               	incf	indf2,f,c
  7148                           
  7149                           ;my_i2c.c: 202: ic_ptr->error_code = 0x6;
  7150  0003DE  0101               	movlb	1	; () banked
  7151  0003E0  EE20 F00D          	lfsr	2,13
  7152  0003E4  0101               	movlb	1	; () banked
  7153  0003E6  51A8               	movf	_ic_ptr& (0+255),w,b
  7154  0003E8  26D9               	addwf	fsr2l,f,c
  7155  0003EA  0101               	movlb	1	; () banked
  7156  0003EC  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7157  0003EE  22DA               	addwfc	fsr2h,f,c
  7158  0003F0  0E06               	movlw	6
  7159  0003F2  6EDF               	movwf	indf2,c
  7160                           
  7161                           ;my_i2c.c: 203: ic_ptr->status = 0x5;
  7162  0003F4  0101               	movlb	1	; () banked
  7163  0003F6  EE20 F00C          	lfsr	2,12
  7164  0003FA  0101               	movlb	1	; () banked
  7165  0003FC  51A8               	movf	_ic_ptr& (0+255),w,b
  7166  0003FE  26D9               	addwf	fsr2l,f,c
  7167  000400  0101               	movlb	1	; () banked
  7168  000402  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7169  000404  22DA               	addwfc	fsr2h,f,c
  7170  000406  0E05               	movlw	5
  7171  000408  6EDF               	movwf	indf2,c
  7172  00040A  D067               	goto	L8
  7173  00040C                     i2l3373:
  7174                           
  7175                           ; BSR set to: 1
  7176                           ;my_i2c.c: 206: msg_ready = 1;
  7177  00040C  0100               	movlb	0	; () banked
  7178  00040E  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7179  000410  0E01               	movlw	1
  7180  000412  0101               	movlb	1	; () banked
  7181  000414  0101               	movlb	1	; () banked
  7182  000416  6F73               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7183  000418  0100               	movlb	0	; () banked
  7184  00041A  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7185                           
  7186                           ; BSR set to: 0
  7187  00041C  D05E               	goto	L8
  7188  00041E                     i2l3377:
  7189                           
  7190                           ; BSR set to: 1
  7191  00041E  0101               	movlb	1	; () banked
  7192  000420  0101               	movlb	1	; () banked
  7193  000422  5174               	movf	i2c_int_handler@data_read& (0+255),w,b
  7194  000424  B4D8               	btfsc	status,2,c
  7195  000426  D07A               	goto	i2l272
  7196                           
  7197                           ; BSR set to: 1
  7198                           ;my_i2c.c: 210: ic_ptr->event_count++;
  7199  000428  0101               	movlb	1	; () banked
  7200  00042A  EE20 F00B          	lfsr	2,11
  7201  00042E  0101               	movlb	1	; () banked
  7202  000430  51A8               	movf	_ic_ptr& (0+255),w,b
  7203  000432  26D9               	addwf	fsr2l,f,c
  7204  000434  0101               	movlb	1	; () banked
  7205  000436  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7206  000438  22DA               	addwfc	fsr2h,f,c
  7207  00043A  2ADF               	incf	indf2,f,c
  7208                           
  7209                           ; BSR set to: 1
  7210                           ;my_i2c.c: 211: if (SSPSTATbits.D_A == 1) {
  7211  00043C  AAC7               	btfss	4039,5,c	;volatile
  7212  00043E  D027               	goto	i2l300
  7213                           
  7214                           ; BSR set to: 1
  7215                           ;my_i2c.c: 212: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7216  000440  0101               	movlb	1	; () banked
  7217  000442  EE20 F00A          	lfsr	2,10
  7218  000446  0101               	movlb	1	; () banked
  7219  000448  51A8               	movf	_ic_ptr& (0+255),w,b
  7220  00044A  26D9               	addwf	fsr2l,f,c
  7221  00044C  0101               	movlb	1	; () banked
  7222  00044E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7223  000450  22DA               	addwfc	fsr2h,f,c
  7224  000452  50DF               	movf	indf2,w,c
  7225  000454  0100               	movlb	0	; () banked
  7226  000456  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7227  000458  0100               	movlb	0	; () banked
  7228  00045A  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7229  00045C  0D01               	mullw	1
  7230  00045E  50F3               	movf	prodl,w,c
  7231  000460  0101               	movlb	1	; () banked
  7232  000462  0101               	movlb	1	; () banked
  7233  000464  25A8               	addwf	_ic_ptr& (0+255),w,b
  7234  000466  6ED9               	movwf	fsr2l,c
  7235  000468  50F4               	movf	prodh,w,c
  7236  00046A  0101               	movlb	1	; () banked
  7237  00046C  0101               	movlb	1	; () banked
  7238  00046E  21A9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7239  000470  6EDA               	movwf	fsr2h,c
  7240  000472  0101               	movlb	1	; () banked
  7241  000474  C171  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7242                           
  7243                           ; BSR set to: 1
  7244                           ;my_i2c.c: 213: ic_ptr->buflen++;
  7245  000478  0101               	movlb	1	; () banked
  7246  00047A  EE20 F00A          	lfsr	2,10
  7247  00047E  0101               	movlb	1	; () banked
  7248  000480  51A8               	movf	_ic_ptr& (0+255),w,b
  7249  000482  26D9               	addwf	fsr2l,f,c
  7250  000484  0101               	movlb	1	; () banked
  7251  000486  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7252  000488  22DA               	addwfc	fsr2h,f,c
  7253  00048A  2ADF               	incf	indf2,f,c
  7254                           
  7255                           ;my_i2c.c: 214: } else {
  7256  00048C  D047               	goto	i2l272
  7257  00048E                     i2l300:
  7258                           
  7259                           ; BSR set to: 1
  7260                           ;my_i2c.c: 215: if (SSPSTATbits.R_W == 1) {
  7261  00048E  A4C7               	btfss	4039,2,c	;volatile
  7262  000490  D6B6               	goto	i2l3329
  7263                           
  7264                           ; BSR set to: 1
  7265                           ;my_i2c.c: 216: ic_ptr->status = 0x8;
  7266  000492  0101               	movlb	1	; () banked
  7267  000494  EE20 F00C          	lfsr	2,12
  7268  000498  0101               	movlb	1	; () banked
  7269  00049A  51A8               	movf	_ic_ptr& (0+255),w,b
  7270  00049C  26D9               	addwf	fsr2l,f,c
  7271  00049E  0101               	movlb	1	; () banked
  7272  0004A0  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7273  0004A2  22DA               	addwfc	fsr2h,f,c
  7274  0004A4  0E08               	movlw	8
  7275  0004A6  6EDF               	movwf	indf2,c
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;my_i2c.c: 217: msg_ready = 1;
  7279  0004A8  0100               	movlb	0	; () banked
  7280  0004AA  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7281  0004AC  0E01               	movlw	1
  7282  0004AE  0101               	movlb	1	; () banked
  7283  0004B0  0101               	movlb	1	; () banked
  7284  0004B2  6F73               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7285  0004B4  0100               	movlb	0	; () banked
  7286  0004B6  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7287  0004B8                     L9:
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;my_i2c.c: 218: msg_to_send = 1;
  7291  0004B8  0100               	movlb	0	; () banked
  7292  0004BA  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7293  0004BC  0E01               	movlw	1
  7294  0004BE  0101               	movlb	1	; () banked
  7295  0004C0  0101               	movlb	1	; () banked
  7296  0004C2  6F72               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7297  0004C4  0100               	movlb	0	; () banked
  7298  0004C6  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;my_i2c.c: 220: data_read = 0;
  7302  0004C8  0100               	movlb	0	; () banked
  7303  0004CA  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7304  0004CC  0E00               	movlw	0
  7305  0004CE  0101               	movlb	1	; () banked
  7306  0004D0  0101               	movlb	1	; () banked
  7307  0004D2  6F74               	movwf	i2c_int_handler@data_read& (0+255),b
  7308  0004D4                     L6:
  7309  0004D4  0100               	movlb	0	; () banked
  7310  0004D6  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7311                           
  7312                           ;my_i2c.c: 221: } else {
  7313  0004D8  D021               	goto	i2l272
  7314  0004DA                     L8:
  7315                           
  7316                           ;my_i2c.c: 224: ic_ptr->status = 0x5;
  7317  0004DA  0101               	movlb	1	; () banked
  7318  0004DC  EE20 F00C          	lfsr	2,12
  7319  0004E0  0101               	movlb	1	; () banked
  7320  0004E2  51A8               	movf	_ic_ptr& (0+255),w,b
  7321  0004E4  26D9               	addwf	fsr2l,f,c
  7322  0004E6  0101               	movlb	1	; () banked
  7323  0004E8  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7324  0004EA  22DA               	addwfc	fsr2h,f,c
  7325  0004EC  0E05               	movlw	5
  7326  0004EE  D731               	goto	L5
  7327  0004F0                     i2l3399:
  7328                           
  7329                           ; BSR set to: 1
  7330  0004F0  0101               	movlb	1	; () banked
  7331  0004F2  EE20 F00C          	lfsr	2,12
  7332  0004F6  0101               	movlb	1	; () banked
  7333  0004F8  51A8               	movf	_ic_ptr& (0+255),w,b
  7334  0004FA  26D9               	addwf	fsr2l,f,c
  7335  0004FC  0101               	movlb	1	; () banked
  7336  0004FE  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7337  000500  22DA               	addwfc	fsr2h,f,c
  7338  000502  50DF               	movf	indf2,w,c
  7339                           
  7340                           ; Switch size 1, requested type "space"
  7341                           ; Number of cases is 4, Range of values is 5 to 8
  7342                           ; switch strategies available:
  7343                           ; Name         Instructions Cycles
  7344                           ; simple_byte           13     7 (average)
  7345                           ;	Chosen strategy is simple_byte
  7346  000504  0A05               	xorlw	5	; case 5
  7347  000506  B4D8               	btfsc	status,2,c
  7348  000508  D63C               	goto	i2l274
  7349  00050A  0A03               	xorlw	3	; case 6
  7350  00050C  B4D8               	btfsc	status,2,c
  7351  00050E  D65B               	goto	i2l278
  7352  000510  0A01               	xorlw	1	; case 7
  7353  000512  B4D8               	btfsc	status,2,c
  7354  000514  D720               	goto	i2l292
  7355  000516  0A0F               	xorlw	15	; case 8
  7356  000518  B4D8               	btfsc	status,2,c
  7357  00051A  D6D1               	goto	i2l3349
  7358  00051C                     i2l272:
  7359                           
  7360                           ;my_i2c.c: 231: }
  7361                           ;my_i2c.c: 234: if (data_read || data_written) {
  7362  00051C  0101               	movlb	1	; () banked
  7363  00051E  0101               	movlb	1	; () banked
  7364  000520  6774               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7365  000522  D005               	goto	i2l306
  7366                           
  7367                           ; BSR set to: 1
  7368  000524  0101               	movlb	1	; () banked
  7369  000526  0101               	movlb	1	; () banked
  7370  000528  516F               	movf	i2c_int_handler@data_written& (0+255),w,b
  7371  00052A  B4D8               	btfsc	status,2,c
  7372  00052C  D002               	goto	i2l3405
  7373  00052E                     i2l306:
  7374                           
  7375                           ; BSR set to: 1
  7376                           ;my_i2c.c: 236: if (SSPCON1bits.CKP == 0) {
  7377  00052E  A8C6               	btfss	4038,4,c	;volatile
  7378                           
  7379                           ; BSR set to: 1
  7380                           ;my_i2c.c: 237: SSPCON1bits.CKP = 1;
  7381  000530  88C6               	bsf	4038,4,c	;volatile
  7382  000532                     i2l3405:
  7383                           
  7384                           ; BSR set to: 1
  7385                           ;my_i2c.c: 238: }
  7386                           ;my_i2c.c: 239: }
  7387                           ;my_i2c.c: 242: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7388  000532  0101               	movlb	1	; () banked
  7389  000534  EE20 F00A          	lfsr	2,10
  7390  000538  0101               	movlb	1	; () banked
  7391  00053A  51A8               	movf	_ic_ptr& (0+255),w,b
  7392  00053C  26D9               	addwf	fsr2l,f,c
  7393  00053E  0101               	movlb	1	; () banked
  7394  000540  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7395  000542  22DA               	addwfc	fsr2h,f,c
  7396  000544  0E08               	movlw	8
  7397  000546  64DF               	cpfsgt	indf2,c
  7398  000548  D024               	goto	i2l3411
  7399                           
  7400                           ; BSR set to: 1
  7401  00054A  0101               	movlb	1	; () banked
  7402  00054C  0101               	movlb	1	; () banked
  7403  00054E  6773               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7404  000550  D020               	goto	i2l3411
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;my_i2c.c: 243: ic_ptr->status = 0x5;
  7408  000552  0101               	movlb	1	; () banked
  7409  000554  EE20 F00C          	lfsr	2,12
  7410  000558  0101               	movlb	1	; () banked
  7411  00055A  51A8               	movf	_ic_ptr& (0+255),w,b
  7412  00055C  26D9               	addwf	fsr2l,f,c
  7413  00055E  0101               	movlb	1	; () banked
  7414  000560  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7415  000562  22DA               	addwfc	fsr2h,f,c
  7416  000564  0E05               	movlw	5
  7417  000566  6EDF               	movwf	indf2,c
  7418                           
  7419                           ;my_i2c.c: 244: ic_ptr->error_count++;
  7420  000568  0101               	movlb	1	; () banked
  7421  00056A  EE20 F00E          	lfsr	2,14
  7422  00056E  0101               	movlb	1	; () banked
  7423  000570  51A8               	movf	_ic_ptr& (0+255),w,b
  7424  000572  26D9               	addwf	fsr2l,f,c
  7425  000574  0101               	movlb	1	; () banked
  7426  000576  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7427  000578  22DA               	addwfc	fsr2h,f,c
  7428  00057A  2ADF               	incf	indf2,f,c
  7429                           
  7430                           ;my_i2c.c: 245: ic_ptr->error_code = 0x7;
  7431  00057C  0101               	movlb	1	; () banked
  7432  00057E  EE20 F00D          	lfsr	2,13
  7433  000582  0101               	movlb	1	; () banked
  7434  000584  51A8               	movf	_ic_ptr& (0+255),w,b
  7435  000586  26D9               	addwf	fsr2l,f,c
  7436  000588  0101               	movlb	1	; () banked
  7437  00058A  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7438  00058C  22DA               	addwfc	fsr2h,f,c
  7439  00058E  0E07               	movlw	7
  7440  000590  6EDF               	movwf	indf2,c
  7441  000592                     i2l3411:
  7442                           
  7443                           ; BSR set to: 1
  7444                           ;my_i2c.c: 246: }
  7445                           ;my_i2c.c: 248: if (msg_ready) {
  7446  000592  0101               	movlb	1	; () banked
  7447  000594  0101               	movlb	1	; () banked
  7448  000596  5173               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7449  000598  B4D8               	btfsc	status,2,c
  7450  00059A  D032               	goto	i2l3421
  7451                           
  7452                           ; BSR set to: 1
  7453                           ;my_i2c.c: 249: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7454  00059C  0101               	movlb	1	; () banked
  7455  00059E  EE20 F00B          	lfsr	2,11
  7456  0005A2  0101               	movlb	1	; () banked
  7457  0005A4  51A8               	movf	_ic_ptr& (0+255),w,b
  7458  0005A6  26D9               	addwf	fsr2l,f,c
  7459  0005A8  0101               	movlb	1	; () banked
  7460  0005AA  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7461  0005AC  22DA               	addwfc	fsr2h,f,c
  7462  0005AE  0101               	movlb	1	; () banked
  7463  0005B0  EE10 F00A          	lfsr	1,10
  7464  0005B4  0101               	movlb	1	; () banked
  7465  0005B6  51A8               	movf	_ic_ptr& (0+255),w,b
  7466  0005B8  26E1               	addwf	fsr1l,f,c
  7467  0005BA  0101               	movlb	1	; () banked
  7468  0005BC  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7469  0005BE  22E2               	addwfc	fsr1h,f,c
  7470  0005C0  50E7               	movf	indf1,w,c
  7471  0005C2  0100               	movlb	0	; () banked
  7472  0005C4  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7473  0005C6  0100               	movlb	0	; () banked
  7474  0005C8  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7475  0005CA  0D01               	mullw	1
  7476  0005CC  50F3               	movf	prodl,w,c
  7477  0005CE  0101               	movlb	1	; () banked
  7478  0005D0  0101               	movlb	1	; () banked
  7479  0005D2  25A8               	addwf	_ic_ptr& (0+255),w,b
  7480  0005D4  6EE1               	movwf	fsr1l,c
  7481  0005D6  50F4               	movf	prodh,w,c
  7482  0005D8  0101               	movlb	1	; () banked
  7483  0005DA  0101               	movlb	1	; () banked
  7484  0005DC  21A9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7485  0005DE  6EE2               	movwf	fsr1h,c
  7486  0005E0  CFDF FFE7          	movff	indf2,indf1
  7487                           
  7488                           ; BSR set to: 1
  7489                           ;my_i2c.c: 250: setBrainReqData(ic_ptr->buffer);
  7490  0005E4  0101               	movlb	1	; () banked
  7491  0005E6  C1A9  F032         	movff	_ic_ptr+1,setBrainReqData@buf+1
  7492  0005EA  0101               	movlb	1	; () banked
  7493  0005EC  C1A8  F031         	movff	_ic_ptr,setBrainReqData@buf
  7494  0005F0  ECFD  F00E         	call	_setBrainReqData	;wreg free
  7495                           
  7496                           ;my_i2c.c: 251: sendRequestedData();
  7497  0005F4  ECFD  F00B         	call	_sendRequestedData	;wreg free
  7498                           
  7499                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
  7500  0005F8  0101               	movlb	1	; () banked
  7501  0005FA  EE20 F00A          	lfsr	2,10
  7502  0005FE  D045               	goto	L7
  7503  000600                     i2l3421:
  7504                           
  7505                           ; BSR set to: 1
  7506  000600  0101               	movlb	1	; () banked
  7507  000602  EE20 F00E          	lfsr	2,14
  7508  000606  0101               	movlb	1	; () banked
  7509  000608  51A8               	movf	_ic_ptr& (0+255),w,b
  7510  00060A  26D9               	addwf	fsr2l,f,c
  7511  00060C  0101               	movlb	1	; () banked
  7512  00060E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7513  000610  22DA               	addwfc	fsr2h,f,c
  7514  000612  50DF               	movf	indf2,w,c
  7515  000614  B4D8               	btfsc	status,2,c
  7516  000616  D041               	goto	i2l3429
  7517                           
  7518                           ; BSR set to: 1
  7519                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
  7520  000618  0101               	movlb	1	; () banked
  7521  00061A  EE20 F00E          	lfsr	2,14
  7522  00061E  0101               	movlb	1	; () banked
  7523  000620  51A8               	movf	_ic_ptr& (0+255),w,b
  7524  000622  26D9               	addwf	fsr2l,f,c
  7525  000624  0101               	movlb	1	; () banked
  7526  000626  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7527  000628  22DA               	addwfc	fsr2h,f,c
  7528  00062A  50DF               	movf	indf2,w,c
  7529  00062C  0101               	movlb	1	; () banked
  7530  00062E  0101               	movlb	1	; () banked
  7531  000630  6F6C               	movwf	i2c_int_handler@error_buf& (0+255),b
  7532                           
  7533                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
  7534  000632  0101               	movlb	1	; () banked
  7535  000634  EE20 F00D          	lfsr	2,13
  7536  000638  0101               	movlb	1	; () banked
  7537  00063A  51A8               	movf	_ic_ptr& (0+255),w,b
  7538  00063C  26D9               	addwf	fsr2l,f,c
  7539  00063E  0101               	movlb	1	; () banked
  7540  000640  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7541  000642  22DA               	addwfc	fsr2h,f,c
  7542  000644  50DF               	movf	indf2,w,c
  7543  000646  0101               	movlb	1	; () banked
  7544  000648  0101               	movlb	1	; () banked
  7545  00064A  6F6D               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7546                           
  7547                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
  7548  00064C  0101               	movlb	1	; () banked
  7549  00064E  EE20 F00B          	lfsr	2,11
  7550  000652  0101               	movlb	1	; () banked
  7551  000654  51A8               	movf	_ic_ptr& (0+255),w,b
  7552  000656  26D9               	addwf	fsr2l,f,c
  7553  000658  0101               	movlb	1	; () banked
  7554  00065A  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7555  00065C  22DA               	addwfc	fsr2h,f,c
  7556  00065E  50DF               	movf	indf2,w,c
  7557  000660  0101               	movlb	1	; () banked
  7558  000662  0101               	movlb	1	; () banked
  7559  000664  6F6E               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7560                           
  7561                           ; BSR set to: 1
  7562                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7563  000666  0100               	movlb	0	; () banked
  7564  000668  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7565  00066A  0E29               	movlw	41
  7566  00066C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7567  00066E  0100               	movlb	0	; () banked
  7568  000670  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7569  000672  0101               	movlb	1	; () banked
  7570  000674  0E01               	movlw	high i2c_int_handler@error_buf
  7571  000676  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7572  000678  0101               	movlb	1	; () banked
  7573  00067A  0E6C               	movlw	low i2c_int_handler@error_buf
  7574  00067C  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7575  00067E  0E03               	movlw	3
  7576  000680  ECAF  F00E         	call	_ToMainHigh_sendmsg
  7577                           
  7578                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
  7579  000684  0101               	movlb	1	; () banked
  7580  000686  EE20 F00E          	lfsr	2,14
  7581  00068A                     L7:
  7582  00068A  0101               	movlb	1	; () banked
  7583  00068C  51A8               	movf	_ic_ptr& (0+255),w,b
  7584  00068E  26D9               	addwf	fsr2l,f,c
  7585  000690  0101               	movlb	1	; () banked
  7586  000692  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  7587  000694  22DA               	addwfc	fsr2h,f,c
  7588  000696  0E00               	movlw	0
  7589  000698  6EDF               	movwf	indf2,c
  7590  00069A                     i2l3429:
  7591                           
  7592                           ; BSR set to: 1
  7593                           ;my_i2c.c: 260: }
  7594                           ;my_i2c.c: 261: if (msg_to_send) {
  7595  00069A  0101               	movlb	1	; () banked
  7596  00069C  0101               	movlb	1	; () banked
  7597  00069E  5172               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7598  0006A0  B4D8               	btfsc	status,2,c
  7599  0006A2  0012               	return	
  7600                           
  7601                           ; BSR set to: 1
  7602                           ;my_i2c.c: 264: sendRequestedData();
  7603  0006A4  ECFD  F00B         	call	_sendRequestedData	;wreg free
  7604                           
  7605                           ;my_i2c.c: 265: msg_to_send = 0;
  7606  0006A8  0100               	movlb	0	; () banked
  7607  0006AA  6FF5               	movwf	??_i2c_int_handler& (0+255),b
  7608  0006AC  0E00               	movlw	0
  7609  0006AE  0101               	movlb	1	; () banked
  7610  0006B0  0101               	movlb	1	; () banked
  7611  0006B2  6F72               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7612  0006B4  0100               	movlb	0	; () banked
  7613  0006B6  51F5               	movf	??_i2c_int_handler& (0+255),w,b
  7614  0006B8  0012               	return	
  7615  0006BA                     __end_of_i2c_int_handler:
  7616                           	opt stack 0
  7617                           pclatu	equ	0xFFB
  7618                           pclath	equ	0xFFA
  7619                           tblptru	equ	0xFF8
  7620                           tblptrh	equ	0xFF7
  7621                           tblptrl	equ	0xFF6
  7622                           tablat	equ	0xFF5
  7623                           prodh	equ	0xFF4
  7624                           prodl	equ	0xFF3
  7625                           intcon	equ	0xFF2
  7626                           postinc0	equ	0xFEE
  7627                           fsr0h	equ	0xFEA
  7628                           fsr0l	equ	0xFE9
  7629                           wreg	equ	0xFE8
  7630                           indf1	equ	0xFE7
  7631                           postdec1	equ	0xFE5
  7632                           fsr1h	equ	0xFE2
  7633                           fsr1l	equ	0xFE1
  7634                           bsr	equ	0xFE0
  7635                           indf2	equ	0xFDF
  7636                           postinc2	equ	0xFDE
  7637                           postdec2	equ	0xFDD
  7638                           fsr2h	equ	0xFDA
  7639                           fsr2l	equ	0xFD9
  7640                           status	equ	0xFD8
  7641                           
  7642 ;; *************** function _setBrainReqData *****************
  7643 ;; Defined at:
  7644 ;;		line 15 in file "../src/sensorcomm.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  buf             2   48[COMRAM] PTR unsigned char 
  7647 ;;		 -> NULL(0), main@ic(28), 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;		None
  7650 ;; Return value:  Size  Location     Type
  7651 ;;		None               void
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0, cstack
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7659 ;;      Params:         2       0       0       0       0
  7660 ;;      Locals:         0       0       0       0       0
  7661 ;;      Temps:          0       0       0       0       0
  7662 ;;      Totals:         2       0       0       0       0
  7663 ;;Total ram usage:        2 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    1
  7666 ;; This function calls:
  7667 ;;		_unpackBrainMsg
  7668 ;; This function is called by:
  7669 ;;		_i2c_int_handler
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text43
  7674  001DFA                     __ptext43:
  7675                           	opt stack 0
  7676  001DFA                     _setBrainReqData:
  7677                           	opt stack 18
  7678                           
  7679                           ;sensorcomm.c: 19: BrainMsgRecv = unpackBrainMsg(buf);
  7680                           
  7681                           ;incstack = 0
  7682  001DFA  C032  F030         	movff	setBrainReqData@buf+1,unpackBrainMsg@buf+1
  7683  001DFE  C031  F02F         	movff	setBrainReqData@buf,unpackBrainMsg@buf
  7684  001E02  EC44  F00F         	call	_unpackBrainMsg	;wreg free
  7685  001E06  C02F  F0F6         	movff	?_unpackBrainMsg,_BrainMsgRecv
  7686  001E0A  C030  F0F7         	movff	?_unpackBrainMsg+1,_BrainMsgRecv+1
  7687  001E0E  0012               	return	
  7688  001E10                     __end_of_setBrainReqData:
  7689                           	opt stack 0
  7690                           pclatu	equ	0xFFB
  7691                           pclath	equ	0xFFA
  7692                           tblptru	equ	0xFF8
  7693                           tblptrh	equ	0xFF7
  7694                           tblptrl	equ	0xFF6
  7695                           tablat	equ	0xFF5
  7696                           prodh	equ	0xFF4
  7697                           prodl	equ	0xFF3
  7698                           intcon	equ	0xFF2
  7699                           postinc0	equ	0xFEE
  7700                           fsr0h	equ	0xFEA
  7701                           fsr0l	equ	0xFE9
  7702                           wreg	equ	0xFE8
  7703                           indf1	equ	0xFE7
  7704                           postdec1	equ	0xFE5
  7705                           fsr1h	equ	0xFE2
  7706                           fsr1l	equ	0xFE1
  7707                           bsr	equ	0xFE0
  7708                           indf2	equ	0xFDF
  7709                           postinc2	equ	0xFDE
  7710                           postdec2	equ	0xFDD
  7711                           fsr2h	equ	0xFDA
  7712                           fsr2l	equ	0xFD9
  7713                           status	equ	0xFD8
  7714                           
  7715 ;; *************** function _unpackBrainMsg *****************
  7716 ;; Defined at:
  7717 ;;		line 42 in file "../../../../common/communication/brain_rover.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  buf             2   46[COMRAM] PTR unsigned char 
  7720 ;;		 -> NULL(0), main@ic(28), 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  2   46[COMRAM] PTR struct .
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7732 ;;      Params:         2       0       0       0       0
  7733 ;;      Locals:         0       0       0       0       0
  7734 ;;      Temps:          0       0       0       0       0
  7735 ;;      Totals:         2       0       0       0       0
  7736 ;;Total ram usage:        2 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_setBrainReqData
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text44
  7746  001E88                     __ptext44:
  7747                           	opt stack 0
  7748  001E88                     _unpackBrainMsg:
  7749                           	opt stack 18
  7750                           
  7751                           ;brain_rover.c: 43: return (BrainMsg*) buf;
  7752                           
  7753                           ;incstack = 0
  7754  001E88  C030  F030         	movff	unpackBrainMsg@buf+1,?_unpackBrainMsg+1
  7755  001E8C  C02F  F02F         	movff	unpackBrainMsg@buf,?_unpackBrainMsg
  7756  001E90  0012               	return	
  7757  001E92                     __end_of_unpackBrainMsg:
  7758                           	opt stack 0
  7759                           pclatu	equ	0xFFB
  7760                           pclath	equ	0xFFA
  7761                           tblptru	equ	0xFF8
  7762                           tblptrh	equ	0xFF7
  7763                           tblptrl	equ	0xFF6
  7764                           tablat	equ	0xFF5
  7765                           prodh	equ	0xFF4
  7766                           prodl	equ	0xFF3
  7767                           intcon	equ	0xFF2
  7768                           postinc0	equ	0xFEE
  7769                           fsr0h	equ	0xFEA
  7770                           fsr0l	equ	0xFE9
  7771                           wreg	equ	0xFE8
  7772                           indf1	equ	0xFE7
  7773                           postdec1	equ	0xFE5
  7774                           fsr1h	equ	0xFE2
  7775                           fsr1l	equ	0xFE1
  7776                           bsr	equ	0xFE0
  7777                           indf2	equ	0xFDF
  7778                           postinc2	equ	0xFDE
  7779                           postdec2	equ	0xFDD
  7780                           fsr2h	equ	0xFDA
  7781                           fsr2l	equ	0xFD9
  7782                           status	equ	0xFD8
  7783                           
  7784 ;; *************** function _sendRequestedData *****************
  7785 ;; Defined at:
  7786 ;;		line 22 in file "../src/sensorcomm.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  data           10  106[BANK0 ] struct .[10]
  7791 ;;  len             1  116[BANK0 ] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;		None               void
  7794 ;; Registers used:
  7795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7801 ;;      Params:         0       0       0       0       0
  7802 ;;      Locals:         0      11       0       0       0
  7803 ;;      Temps:          0       0       0       0       0
  7804 ;;      Totals:         0      11       0       0       0
  7805 ;;Total ram usage:       11 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    3
  7808 ;; This function calls:
  7809 ;;		_reqADData
  7810 ;;		_sendADdata
  7811 ;; This function is called by:
  7812 ;;		_i2c_int_handler
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text45
  7817  0017FA                     __ptext45:
  7818                           	opt stack 0
  7819  0017FA                     _sendRequestedData:
  7820                           	opt stack 16
  7821                           
  7822                           ;sensorcomm.c: 23: if(BrainMsgRecv->flags == 1){
  7823                           
  7824                           ;incstack = 0
  7825  0017FA  0E01               	movlw	1
  7826  0017FC  C0F6  FFD9         	movff	_BrainMsgRecv,fsr2l
  7827  001800  C0F7  FFDA         	movff	_BrainMsgRecv+1,fsr2h
  7828  001804  62DF               	cpfseq	indf2,c
  7829  001806  0012               	return	
  7830                           
  7831                           ;sensorcomm.c: 24: if(BrainMsgRecv->sensorMask == 0){
  7832  001808  0100               	movlb	0	; () banked
  7833  00180A  EE20 F001          	lfsr	2,1
  7834  00180E  0100               	movlb	0	; () banked
  7835  001810  51F6               	movf	_BrainMsgRecv& (0+255),w,b
  7836  001812  26D9               	addwf	fsr2l,f,c
  7837  001814  0100               	movlb	0	; () banked
  7838  001816  51F7               	movf	(_BrainMsgRecv+1)& (0+255),w,b
  7839  001818  22DA               	addwfc	fsr2h,f,c
  7840  00181A  50DF               	movf	indf2,w,c
  7841  00181C  A4D8               	btfss	status,2,c
  7842  00181E  0012               	return	
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;sensorcomm.c: 26: sensorADData data[10];
  7846                           ;sensorcomm.c: 27: uint8 len = reqADData(data);
  7847  001820  0100               	movlb	0	; () banked
  7848  001822  0E00               	movlw	high sendRequestedData@data
  7849  001824  6E30               	movwf	reqADData@buf+1,c
  7850  001826  0100               	movlb	0	; () banked
  7851  001828  0EEA               	movlw	low sendRequestedData@data
  7852  00182A  6E2F               	movwf	reqADData@buf,c
  7853  00182C  EC1C  F00A         	call	_reqADData	;wreg free
  7854  001830  0100               	movlb	0	; () banked
  7855  001832  0100               	movlb	0	; () banked
  7856  001834  6FF4               	movwf	sendRequestedData@len& (0+255),b
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;sensorcomm.c: 31: sendADdata(data, len);
  7860  001836  0100               	movlb	0	; () banked
  7861  001838  0E00               	movlw	high sendRequestedData@data
  7862  00183A  0100               	movlb	0	; () banked
  7863  00183C  0100               	movlb	0	; () banked
  7864  00183E  6F81               	movwf	(sendADdata@data+1)& (0+255),b
  7865  001840  0100               	movlb	0	; () banked
  7866  001842  0EEA               	movlw	low sendRequestedData@data
  7867  001844  0100               	movlb	0	; () banked
  7868  001846  0100               	movlb	0	; () banked
  7869  001848  6F80               	movwf	sendADdata@data& (0+255),b
  7870  00184A  0100               	movlb	0	; () banked
  7871  00184C  0100               	movlb	0	; () banked
  7872  00184E  C0F4  F082         	movff	sendRequestedData@len,sendADdata@len
  7873  001852  0100               	movlb	0	; () banked
  7874  001854  0100               	movlb	0	; () banked
  7875  001856  6B83               	clrf	(sendADdata@len+1)& (0+255),b
  7876  001858  EC5E  F00C         	call	_sendADdata	;wreg free
  7877  00185C  0012               	return	
  7878  00185E                     __end_of_sendRequestedData:
  7879                           	opt stack 0
  7880                           pclatu	equ	0xFFB
  7881                           pclath	equ	0xFFA
  7882                           tblptru	equ	0xFF8
  7883                           tblptrh	equ	0xFF7
  7884                           tblptrl	equ	0xFF6
  7885                           tablat	equ	0xFF5
  7886                           prodh	equ	0xFF4
  7887                           prodl	equ	0xFF3
  7888                           intcon	equ	0xFF2
  7889                           postinc0	equ	0xFEE
  7890                           fsr0h	equ	0xFEA
  7891                           fsr0l	equ	0xFE9
  7892                           wreg	equ	0xFE8
  7893                           indf1	equ	0xFE7
  7894                           postdec1	equ	0xFE5
  7895                           fsr1h	equ	0xFE2
  7896                           fsr1l	equ	0xFE1
  7897                           bsr	equ	0xFE0
  7898                           indf2	equ	0xFDF
  7899                           postinc2	equ	0xFDE
  7900                           postdec2	equ	0xFDD
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8
  7904                           
  7905 ;; *************** function _sendADdata *****************
  7906 ;; Defined at:
  7907 ;;		line 37 in file "../src/sensorcomm.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  data            2    0[BANK0 ] PTR struct .
  7910 ;;		 -> sendRequestedData@data(10), 
  7911 ;;  len             2    2[BANK0 ] int 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  outBuff       100    4[BANK0 ] unsigned char [100]
  7914 ;;  bytes_packed    2  104[BANK0 ] int 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;		None               void
  7917 ;; Registers used:
  7918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7924 ;;      Params:         0       4       0       0       0
  7925 ;;      Locals:         0     102       0       0       0
  7926 ;;      Temps:          0       0       0       0       0
  7927 ;;      Totals:         0     106       0       0       0
  7928 ;;Total ram usage:      106 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    2
  7931 ;; This function calls:
  7932 ;;		_packADData
  7933 ;;		i2_start_i2c_slave_reply
  7934 ;; This function is called by:
  7935 ;;		_sendRequestedData
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text46
  7940  0018BC                     __ptext46:
  7941                           	opt stack 0
  7942  0018BC                     _sendADdata:
  7943                           	opt stack 16
  7944                           
  7945                           ;sensorcomm.c: 38: char outBuff[100];
  7946                           ;sensorcomm.c: 39: int bytes_packed = packADData(data, len, outBuff, 100);
  7947                           
  7948                           ;incstack = 0
  7949  0018BC  0100               	movlb	0	; () banked
  7950  0018BE  C081  F041         	movff	sendADdata@data+1,packADData@data+1
  7951  0018C2  0100               	movlb	0	; () banked
  7952  0018C4  C080  F040         	movff	sendADdata@data,packADData@data
  7953  0018C8  C082  F042         	movff	sendADdata@len,packADData@len
  7954  0018CC  C083  F043         	movff	sendADdata@len+1,packADData@len+1
  7955  0018D0  0100               	movlb	0	; () banked
  7956  0018D2  0E00               	movlw	high sendADdata@outBuff
  7957  0018D4  6E45               	movwf	packADData@out+1,c
  7958  0018D6  0100               	movlb	0	; () banked
  7959  0018D8  0E84               	movlw	low sendADdata@outBuff
  7960  0018DA  6E44               	movwf	packADData@out,c
  7961  0018DC  0E00               	movlw	0
  7962  0018DE  6E47               	movwf	packADData@maxout+1,c
  7963  0018E0  0E64               	movlw	100
  7964  0018E2  6E46               	movwf	packADData@maxout,c
  7965  0018E4  EC10  F00E         	call	_packADData	;wreg free
  7966  0018E8  C040  F0E8         	movff	?_packADData,sendADdata@bytes_packed
  7967  0018EC  C041  F0E9         	movff	?_packADData+1,sendADdata@bytes_packed+1
  7968                           
  7969                           ;sensorcomm.c: 40: if(bytes_packed == 0){
  7970  0018F0  0100               	movlb	0	; () banked
  7971  0018F2  0100               	movlb	0	; () banked
  7972  0018F4  51E9               	movf	(sendADdata@bytes_packed+1)& (0+255),w,b
  7973  0018F6  11E8               	iorwf	sendADdata@bytes_packed& (0+255),w,b
  7974  0018F8  B4D8               	btfsc	status,2,c
  7975  0018FA  0012               	return	
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;sensorcomm.c: 43: else{
  7979                           ;sensorcomm.c: 44: start_i2c_slave_reply(bytes_packed, outBuff);
  7980                           
  7981                           ; BSR set to: 0
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;sensorcomm.c: 42: }
  7985  0018FC  0100               	movlb	0	; () banked
  7986  0018FE  0E00               	movlw	high sendADdata@outBuff
  7987  001900  6E30               	movwf	i2start_i2c_slave_reply@msg+1,c
  7988  001902  0100               	movlb	0	; () banked
  7989  001904  0E84               	movlw	low sendADdata@outBuff
  7990  001906  6E2F               	movwf	i2start_i2c_slave_reply@msg,c
  7991  001908  0100               	movlb	0	; () banked
  7992  00190A  0100               	movlb	0	; () banked
  7993  00190C  51E8               	movf	sendADdata@bytes_packed& (0+255),w,b
  7994  00190E  ECFB  F006         	call	i2_start_i2c_slave_reply
  7995  001912  0012               	return	
  7996  001914                     __end_of_sendADdata:
  7997                           	opt stack 0
  7998                           pclatu	equ	0xFFB
  7999                           pclath	equ	0xFFA
  8000                           tblptru	equ	0xFF8
  8001                           tblptrh	equ	0xFF7
  8002                           tblptrl	equ	0xFF6
  8003                           tablat	equ	0xFF5
  8004                           prodh	equ	0xFF4
  8005                           prodl	equ	0xFF3
  8006                           intcon	equ	0xFF2
  8007                           postinc0	equ	0xFEE
  8008                           fsr0h	equ	0xFEA
  8009                           fsr0l	equ	0xFE9
  8010                           wreg	equ	0xFE8
  8011                           indf1	equ	0xFE7
  8012                           postdec1	equ	0xFE5
  8013                           fsr1h	equ	0xFE2
  8014                           fsr1l	equ	0xFE1
  8015                           bsr	equ	0xFE0
  8016                           indf2	equ	0xFDF
  8017                           postinc2	equ	0xFDE
  8018                           postdec2	equ	0xFDD
  8019                           fsr2h	equ	0xFDA
  8020                           fsr2l	equ	0xFD9
  8021                           status	equ	0xFD8
  8022                           
  8023 ;; *************** function i2_start_i2c_slave_reply *****************
  8024 ;; Defined at:
  8025 ;;		line 54 in file "../src/my_i2c.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  length          1    wreg     unsigned char 
  8028 ;;  msg             2   46[COMRAM] PTR unsigned char 
  8029 ;;		 -> sendADdata@outBuff(100), main@msgbuffer(11), 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  length          1   50[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;		None               void
  8034 ;; Registers used:
  8035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8041 ;;      Params:         2       0       0       0       0
  8042 ;;      Locals:         1       0       0       0       0
  8043 ;;      Temps:          2       0       0       0       0
  8044 ;;      Totals:         5       0       0       0       0
  8045 ;;Total ram usage:        5 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_sendADdata
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text47
  8055  000DF6                     __ptext47:
  8056                           	opt stack 0
  8057  000DF6                     i2_start_i2c_slave_reply:
  8058                           	opt stack 17
  8059                           
  8060                           ;incstack = 0
  8061                           ;i2start_i2c_slave_reply@length stored from wreg
  8062  000DF6  CFE8 F033          	movff	wreg,i2start_i2c_slave_reply@length
  8063                           
  8064                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8065  000DFA  0101               	movlb	1	; () banked
  8066  000DFC  EE20 F019          	lfsr	2,25
  8067  000E00  0101               	movlb	1	; () banked
  8068  000E02  51A8               	movf	_ic_ptr& (0+255),w,b
  8069  000E04  26D9               	addwf	fsr2l,f,c
  8070  000E06  0101               	movlb	1	; () banked
  8071  000E08  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8072  000E0A  22DA               	addwfc	fsr2h,f,c
  8073  000E0C  0E00               	movlw	0
  8074  000E0E  6EDF               	movwf	indf2,c
  8075  000E10  D03A               	goto	i2l4029
  8076  000E12                     i2l4025:
  8077                           
  8078                           ; BSR set to: 1
  8079                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8080  000E12  0101               	movlb	1	; () banked
  8081  000E14  EE20 F019          	lfsr	2,25
  8082  000E18  0101               	movlb	1	; () banked
  8083  000E1A  51A8               	movf	_ic_ptr& (0+255),w,b
  8084  000E1C  26D9               	addwf	fsr2l,f,c
  8085  000E1E  0101               	movlb	1	; () banked
  8086  000E20  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8087  000E22  22DA               	addwfc	fsr2h,f,c
  8088  000E24  50DF               	movf	indf2,w,c
  8089  000E26  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8090  000E28  5031               	movf	??i2_start_i2c_slave_reply,w,c
  8091  000E2A  0D01               	mullw	1
  8092  000E2C  50F3               	movf	prodl,w,c
  8093  000E2E  242F               	addwf	i2start_i2c_slave_reply@msg,w,c
  8094  000E30  6ED9               	movwf	fsr2l,c
  8095  000E32  50F4               	movf	prodh,w,c
  8096  000E34  2030               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  8097  000E36  6EDA               	movwf	fsr2h,c
  8098  000E38  0101               	movlb	1	; () banked
  8099  000E3A  EE10 F019          	lfsr	1,25
  8100  000E3E  0101               	movlb	1	; () banked
  8101  000E40  51A8               	movf	_ic_ptr& (0+255),w,b
  8102  000E42  26E1               	addwf	fsr1l,f,c
  8103  000E44  0101               	movlb	1	; () banked
  8104  000E46  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8105  000E48  22E2               	addwfc	fsr1h,f,c
  8106  000E4A  50E7               	movf	indf1,w,c
  8107  000E4C  6E32               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  8108  000E4E  5032               	movf	??i2_start_i2c_slave_reply+1,w,c
  8109  000E50  0D01               	mullw	1
  8110  000E52  0E0F               	movlw	15
  8111  000E54  26F3               	addwf	prodl,f,c
  8112  000E56  0E00               	movlw	0
  8113  000E58  22F4               	addwfc	prodh,f,c
  8114  000E5A  50F3               	movf	prodl,w,c
  8115  000E5C  0101               	movlb	1	; () banked
  8116  000E5E  0101               	movlb	1	; () banked
  8117  000E60  25A8               	addwf	_ic_ptr& (0+255),w,b
  8118  000E62  6EE1               	movwf	fsr1l,c
  8119  000E64  50F4               	movf	prodh,w,c
  8120  000E66  0101               	movlb	1	; () banked
  8121  000E68  0101               	movlb	1	; () banked
  8122  000E6A  21A9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8123  000E6C  6EE2               	movwf	fsr1h,c
  8124  000E6E  CFDF FFE7          	movff	indf2,indf1
  8125                           
  8126                           ; BSR set to: 1
  8127  000E72  0101               	movlb	1	; () banked
  8128  000E74  EE20 F019          	lfsr	2,25
  8129  000E78  0101               	movlb	1	; () banked
  8130  000E7A  51A8               	movf	_ic_ptr& (0+255),w,b
  8131  000E7C  26D9               	addwf	fsr2l,f,c
  8132  000E7E  0101               	movlb	1	; () banked
  8133  000E80  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8134  000E82  22DA               	addwfc	fsr2h,f,c
  8135  000E84  2ADF               	incf	indf2,f,c
  8136  000E86                     i2l4029:
  8137                           
  8138                           ; BSR set to: 1
  8139  000E86  0101               	movlb	1	; () banked
  8140  000E88  EE20 F019          	lfsr	2,25
  8141  000E8C  0101               	movlb	1	; () banked
  8142  000E8E  51A8               	movf	_ic_ptr& (0+255),w,b
  8143  000E90  26D9               	addwf	fsr2l,f,c
  8144  000E92  0101               	movlb	1	; () banked
  8145  000E94  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8146  000E96  22DA               	addwfc	fsr2h,f,c
  8147  000E98  50DF               	movf	indf2,w,c
  8148  000E9A  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8149  000E9C  5033               	movf	i2start_i2c_slave_reply@length,w,c
  8150  000E9E  5C31               	subwf	??i2_start_i2c_slave_reply,w,c
  8151  000EA0  A0D8               	btfss	status,0,c
  8152  000EA2  D7B7               	goto	i2l4025
  8153                           
  8154                           ; BSR set to: 1
  8155                           ;my_i2c.c: 58: }
  8156                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  8157                           
  8158                           ; BSR set to: 1
  8159  000EA4  0101               	movlb	1	; () banked
  8160  000EA6  EE20 F019          	lfsr	2,25
  8161  000EAA  0101               	movlb	1	; () banked
  8162  000EAC  51A8               	movf	_ic_ptr& (0+255),w,b
  8163  000EAE  26D9               	addwf	fsr2l,f,c
  8164  000EB0  0101               	movlb	1	; () banked
  8165  000EB2  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8166  000EB4  22DA               	addwfc	fsr2h,f,c
  8167  000EB6  C033  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  8168                           
  8169                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  8170  000EBA  0101               	movlb	1	; () banked
  8171  000EBC  EE20 F01A          	lfsr	2,26
  8172  000EC0  0101               	movlb	1	; () banked
  8173  000EC2  51A8               	movf	_ic_ptr& (0+255),w,b
  8174  000EC4  26D9               	addwf	fsr2l,f,c
  8175  000EC6  0101               	movlb	1	; () banked
  8176  000EC8  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8177  000ECA  22DA               	addwfc	fsr2h,f,c
  8178  000ECC  0E01               	movlw	1
  8179  000ECE  6EDF               	movwf	indf2,c
  8180                           
  8181                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  8182  000ED0  0101               	movlb	1	; () banked
  8183  000ED2  EE20 F00F          	lfsr	2,15
  8184  000ED6  0101               	movlb	1	; () banked
  8185  000ED8  51A8               	movf	_ic_ptr& (0+255),w,b
  8186  000EDA  26D9               	addwf	fsr2l,f,c
  8187  000EDC  0101               	movlb	1	; () banked
  8188  000EDE  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8189  000EE0  22DA               	addwfc	fsr2h,f,c
  8190  000EE2  50DF               	movf	indf2,w,c
  8191  000EE4  6EC9               	movwf	4041,c	;volatile
  8192                           
  8193                           ; BSR set to: 1
  8194                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  8195  000EE6  88C6               	bsf	4038,4,c	;volatile
  8196                           
  8197                           ; BSR set to: 1
  8198  000EE8  0012               	return	
  8199  000EEA                     __end_ofi2_start_i2c_slave_reply:
  8200                           	opt stack 0
  8201                           pclatu	equ	0xFFB
  8202                           pclath	equ	0xFFA
  8203                           tblptru	equ	0xFF8
  8204                           tblptrh	equ	0xFF7
  8205                           tblptrl	equ	0xFF6
  8206                           tablat	equ	0xFF5
  8207                           prodh	equ	0xFF4
  8208                           prodl	equ	0xFF3
  8209                           intcon	equ	0xFF2
  8210                           postinc0	equ	0xFEE
  8211                           fsr0h	equ	0xFEA
  8212                           fsr0l	equ	0xFE9
  8213                           wreg	equ	0xFE8
  8214                           indf1	equ	0xFE7
  8215                           postdec1	equ	0xFE5
  8216                           fsr1h	equ	0xFE2
  8217                           fsr1l	equ	0xFE1
  8218                           bsr	equ	0xFE0
  8219                           indf2	equ	0xFDF
  8220                           postinc2	equ	0xFDE
  8221                           postdec2	equ	0xFDD
  8222                           fsr2h	equ	0xFDA
  8223                           fsr2l	equ	0xFD9
  8224                           status	equ	0xFD8
  8225                           
  8226 ;; *************** function _packADData *****************
  8227 ;; Defined at:
  8228 ;;		line 38 in file "../../../../common/communication/brain_rover.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  data            2   63[COMRAM] PTR struct .
  8231 ;;		 -> sendRequestedData@data(10), 
  8232 ;;  len             2   65[COMRAM] int 
  8233 ;;  out             2   67[COMRAM] PTR unsigned char 
  8234 ;;		 -> sendADdata@outBuff(100), 
  8235 ;;  maxout          2   69[COMRAM] int 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;		None
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  2   63[COMRAM] int 
  8240 ;; Registers used:
  8241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8247 ;;      Params:         8       0       0       0       0
  8248 ;;      Locals:         0       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0
  8250 ;;      Totals:         8       0       0       0       0
  8251 ;;Total ram usage:        8 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    1
  8254 ;; This function calls:
  8255 ;;		_packReturnData
  8256 ;; This function is called by:
  8257 ;;		_sendADdata
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text48
  8262  001C20                     __ptext48:
  8263                           	opt stack 0
  8264  001C20                     _packADData:
  8265                           	opt stack 16
  8266                           
  8267                           ;brain_rover.c: 39: return packReturnData((char*)data, len*sizeof(sensorADData), (RoverM
      +                          sg*)out, maxout, 0);
  8268                           
  8269                           ; BSR set to: 1
  8270                           ;incstack = 0
  8271  001C20  C041  F030         	movff	packADData@data+1,packReturnData@data+1
  8272  001C24  C040  F02F         	movff	packADData@data,packReturnData@data
  8273  001C28  C042  F031         	movff	packADData@len,packReturnData@payloadLen
  8274  001C2C  C043  F032         	movff	packADData@len+1,packReturnData@payloadLen+1
  8275  001C30  C045  F034         	movff	packADData@out+1,packReturnData@msg+1
  8276  001C34  C044  F033         	movff	packADData@out,packReturnData@msg
  8277  001C38  C046  F035         	movff	packADData@maxout,packReturnData@maxout
  8278  001C3C  C047  F036         	movff	packADData@maxout+1,packReturnData@maxout+1
  8279  001C40  0E00               	movlw	0
  8280  001C42  6E38               	movwf	packReturnData@sensorID+1,c
  8281  001C44  0E00               	movlw	0
  8282  001C46  6E37               	movwf	packReturnData@sensorID,c
  8283  001C48  ECEC  F008         	call	_packReturnData	;wreg free
  8284  001C4C  C02F  F040         	movff	?_packReturnData,?_packADData
  8285  001C50  C030  F041         	movff	?_packReturnData+1,?_packADData+1
  8286  001C54  0012               	return	
  8287  001C56                     __end_of_packADData:
  8288                           	opt stack 0
  8289                           pclatu	equ	0xFFB
  8290                           pclath	equ	0xFFA
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           postinc0	equ	0xFEE
  8299                           fsr0h	equ	0xFEA
  8300                           fsr0l	equ	0xFE9
  8301                           wreg	equ	0xFE8
  8302                           indf1	equ	0xFE7
  8303                           postdec1	equ	0xFE5
  8304                           fsr1h	equ	0xFE2
  8305                           fsr1l	equ	0xFE1
  8306                           bsr	equ	0xFE0
  8307                           indf2	equ	0xFDF
  8308                           postinc2	equ	0xFDE
  8309                           postdec2	equ	0xFDD
  8310                           fsr2h	equ	0xFDA
  8311                           fsr2l	equ	0xFD9
  8312                           status	equ	0xFD8
  8313                           
  8314 ;; *************** function _packReturnData *****************
  8315 ;; Defined at:
  8316 ;;		line 17 in file "../../../../common/communication/brain_rover.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  data            2   46[COMRAM] PTR unsigned char 
  8319 ;;		 -> sendRequestedData@data(10), 
  8320 ;;  payloadLen      2   48[COMRAM] int 
  8321 ;;  msg             2   50[COMRAM] PTR struct .
  8322 ;;		 -> sendADdata@outBuff(100), 
  8323 ;;  maxout          2   52[COMRAM] int 
  8324 ;;  sensorID        2   54[COMRAM] int 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  dest            2   61[COMRAM] PTR unsigned char 
  8327 ;;		 -> sendADdata@outBuff.payload(7), sendADdata@outBuff(100), 
  8328 ;;  end             2   59[COMRAM] PTR unsigned char 
  8329 ;;		 -> sendADdata@outBuff.payload(7), sendADdata@outBuff(100), 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  2   46[COMRAM] int 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8339 ;;      Params:        10       0       0       0       0
  8340 ;;      Locals:         4       0       0       0       0
  8341 ;;      Temps:          3       0       0       0       0
  8342 ;;      Totals:        17       0       0       0       0
  8343 ;;Total ram usage:       17 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; This function calls:
  8346 ;;		Nothing
  8347 ;; This function is called by:
  8348 ;;		_packADData
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text49
  8353  0011D8                     __ptext49:
  8354                           	opt stack 0
  8355  0011D8                     _packReturnData:
  8356                           	opt stack 16
  8357                           
  8358                           ;brain_rover.c: 18: if (payloadLen + 3 >= maxout) {
  8359                           
  8360                           ;incstack = 0
  8361  0011D8  0E03               	movlw	3
  8362  0011DA  2431               	addwf	packReturnData@payloadLen,w,c
  8363  0011DC  6E39               	movwf	??_packReturnData& (0+255),c
  8364  0011DE  0E00               	movlw	0
  8365  0011E0  2032               	addwfc	packReturnData@payloadLen+1,w,c
  8366  0011E2  6E3A               	movwf	(??_packReturnData+1)& (0+255),c
  8367  0011E4  503A               	movf	??_packReturnData+1,w,c
  8368  0011E6  0A80               	xorlw	128
  8369  0011E8  6E3B               	movwf	(??_packReturnData+2)& (0+255),c
  8370  0011EA  5035               	movf	packReturnData@maxout,w,c
  8371  0011EC  5C39               	subwf	??_packReturnData,w,c
  8372  0011EE  5036               	movf	packReturnData@maxout+1,w,c
  8373  0011F0  0A80               	xorlw	128
  8374  0011F2  583B               	subwfb	(??_packReturnData+2)& (0+255),w,c
  8375  0011F4  A0D8               	btfss	status,0,c
  8376  0011F6  D005               	goto	i2l3881
  8377                           
  8378                           ;brain_rover.c: 19: return 0;
  8379  0011F8  0E00               	movlw	0
  8380  0011FA  6E30               	movwf	?_packReturnData+1,c
  8381  0011FC  0E00               	movlw	0
  8382  0011FE  6E2F               	movwf	?_packReturnData,c
  8383  001200  0012               	return	
  8384  001202                     i2l3881:
  8385                           
  8386                           ;brain_rover.c: 20: }
  8387                           ;brain_rover.c: 22: msg->flags = 1;
  8388  001202  C033  FFD9         	movff	packReturnData@msg,fsr2l
  8389  001206  C034  FFDA         	movff	packReturnData@msg+1,fsr2h
  8390  00120A  0E01               	movlw	1
  8391  00120C  6EDF               	movwf	indf2,c
  8392                           
  8393                           ;brain_rover.c: 23: msg->sensorID = sensorID;
  8394  00120E  EE20 F001          	lfsr	2,1
  8395  001212  5033               	movf	packReturnData@msg,w,c
  8396  001214  26D9               	addwf	fsr2l,f,c
  8397  001216  5034               	movf	packReturnData@msg+1,w,c
  8398  001218  22DA               	addwfc	fsr2h,f,c
  8399  00121A  C037  FFDF         	movff	packReturnData@sensorID,indf2
  8400                           
  8401                           ;brain_rover.c: 24: msg->payloadLen = payloadLen;
  8402  00121E  EE20 F002          	lfsr	2,2
  8403  001222  5033               	movf	packReturnData@msg,w,c
  8404  001224  26D9               	addwf	fsr2l,f,c
  8405  001226  5034               	movf	packReturnData@msg+1,w,c
  8406  001228  22DA               	addwfc	fsr2h,f,c
  8407  00122A  C031  FFDF         	movff	packReturnData@payloadLen,indf2
  8408                           
  8409                           ;brain_rover.c: 26: char* dest = msg->payload;
  8410  00122E  0E03               	movlw	3
  8411  001230  2433               	addwf	packReturnData@msg,w,c
  8412  001232  6E3E               	movwf	packReturnData@dest,c
  8413  001234  0E00               	movlw	0
  8414  001236  2034               	addwfc	packReturnData@msg+1,w,c
  8415  001238  6E3F               	movwf	packReturnData@dest+1,c
  8416                           
  8417                           ;brain_rover.c: 27: char* end = dest + payloadLen;
  8418  00123A  5031               	movf	packReturnData@payloadLen,w,c
  8419  00123C  243E               	addwf	packReturnData@dest,w,c
  8420  00123E  6E3C               	movwf	packReturnData@end,c
  8421  001240  5032               	movf	packReturnData@payloadLen+1,w,c
  8422  001242  203F               	addwfc	packReturnData@dest+1,w,c
  8423  001244  6E3D               	movwf	packReturnData@end+1,c
  8424                           
  8425                           ;brain_rover.c: 28: while (dest != end) {
  8426  001246  D00E               	goto	i2l3897
  8427  001248                     i2l3891:
  8428                           
  8429                           ;brain_rover.c: 29: *dest++ = *data++;
  8430  001248  C02F  FFD9         	movff	packReturnData@data,fsr2l
  8431  00124C  C030  FFDA         	movff	packReturnData@data+1,fsr2h
  8432  001250  C03E  FFE1         	movff	packReturnData@dest,fsr1l
  8433  001254  C03F  FFE2         	movff	packReturnData@dest+1,fsr1h
  8434  001258  CFDF FFE7          	movff	indf2,indf1
  8435  00125C  4A2F               	infsnz	packReturnData@data,f,c
  8436  00125E  2A30               	incf	packReturnData@data+1,f,c
  8437  001260  4A3E               	infsnz	packReturnData@dest,f,c
  8438  001262  2A3F               	incf	packReturnData@dest+1,f,c
  8439  001264                     i2l3897:
  8440  001264  503D               	movf	packReturnData@end+1,w,c
  8441  001266  183F               	xorwf	packReturnData@dest+1,w,c
  8442  001268  E102               	bnz	i2u288_45
  8443  00126A  503C               	movf	packReturnData@end,w,c
  8444  00126C  183E               	xorwf	packReturnData@dest,w,c
  8445  00126E                     i2u288_45:
  8446  00126E  A4D8               	btfss	status,2,c
  8447  001270  D7EB               	goto	i2l3891
  8448                           
  8449                           ;brain_rover.c: 30: }
  8450                           ;brain_rover.c: 31: return payloadLen + 3;
  8451  001272  0E03               	movlw	3
  8452  001274  2431               	addwf	packReturnData@payloadLen,w,c
  8453  001276  6E2F               	movwf	?_packReturnData,c
  8454  001278  0E00               	movlw	0
  8455  00127A  2032               	addwfc	packReturnData@payloadLen+1,w,c
  8456  00127C  6E30               	movwf	?_packReturnData+1,c
  8457  00127E  0012               	return	
  8458  001280                     __end_of_packReturnData:
  8459                           	opt stack 0
  8460                           pclatu	equ	0xFFB
  8461                           pclath	equ	0xFFA
  8462                           tblptru	equ	0xFF8
  8463                           tblptrh	equ	0xFF7
  8464                           tblptrl	equ	0xFF6
  8465                           tablat	equ	0xFF5
  8466                           prodh	equ	0xFF4
  8467                           prodl	equ	0xFF3
  8468                           intcon	equ	0xFF2
  8469                           postinc0	equ	0xFEE
  8470                           fsr0h	equ	0xFEA
  8471                           fsr0l	equ	0xFE9
  8472                           wreg	equ	0xFE8
  8473                           indf1	equ	0xFE7
  8474                           postdec1	equ	0xFE5
  8475                           fsr1h	equ	0xFE2
  8476                           fsr1l	equ	0xFE1
  8477                           bsr	equ	0xFE0
  8478                           indf2	equ	0xFDF
  8479                           postinc2	equ	0xFDE
  8480                           postdec2	equ	0xFDD
  8481                           fsr2h	equ	0xFDA
  8482                           fsr2l	equ	0xFD9
  8483                           status	equ	0xFD8
  8484                           
  8485 ;; *************** function _reqADData *****************
  8486 ;; Defined at:
  8487 ;;		line 16 in file "../src/testAD.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  buf             2   46[COMRAM] PTR struct .
  8490 ;;		 -> sendRequestedData@data(10), 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  numSamples      1   49[COMRAM] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1    wreg      unsigned char 
  8495 ;; Registers used:
  8496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8502 ;;      Params:         2       0       0       0       0
  8503 ;;      Locals:         1       0       0       0       0
  8504 ;;      Temps:          1       0       0       0       0
  8505 ;;      Totals:         4       0       0       0       0
  8506 ;;Total ram usage:        4 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_sendRequestedData
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text50
  8516  001438                     __ptext50:
  8517                           	opt stack 0
  8518  001438                     _reqADData:
  8519                           	opt stack 18
  8520                           
  8521                           ;testAD.c: 17: uint8 numSamples = 0;
  8522                           
  8523                           ;incstack = 0
  8524  001438  6E31               	movwf	??_reqADData& (0+255),c
  8525  00143A  0E00               	movlw	0
  8526  00143C  6E32               	movwf	reqADData@numSamples,c
  8527  00143E  5031               	movf	??_reqADData& (0+255),w,c
  8528                           
  8529                           ;testAD.c: 18: switch(timesreq){
  8530  001440  D02B               	goto	i2l3933
  8531  001442                     i2l3913:
  8532                           
  8533                           ;testAD.c: 20: buf[0].data = sample1;
  8534  001442  C02F  FFD9         	movff	reqADData@buf,fsr2l
  8535  001446  C030  FFDA         	movff	reqADData@buf+1,fsr2h
  8536  00144A  C048  FFDF         	movff	_sample1,indf2
  8537  00144E                     
  8538                           ;testAD.c: 21: numSamples = 1;
  8539  00144E  6E31               	movwf	??_reqADData& (0+255),c
  8540  001450  0E01               	movlw	1
  8541  001452  D018               	goto	L11
  8542  001454                     i2l3917:
  8543                           
  8544                           ;testAD.c: 24: buf[0].data = sample2;
  8545  001454  C02F  FFD9         	movff	reqADData@buf,fsr2l
  8546  001458  C030  FFDA         	movff	reqADData@buf+1,fsr2h
  8547  00145C  C049  FFDF         	movff	_sample2,indf2
  8548                           
  8549                           ;testAD.c: 25: buf[1].data = sample3;
  8550  001460  EE20 F001          	lfsr	2,1
  8551  001464  502F               	movf	reqADData@buf,w,c
  8552  001466  26D9               	addwf	fsr2l,f,c
  8553  001468  5030               	movf	reqADData@buf+1,w,c
  8554  00146A  22DA               	addwfc	fsr2h,f,c
  8555  00146C  C04A  FFDF         	movff	_sample3,indf2
  8556                           
  8557                           ;testAD.c: 26: numSamples = 2;
  8558  001470  6E31               	movwf	??_reqADData& (0+255),c
  8559  001472  0E02               	movlw	2
  8560  001474  D007               	goto	L11
  8561  001476                     i2l3923:
  8562                           
  8563                           ;testAD.c: 29: buf[0].data = sample4;
  8564  001476  C02F  FFD9         	movff	reqADData@buf,fsr2l
  8565  00147A  C030  FFDA         	movff	reqADData@buf+1,fsr2h
  8566  00147E  C04B  FFDF         	movff	_sample4,indf2
  8567  001482  D7E5               	goto	L13
  8568  001484                     L11:
  8569  001484  6E32               	movwf	reqADData@numSamples,c
  8570  001486  5031               	movf	??_reqADData& (0+255),w,c
  8571                           
  8572                           ;testAD.c: 31: break;
  8573  001488  D014               	goto	i2l3935
  8574  00148A                     i2l3927:
  8575                           
  8576                           ;testAD.c: 33: buf[0].data = sample5;
  8577  00148A  C02F  FFD9         	movff	reqADData@buf,fsr2l
  8578  00148E  C030  FFDA         	movff	reqADData@buf+1,fsr2h
  8579  001492  C04C  FFDF         	movff	_sample5,indf2
  8580  001496  D7DB               	goto	L13
  8581  001498                     i2l3933:
  8582  001498  504F               	movf	_timesreq,w,c
  8583                           
  8584                           ; Switch size 1, requested type "space"
  8585                           ; Number of cases is 4, Range of values is 0 to 3
  8586                           ; switch strategies available:
  8587                           ; Name         Instructions Cycles
  8588                           ; simple_byte           13     7 (average)
  8589                           ;	Chosen strategy is simple_byte
  8590  00149A  0A00               	xorlw	0	; case 0
  8591  00149C  B4D8               	btfsc	status,2,c
  8592  00149E  D7D1               	goto	i2l3913
  8593  0014A0  0A01               	xorlw	1	; case 1
  8594  0014A2  B4D8               	btfsc	status,2,c
  8595  0014A4  D7D7               	goto	i2l3917
  8596  0014A6  0A03               	xorlw	3	; case 2
  8597  0014A8  B4D8               	btfsc	status,2,c
  8598  0014AA  D7E5               	goto	i2l3923
  8599  0014AC  0A01               	xorlw	1	; case 3
  8600  0014AE  B4D8               	btfsc	status,2,c
  8601  0014B0  D7EC               	goto	i2l3927
  8602  0014B2                     i2l3935:
  8603                           
  8604                           ;testAD.c: 37: timesreq++;
  8605  0014B2  2A4F               	incf	_timesreq,f,c
  8606                           
  8607                           ;testAD.c: 38: timesreq = timesreq %4;
  8608  0014B4  504F               	movf	_timesreq,w,c
  8609  0014B6  0B03               	andlw	3
  8610  0014B8  6E4F               	movwf	_timesreq,c
  8611                           
  8612                           ;testAD.c: 39: return numSamples;
  8613  0014BA  5032               	movf	reqADData@numSamples,w,c
  8614  0014BC  0012               	return	
  8615  0014BE                     __end_of_reqADData:
  8616                           	opt stack 0
  8617                           pclatu	equ	0xFFB
  8618                           pclath	equ	0xFFA
  8619                           tblptru	equ	0xFF8
  8620                           tblptrh	equ	0xFF7
  8621                           tblptrl	equ	0xFF6
  8622                           tablat	equ	0xFF5
  8623                           prodh	equ	0xFF4
  8624                           prodl	equ	0xFF3
  8625                           intcon	equ	0xFF2
  8626                           postinc0	equ	0xFEE
  8627                           fsr0h	equ	0xFEA
  8628                           fsr0l	equ	0xFE9
  8629                           wreg	equ	0xFE8
  8630                           indf1	equ	0xFE7
  8631                           postdec1	equ	0xFE5
  8632                           fsr1h	equ	0xFE2
  8633                           fsr1l	equ	0xFE1
  8634                           bsr	equ	0xFE0
  8635                           indf2	equ	0xFDF
  8636                           postinc2	equ	0xFDE
  8637                           postdec2	equ	0xFDD
  8638                           fsr2h	equ	0xFDA
  8639                           fsr2l	equ	0xFD9
  8640                           status	equ	0xFD8
  8641                           
  8642 ;; *************** function _handle_start *****************
  8643 ;; Defined at:
  8644 ;;		line 72 in file "../src/my_i2c.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  data_read       1    wreg     unsigned char 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  data_read       1   46[COMRAM] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;		None               void
  8651 ;; Registers used:
  8652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8658 ;;      Params:         0       0       0       0       0
  8659 ;;      Locals:         1       0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0
  8661 ;;      Totals:         1       0       0       0       0
  8662 ;;Total ram usage:        1 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_i2c_int_handler
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text51
  8672  000FBC                     __ptext51:
  8673                           	opt stack 0
  8674  000FBC                     _handle_start:
  8675                           	opt stack 19
  8676                           
  8677                           ;incstack = 0
  8678                           ;handle_start@data_read stored from wreg
  8679  000FBC  CFE8 F02F          	movff	wreg,handle_start@data_read
  8680                           
  8681                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8682  000FC0  0101               	movlb	1	; () banked
  8683  000FC2  EE20 F00B          	lfsr	2,11
  8684  000FC6  0101               	movlb	1	; () banked
  8685  000FC8  51A8               	movf	_ic_ptr& (0+255),w,b
  8686  000FCA  26D9               	addwf	fsr2l,f,c
  8687  000FCC  0101               	movlb	1	; () banked
  8688  000FCE  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8689  000FD0  22DA               	addwfc	fsr2h,f,c
  8690  000FD2  0E01               	movlw	1
  8691  000FD4  6EDF               	movwf	indf2,c
  8692                           
  8693                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8694  000FD6  0101               	movlb	1	; () banked
  8695  000FD8  EE20 F00A          	lfsr	2,10
  8696  000FDC  0101               	movlb	1	; () banked
  8697  000FDE  51A8               	movf	_ic_ptr& (0+255),w,b
  8698  000FE0  26D9               	addwf	fsr2l,f,c
  8699  000FE2  0101               	movlb	1	; () banked
  8700  000FE4  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8701  000FE6  22DA               	addwfc	fsr2h,f,c
  8702  000FE8  0E00               	movlw	0
  8703  000FEA  6EDF               	movwf	indf2,c
  8704                           
  8705                           ; BSR set to: 1
  8706                           ;my_i2c.c: 76: if (data_read) {
  8707  000FEC  502F               	movf	handle_start@data_read,w,c
  8708  000FEE  B4D8               	btfsc	status,2,c
  8709  000FF0  D03D               	goto	i2l3847
  8710                           
  8711                           ; BSR set to: 1
  8712                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8713  000FF2  AAC7               	btfss	4039,5,c	;volatile
  8714  000FF4  D021               	goto	i2l262
  8715                           
  8716                           ; BSR set to: 1
  8717                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8718  000FF6  0101               	movlb	1	; () banked
  8719  000FF8  EE20 F00C          	lfsr	2,12
  8720  000FFC  0101               	movlb	1	; () banked
  8721  000FFE  51A8               	movf	_ic_ptr& (0+255),w,b
  8722  001000  26D9               	addwf	fsr2l,f,c
  8723  001002  0101               	movlb	1	; () banked
  8724  001004  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8725  001006  22DA               	addwfc	fsr2h,f,c
  8726  001008  0E05               	movlw	5
  8727  00100A  6EDF               	movwf	indf2,c
  8728                           
  8729                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8730  00100C  0101               	movlb	1	; () banked
  8731  00100E  EE20 F00E          	lfsr	2,14
  8732  001012  0101               	movlb	1	; () banked
  8733  001014  51A8               	movf	_ic_ptr& (0+255),w,b
  8734  001016  26D9               	addwf	fsr2l,f,c
  8735  001018  0101               	movlb	1	; () banked
  8736  00101A  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8737  00101C  22DA               	addwfc	fsr2h,f,c
  8738  00101E  2ADF               	incf	indf2,f,c
  8739                           
  8740                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8741  001020  0101               	movlb	1	; () banked
  8742  001022  EE20 F00D          	lfsr	2,13
  8743  001026  0101               	movlb	1	; () banked
  8744  001028  51A8               	movf	_ic_ptr& (0+255),w,b
  8745  00102A  26D9               	addwf	fsr2l,f,c
  8746  00102C  0101               	movlb	1	; () banked
  8747  00102E  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8748  001030  22DA               	addwfc	fsr2h,f,c
  8749  001032  0E05               	movlw	5
  8750  001034  6EDF               	movwf	indf2,c
  8751                           
  8752                           ;my_i2c.c: 83: } else {
  8753  001036  0012               	return	
  8754  001038                     i2l262:
  8755                           
  8756                           ; BSR set to: 1
  8757                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8758  001038  A4C7               	btfss	4039,2,c	;volatile
  8759  00103A  D00C               	goto	i2l3845
  8760                           
  8761                           ; BSR set to: 1
  8762                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8763  00103C  0101               	movlb	1	; () banked
  8764  00103E  EE20 F00C          	lfsr	2,12
  8765  001042  0101               	movlb	1	; () banked
  8766  001044  51A8               	movf	_ic_ptr& (0+255),w,b
  8767  001046  26D9               	addwf	fsr2l,f,c
  8768  001048  0101               	movlb	1	; () banked
  8769  00104A  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8770  00104C  22DA               	addwfc	fsr2h,f,c
  8771  00104E  0E08               	movlw	8
  8772  001050  6EDF               	movwf	indf2,c
  8773                           
  8774                           ;my_i2c.c: 86: } else {
  8775  001052  0012               	return	
  8776  001054                     i2l3845:
  8777                           
  8778                           ; BSR set to: 1
  8779                           ;my_i2c.c: 87: ic_ptr->status = 0x7;
  8780  001054  0101               	movlb	1	; () banked
  8781  001056  EE20 F00C          	lfsr	2,12
  8782  00105A  0101               	movlb	1	; () banked
  8783  00105C  51A8               	movf	_ic_ptr& (0+255),w,b
  8784  00105E  26D9               	addwf	fsr2l,f,c
  8785  001060  0101               	movlb	1	; () banked
  8786  001062  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8787  001064  22DA               	addwfc	fsr2h,f,c
  8788  001066  0E07               	movlw	7
  8789  001068  6EDF               	movwf	indf2,c
  8790  00106A  0012               	return	
  8791  00106C                     i2l3847:
  8792                           
  8793                           ; BSR set to: 1
  8794                           ;my_i2c.c: 91: ic_ptr->status = 0x6;
  8795  00106C  0101               	movlb	1	; () banked
  8796  00106E  EE20 F00C          	lfsr	2,12
  8797  001072  0101               	movlb	1	; () banked
  8798  001074  51A8               	movf	_ic_ptr& (0+255),w,b
  8799  001076  26D9               	addwf	fsr2l,f,c
  8800  001078  0101               	movlb	1	; () banked
  8801  00107A  51A9               	movf	(_ic_ptr+1)& (0+255),w,b
  8802  00107C  22DA               	addwfc	fsr2h,f,c
  8803  00107E  0E06               	movlw	6
  8804  001080  6EDF               	movwf	indf2,c
  8805  001082  0012               	return	
  8806  001084                     __end_of_handle_start:
  8807                           	opt stack 0
  8808                           pclatu	equ	0xFFB
  8809                           pclath	equ	0xFFA
  8810                           tblptru	equ	0xFF8
  8811                           tblptrh	equ	0xFF7
  8812                           tblptrl	equ	0xFF6
  8813                           tablat	equ	0xFF5
  8814                           prodh	equ	0xFF4
  8815                           prodl	equ	0xFF3
  8816                           intcon	equ	0xFF2
  8817                           postinc0	equ	0xFEE
  8818                           fsr0h	equ	0xFEA
  8819                           fsr0l	equ	0xFE9
  8820                           wreg	equ	0xFE8
  8821                           indf1	equ	0xFE7
  8822                           postdec1	equ	0xFE5
  8823                           fsr1h	equ	0xFE2
  8824                           fsr1l	equ	0xFE1
  8825                           bsr	equ	0xFE0
  8826                           indf2	equ	0xFDF
  8827                           postinc2	equ	0xFDE
  8828                           postdec2	equ	0xFDD
  8829                           fsr2h	equ	0xFDA
  8830                           fsr2l	equ	0xFD9
  8831                           status	equ	0xFD8
  8832                           
  8833 ;; *************** function _ToMainHigh_sendmsg *****************
  8834 ;; Defined at:
  8835 ;;		line 128 in file "../src/messages.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  length          1    wreg     unsigned char 
  8838 ;;  msgtype         1   68[COMRAM] unsigned char 
  8839 ;;  data            2   69[COMRAM] PTR void 
  8840 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@error_buf(3), 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  length          1    0[BANK0 ] unsigned char 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      char 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8852 ;;      Params:         3       0       0       0       0
  8853 ;;      Locals:         0       1       0       0       0
  8854 ;;      Temps:          0       0       0       0       0
  8855 ;;      Totals:         3       1       0       0       0
  8856 ;;Total ram usage:        4 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    2
  8859 ;; This function calls:
  8860 ;;		i2_send_msg
  8861 ;; This function is called by:
  8862 ;;		_i2c_int_handler
  8863 ;;		_timer0_int_handler
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text52
  8868  001D5E                     __ptext52:
  8869                           	opt stack 0
  8870  001D5E                     _ToMainHigh_sendmsg:
  8871                           	opt stack 17
  8872                           
  8873                           ; BSR set to: 1
  8874                           ;incstack = 0
  8875                           ;ToMainHigh_sendmsg@length stored from wreg
  8876  001D5E  CFE8 F080          	movff	wreg,ToMainHigh_sendmsg@length
  8877                           
  8878                           ;messages.c: 134: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8879                           ;	Return value of _ToMainHigh_sendmsg is never used
  8880  001D62  0101               	movlb	1	; () banked
  8881  001D64  0E01               	movlw	high _ToMainHigh_MQ
  8882  001D66  6E3A               	movwf	i2send_msg@qptr+1,c
  8883  001D68  0101               	movlb	1	; () banked
  8884  001D6A  0E00               	movlw	low _ToMainHigh_MQ
  8885  001D6C  6E39               	movwf	i2send_msg@qptr,c
  8886  001D6E  C080  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8887  001D72  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8888  001D76  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8889  001D7A  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8890  001D7E  EC97  F008         	call	i2_send_msg	;wreg free
  8891  001D82  0012               	return	
  8892  001D84                     __end_of_ToMainHigh_sendmsg:
  8893                           	opt stack 0
  8894                           pclatu	equ	0xFFB
  8895                           pclath	equ	0xFFA
  8896                           tblptru	equ	0xFF8
  8897                           tblptrh	equ	0xFF7
  8898                           tblptrl	equ	0xFF6
  8899                           tablat	equ	0xFF5
  8900                           prodh	equ	0xFF4
  8901                           prodl	equ	0xFF3
  8902                           intcon	equ	0xFF2
  8903                           postinc0	equ	0xFEE
  8904                           fsr0h	equ	0xFEA
  8905                           fsr0l	equ	0xFE9
  8906                           wreg	equ	0xFE8
  8907                           indf1	equ	0xFE7
  8908                           postdec1	equ	0xFE5
  8909                           fsr1h	equ	0xFE2
  8910                           fsr1l	equ	0xFE1
  8911                           bsr	equ	0xFE0
  8912                           indf2	equ	0xFDF
  8913                           postinc2	equ	0xFDE
  8914                           postdec2	equ	0xFDD
  8915                           fsr2h	equ	0xFDA
  8916                           fsr2l	equ	0xFD9
  8917                           status	equ	0xFD8
  8918                           
  8919 ;; *************** function i2_send_msg *****************
  8920 ;; Defined at:
  8921 ;;		line 26 in file "../src/messages.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  8924 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8925 ;;  length          1   58[COMRAM] unsigned char 
  8926 ;;  msgtype         1   59[COMRAM] unsigned char 
  8927 ;;  data            2   60[COMRAM] PTR void 
  8928 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  8929 ;;		 -> main@uc(5), 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  8932 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8933 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8934 ;;  send_msg        2   63[COMRAM] unsigned int 
  8935 ;;  send_msg        1   65[COMRAM] unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      char 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8945 ;;      Params:         6       0       0       0       0
  8946 ;;      Locals:         5       0       0       0       0
  8947 ;;      Temps:          1       0       0       0       0
  8948 ;;      Totals:        12       0       0       0       0
  8949 ;;Total ram usage:       12 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    1
  8952 ;; This function calls:
  8953 ;;		i2_memcpy
  8954 ;; This function is called by:
  8955 ;;		_ToMainHigh_sendmsg
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text53
  8960  00112E                     __ptext53:
  8961                           	opt stack 0
  8962  00112E                     i2_send_msg:
  8963                           	opt stack 17
  8964                           
  8965                           ;messages.c: 27: unsigned char slot;
  8966                           ;messages.c: 29: msg *qmsg;
  8967                           ;messages.c: 30: size_t tlength = length;
  8968                           
  8969                           ;incstack = 0
  8970  00112E  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  8971  001132  6A41               	clrf	i2send_msg@tlength+1,c
  8972                           
  8973                           ;messages.c: 40: slot = qptr->cur_write_ind;
  8974  001134  EE20 F034          	lfsr	2,52
  8975  001138  5039               	movf	i2send_msg@qptr,w,c
  8976  00113A  26D9               	addwf	fsr2l,f,c
  8977  00113C  503A               	movf	i2send_msg@qptr+1,w,c
  8978  00113E  22DA               	addwfc	fsr2h,f,c
  8979  001140  50DF               	movf	indf2,w,c
  8980  001142  6E42               	movwf	i2send_msg@slot,c
  8981                           
  8982                           ;messages.c: 41: qmsg = &(qptr->queue[slot]);
  8983  001144  5042               	movf	i2send_msg@slot,w,c
  8984  001146  0D0D               	mullw	13
  8985  001148  50F3               	movf	prodl,w,c
  8986  00114A  2439               	addwf	i2send_msg@qptr,w,c
  8987  00114C  6E43               	movwf	i2send_msg@qmsg,c
  8988  00114E  50F4               	movf	prodh,w,c
  8989  001150  203A               	addwfc	i2send_msg@qptr+1,w,c
  8990  001152  6E44               	movwf	i2send_msg@qmsg+1,c
  8991                           
  8992                           ;messages.c: 43: if (qmsg->full != 0) {
  8993  001154  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8994  001158  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8995  00115C  50DF               	movf	indf2,w,c
  8996  00115E  B4D8               	btfsc	status,2,c
  8997  001160  D002               	goto	i2l3979
  8998                           
  8999                           ;messages.c: 44: return (-1);
  9000  001162  0EFF               	movlw	255
  9001  001164  0012               	return	
  9002  001166                     i2l3979:
  9003                           
  9004                           ;messages.c: 45: }
  9005                           ;messages.c: 48: qmsg->length = length;
  9006  001166  EE20 F001          	lfsr	2,1
  9007  00116A  5043               	movf	i2send_msg@qmsg,w,c
  9008  00116C  26D9               	addwf	fsr2l,f,c
  9009  00116E  5044               	movf	i2send_msg@qmsg+1,w,c
  9010  001170  22DA               	addwfc	fsr2h,f,c
  9011  001172  C03B  FFDF         	movff	i2send_msg@length,indf2
  9012                           
  9013                           ;messages.c: 49: qmsg->msgtype = msgtype;
  9014  001176  EE20 F002          	lfsr	2,2
  9015  00117A  5043               	movf	i2send_msg@qmsg,w,c
  9016  00117C  26D9               	addwf	fsr2l,f,c
  9017  00117E  5044               	movf	i2send_msg@qmsg+1,w,c
  9018  001180  22DA               	addwfc	fsr2h,f,c
  9019  001182  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  9020                           
  9021                           ;messages.c: 57: memcpy(qmsg->data, data, tlength);
  9022  001186  0E03               	movlw	3
  9023  001188  2443               	addwf	i2send_msg@qmsg,w,c
  9024  00118A  6E2F               	movwf	i2memcpy@d1,c
  9025  00118C  0E00               	movlw	0
  9026  00118E  2044               	addwfc	i2send_msg@qmsg+1,w,c
  9027  001190  6E30               	movwf	i2memcpy@d1+1,c
  9028  001192  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9029  001196  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  9030  00119A  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  9031  00119E  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9032  0011A2  EC7F  F00D         	call	i2_memcpy	;wreg free
  9033                           
  9034                           ;messages.c: 58: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9035  0011A6  EE20 F034          	lfsr	2,52
  9036  0011AA  5039               	movf	i2send_msg@qptr,w,c
  9037  0011AC  26D9               	addwf	fsr2l,f,c
  9038  0011AE  503A               	movf	i2send_msg@qptr+1,w,c
  9039  0011B0  22DA               	addwfc	fsr2h,f,c
  9040  0011B2  EE10 F034          	lfsr	1,52
  9041  0011B6  5039               	movf	i2send_msg@qptr,w,c
  9042  0011B8  26E1               	addwf	fsr1l,f,c
  9043  0011BA  503A               	movf	i2send_msg@qptr+1,w,c
  9044  0011BC  22E2               	addwfc	fsr1h,f,c
  9045  0011BE  50E7               	movf	indf1,w,c
  9046  0011C0  6E3F               	movwf	??i2_send_msg& (0+255),c
  9047  0011C2  283F               	incf	??i2_send_msg,w,c
  9048  0011C4  0B03               	andlw	3
  9049  0011C6  6EDF               	movwf	indf2,c
  9050                           
  9051                           ;messages.c: 61: qmsg->full = 1;
  9052  0011C8  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9053  0011CC  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9054  0011D0  0E01               	movlw	1
  9055  0011D2  6EDF               	movwf	indf2,c
  9056                           
  9057                           ;messages.c: 62: return (1);
  9058  0011D4  0E01               	movlw	1
  9059  0011D6  0012               	return	
  9060  0011D8                     __end_ofi2_send_msg:
  9061                           	opt stack 0
  9062                           pclatu	equ	0xFFB
  9063                           pclath	equ	0xFFA
  9064                           tblptru	equ	0xFF8
  9065                           tblptrh	equ	0xFF7
  9066                           tblptrl	equ	0xFF6
  9067                           tablat	equ	0xFF5
  9068                           prodh	equ	0xFF4
  9069                           prodl	equ	0xFF3
  9070                           intcon	equ	0xFF2
  9071                           postinc0	equ	0xFEE
  9072                           fsr0h	equ	0xFEA
  9073                           fsr0l	equ	0xFE9
  9074                           wreg	equ	0xFE8
  9075                           indf1	equ	0xFE7
  9076                           postdec1	equ	0xFE5
  9077                           fsr1h	equ	0xFE2
  9078                           fsr1l	equ	0xFE1
  9079                           bsr	equ	0xFE0
  9080                           indf2	equ	0xFDF
  9081                           postinc2	equ	0xFDE
  9082                           postdec2	equ	0xFDD
  9083                           fsr2h	equ	0xFDA
  9084                           fsr2l	equ	0xFD9
  9085                           status	equ	0xFD8
  9086                           
  9087 ;; *************** function i2_memcpy *****************
  9088 ;; Defined at:
  9089 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  d1              2   46[COMRAM] PTR void 
  9092 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9093 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9094 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  9095 ;;  s1              2   48[COMRAM] PTR const void 
  9096 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9097 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9098 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  9099 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  9100 ;;		 -> main@uc(5), 
  9101 ;;  n               2   50[COMRAM] unsigned int 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  9104 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9105 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9106 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  9107 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  9108 ;;		 -> main@uc(5), 
  9109 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  9110 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9111 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9112 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  2   46[COMRAM] PTR void 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9122 ;;      Params:         6       0       0       0       0
  9123 ;;      Locals:         4       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0
  9125 ;;      Totals:        10       0       0       0       0
  9126 ;;Total ram usage:       10 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		i2_send_msg
  9132 ;;		i2_recv_msg
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text54
  9137  001AFE                     __ptext54:
  9138                           	opt stack 0
  9139  001AFE                     i2_memcpy:
  9140                           	opt stack 17
  9141                           
  9142                           ;incstack = 0
  9143  001AFE  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9144  001B02  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  9145  001B06  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9146  001B0A  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  9147  001B0E  D00E               	goto	i2l4053
  9148  001B10                     i2l4047:
  9149  001B10  C037  FFD9         	movff	i2memcpy@s,fsr2l
  9150  001B14  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  9151  001B18  C035  FFE1         	movff	i2memcpy@d,fsr1l
  9152  001B1C  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  9153  001B20  CFDF FFE7          	movff	indf2,indf1
  9154  001B24  4A37               	infsnz	i2memcpy@s,f,c
  9155  001B26  2A38               	incf	i2memcpy@s+1,f,c
  9156  001B28  4A35               	infsnz	i2memcpy@d,f,c
  9157  001B2A  2A36               	incf	i2memcpy@d+1,f,c
  9158  001B2C                     i2l4053:
  9159  001B2C  0633               	decf	i2memcpy@n,f,c
  9160  001B2E  A0D8               	btfss	status,0,c
  9161  001B30  0634               	decf	i2memcpy@n+1,f,c
  9162  001B32  2833               	incf	i2memcpy@n& (0+255),w,c
  9163  001B34  B4D8               	btfsc	status,2,c
  9164  001B36  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  9165  001B38  B4D8               	btfsc	status,2,c
  9166                           
  9167                           ;	Return value of i2_memcpy is never used
  9168  001B3A  0012               	return	
  9169  001B3C  D7E9               	goto	i2l4047
  9170  001B3E                     __end_ofi2_memcpy:
  9171                           	opt stack 0
  9172                           pclatu	equ	0xFFB
  9173                           pclath	equ	0xFFA
  9174                           tblptru	equ	0xFF8
  9175                           tblptrh	equ	0xFF7
  9176                           tblptrl	equ	0xFF6
  9177                           tablat	equ	0xFF5
  9178                           prodh	equ	0xFF4
  9179                           prodl	equ	0xFF3
  9180                           intcon	equ	0xFF2
  9181                           postinc0	equ	0xFEE
  9182                           fsr0h	equ	0xFEA
  9183                           fsr0l	equ	0xFE9
  9184                           wreg	equ	0xFE8
  9185                           indf1	equ	0xFE7
  9186                           postdec1	equ	0xFE5
  9187                           fsr1h	equ	0xFE2
  9188                           fsr1l	equ	0xFE1
  9189                           bsr	equ	0xFE0
  9190                           indf2	equ	0xFDF
  9191                           postinc2	equ	0xFDE
  9192                           postdec2	equ	0xFDD
  9193                           fsr2h	equ	0xFDA
  9194                           fsr2l	equ	0xFD9
  9195                           status	equ	0xFD8
  9196                           
  9197 ;; *************** function _SleepIfOkay *****************
  9198 ;; Defined at:
  9199 ;;		line 230 in file "../src/messages.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;		None
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;		None
  9204 ;; Return value:  Size  Location     Type
  9205 ;;		None               void
  9206 ;; Registers used:
  9207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9213 ;;      Params:         0       0       0       0       0
  9214 ;;      Locals:         0       0       0       0       0
  9215 ;;      Temps:          0       0       0       0       0
  9216 ;;      Totals:         0       0       0       0       0
  9217 ;;Total ram usage:        0 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    2
  9220 ;; This function calls:
  9221 ;;		_enter_sleep_mode
  9222 ;;		i2_check_msg
  9223 ;;		i2_in_high_int
  9224 ;;		i2_in_low_int
  9225 ;; This function is called by:
  9226 ;;		_InterruptHandlerHigh
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text55
  9231  001962                     __ptext55:
  9232                           	opt stack 0
  9233  001962                     _SleepIfOkay:
  9234                           	opt stack 18
  9235                           
  9236                           ;messages.c: 232: if (MQ_Main_Willing_to_block == 0) {
  9237                           
  9238                           ;incstack = 0
  9239  001962  664D               	tstfsz	_MQ_Main_Willing_to_block,c
  9240  001964  D001               	goto	i2l2509
  9241  001966  0012               	return	
  9242  001968                     i2l2509:
  9243                           
  9244                           ;messages.c: 234: }
  9245                           ;messages.c: 237: if (in_low_int()) {
  9246  001968  EC5C  F00E         	call	i2_in_low_int	;wreg free
  9247  00196C  5032               	movf	?i2_in_low_int+1,w,c
  9248  00196E  1031               	iorwf	?i2_in_low_int,w,c
  9249  001970  A4D8               	btfss	status,2,c
  9250  001972  0012               	return	
  9251                           
  9252                           ;messages.c: 239: }
  9253                           ;messages.c: 242: if (!in_high_int()) {
  9254                           
  9255                           ;messages.c: 238: return;
  9256  001974  EC3E  F00F         	call	i2_in_high_int	;wreg free
  9257  001978  5030               	movf	?i2_in_high_int+1,w,c
  9258  00197A  102F               	iorwf	?i2_in_high_int,w,c
  9259  00197C  B4D8               	btfsc	status,2,c
  9260  00197E  0012               	return	
  9261                           
  9262                           ;messages.c: 244: }
  9263                           ;messages.c: 249: if (check_msg(&ToMainHigh_MQ)) {
  9264                           
  9265                           ;messages.c: 243: return;
  9266  001980  0101               	movlb	1	; () banked
  9267  001982  0E01               	movlw	high _ToMainHigh_MQ
  9268  001984  6E30               	movwf	i2check_msg@qptr+1,c
  9269  001986  0101               	movlb	1	; () banked
  9270  001988  0E00               	movlw	low _ToMainHigh_MQ
  9271  00198A  6E2F               	movwf	i2check_msg@qptr,c
  9272  00198C  ECC2  F00E         	call	i2_check_msg	;wreg free
  9273  001990  0900               	iorlw	0
  9274  001992  A4D8               	btfss	status,2,c
  9275  001994  0012               	return	
  9276                           
  9277                           ;messages.c: 251: }
  9278                           ;messages.c: 252: if (check_msg(&ToMainLow_MQ)) {
  9279                           
  9280                           ;messages.c: 250: return;
  9281  001996  0101               	movlb	1	; () banked
  9282  001998  0E01               	movlw	high _ToMainLow_MQ
  9283  00199A  6E30               	movwf	i2check_msg@qptr+1,c
  9284  00199C  0101               	movlb	1	; () banked
  9285  00199E  0E36               	movlw	low _ToMainLow_MQ
  9286  0019A0  6E2F               	movwf	i2check_msg@qptr,c
  9287  0019A2  ECC2  F00E         	call	i2_check_msg	;wreg free
  9288  0019A6  0900               	iorlw	0
  9289  0019A8  B4D8               	btfsc	status,2,c
  9290                           
  9291                           ;messages.c: 254: }
  9292                           ;messages.c: 255: enter_sleep_mode();
  9293                           
  9294                           ;messages.c: 253: return;
  9295  0019AA  EC4D  F00F         	call	_enter_sleep_mode	;wreg free
  9296  0019AE  0012               	return	
  9297  0019B0                     __end_of_SleepIfOkay:
  9298                           	opt stack 0
  9299                           pclatu	equ	0xFFB
  9300                           pclath	equ	0xFFA
  9301                           tblptru	equ	0xFF8
  9302                           tblptrh	equ	0xFF7
  9303                           tblptrl	equ	0xFF6
  9304                           tablat	equ	0xFF5
  9305                           prodh	equ	0xFF4
  9306                           prodl	equ	0xFF3
  9307                           intcon	equ	0xFF2
  9308                           postinc0	equ	0xFEE
  9309                           fsr0h	equ	0xFEA
  9310                           fsr0l	equ	0xFE9
  9311                           wreg	equ	0xFE8
  9312                           indf1	equ	0xFE7
  9313                           postdec1	equ	0xFE5
  9314                           fsr1h	equ	0xFE2
  9315                           fsr1l	equ	0xFE1
  9316                           bsr	equ	0xFE0
  9317                           indf2	equ	0xFDF
  9318                           postinc2	equ	0xFDE
  9319                           postdec2	equ	0xFDD
  9320                           fsr2h	equ	0xFDA
  9321                           fsr2l	equ	0xFD9
  9322                           status	equ	0xFD8
  9323                           
  9324 ;; *************** function i2_in_low_int *****************
  9325 ;; Defined at:
  9326 ;;		line 30 in file "../src/interrupts.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;		None
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;		None
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  2   48[COMRAM] int 
  9333 ;; Registers used:
  9334 ;;		wreg, status,2, status,0, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9340 ;;      Params:         2       0       0       0       0
  9341 ;;      Locals:         0       0       0       0       0
  9342 ;;      Temps:          0       0       0       0       0
  9343 ;;      Totals:         2       0       0       0       0
  9344 ;;Total ram usage:        2 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; Hardware stack levels required when called:    1
  9347 ;; This function calls:
  9348 ;;		i2_in_high_int
  9349 ;; This function is called by:
  9350 ;;		_SleepIfOkay
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text56
  9355  001CB8                     __ptext56:
  9356                           	opt stack 0
  9357  001CB8                     i2_in_low_int:
  9358                           	opt stack 18
  9359                           
  9360                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9361                           
  9362                           ;incstack = 0
  9363  001CB8  ACF2               	btfss	intcon,6,c	;volatile
  9364  001CBA  D005               	goto	i2l3067
  9365                           
  9366                           ;interrupts.c: 32: return (0);
  9367  001CBC  0E00               	movlw	0
  9368  001CBE  6E32               	movwf	?i2_in_low_int+1,c
  9369  001CC0  0E00               	movlw	0
  9370  001CC2  6E31               	movwf	?i2_in_low_int,c
  9371  001CC4  0012               	return	
  9372  001CC6                     i2l3067:
  9373  001CC6  EC3E  F00F         	call	i2_in_high_int	;wreg free
  9374  001CCA  5030               	movf	?i2_in_high_int+1,w,c
  9375  001CCC  102F               	iorwf	?i2_in_high_int,w,c
  9376  001CCE  B4D8               	btfsc	status,2,c
  9377  001CD0  D005               	goto	i2l3075
  9378                           
  9379                           ;interrupts.c: 34: return (0);
  9380  001CD2  0E00               	movlw	0
  9381  001CD4  6E32               	movwf	?i2_in_low_int+1,c
  9382  001CD6  0E00               	movlw	0
  9383  001CD8  6E31               	movwf	?i2_in_low_int,c
  9384  001CDA  0012               	return	
  9385  001CDC                     i2l3075:
  9386                           
  9387                           ;interrupts.c: 36: return (1);
  9388  001CDC  0E00               	movlw	0
  9389  001CDE  6E32               	movwf	?i2_in_low_int+1,c
  9390  001CE0  0E01               	movlw	1
  9391  001CE2  6E31               	movwf	?i2_in_low_int,c
  9392  001CE4  0012               	return	
  9393  001CE6                     __end_ofi2_in_low_int:
  9394                           	opt stack 0
  9395                           pclatu	equ	0xFFB
  9396                           pclath	equ	0xFFA
  9397                           tblptru	equ	0xFF8
  9398                           tblptrh	equ	0xFF7
  9399                           tblptrl	equ	0xFF6
  9400                           tablat	equ	0xFF5
  9401                           prodh	equ	0xFF4
  9402                           prodl	equ	0xFF3
  9403                           intcon	equ	0xFF2
  9404                           postinc0	equ	0xFEE
  9405                           fsr0h	equ	0xFEA
  9406                           fsr0l	equ	0xFE9
  9407                           wreg	equ	0xFE8
  9408                           indf1	equ	0xFE7
  9409                           postdec1	equ	0xFE5
  9410                           fsr1h	equ	0xFE2
  9411                           fsr1l	equ	0xFE1
  9412                           bsr	equ	0xFE0
  9413                           indf2	equ	0xFDF
  9414                           postinc2	equ	0xFDE
  9415                           postdec2	equ	0xFDD
  9416                           fsr2h	equ	0xFDA
  9417                           fsr2l	equ	0xFD9
  9418                           status	equ	0xFD8
  9419                           
  9420 ;; *************** function i2_in_high_int *****************
  9421 ;; Defined at:
  9422 ;;		line 22 in file "../src/interrupts.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;		None
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;		None
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  2   46[COMRAM] int 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9436 ;;      Params:         2       0       0       0       0
  9437 ;;      Locals:         0       0       0       0       0
  9438 ;;      Temps:          0       0       0       0       0
  9439 ;;      Totals:         2       0       0       0       0
  9440 ;;Total ram usage:        2 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_SleepIfOkay
  9446 ;;		i2_in_low_int
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text57
  9451  001E7C                     __ptext57:
  9452                           	opt stack 0
  9453  001E7C                     i2_in_high_int:
  9454                           	opt stack 18
  9455                           
  9456                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9457                           
  9458                           ;incstack = 0
  9459  001E7C  0E00               	movlw	0
  9460  001E7E  AEF2               	btfss	intcon,7,c	;volatile
  9461  001E80  0E01               	movlw	1
  9462  001E82  6E2F               	movwf	?i2_in_high_int,c
  9463  001E84  6A30               	clrf	?i2_in_high_int+1,c
  9464  001E86  0012               	return	
  9465  001E88                     __end_ofi2_in_high_int:
  9466                           	opt stack 0
  9467                           pclatu	equ	0xFFB
  9468                           pclath	equ	0xFFA
  9469                           tblptru	equ	0xFF8
  9470                           tblptrh	equ	0xFF7
  9471                           tblptrl	equ	0xFF6
  9472                           tablat	equ	0xFF5
  9473                           prodh	equ	0xFF4
  9474                           prodl	equ	0xFF3
  9475                           intcon	equ	0xFF2
  9476                           postinc0	equ	0xFEE
  9477                           fsr0h	equ	0xFEA
  9478                           fsr0l	equ	0xFE9
  9479                           wreg	equ	0xFE8
  9480                           indf1	equ	0xFE7
  9481                           postdec1	equ	0xFE5
  9482                           fsr1h	equ	0xFE2
  9483                           fsr1l	equ	0xFE1
  9484                           bsr	equ	0xFE0
  9485                           indf2	equ	0xFDF
  9486                           postinc2	equ	0xFDE
  9487                           postdec2	equ	0xFDD
  9488                           fsr2h	equ	0xFDA
  9489                           fsr2l	equ	0xFD9
  9490                           status	equ	0xFD8
  9491                           
  9492 ;; *************** function i2_check_msg *****************
  9493 ;; Defined at:
  9494 ;;		line 224 in file "../src/messages.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  9497 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;		None
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  1    wreg      unsigned char 
  9502 ;; Registers used:
  9503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9509 ;;      Params:         2       0       0       0       0
  9510 ;;      Locals:         0       0       0       0       0
  9511 ;;      Temps:          1       0       0       0       0
  9512 ;;      Totals:         3       0       0       0       0
  9513 ;;Total ram usage:        3 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		_SleepIfOkay
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text58
  9523  001D84                     __ptext58:
  9524                           	opt stack 0
  9525  001D84                     i2_check_msg:
  9526                           	opt stack 19
  9527                           
  9528                           ;messages.c: 225: return (qptr->queue[qptr->cur_read_ind].full);
  9529                           
  9530                           ;incstack = 0
  9531  001D84  EE20 F035          	lfsr	2,53
  9532  001D88  502F               	movf	i2check_msg@qptr,w,c
  9533  001D8A  26D9               	addwf	fsr2l,f,c
  9534  001D8C  5030               	movf	i2check_msg@qptr+1,w,c
  9535  001D8E  22DA               	addwfc	fsr2h,f,c
  9536  001D90  50DF               	movf	indf2,w,c
  9537  001D92  6E31               	movwf	??i2_check_msg& (0+255),c
  9538  001D94  5031               	movf	??i2_check_msg,w,c
  9539  001D96  0D0D               	mullw	13
  9540  001D98  50F3               	movf	prodl,w,c
  9541  001D9A  242F               	addwf	i2check_msg@qptr,w,c
  9542  001D9C  6ED9               	movwf	fsr2l,c
  9543  001D9E  50F4               	movf	prodh,w,c
  9544  001DA0  2030               	addwfc	i2check_msg@qptr+1,w,c
  9545  001DA2  6EDA               	movwf	fsr2h,c
  9546  001DA4  50DF               	movf	indf2,w,c
  9547  001DA6  0012               	return	
  9548  001DA8                     __end_ofi2_check_msg:
  9549                           	opt stack 0
  9550                           pclatu	equ	0xFFB
  9551                           pclath	equ	0xFFA
  9552                           tblptru	equ	0xFF8
  9553                           tblptrh	equ	0xFF7
  9554                           tblptrl	equ	0xFF6
  9555                           tablat	equ	0xFF5
  9556                           prodh	equ	0xFF4
  9557                           prodl	equ	0xFF3
  9558                           intcon	equ	0xFF2
  9559                           postinc0	equ	0xFEE
  9560                           fsr0h	equ	0xFEA
  9561                           fsr0l	equ	0xFE9
  9562                           wreg	equ	0xFE8
  9563                           indf1	equ	0xFE7
  9564                           postdec1	equ	0xFE5
  9565                           fsr1h	equ	0xFE2
  9566                           fsr1l	equ	0xFE1
  9567                           bsr	equ	0xFE0
  9568                           indf2	equ	0xFDF
  9569                           postinc2	equ	0xFDE
  9570                           postdec2	equ	0xFDD
  9571                           fsr2h	equ	0xFDA
  9572                           fsr2l	equ	0xFD9
  9573                           status	equ	0xFD8
  9574                           
  9575 ;; *************** function _enter_sleep_mode *****************
  9576 ;; Defined at:
  9577 ;;		line 204 in file "../src/messages.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;		None
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;		None
  9582 ;; Return value:  Size  Location     Type
  9583 ;;		None               void
  9584 ;; Registers used:
  9585 ;;		None
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9591 ;;      Params:         0       0       0       0       0
  9592 ;;      Locals:         0       0       0       0       0
  9593 ;;      Temps:          0       0       0       0       0
  9594 ;;      Totals:         0       0       0       0       0
  9595 ;;Total ram usage:        0 bytes
  9596 ;; Hardware stack levels used:    1
  9597 ;; This function calls:
  9598 ;;		Nothing
  9599 ;; This function is called by:
  9600 ;;		_SleepIfOkay
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text59
  9605  001E9A                     __ptext59:
  9606                           	opt stack 0
  9607  001E9A                     _enter_sleep_mode:
  9608                           	opt stack 19
  9609                           
  9610                           ;messages.c: 206: OSCCONbits.IDLEN = 1;
  9611                           
  9612                           ;incstack = 0
  9613  001E9A  8ED3               	bsf	4051,7,c	;volatile
  9614  001E9C  0003               	sleep		;# 
  9615  001E9E  0012               	return	
  9616  001EA0                     __end_of_enter_sleep_mode:
  9617                           	opt stack 0
  9618  0000                     pclatu	equ	0xFFB
  9619                           pclath	equ	0xFFA
  9620                           tblptru	equ	0xFF8
  9621                           tblptrh	equ	0xFF7
  9622                           tblptrl	equ	0xFF6
  9623                           tablat	equ	0xFF5
  9624                           prodh	equ	0xFF4
  9625                           prodl	equ	0xFF3
  9626                           intcon	equ	0xFF2
  9627                           postinc0	equ	0xFEE
  9628                           fsr0h	equ	0xFEA
  9629                           fsr0l	equ	0xFE9
  9630                           wreg	equ	0xFE8
  9631                           indf1	equ	0xFE7
  9632                           postdec1	equ	0xFE5
  9633                           fsr1h	equ	0xFE2
  9634                           fsr1l	equ	0xFE1
  9635                           bsr	equ	0xFE0
  9636                           indf2	equ	0xFDF
  9637                           postinc2	equ	0xFDE
  9638                           postdec2	equ	0xFDD
  9639                           fsr2h	equ	0xFDA
  9640                           fsr2l	equ	0xFD9
  9641                           status	equ	0xFD8
  9642                           pclatu	equ	0xFFB
  9643                           pclath	equ	0xFFA
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           postinc0	equ	0xFEE
  9652                           fsr0h	equ	0xFEA
  9653                           fsr0l	equ	0xFE9
  9654                           wreg	equ	0xFE8
  9655                           indf1	equ	0xFE7
  9656                           postdec1	equ	0xFE5
  9657                           fsr1h	equ	0xFE2
  9658                           fsr1l	equ	0xFE1
  9659                           bsr	equ	0xFE0
  9660                           indf2	equ	0xFDF
  9661                           postinc2	equ	0xFDE
  9662                           postdec2	equ	0xFDD
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           
  9667                           	psect	rparam
  9668  0000                     pclatu	equ	0xFFB
  9669                           pclath	equ	0xFFA
  9670                           tblptru	equ	0xFF8
  9671                           tblptrh	equ	0xFF7
  9672                           tblptrl	equ	0xFF6
  9673                           tablat	equ	0xFF5
  9674                           prodh	equ	0xFF4
  9675                           prodl	equ	0xFF3
  9676                           intcon	equ	0xFF2
  9677                           postinc0	equ	0xFEE
  9678                           fsr0h	equ	0xFEA
  9679                           fsr0l	equ	0xFE9
  9680                           wreg	equ	0xFE8
  9681                           indf1	equ	0xFE7
  9682                           postdec1	equ	0xFE5
  9683                           fsr1h	equ	0xFE2
  9684                           fsr1l	equ	0xFE1
  9685                           bsr	equ	0xFE0
  9686                           indf2	equ	0xFDF
  9687                           postinc2	equ	0xFDE
  9688                           postdec2	equ	0xFDD
  9689                           fsr2h	equ	0xFDA
  9690                           fsr2l	equ	0xFD9
  9691                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         221
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      81
    BANK0           128    118     120
    BANK1           256     60     170
    BANK2           256     70     178
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK1[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@t1thread_data(BANK2[2]), 
		 -> main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK1[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@t1thread_data(BANK2[2]), 
		 -> main@uc(BANK2[5]), 

    reqADData@buf	PTR struct . size(2) Largest target is 10
		 -> sendRequestedData@data(BANK0[10]), 

    sendADdata@data	PTR struct . size(2) Largest target is 10
		 -> sendRequestedData@data(BANK0[10]), 

    setBrainReqData@buf	PTR unsigned char  size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    BrainMsgRecv	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    unpackBrainMsg@buf	PTR unsigned char  size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    packADData@out	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), 

    packADData@data	PTR struct . size(2) Largest target is 10
		 -> sendRequestedData@data(BANK0[10]), 

    packReturnData@data	PTR unsigned char  size(2) Largest target is 10
		 -> sendRequestedData@data(BANK0[10]), 

    packReturnData@end	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff.payload(COMRAM[7]), sendADdata@outBuff(BANK0[100]), 

    packReturnData@dest	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff.payload(COMRAM[7]), sendADdata@outBuff(BANK0[100]), 

    packReturnData@msg	PTR struct . size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 100
		 -> sendADdata@outBuff(BANK0[100]), main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK1[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 5
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK1[3]), main@t1thread_data(BANK2[2]), 
		 -> main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_FromMainHigh_recvmsg
    _timer0_int_handler->_ToMainHigh_sendmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _setBrainReqData->_unpackBrainMsg
    _sendADdata->_packADData
    _packADData->_packReturnData
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_sendRequestedData
    _sendRequestedData->_sendADdata

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                73    73      0   12787
                                             59 BANK1      1     1      0
                                              0 BANK2     70    70      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     432
                                             23 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3046
                                             49 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2309
                                             45 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                             33 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                             23 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     212
                                             23 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             27 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             23 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                             29 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             47 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             47 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             33 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             23 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5969
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2936
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3033
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2902
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   12889
                                              9 BANK1     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6368
                                              4 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                             70 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    6285
                                            117 BANK0      1     1      0
                                              0 BANK1      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
                  _sendRequestedData
                    _setBrainReqData
 ---------------------------------------------------------------------------------
 (12) _setBrainReqData                                     2     0      2     216
                                             48 COMRAM     2     0      2
                     _unpackBrainMsg
 ---------------------------------------------------------------------------------
 (13) _unpackBrainMsg                                      2     0      2     108
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _sendRequestedData                                  11    11      0    2394
                                            106 BANK0     11    11      0
                          _reqADData
                         _sendADdata
 ---------------------------------------------------------------------------------
 (13) _sendADdata                                        106   102      4    1987
                                              0 BANK0    106   102      4
                         _packADData
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) i2_start_i2c_slave_reply                             5     3      2     318
                                             46 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) _packADData                                          8     0      8    1294
                                             63 COMRAM     8     0      8
                     _packReturnData
 ---------------------------------------------------------------------------------
 (15) _packReturnData                                     17     7     10     862
                                             46 COMRAM    17     7     10
 ---------------------------------------------------------------------------------
 (13) _reqADData                                           4     2      2     278
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3060
                                             68 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _sendRequestedData
       _reqADData
       _sendADdata
         _packADData
           _packReturnData
         i2_start_i2c_slave_reply
     _setBrainReqData
       _unpackBrainMsg
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     46      B2       8       69.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     3C      AA       6       66.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     76      78       4       93.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     225      11        0.0%
DATA                 0      0     225      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb 09 17:55:59 2014

               packReturnData@end 003C                 packReturnData@msg 0033  
                main@uthread_data 0277                packReturnData@data 002F  
              packReturnData@dest 003E          _MQ_Main_Willing_to_block 004D  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 1A7C  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1D5E  
                    __CFG_CP0$OFF 000000                 i2recv_msg@msgtype 003C  
               i2recv_msg@tlength 0043                               l102 07E8  
                             l512 1B96                               l514 1BAE  
                             l515 1BB0                               l560 1370  
                             l561 1372                               l562 1380  
                             l563 1382                               l556 1350  
                             l488 1D0A                               l489 1D0C  
                             l789 1DE8              __size_of_WriteTimer0 0012  
            __size_of_WriteTimer1 0012                    _FromMainLow_MQ 0236  
                             wreg 000FE8                      __CFG_IESO$ON 000000  
                    ?_in_high_int 0183           __size_of_packReturnData 00A8  
                ??_init_uart_recv 0185              packReturnData@maxout 0035  
                 ReadTimer1@timer 0003                              l1101 142E  
             i2recv_msg@maxlength 003B                              l3251 19C4  
                            l3503 0886                              l3273 1A2A  
                            l3513 0900                              l3521 094C  
                            l3259 19E6                              l3701 0C84  
                            l3533 09C8                              l3509 08C4  
                            l3525 096C                              l3543 0A8E  
                            l3519 093A                              l3527 098A  
                            l3537 09EA                              l3803 0BE0  
                            l3539 0A3C                              l3637 1352  
                            l3629 133C                              l3493 0812  
                            l3485 0796                              l3477 0754  
                            l3735 1606                              l3495 0822  
                            l3487 07EE                              l3681 158A  
                            l3753 0D4E                              l3675 155E  
                            l3499 085E                              l3589 1B98  
                            l3773 18A4                              l3767 1880  
                            l3687 15B6                              l3697 0C00  
                            l3787 0B1A                              l3963 141A  
                            l3955 13CC                              l3957 13DE  
                            l3959 13E6                              _LATB 000F8A  
                            u3057 1DEA                              u2490 0926  
                            i1l47 0070                   _FromMainHigh_MQ 0200  
                   __CFG_FCMEN$ON 000000            ?_block_on_To_msgqueues 0001  
                            _main 06BA                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                       main@msgtype 0294  
                      i1_send_msg 1084                              pclat 000FFA  
                     i2_check_msg 1D84                              prodh 000FF4  
                            prodl 000FF3             handle_start@data_read 002F  
                            start 00B6                        i2_recv_msg 0EEA  
                   __CFG_FOSC2$ON 000000                        i2_send_msg 112E  
       ToMainHigh_recvmsg@msgtype 019B                    send_msg@length 018F  
   i2start_i2c_slave_reply@length 0033       __size_of_timer0_int_handler 0078  
                     _Delay1KTCYx 1DE4                             ?_main 0001  
                           _T0CON 000FD5                             _T1CON 000FCD  
                 __end_of___lwmod 1438                        i1memcpy@d1 0001  
                           i2l300 048E                     sendADdata@len 0082  
                           i2l306 052E                             i2l262 1038  
                           i1l574 1DD4                             i2l272 051C  
                           i2l274 0182                             i2l292 0356  
                           i2l278 01C6                        i1memcpy@s1 0003  
     FromMainHigh_recvmsg@msgtype 0080                             _RCREG 000FAE  
                   packADData@len 0042                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                     packADData@out 0044  
                           _TMR1L 000FCE                             _SPBRG 000FAF  
                           _TRISB 000F93                             _TXSTA 000FAC  
                      i2memcpy@d1 002F                        i2memcpy@s1 0031  
                    ?_init_queues 0001         __size_of_enter_sleep_mode 0006  
                 __end_of_in_main 1A3A        ToMainLow_recvmsg@maxlength 019F  
                           main@j 0287           __end_of_setBrainReqData 1E10  
         timer0_lthread@msgbuffer 0189           i2c_configure_slave@addr 0183  
                  _unpackBrainMsg 1E88                             tablat 000FF5  
                           status 000FD8                  __end_ofi1_memcpy 1AFE  
               unpackBrainMsg@buf 002F                  __end_ofi2_memcpy 1B3E  
                 __initialization 1914                      __end_of_main 0AAE  
                      _ReadTimer1 1E58       __size_of_timer1_int_handler 0030  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
   __size_of_FromMainHigh_recvmsg 0032             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036            packReturnData@sensorID 0037  
                          ??_main 01A7                   send_msg@msgtype 0190  
                   __activetblptr 000002                   send_msg@tlength 0194  
            __end_of_handle_start 1084            __end_of_unpackBrainMsg 1E92  
         ??_uart_recv_int_handler 001B                            i1l4101 12FC  
                          i1l4113 0066                            i1l4043 1AEC  
                  sendADdata@data 0080                            i1l4037 1AD0  
                          i1l4067 10BC                            i2l4003 0F30  
                          i2l3311 0178                            i2l4025 0E12  
                          i2l3305 0160                        _OpenTimer0 1CE6  
                      _OpenTimer1 1B7C                            i2l3075 1CDC  
                          i2l3067 1CC6                            i2l3411 0592  
                          i2l3331 022A                            i2l4019 0FB8  
                          i2l2509 1968                            i2l4053 1B2C  
                          i2l4029 0E86                            i2l3421 0600  
                          i2l3405 0532                            i2l3341 0266  
                  __CFG_WDTEN$OFF 000000                            i2l4047 1B10  
                          i2l3329 01FE                            i2l3371 03CA  
                          i2l3347 027E                            i2l3283 14F8  
                          i2l3429 069A                            i2l3373 040C  
                          i2l3349 02BE                            i2l3377 041E  
                          i2l3289 1502                            i2l3399 04F0  
                          i2l3913 1442                            i2l3923 1476  
                          i2l3845 1054                            i2l3917 1454  
                          i2l3933 1498                            i2l3847 106C  
                          i2l3927 148A                            i2l3935 14B2  
                          i2l3881 1202                            i2l3891 1248  
                          i2l3897 1264                            i2l3979 1166  
     __end_of_i2c_configure_slave 1D38                     ??_SleepIfOkay 0033  
                  packADData@data 0040                __size_of_ReadUSART 001E  
                          _OSCCON 000FD3                            _SPBRGH 000FB0  
                          _SSPADD 000FC8                            _SSPBUF 000FC9  
  __size_of_start_i2c_slave_reply 010E                       ?i1_send_msg 000B  
   __end_of_start_i2c_slave_reply 0CF2                timer0_lthread@tptr 0183  
                     ?i2_recv_msg 0039                      i2_in_low_int 1CB8  
                     ?i2_send_msg 0039                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                   _i2c_int_handler 00BA  
                OpenTimer0@config 0183                            _ic_ptr 01A8  
                       ??___lwmod 0187                     main@msgbuffer 027B  
                __end_of_init_i2c 17FA                  OpenTimer1@config 0183  
                          _memcpy 185E                            clear_0 191A  
                          clear_1 1926                            _uc_ptr 0050  
                          main@ic 0296                            main@uc 028D  
                __end_of_recv_msg 0BE4       start_i2c_slave_reply@length 0187  
                       ??_in_main 0189                  __end_of_send_msg 0DF6  
                    __pdataCOMRAM 0048                    _packReturnData 11D8  
           timer0_int_handler@val 0089           i2c_int_handler@i2c_data 0171  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 0186  
        ?i2_start_i2c_slave_reply 002F                   ?_unpackBrainMsg 002F  
        ToMainLow_recvmsg@msgtype 019B                 _sendRequestedData 17FA  
            __size_of_in_high_int 0012                      reqADData@buf 002F  
                ?_setBrainReqData 0031                   __CFG_FOSC$HSPLL 000000  
              ?_sendRequestedData 0001                        __accesstop 0080  
         __end_of__initialization 1958        __end_of_ToMainHigh_recvmsg 1ABE  
      __end_of_ToMainHigh_sendmsg 1D84               ??_sendRequestedData 0048  
     __end_of_init_timer1_lthread 1E34               __end_of_SleepIfOkay 19B0  
                  __pcstackCOMRAM 0001            __size_ofi2_in_high_int 000C  
                     ?_ReadTimer1 0001                __size_of_check_msg 0036  
               __end_of_ReadUSART 1DE4                      _BrainMsgRecv 00F6  
          __end_of_packReturnData 1280         timer0_int_handler@msgtype 0087  
             __size_ofi1_send_msg 00AA                         ?i1_memcpy 0001  
   __size_of_InterruptHandlerHigh 1538       __end_of_InterruptHandlerLow 00B6  
                       ?i2_memcpy 002F                     _ToMainHigh_MQ 0100  
             __size_ofi2_recv_msg 00D2         __end_of_sendRequestedData 185E  
                _enter_sleep_mode 1E9A               __size_ofi2_send_msg 00AA  
            timer1_lthread@length 01A1                     ReadUSART@data 0001  
               __end_of_OpenUSART 13AE                     check_msg@qptr 0183  
            timer1_lthread@retval 01A6           ??_block_on_To_msgqueues 0189  
            __size_of_init_queues 006E                        __pbssBANK0 00F6  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
                     ?_OpenTimer0 0001                       ?_OpenTimer1 0001  
              __size_of_reqADData 0086                        __pnvCOMRAM 0050  
              main@to_send_buffer 026C           __end_of_i2c_int_handler 06BA  
                    ?i2_check_msg 002F                timer1_lthread@tptr 019D  
               recv_msg@maxlength 018F                   recv_msg@msgtype 0190  
                 recv_msg@tlength 0197             __size_of_handle_start 00C8  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0031  
                         ?_memcpy 0183                  WriteTimer1@timer 0003  
                   ??_WriteTimer0 0031                     ??_WriteTimer1 0003  
         __size_of_timer0_lthread 0012           __size_of_timer1_lthread 0072  
                 ?_packReturnData 002F   __end_ofi2_start_i2c_slave_reply 0EEA  
                      ??i1_memcpy 0007                        ??i2_memcpy 0035  
                      _packADData 1C20        i2start_i2c_slave_reply@msg 002F  
                i1send_msg@length 000D                     i2_in_high_int 1E7C  
                         _SSPCON1 000FC6                           _SSPCON2 000FC5  
                         _SSPSTAT 000FC7               __size_of_ReadTimer1 0012  
               __end_of_check_msg 1C20                         ?_init_i2c 0183  
                     _SleepIfOkay 1962                         ?_recv_msg 018D  
                      _in_low_int 19B0                      _handle_start 0FBC  
                         __Hparam 0000                         ?_send_msg 018D  
                         __Lparam 0000        __end_of_timer0_int_handler 16B0  
                init_uart_recv@uc 0183                           ___lwmod 13AE  
                 __CFG_STVREN$OFF 000000                           __pcinit 1914  
               __end_of_reqADData 14BE                   __size_of_memcpy 005E  
                      _init_queue 15BE                           __ramtop 0400  
             __size_of_OpenTimer0 002A               __size_of_OpenTimer1 0038  
                         __ptext0 06BA                           __ptext1 1B3E  
                         __ptext2 16B0                           __ptext3 13AE  
                         __ptext4 1BB4                           __ptext5 0CF2  
                         __ptext6 1E10                           __ptext7 0BE4  
                         __ptext8 1DA8                           __ptext9 1E22  
                       _T0CONbits 000FD5                           _in_main 19F6  
                       _T1CONbits 000FCD                        _sendADdata 18BC  
          sendADdata@bytes_packed 00E8              sendRequestedData@len 00F4  
             reqADData@numSamples 0032                           _sample1 0048  
                         _sample2 0049                           _sample3 004A  
                         _sample4 004B                           _sample5 004C  
             __end_of_WriteTimer0 1E7C               __end_of_WriteTimer1 1E58  
      __size_of_sendRequestedData 0064                    ?i2_in_high_int 002F  
                  __pintcode_body 14BE      __end_of_FromMainHigh_recvmsg 1C88  
            end_of_initialization 1958           timer1_lthread@msgbuffer 01A3  
    __end_of_FromMainHigh_sendmsg 1BEA    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 019C                           memcpy@d 0189  
                         memcpy@n 0187                           memcpy@s 018B  
   __end_of_uart_recv_int_handler 131C                        ??_init_i2c 0185  
     i2c_int_handler@data_written 016F                     __Lmediumconst 0000  
                         int_func 14BE                      ??i1_send_msg 0011  
                   ?_uart_lthread 0183                 sendADdata@outBuff 0084  
         __size_of_init_uart_recv 001E                  ?_i2c_int_handler 0001  
                    ??i2_recv_msg 0040                        ??_recv_msg 0194  
                    ??i2_send_msg 003F                        ??_send_msg 0193  
      __end_of_timer1_int_handler 1CB8                         _RCSTAbits 000FAB  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 0045                  ??_unpackBrainMsg 0031  
                     ?_packADData 0040                __end_ofi1_send_msg 112E  
     FromMainHigh_sendmsg@msgtype 0199                         _TRISCbits 000F94  
              __end_ofi2_recv_msg 0FBC                __end_ofi2_send_msg 11D8  
   FromMainHigh_recvmsg@maxlength 0047          timer1_int_handler@result 001C  
                  ??_uart_lthread 018B                         _TXSTAbits 000FAC  
                      main@length 0295                       ?_in_low_int 0185  
           timer0_lthread@msgtype 0185                setBrainReqData@buf 0031  
__size_ofi2_start_i2c_slave_reply 00F4             _start_i2c_slave_reply 0BE4  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1EA0                      ??_ReadTimer1 0003  
              _ToMainHigh_recvmsg 1A7C                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 1D5E                         i1memcpy@n 0005  
                       i1memcpy@s 0009                     __pidataCOMRAM 1EA0  
                  _timer0_lthread 1E10                       ?_init_queue 0183  
                       i2memcpy@d 0035                       _WriteTimer0 1E6A  
                     _WriteTimer1 1E46                         i2memcpy@n 0033  
                       i2memcpy@s 0037                    _timer1_lthread 16B0  
                  __end_of_memcpy 18BC                 _enable_interrupts 1E92  
            __size_of_Delay1KTCYx 0016                       ?_sendADdata 0080  
             ?_ToMainHigh_recvmsg 019B                   ??i2_in_high_int 0031  
        i2c_int_handler@data_read 0174               ?_ToMainHigh_sendmsg 0045  
              ?_enable_interrupts 0001               start_initialization 1914  
                   ??_in_high_int 0185                         _ReadUSART 1DC6  
        packReturnData@payloadLen 0031                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040               ??_enable_interrupts 0183  
                    ??_OpenTimer0 0183                      ??_OpenTimer1 0183  
  __size_of_block_on_To_msgqueues 007E                __end_of_ReadTimer1 1E6A  
   __end_of_block_on_To_msgqueues 15BE                         _OpenUSART 131C  
    __end_of_InterruptHandlerHigh 1540                        init_i2c@ic 0183  
            ??_ToMainHigh_recvmsg 019F              ??_ToMainHigh_sendmsg 0048  
        __size_of_setBrainReqData 0016               __size_of_packADData 0036  
          __end_of_timer0_lthread 1E22                  ??_packReturnData 0039  
        i2c_int_handler@error_buf 016C            __end_of_timer1_lthread 1722  
       __end_of_enable_interrupts 1E9A                          ??_memcpy 0189  
           timer1_lthread@msgtype 019F              _FromMainHigh_recvmsg 1C56  
            _FromMainHigh_sendmsg 1BB4      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 1D10                __end_of_OpenTimer1 1BB4  
        i2c_int_handler@msg_ready 0173                       __pbssCOMRAM 004D  
                      ?_ReadUSART 0001                     ??_init_queues 0187  
                   __pcstackBANK0 0080                     __pcstackBANK1 016C  
                   __pcstackBANK2 026C               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 0183               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 0183          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 009E               __end_of_in_high_int 1E46  
                      ?_OpenUSART 0183                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 019D                      _ToMainLow_MQ 0136  
             __size_of_init_queue 007A                    _init_uart_recv 1DA8  
                       _check_msg 1BEA                         __pnvBANK1 01A8  
          ?_start_i2c_slave_reply 0183                 __size_of_init_i2c 006A  
             __size_of_sendADdata 0058                      recv_msg@data 0192  
                    recv_msg@qmsg 0199                      recv_msg@slot 0196  
                    recv_msg@qptr 018D                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 0183                          ?___lwmod 0183  
           ?_FromMainHigh_recvmsg 0080                   ?_timer1_lthread 019D  
           ?_FromMainHigh_sendmsg 0199                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 019D              __end_of_uart_lthread 1B7C  
      i2c_int_handler@msg_to_send 0172                          ?_in_main 0187  
               WriteTimer0@timer0 002F                _timer0_int_handler 1638  
               WriteTimer1@timer1 0001                         _reqADData 1438  
             uart_lthread@msgtype 0185             ToMainLow_sendmsg@data 0018  
             ?_timer0_int_handler 0001                  uart_lthread@uptr 0183  
          __end_of_init_uart_recv 1DC6               __end_of_init_queues 1790  
                        _LATBbits 000F8A                   i2check_msg@qptr 002F  
                      ?_check_msg 0183                          _IPR1bits 000F9F  
                        _PIE1bits 000F9D           i2_start_i2c_slave_reply 0DF6  
                   ?i2_in_low_int 0031                          _PIR1bits 000F9E  
          ToMainHigh_sendmsg@data 0046                          i2u288_45 126E  
                        _RCONbits 000FD0                  packADData@maxout 0046  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 0084  
      __size_of_enable_interrupts 0008                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                 ??_setBrainReqData 0033  
                       main@j_502 0289              timer0_lthread@length 0187  
                      ?_reqADData 002F                _timer1_int_handler 1C88  
                        i1_memcpy 1ABE              _InterruptHandlerHigh 0008  
                    ??_packADData 0048                       ??_ReadUSART 0001  
                        i2_memcpy 1AFE              timer0_lthread@msgval 018B  
        FromMainHigh_recvmsg@data 0082                       _in_high_int 1E34  
                    send_msg@data 0191               _i2c_configure_slave 1D10  
                    send_msg@qmsg 0197                      send_msg@slot 0196  
                    send_msg@qptr 018D             uart_lthread@msgbuffer 0189  
                       copy_data0 194C               ?_timer1_int_handler 0001  
                 ?_init_uart_recv 0183                       ??_OpenUSART 0185  
                 OpenUSART@config 0188                    ??i2_in_low_int 0033  
           _uart_recv_int_handler 1280                      ??_in_low_int 0187  
                        __Hrparam 0000              ?_i2c_configure_slave 0001  
                        __Lrparam 0000                 ?_enter_sleep_mode 0001  
              __end_of_packADData 1C56            ??_FromMainHigh_recvmsg 0047  
          ??_FromMainHigh_sendmsg 019C              ??_timer1_int_handler 001B  
        __size_of_i2c_int_handler 0600                ??_enter_sleep_mode 002F  
                __size_of___lwmod 008A                      ??_init_queue 0185  
                    ?_WriteTimer0 002F                      ?_WriteTimer1 0001  
        FromMainHigh_sendmsg@data 019A           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 0279                      ??_sendADdata 0048  
           ?_InterruptHandlerHigh 0001                  __size_of_in_main 0044  
               i2send_msg@msgtype 003C       ToMainHigh_recvmsg@maxlength 019F  
               i2send_msg@tlength 0040           init_timer1_lthread@tptr 0183  
                     _init_queues 1722                __end_of_in_low_int 19F6  
                        __ptext10 1722                          __ptext11 15BE  
                        __ptext20 1DE4                          __ptext12 1790  
                        __ptext21 1A3A                          __ptext13 1D10  
                        __ptext30 1DC6                          __ptext22 1A7C  
                        __ptext14 1E92                          __ptext31 1C88  
                        __ptext23 0AAE                          __ptext15 1540  
                        __ptext40 1C56                          __ptext32 1E46  
                        __ptext24 185E                          __ptext16 19F6  
                        __ptext41 0EEA                          __ptext33 1D38  
                        __ptext25 131C                          __ptext17 19B0  
                        __ptext50 1438                          __ptext42 00BA  
                        __ptext34 1084                          __ptext26 1B7C  
                        __ptext18 1E34                          __ptext51 0FBC  
                        __ptext43 1DFA                          __ptext35 1ABE  
                        __ptext27 1CE6                          __ptext19 1BEA  
                        __ptext52 1D5E                          __ptext44 1E88  
                        __ptext36 1E58                          __ptext53 112E  
                        __ptext45 17FA                          __ptext29 1280  
                        __ptext54 1AFE                          __ptext46 18BC  
                        __ptext38 1638                          __ptext55 1962  
                        __ptext47 0DF6                          __ptext39 1E6A  
                        __ptext56 1CB8                          __ptext48 1C20  
                        __ptext57 1E7C                          __ptext49 11D8  
                        __ptext58 1D84                          __ptext59 1E9A  
                  i1send_msg@data 000F                    i1send_msg@qmsg 0015  
                  i1send_msg@slot 0014                    i1send_msg@qptr 000B  
              uart_lthread@length 0187          timer0_int_handler@length 0085  
       ??i2_start_i2c_slave_reply 0031                          _init_i2c 1790  
             _init_timer1_lthread 1E22                     __size_of_main 03F4  
                   ??i2_check_msg 0031                 main@t1thread_data 028B  
           sendRequestedData@data 00EA                       ??_check_msg 0185  
              __end_of_init_queue 1638              __size_of_SleepIfOkay 004E  
                        _recv_msg 0AAE             ??_i2c_configure_slave 0183  
                        _send_msg 0CF2                __end_of_sendADdata 1914  
                  init_queue@qptr 0183                          _timesreq 004F  
           __size_of_uart_lthread 003E                    i2recv_msg@data 003E  
                  i2recv_msg@qmsg 0045                     ??_Delay1KTCYx 0183  
                  i2recv_msg@slot 0042                    i2recv_msg@qptr 0039  
             _InterruptHandlerLow 0018              ?_init_timer1_lthread 0183  
                     ??_reqADData 0031                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 0183  
                        memcpy@d1 0183                          memcpy@s1 0185  
           __end_ofi2_in_high_int 1E88             main@data_points_count 0292  
    i2c_int_handler@overrun_error 0170                  i2send_msg@length 003B  
                        intlevel1 0000                          intlevel2 0000  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 0185  
         __size_of_unpackBrainMsg 000A                  ___lwmod@dividend 0183  
          ?_uart_recv_int_handler 0001                      _uart_lthread 1B3E  
           _block_on_To_msgqueues 1540                     ?_handle_start 0001  
                ??_timer0_lthread 018B       __size_of_ToMainHigh_recvmsg 0042  
     __size_of_ToMainHigh_sendmsg 0026                        _OSCCONbits 000FD3  
                ??_timer1_lthread 01A5          ToMainHigh_sendmsg@length 0080  
             __end_ofi2_check_msg 1DA8             ??_init_timer1_lthread 0185  
          ??_InterruptHandlerHigh 0175                 _ToMainLow_recvmsg 1A3A  
               _ToMainLow_sendmsg 1D38                main@last_reg_recvd 0286  
                 ___lwmod@divisor 0185              __end_ofi2_in_low_int 1CE6  
              ?_ToMainLow_recvmsg 019B               __end_of_Delay1KTCYx 1DFA  
               ??_i2c_int_handler 00F5                   ___lwmod@counter 0188  
              ?_ToMainLow_sendmsg 0017                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 003D  
           ??_InterruptHandlerLow 001E               ??_ToMainLow_recvmsg 019F  
                  i2send_msg@qmsg 0043                    i2send_msg@slot 0042  
                  i2send_msg@qptr 0039               ??_ToMainLow_sendmsg 001A  
                  ??_handle_start 002F                      _USART_Status 004E  
                 _setBrainReqData 1DFA  
