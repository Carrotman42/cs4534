

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 10 22:52:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001C32                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _sample1
    85  001C32  01                 	db	1
    86                           
    87                           ;initializer for _sample2
    88  001C33  05                 	db	5
    89                           
    90                           ;initializer for _sample3
    91  001C34  10                 	db	16
    92                           
    93                           ;initializer for _sample4
    94  001C35  D8                 	db	216
    95                           
    96                           ;initializer for _sample5
    97  001C36  FE                 	db	254
    98  0000                     _ADCON0	set	4034
    99  0000                     _ADCON0bits	set	4034
   100  0000                     _ADCON1	set	4033
   101  0000                     _ADCON2	set	4032
   102  0000                     _ADRESH	set	4036
   103  0000                     _ADRESL	set	4035
   104  0000                     _INTCONbits	set	4082
   105  0000                     _IPR1bits	set	3999
   106  0000                     _LATB	set	3978
   107  0000                     _LATBbits	set	3978
   108  0000                     _OSCCON	set	4051
   109  0000                     _OSCCONbits	set	4051
   110  0000                     _OSCTUNEbits	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIR1bits	set	3998
   113  0000                     _RCONbits	set	4048
   114  0000                     _RCREG	set	4014
   115  0000                     _RCSTAbits	set	4011
   116  0000                     _SSPADD	set	4040
   117  0000                     _SSPBUF	set	4041
   118  0000                     _SSPCON1	set	4038
   119  0000                     _SSPCON1bits	set	4038
   120  0000                     _SSPCON2	set	4037
   121  0000                     _SSPCON2bits	set	4037
   122  0000                     _SSPSTAT	set	4039
   123  0000                     _SSPSTATbits	set	4039
   124  0000                     _T0CON	set	4053
   125  0000                     _T0CONbits	set	4053
   126  0000                     _TMR0H	set	4055
   127  0000                     _TMR0L	set	4054
   128  0000                     _TMR1H	set	4047
   129  0000                     _TMR1L	set	4046
   130  0000                     _TRISAbits	set	3986
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISCbits	set	3988
   133                           
   134                           ; #config settings
   135  0000                     
   136                           	psect	cinit
   137  0014D0                     __pcinit:
   138                           	opt stack 0
   139  0014D0                     start_initialization:
   140                           	opt stack 0
   141  0014D0                     __initialization:
   142                           	opt stack 0
   143                           
   144                           ; Clear objects allocated to BANK3 (54 bytes)
   145  0014D0  EE03  F098         	lfsr	0,__pbssBANK3
   146  0014D4  0E36               	movlw	54
   147  0014D6                     clear_0:
   148  0014D6  6AEE               	clrf	postinc0,c
   149  0014D8  06E8               	decf	wreg,f,c
   150  0014DA  E1FD               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to BANK2 (209 bytes)
   153  0014DC  EE02  F000         	lfsr	0,__pbssBANK2
   154  0014E0  0ED1               	movlw	209
   155  0014E2                     clear_1:
   156  0014E2  6AEE               	clrf	postinc0,c
   157  0014E4  06E8               	decf	wreg,f,c
   158  0014E6  E1FD               	bnz	clear_1
   159                           
   160                           ; Clear objects allocated to BANK1 (56 bytes)
   161  0014E8  EE01  F000         	lfsr	0,__pbssBANK1
   162  0014EC  0E38               	movlw	56
   163  0014EE                     clear_2:
   164  0014EE  6AEE               	clrf	postinc0,c
   165  0014F0  06E8               	decf	wreg,f,c
   166  0014F2  E1FD               	bnz	clear_2
   167                           
   168                           ; Clear objects allocated to COMRAM (13 bytes)
   169  0014F4  EE00  F040         	lfsr	0,__pbssCOMRAM
   170  0014F8  0E0D               	movlw	13
   171  0014FA                     clear_3:
   172  0014FA  6AEE               	clrf	postinc0,c
   173  0014FC  06E8               	decf	wreg,f,c
   174  0014FE  E1FD               	bnz	clear_3
   175                           
   176                           ; Initialize objects allocated to COMRAM (5 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178  001500  0E32               	movlw	low __pidataCOMRAM
   179  001502  6EF6               	movwf	tblptrl,c
   180  001504  0E1C               	movlw	high __pidataCOMRAM
   181  001506  6EF7               	movwf	tblptrh,c
   182  001508  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183  00150A  6EF8               	movwf	tblptru,c
   184  00150C  EE00  F04D         	lfsr	0,__pdataCOMRAM
   185  001510  EE10 F005          	lfsr	1,5
   186  001514                     copy_data0:
   187  001514  0009               	tblrd		*+
   188  001516  CFF5 FFEE          	movff	tablat,postinc0
   189  00151A  50E5               	movf	postdec1,w,c
   190  00151C  50E1               	movf	fsr1l,w,c
   191  00151E  E1FA               	bnz	copy_data0
   192  001520                     end_of_initialization:
   193                           	opt stack 0
   194  001520                     __end_of__initialization:
   195                           	opt stack 0
   196  001520  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  001522  6EF8               	movwf	tblptru,c
   198  001524  0100               	movlb	0
   199  001526  EF5C  F003         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	bssCOMRAM
   210  000040                     __pbssCOMRAM:
   211                           	opt stack 0
   212  000040                     _BrainMsgRecv:
   213                           	opt stack 0
   214  000040                     	ds	2
   215  000042                     _uc_ptr:
   216                           	opt stack 0
   217  000042                     	ds	2
   218  000044                     _MQ_Main_Willing_to_block:
   219                           	opt stack 0
   220  000044                     	ds	1
   221  000045                     _USART_Status:
   222                           	opt stack 0
   223  000045                     	ds	1
   224  000046                     _count:
   225                           	opt stack 0
   226  000046                     	ds	1
   227  000047                     _timesreq:
   228                           	opt stack 0
   229  000047                     	ds	1
   230  000048                     _ADCBuffer:
   231                           	opt stack 0
   232  000048                     	ds	5
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           postdec1	equ	0xFE5
   240                           fsr1l	equ	0xFE1
   241                           
   242                           	psect	dataCOMRAM
   243  00004D                     __pdataCOMRAM:
   244                           	opt stack 0
   245  00004D                     _sample1:
   246                           	opt stack 0
   247  00004D                     	ds	1
   248  00004E                     _sample2:
   249                           	opt stack 0
   250  00004E                     	ds	1
   251  00004F                     _sample3:
   252                           	opt stack 0
   253  00004F                     	ds	1
   254  000050                     _sample4:
   255                           	opt stack 0
   256  000050                     	ds	1
   257  000051                     _sample5:
   258                           	opt stack 0
   259  000051                     	ds	1
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	bssBANK1
   270  000100                     __pbssBANK1:
   271                           	opt stack 0
   272  000100                     _ic_ptr:
   273                           	opt stack 0
   274  000100                     	ds	2
   275  000102                     _ToMainHigh_MQ:
   276                           	opt stack 0
   277  000102                     	ds	54
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bssBANK2
   288  000200                     __pbssBANK2:
   289                           	opt stack 0
   290  000200                     _ADacc:
   291                           	opt stack 0
   292  000200                     	ds	101
   293  000265                     _FromMainLow_MQ:
   294                           	opt stack 0
   295  000265                     	ds	54
   296  00029B                     _ToMainLow_MQ:
   297                           	opt stack 0
   298  00029B                     	ds	54
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	bssBANK3
   309  000398                     __pbssBANK3:
   310                           	opt stack 0
   311  000398                     _FromMainHigh_MQ:
   312                           	opt stack 0
   313  000398                     	ds	54
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	cstackBANK3
   324  000300                     __pcstackBANK3:
   325                           	opt stack 0
   326  000300                     main@to_send_buffer:
   327                           	opt stack 0
   328                           
   329                           ; 11 bytes @ 0x0
   330  000300                     	ds	11
   331  00030B                     main@msgbuffer:
   332                           	opt stack 0
   333                           
   334                           ; 11 bytes @ 0xB
   335  00030B                     	ds	11
   336  000316                     main@last_reg_recvd:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x16
   340  000316                     	ds	1
   341  000317                     main@j:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x17
   345  000317                     	ds	2
   346  000319                     main@j_452:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x19
   350  000319                     	ds	2
   351  00031B                     main@msgtype:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x1B
   355  00031B                     	ds	1
   356  00031C                     main@data_points_count:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x1C
   360  00031C                     	ds	2
   361  00031E                     main@length:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x1E
   365  00031E                     	ds	1
   366  00031F                     main@ic:
   367                           	opt stack 0
   368                           
   369                           ; 121 bytes @ 0x1F
   370  00031F                     	ds	121
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	cstackBANK1
   381  000138                     __pcstackBANK1:
   382                           	opt stack 0
   383  000138                     ??_InterruptHandlerHigh:
   384                           
   385                           ; 0 bytes @ 0x0
   386  000138                     	ds	14
   387  000146                     ??_resetADacc:
   388  000146                     ??_SetChanADC:
   389  000146                     ?_in_high_int:
   390                           	opt stack 0
   391  000146                     i2c_configure_slave@addr:
   392                           	opt stack 0
   393  000146                     OpenADC@config2:
   394                           	opt stack 0
   395  000146                     OpenTimer0@config:
   396                           	opt stack 0
   397  000146                     Delay10TCYx@unit:
   398                           	opt stack 0
   399  000146                     Delay1KTCYx@unit:
   400                           	opt stack 0
   401  000146                     init_queue@qptr:
   402                           	opt stack 0
   403  000146                     check_msg@qptr:
   404                           	opt stack 0
   405  000146                     start_i2c_slave_reply@msg:
   406                           	opt stack 0
   407  000146                     init_i2c@ic:
   408                           	opt stack 0
   409  000146                     addADDataPoints@data:
   410                           	opt stack 0
   411  000146                     memcpy@d1:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xE
   415  000146                     	ds	1
   416  000147                     OpenADC@portconfig:
   417                           	opt stack 0
   418  000147                     SetChanADC@channel:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0xF
   422  000147                     	ds	1
   423  000148                     ??_start_i2c_slave_reply:
   424  000148                     ??_OpenADC:
   425  000148                     ??_init_queue:
   426  000148                     ??_check_msg:
   427  000148                     ?_in_low_int:
   428                           	opt stack 0
   429  000148                     addADDataPoints@len:
   430                           	opt stack 0
   431  000148                     memcpy@s1:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x10
   435  000148                     	ds	1
   436  000149                     init_queue@i:
   437                           	opt stack 0
   438  000149                     resetADacc@i:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x11
   442  000149                     	ds	1
   443  00014A                     ??_init_queues:
   444  00014A                     ??_addADDataPoints:
   445  00014A                     ?_in_main:
   446                           	opt stack 0
   447  00014A                     start_i2c_slave_reply@length:
   448                           	opt stack 0
   449  00014A                     OpenADC@config:
   450                           	opt stack 0
   451  00014A                     memcpy@n:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x12
   455  00014A                     	ds	1
   456  00014B                     ??_init_adc:
   457                           
   458                           ; 0 bytes @ 0x13
   459  00014B                     	ds	1
   460  00014C                     ??_block_on_To_msgqueues:
   461  00014C                     addADDataPoints@i:
   462                           	opt stack 0
   463  00014C                     memcpy@d:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x14
   467  00014C                     	ds	2
   468  00014E                     addDataPoints@sensorid:
   469                           	opt stack 0
   470  00014E                     memcpy@s:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x16
   474  00014E                     	ds	2
   475  000150                     recv_msg@qptr:
   476                           	opt stack 0
   477  000150                     addDataPoints@data:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x18
   481  000150                     	ds	2
   482  000152                     recv_msg@maxlength:
   483                           	opt stack 0
   484  000152                     addDataPoints@len:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1A
   488  000152                     	ds	1
   489  000153                     recv_msg@msgtype:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x1B
   493  000153                     	ds	1
   494  000154                     
   495                           ; 0 bytes @ 0x1C
   496  000154                     	ds	1
   497  000155                     recv_msg@data:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x1D
   501  000155                     	ds	2
   502  000157                     ??_recv_msg:
   503                           
   504                           ; 0 bytes @ 0x1F
   505  000157                     	ds	2
   506  000159                     recv_msg@slot:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x21
   510  000159                     	ds	1
   511  00015A                     recv_msg@tlength:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x22
   515  00015A                     	ds	2
   516  00015C                     recv_msg@qmsg:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x24
   520  00015C                     	ds	2
   521  00015E                     ToMainLow_recvmsg@msgtype:
   522                           	opt stack 0
   523  00015E                     ToMainHigh_recvmsg@msgtype:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x26
   527  00015E                     	ds	2
   528  000160                     ToMainLow_recvmsg@data:
   529                           	opt stack 0
   530  000160                     ToMainHigh_recvmsg@data:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x28
   534  000160                     	ds	2
   535  000162                     ToMainLow_recvmsg@maxlength:
   536                           	opt stack 0
   537  000162                     ToMainHigh_recvmsg@maxlength:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x2A
   541  000162                     	ds	1
   542  000163                     ??_main:
   543                           
   544                           ; 0 bytes @ 0x2B
   545  000163                     	ds	1
   546                           tblptru	equ	0xFF8
   547                           tblptrh	equ	0xFF7
   548                           tblptrl	equ	0xFF6
   549                           tablat	equ	0xFF5
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           
   555                           	psect	cstackBANK0
   556  000080                     __pcstackBANK0:
   557                           	opt stack 0
   558  000080                     ?_packADData:
   559                           	opt stack 0
   560  000080                     packADData@data:
   561                           	opt stack 0
   562  000080                     i2send_msg@tlength:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x0
   566  000080                     	ds	2
   567  000082                     i2send_msg@slot:
   568                           	opt stack 0
   569  000082                     packADData@len:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x2
   573  000082                     	ds	1
   574  000083                     i2send_msg@qmsg:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x3
   578  000083                     	ds	1
   579  000084                     packADData@out:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x4
   583  000084                     	ds	1
   584  000085                     i2ToMainHigh_sendmsg@msgtype:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x5
   588  000085                     	ds	1
   589  000086                     packADData@maxout:
   590                           	opt stack 0
   591  000086                     i2ToMainHigh_sendmsg@data:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x6
   595  000086                     	ds	2
   596  000088                     i2ToMainHigh_sendmsg@length:
   597                           	opt stack 0
   598  000088                     sendADdata@outBuff:
   599                           	opt stack 0
   600                           
   601                           ; 103 bytes @ 0x8
   602  000088                     	ds	103
   603  0000EF                     sendADdata@bytes_packed:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x6F
   607  0000EF                     	ds	2
   608  0000F1                     ??_i2c_int_handler:
   609                           
   610                           ; 0 bytes @ 0x71
   611  0000F1                     	ds	1
   612  0000F2                     i2c_int_handler@error_buf:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x72
   616  0000F2                     	ds	3
   617  0000F5                     i2c_int_handler@data_written:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x75
   621  0000F5                     	ds	1
   622  0000F6                     i2c_int_handler@overrun_error:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x76
   626  0000F6                     	ds	1
   627  0000F7                     i2c_int_handler@i2c_data:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x77
   631  0000F7                     	ds	1
   632  0000F8                     i2c_int_handler@msg_to_send:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x78
   636  0000F8                     	ds	1
   637  0000F9                     i2c_int_handler@msg_ready:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x79
   641  0000F9                     	ds	1
   642  0000FA                     i2c_int_handler@data_read:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x7A
   646  0000FA                     	ds	1
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           postdec1	equ	0xFE5
   654                           fsr1l	equ	0xFE1
   655                           
   656                           	psect	cstackCOMRAM
   657  000001                     __pcstackCOMRAM:
   658                           	opt stack 0
   659  000001                     ?_ReadADC:
   660                           	opt stack 0
   661  000001                     setDBG@b:
   662                           	opt stack 0
   663  000001                     resetDBG@b:
   664                           	opt stack 0
   665  000001                     addBuffer@data:
   666                           	opt stack 0
   667  000001                     i1memcpy@d1:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x0
   671  000001                     	ds	1
   672  000002                     debugNum@num:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x1
   676  000002                     	ds	1
   677  000003                     i1memcpy@s1:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x2
   681  000003                     	ds	1
   682  000004                     
   683                           ; 0 bytes @ 0x3
   684  000004                     	ds	1
   685  000005                     i1memcpy@n:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x4
   689  000005                     	ds	2
   690  000007                     i1memcpy@d:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x6
   694  000007                     	ds	2
   695  000009                     i1memcpy@s:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x8
   699  000009                     	ds	2
   700  00000B                     send_msg@qptr:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0xA
   704  00000B                     	ds	2
   705  00000D                     send_msg@length:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0xC
   709  00000D                     	ds	1
   710  00000E                     send_msg@msgtype:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0xD
   714  00000E                     	ds	1
   715  00000F                     send_msg@data:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0xE
   719  00000F                     	ds	2
   720  000011                     ??_send_msg:
   721                           
   722                           ; 0 bytes @ 0x10
   723  000011                     	ds	1
   724  000012                     send_msg@tlength:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x11
   728  000012                     	ds	2
   729  000014                     send_msg@slot:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x13
   733  000014                     	ds	1
   734  000015                     send_msg@qmsg:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x14
   738  000015                     	ds	2
   739  000017                     ToMainHigh_sendmsg@msgtype:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x16
   743  000017                     	ds	1
   744  000018                     ToMainHigh_sendmsg@data:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x17
   748  000018                     	ds	2
   749  00001A                     ToMainHigh_sendmsg@length:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x19
   753  00001A                     	ds	1
   754  00001B                     ??_adc_int_handler:
   755                           
   756                           ; 0 bytes @ 0x1A
   757  00001B                     	ds	1
   758  00001C                     adc_int_handler@data:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x1B
   762  00001C                     	ds	2
   763  00001E                     ??_InterruptHandlerLow:
   764                           
   765                           ; 0 bytes @ 0x1D
   766  00001E                     	ds	17
   767  00002F                     ??i2_resetADacc:
   768  00002F                     ?_packReturnData:
   769                           	opt stack 0
   770  00002F                     ?_unpackBrainMsg:
   771                           	opt stack 0
   772  00002F                     ?i2_in_high_int:
   773                           	opt stack 0
   774  00002F                     handle_start@data_read:
   775                           	opt stack 0
   776  00002F                     i2setDBG@b:
   777                           	opt stack 0
   778  00002F                     i2resetDBG@b:
   779                           	opt stack 0
   780  00002F                     packReturnData@data:
   781                           	opt stack 0
   782  00002F                     unpackBrainMsg@buf:
   783                           	opt stack 0
   784  00002F                     WriteTimer0@timer0:
   785                           	opt stack 0
   786  00002F                     i2check_msg@qptr:
   787                           	opt stack 0
   788  00002F                     i2start_i2c_slave_reply@msg:
   789                           	opt stack 0
   790  00002F                     i2memcpy@d1:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x2E
   794  00002F                     	ds	1
   795  000030                     i2debugNum@num:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x2F
   799  000030                     	ds	1
   800  000031                     ??i2_check_msg:
   801  000031                     ??i2_start_i2c_slave_reply:
   802  000031                     ?i2_in_low_int:
   803                           	opt stack 0
   804  000031                     packReturnData@payloadLen:
   805                           	opt stack 0
   806  000031                     setBrainReqData@buf:
   807                           	opt stack 0
   808  000031                     WriteTimer0@timer:
   809                           	opt stack 0
   810  000031                     i2memcpy@s1:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x30
   814  000031                     	ds	1
   815  000032                     i2resetADacc@i:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x31
   819  000032                     	ds	1
   820  000033                     i2start_i2c_slave_reply@length:
   821                           	opt stack 0
   822  000033                     packReturnData@msg:
   823                           	opt stack 0
   824  000033                     setBrainReqData@tempBrain:
   825                           	opt stack 0
   826  000033                     i2memcpy@n:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x32
   830  000033                     	ds	2
   831  000035                     packReturnData@maxout:
   832                           	opt stack 0
   833  000035                     i2memcpy@d:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x34
   837  000035                     	ds	2
   838  000037                     packReturnData@sensorID:
   839                           	opt stack 0
   840  000037                     i2memcpy@s:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x36
   844  000037                     	ds	2
   845  000039                     ??_packReturnData:
   846  000039                     i2send_msg@qptr:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x38
   850  000039                     	ds	2
   851  00003B                     i2send_msg@length:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x3A
   855  00003B                     	ds	1
   856  00003C                     i2send_msg@msgtype:
   857                           	opt stack 0
   858  00003C                     packReturnData@end:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x3B
   862  00003C                     	ds	1
   863  00003D                     i2send_msg@data:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x3C
   867  00003D                     	ds	1
   868  00003E                     packReturnData@dest:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x3D
   872  00003E                     	ds	1
   873  00003F                     ??i2_send_msg:
   874                           
   875                           ; 0 bytes @ 0x3E
   876  00003F                     	ds	1
   877  000040                     tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           postdec1	equ	0xFE5
   884                           fsr1l	equ	0xFE1
   885                           
   886                           ; 0 bytes @ 0x3F
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 188 in file "../src/main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  j               2   23[BANK3 ] int 
   897 ;;  j               2   25[BANK3 ] int 
   898 ;;  ic            121   31[BANK3 ] struct __i2c_comm
   899 ;;  msgbuffer      11   11[BANK3 ] unsigned char [11]
   900 ;;  to_send_buff   11    0[BANK3 ] unsigned char [11]
   901 ;;  data_points_    2   28[BANK3 ] int 
   902 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   903 ;;  length          1   30[BANK3 ] char 
   904 ;;  msgtype         1   27[BANK3 ] unsigned char 
   905 ;;  last_reg_rec    1   22[BANK3 ] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;		None               void
   908 ;; Registers used:
   909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       0       0       0     152
   917 ;;      Temps:          0       0       1       0       0
   918 ;;      Totals:         0       0       1       0     152
   919 ;;Total ram usage:      153 bytes
   920 ;; Hardware stack levels required when called:   15
   921 ;; This function calls:
   922 ;;		_OpenTimer0
   923 ;;		_ToMainHigh_recvmsg
   924 ;;		_ToMainLow_recvmsg
   925 ;;		_addDataPoints
   926 ;;		_block_on_To_msgqueues
   927 ;;		_enable_interrupts
   928 ;;		_i2c_configure_slave
   929 ;;		_init_adc
   930 ;;		_init_i2c
   931 ;;		_init_queues
   932 ;;		_resetAccumulators
   933 ;;		_start_i2c_slave_reply
   934 ;; This function is called by:
   935 ;;		Startup code after reset
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text0
   940  0006B8                     __ptext0:
   941                           	opt stack 0
   942  0006B8                     _main:
   943                           	opt stack 16
   944                           
   945                           ;main.c: 190: signed char length;
   946                           ;main.c: 191: unsigned char msgtype;
   947                           ;main.c: 192: unsigned char last_reg_recvd;
   948                           ;main.c: 194: i2c_comm ic;
   949                           ;main.c: 195: unsigned char msgbuffer[10 + 1];
   950                           ;main.c: 196: unsigned char to_send_buffer[10+1];
   951                           ;main.c: 197: int data_points_count = 0;
   952                           
   953                           ;incstack = 0
   954  0006B8  0E00               	movlw	0
   955  0006BA  0103               	movlb	3	; () banked
   956  0006BC  0103               	movlb	3	; () banked
   957  0006BE  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
   958  0006C0  0E00               	movlw	0
   959  0006C2  0103               	movlb	3	; () banked
   960  0006C4  6F1C               	movwf	main@data_points_count& (0+255),b
   961                           
   962                           ;main.c: 201: timer0_thread_struct t0thread_data;
   963                           ;main.c: 209: OSCCON = 0x82;
   964  0006C6  0E82               	movlw	130
   965  0006C8  6ED3               	movwf	4051,c	;volatile
   966                           
   967                           ; BSR set to: 3
   968                           ;main.c: 210: OSCTUNEbits.PLLEN = 0;
   969  0006CA  9C9B               	bcf	3995,6,c	;volatile
   970                           
   971                           ; BSR set to: 3
   972                           ;main.c: 227: resetAccumulators();
   973  0006CC  EC13  F00E         	call	_resetAccumulators	;wreg free
   974                           
   975                           ;main.c: 229: init_adc();
   976  0006D0  EC24  F00C         	call	_init_adc	;wreg free
   977                           
   978                           ;main.c: 234: init_i2c(&ic);
   979  0006D4  0103               	movlb	3	; () banked
   980  0006D6  0E03               	movlw	high main@ic
   981  0006D8  0101               	movlb	1	; () banked
   982  0006DA  0101               	movlb	1	; () banked
   983  0006DC  6F47               	movwf	(init_i2c@ic+1)& (0+255),b
   984  0006DE  0103               	movlb	3	; () banked
   985  0006E0  0E1F               	movlw	low main@ic
   986  0006E2  0101               	movlb	1	; () banked
   987  0006E4  0101               	movlb	1	; () banked
   988  0006E6  6F46               	movwf	init_i2c@ic& (0+255),b
   989  0006E8  EC04  F00A         	call	_init_i2c	;wreg free
   990                           
   991                           ;main.c: 240: init_queues();
   992  0006EC  ECCD  F009         	call	_init_queues	;wreg free
   993                           
   994                           ;main.c: 244: TRISB = 0x0;
   995  0006F0  0E00               	movlw	0
   996  0006F2  6E93               	movwf	3987,c	;volatile
   997                           
   998                           ;main.c: 245: LATB = 0x0;
   999  0006F4  0E00               	movlw	0
  1000  0006F6  6E8A               	movwf	3978,c	;volatile
  1001                           
  1002                           ;main.c: 258: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110001);
  1003  0006F8  0E91               	movlw	145
  1004  0006FA  EC3A  F00D         	call	_OpenTimer0
  1005                           
  1006                           ;main.c: 278: IPR1bits.SSPIP = 1;
  1007  0006FE  869F               	bsf	3999,3,c	;volatile
  1008                           
  1009                           ;main.c: 280: IPR1bits.ADIP = 0;
  1010  000700  9C9F               	bcf	3999,6,c	;volatile
  1011                           
  1012                           ;main.c: 290: i2c_configure_slave(0x9E);
  1013  000702  0E9E               	movlw	158
  1014  000704  EC64  F00D         	call	_i2c_configure_slave
  1015                           
  1016                           ;main.c: 305: PIE1bits.SSPIE = 1;
  1017  000708  869D               	bsf	3997,3,c	;volatile
  1018                           
  1019                           ;main.c: 323: enable_interrupts();
  1020  00070A  EC0F  F00E         	call	_enable_interrupts	;wreg free
  1021  00070E                     l3394:
  1022                           
  1023                           ;main.c: 347: block_on_To_msgqueues();
  1024  00070E  ECDD  F008         	call	_block_on_To_msgqueues	;wreg free
  1025                           
  1026                           ;main.c: 354: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1027  000712  0103               	movlb	3	; () banked
  1028  000714  0E03               	movlw	high main@msgtype
  1029  000716  0101               	movlb	1	; () banked
  1030  000718  0101               	movlb	1	; () banked
  1031  00071A  6F5F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1032  00071C  0103               	movlb	3	; () banked
  1033  00071E  0E1B               	movlw	low main@msgtype
  1034  000720  0101               	movlb	1	; () banked
  1035  000722  0101               	movlb	1	; () banked
  1036  000724  6F5E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1037  000726  0103               	movlb	3	; () banked
  1038  000728  0E03               	movlw	high main@msgbuffer
  1039  00072A  0101               	movlb	1	; () banked
  1040  00072C  0101               	movlb	1	; () banked
  1041  00072E  6F61               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1042  000730  0103               	movlb	3	; () banked
  1043  000732  0E0B               	movlw	low main@msgbuffer
  1044  000734  0101               	movlb	1	; () banked
  1045  000736  0101               	movlb	1	; () banked
  1046  000738  6F60               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1047  00073A  0E0A               	movlw	10
  1048  00073C  ECC3  F00B         	call	_ToMainHigh_recvmsg
  1049  000740  0103               	movlb	3	; () banked
  1050  000742  0103               	movlb	3	; () banked
  1051  000744  6F1E               	movwf	main@length& (0+255),b
  1052                           
  1053                           ; BSR set to: 3
  1054                           ;main.c: 355: if (length < 0) {
  1055  000746  0103               	movlb	3	; () banked
  1056  000748  0103               	movlb	3	; () banked
  1057  00074A  BF1E               	btfsc	main@length& (0+255),7,b
  1058  00074C  D104               	goto	l3446
  1059  00074E  D0F1               	goto	l3444
  1060  000750                     l91:
  1061                           
  1062                           ; BSR set to: 3
  1063                           ;main.c: 368: case 41:
  1064                           ;main.c: 369: {
  1065                           ;main.c: 372: last_reg_recvd = msgbuffer[0];
  1066  000750  C30B  F316         	movff	main@msgbuffer,main@last_reg_recvd
  1067                           
  1068                           ;main.c: 373: break;
  1069  000754  D100               	goto	l3446
  1070  000756                     l3402:
  1071                           
  1072                           ; BSR set to: 3
  1073                           ;main.c: 406: {
  1074                           ;main.c: 407: if(data_points_count == 0){
  1075  000756  0103               	movlb	3	; () banked
  1076  000758  0103               	movlb	3	; () banked
  1077  00075A  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1078  00075C  111C               	iorwf	main@data_points_count& (0+255),w,b
  1079  00075E  A4D8               	btfss	status,2,c
  1080  000760  D00C               	goto	l3408
  1081                           
  1082                           ; BSR set to: 3
  1083                           ;main.c: 408: msgbuffer[0] = 0xff;
  1084  000762  0103               	movlb	3	; () banked
  1085  000764  0103               	movlb	3	; () banked
  1086  000766  690B               	setf	main@msgbuffer& (0+255),b
  1087                           
  1088                           ; BSR set to: 3
  1089                           ;main.c: 409: length = 1;
  1090  000768  0101               	movlb	1	; () banked
  1091  00076A  6F63               	movwf	??_main& (0+255),b
  1092  00076C  0E01               	movlw	1
  1093  00076E  0103               	movlb	3	; () banked
  1094  000770  0103               	movlb	3	; () banked
  1095  000772  6F1E               	movwf	main@length& (0+255),b
  1096  000774  0101               	movlb	1	; () banked
  1097  000776  5163               	movf	??_main& (0+255),w,b
  1098                           
  1099                           ;main.c: 410: }
  1100  000778  D09D               	goto	l3436
  1101  00077A                     l3408:
  1102                           
  1103                           ;main.c: 411: else{
  1104                           ;main.c: 412: for(int j = 0; j < data_points_count; j++){
  1105  00077A  0E00               	movlw	0
  1106  00077C  0103               	movlb	3	; () banked
  1107  00077E  0103               	movlb	3	; () banked
  1108  000780  6F18               	movwf	(main@j+1)& (0+255),b
  1109  000782  0E00               	movlw	0
  1110  000784  0103               	movlb	3	; () banked
  1111  000786  6F17               	movwf	main@j& (0+255),b
  1112  000788  D01E               	goto	l3414
  1113  00078A                     l3410:
  1114                           
  1115                           ;main.c: 413: msgbuffer[j] = to_send_buffer[j];
  1116  00078A  0103               	movlb	3	; () banked
  1117  00078C  0E00               	movlw	low main@to_send_buffer
  1118  00078E  0103               	movlb	3	; () banked
  1119  000790  0103               	movlb	3	; () banked
  1120  000792  2517               	addwf	main@j& (0+255),w,b
  1121  000794  6ED9               	movwf	fsr2l,c
  1122  000796  0103               	movlb	3	; () banked
  1123  000798  0E03               	movlw	high main@to_send_buffer
  1124  00079A  0103               	movlb	3	; () banked
  1125  00079C  0103               	movlb	3	; () banked
  1126  00079E  2118               	addwfc	(main@j+1)& (0+255),w,b
  1127  0007A0  6EDA               	movwf	fsr2h,c
  1128  0007A2  0103               	movlb	3	; () banked
  1129  0007A4  0E0B               	movlw	low main@msgbuffer
  1130  0007A6  0103               	movlb	3	; () banked
  1131  0007A8  0103               	movlb	3	; () banked
  1132  0007AA  2517               	addwf	main@j& (0+255),w,b
  1133  0007AC  6EE1               	movwf	fsr1l,c
  1134  0007AE  0103               	movlb	3	; () banked
  1135  0007B0  0E03               	movlw	high main@msgbuffer
  1136  0007B2  0103               	movlb	3	; () banked
  1137  0007B4  0103               	movlb	3	; () banked
  1138  0007B6  2118               	addwfc	(main@j+1)& (0+255),w,b
  1139  0007B8  6EE2               	movwf	fsr1h,c
  1140  0007BA  CFDF FFE7          	movff	indf2,indf1
  1141                           
  1142                           ; BSR set to: 3
  1143  0007BE  0103               	movlb	3	; () banked
  1144  0007C0  0103               	movlb	3	; () banked
  1145  0007C2  4B17               	infsnz	main@j& (0+255),f,b
  1146  0007C4  2B18               	incf	(main@j+1)& (0+255),f,b
  1147  0007C6                     l3414:
  1148                           
  1149                           ; BSR set to: 3
  1150  0007C6  0103               	movlb	3	; () banked
  1151  0007C8  0103               	movlb	3	; () banked
  1152  0007CA  5118               	movf	(main@j+1)& (0+255),w,b
  1153  0007CC  0A80               	xorlw	128
  1154  0007CE  0101               	movlb	1	; () banked
  1155  0007D0  6F63               	movwf	??_main& (0+255),b
  1156  0007D2  0103               	movlb	3	; () banked
  1157  0007D4  511C               	movf	main@data_points_count& (0+255),w,b
  1158  0007D6  0103               	movlb	3	; () banked
  1159  0007D8  0103               	movlb	3	; () banked
  1160  0007DA  5D17               	subwf	main@j& (0+255),w,b
  1161  0007DC  0103               	movlb	3	; () banked
  1162  0007DE  0103               	movlb	3	; () banked
  1163  0007E0  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1164  0007E2  0A80               	xorlw	128
  1165  0007E4  0101               	movlb	1	; () banked
  1166  0007E6  5963               	subwfb	??_main& (0+255),w,b
  1167  0007E8  A0D8               	btfss	status,0,c
  1168  0007EA  D7CF               	goto	l3410
  1169  0007EC  D050               	goto	u2290
  1170  0007EE                     l3418:
  1171                           
  1172                           ; BSR set to: 3
  1173                           ;main.c: 421: {
  1174                           ;main.c: 422: to_send_buffer[0] = 0x04;
  1175  0007EE  0101               	movlb	1	; () banked
  1176  0007F0  6F63               	movwf	??_main& (0+255),b
  1177  0007F2  0E04               	movlw	4
  1178  0007F4  0103               	movlb	3	; () banked
  1179  0007F6  0103               	movlb	3	; () banked
  1180  0007F8  6F00               	movwf	main@to_send_buffer& (0+255),b
  1181  0007FA  0101               	movlb	1	; () banked
  1182  0007FC  5163               	movf	??_main& (0+255),w,b
  1183                           
  1184                           ;main.c: 423: to_send_buffer[1] = 0x0d;
  1185  0007FE  0101               	movlb	1	; () banked
  1186  000800  6F63               	movwf	??_main& (0+255),b
  1187  000802  0E0D               	movlw	13
  1188  000804  0103               	movlb	3	; () banked
  1189  000806  0103               	movlb	3	; () banked
  1190  000808  6F01               	movwf	(main@to_send_buffer+1)& (0+255),b
  1191  00080A  0101               	movlb	1	; () banked
  1192  00080C  5163               	movf	??_main& (0+255),w,b
  1193                           
  1194                           ; BSR set to: 1
  1195                           ;main.c: 424: data_points_count = 2;
  1196  00080E  0E00               	movlw	0
  1197  000810  0103               	movlb	3	; () banked
  1198  000812  0103               	movlb	3	; () banked
  1199  000814  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
  1200  000816  0E02               	movlw	2
  1201  000818  0103               	movlb	3	; () banked
  1202  00081A  6F1C               	movwf	main@data_points_count& (0+255),b
  1203                           
  1204                           ; BSR set to: 3
  1205                           ;main.c: 425: for(int j = 0; j < data_points_count; j++){
  1206  00081C  0E00               	movlw	0
  1207  00081E  0103               	movlb	3	; () banked
  1208  000820  0103               	movlb	3	; () banked
  1209  000822  6F1A               	movwf	(main@j_452+1)& (0+255),b
  1210  000824  0E00               	movlw	0
  1211  000826  0103               	movlb	3	; () banked
  1212  000828  6F19               	movwf	main@j_452& (0+255),b
  1213  00082A  D01E               	goto	l3428
  1214  00082C                     l3424:
  1215                           
  1216                           ;main.c: 426: msgbuffer[j] = to_send_buffer[j];
  1217  00082C  0103               	movlb	3	; () banked
  1218  00082E  0E00               	movlw	low main@to_send_buffer
  1219  000830  0103               	movlb	3	; () banked
  1220  000832  0103               	movlb	3	; () banked
  1221  000834  2519               	addwf	main@j_452& (0+255),w,b
  1222  000836  6ED9               	movwf	fsr2l,c
  1223  000838  0103               	movlb	3	; () banked
  1224  00083A  0E03               	movlw	high main@to_send_buffer
  1225  00083C  0103               	movlb	3	; () banked
  1226  00083E  0103               	movlb	3	; () banked
  1227  000840  211A               	addwfc	(main@j_452+1)& (0+255),w,b
  1228  000842  6EDA               	movwf	fsr2h,c
  1229  000844  0103               	movlb	3	; () banked
  1230  000846  0E0B               	movlw	low main@msgbuffer
  1231  000848  0103               	movlb	3	; () banked
  1232  00084A  0103               	movlb	3	; () banked
  1233  00084C  2519               	addwf	main@j_452& (0+255),w,b
  1234  00084E  6EE1               	movwf	fsr1l,c
  1235  000850  0103               	movlb	3	; () banked
  1236  000852  0E03               	movlw	high main@msgbuffer
  1237  000854  0103               	movlb	3	; () banked
  1238  000856  0103               	movlb	3	; () banked
  1239  000858  211A               	addwfc	(main@j_452+1)& (0+255),w,b
  1240  00085A  6EE2               	movwf	fsr1h,c
  1241  00085C  CFDF FFE7          	movff	indf2,indf1
  1242                           
  1243                           ; BSR set to: 3
  1244  000860  0103               	movlb	3	; () banked
  1245  000862  0103               	movlb	3	; () banked
  1246  000864  4B19               	infsnz	main@j_452& (0+255),f,b
  1247  000866  2B1A               	incf	(main@j_452+1)& (0+255),f,b
  1248  000868                     l3428:
  1249                           
  1250                           ; BSR set to: 3
  1251  000868  0103               	movlb	3	; () banked
  1252  00086A  0103               	movlb	3	; () banked
  1253  00086C  511A               	movf	(main@j_452+1)& (0+255),w,b
  1254  00086E  0A80               	xorlw	128
  1255  000870  0101               	movlb	1	; () banked
  1256  000872  6F63               	movwf	??_main& (0+255),b
  1257  000874  0103               	movlb	3	; () banked
  1258  000876  511C               	movf	main@data_points_count& (0+255),w,b
  1259  000878  0103               	movlb	3	; () banked
  1260  00087A  0103               	movlb	3	; () banked
  1261  00087C  5D19               	subwf	main@j_452& (0+255),w,b
  1262  00087E  0103               	movlb	3	; () banked
  1263  000880  0103               	movlb	3	; () banked
  1264  000882  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1265  000884  0A80               	xorlw	128
  1266  000886  0101               	movlb	1	; () banked
  1267  000888  5963               	subwfb	??_main& (0+255),w,b
  1268  00088A  A0D8               	btfss	status,0,c
  1269  00088C  D7CF               	goto	l3424
  1270  00088E                     u2290:
  1271                           
  1272                           ; BSR set to: 1
  1273                           ;main.c: 427: }
  1274                           ;main.c: 428: length = data_points_count;
  1275  00088E  C31C  F31E         	movff	main@data_points_count,main@length
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;main.c: 429: data_points_count = 0;
  1279  000892  0E00               	movlw	0
  1280  000894  0103               	movlb	3	; () banked
  1281  000896  0103               	movlb	3	; () banked
  1282  000898  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
  1283  00089A  0E00               	movlw	0
  1284  00089C  0103               	movlb	3	; () banked
  1285  00089E  6F1C               	movwf	main@data_points_count& (0+255),b
  1286                           
  1287                           ;main.c: 430: break;
  1288  0008A0  D009               	goto	l3436
  1289  0008A2                     l3434:
  1290                           
  1291                           ; BSR set to: 3
  1292  0008A2  0103               	movlb	3	; () banked
  1293  0008A4  0103               	movlb	3	; () banked
  1294  0008A6  5116               	movf	main@last_reg_recvd& (0+255),w,b
  1295                           
  1296                           ; Switch size 1, requested type "space"
  1297                           ; Number of cases is 2, Range of values is 170 to 171
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte            7     4 (average)
  1301                           ;	Chosen strategy is simple_byte
  1302  0008A8  0AAA               	xorlw	170	; case 170
  1303  0008AA  B4D8               	btfsc	status,2,c
  1304  0008AC  D754               	goto	l3402
  1305  0008AE  0A01               	xorlw	1	; case 171
  1306  0008B0  B4D8               	btfsc	status,2,c
  1307  0008B2  D79D               	goto	l3418
  1308  0008B4                     l3436:
  1309                           
  1310                           ;main.c: 433: msgbuffer[0] = 0xaa;
  1311  0008B4  0101               	movlb	1	; () banked
  1312  0008B6  6F63               	movwf	??_main& (0+255),b
  1313  0008B8  0EAA               	movlw	170
  1314  0008BA  0103               	movlb	3	; () banked
  1315  0008BC  0103               	movlb	3	; () banked
  1316  0008BE  6F0B               	movwf	main@msgbuffer& (0+255),b
  1317  0008C0  0101               	movlb	1	; () banked
  1318  0008C2  5163               	movf	??_main& (0+255),w,b
  1319                           
  1320                           ;main.c: 434: length = 1;
  1321  0008C4  0101               	movlb	1	; () banked
  1322  0008C6  6F63               	movwf	??_main& (0+255),b
  1323  0008C8  0E01               	movlw	1
  1324  0008CA  0103               	movlb	3	; () banked
  1325  0008CC  0103               	movlb	3	; () banked
  1326  0008CE  6F1E               	movwf	main@length& (0+255),b
  1327  0008D0  0101               	movlb	1	; () banked
  1328  0008D2  5163               	movf	??_main& (0+255),w,b
  1329                           
  1330                           ; BSR set to: 1
  1331                           ;main.c: 435: start_i2c_slave_reply(length, msgbuffer);
  1332  0008D4  0103               	movlb	3	; () banked
  1333  0008D6  0E03               	movlw	high main@msgbuffer
  1334  0008D8  0101               	movlb	1	; () banked
  1335  0008DA  0101               	movlb	1	; () banked
  1336  0008DC  6F47               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1337  0008DE  0103               	movlb	3	; () banked
  1338  0008E0  0E0B               	movlw	low main@msgbuffer
  1339  0008E2  0101               	movlb	1	; () banked
  1340  0008E4  0101               	movlb	1	; () banked
  1341  0008E6  6F46               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1342  0008E8  0103               	movlb	3	; () banked
  1343  0008EA  0103               	movlb	3	; () banked
  1344  0008EC  511E               	movf	main@length& (0+255),w,b
  1345  0008EE  EC8B  F005         	call	_start_i2c_slave_reply
  1346                           
  1347                           ;main.c: 436: break;
  1348  0008F2  D031               	goto	l3446
  1349  0008F4                     l3440:
  1350                           
  1351                           ;main.c: 439: {
  1352                           ;main.c: 440: addDataPoints(0, msgbuffer, length);
  1353  0008F4  0E00               	movlw	0
  1354  0008F6  0101               	movlb	1	; () banked
  1355  0008F8  0101               	movlb	1	; () banked
  1356  0008FA  6F4F               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1357  0008FC  0E00               	movlw	0
  1358  0008FE  0101               	movlb	1	; () banked
  1359  000900  6F4E               	movwf	addDataPoints@sensorid& (0+255),b
  1360  000902  0103               	movlb	3	; () banked
  1361  000904  0E03               	movlw	high main@msgbuffer
  1362  000906  0101               	movlb	1	; () banked
  1363  000908  0101               	movlb	1	; () banked
  1364  00090A  6F51               	movwf	(addDataPoints@data+1)& (0+255),b
  1365  00090C  0103               	movlb	3	; () banked
  1366  00090E  0E0B               	movlw	low main@msgbuffer
  1367  000910  0101               	movlb	1	; () banked
  1368  000912  0101               	movlb	1	; () banked
  1369  000914  6F50               	movwf	addDataPoints@data& (0+255),b
  1370  000916  0103               	movlb	3	; () banked
  1371  000918  0103               	movlb	3	; () banked
  1372  00091A  511E               	movf	main@length& (0+255),w,b
  1373  00091C  0101               	movlb	1	; () banked
  1374  00091E  0101               	movlb	1	; () banked
  1375  000920  6F52               	movwf	addDataPoints@len& (0+255),b
  1376  000922  0101               	movlb	1	; () banked
  1377  000924  6B53               	clrf	(addDataPoints@len+1)& (0+255),b
  1378  000926  0101               	movlb	1	; () banked
  1379  000928  BF52               	btfsc	addDataPoints@len& (0+255),7,b
  1380  00092A  0753               	decf	(addDataPoints@len+1)& (0+255),f,b
  1381  00092C  EC25  F00D         	call	_addDataPoints	;wreg free
  1382                           
  1383                           ;main.c: 441: break;
  1384  000930  D012               	goto	l3446
  1385  000932                     l3444:
  1386  000932  0103               	movlb	3	; () banked
  1387  000934  0103               	movlb	3	; () banked
  1388  000936  511B               	movf	main@msgtype& (0+255),w,b
  1389                           
  1390                           ; Switch size 1, requested type "space"
  1391                           ; Number of cases is 5, Range of values is 10 to 50
  1392                           ; switch strategies available:
  1393                           ; Name         Instructions Cycles
  1394                           ; simple_byte           16     9 (average)
  1395                           ;	Chosen strategy is simple_byte
  1396  000938  0A0A               	xorlw	10	; case 10
  1397  00093A  B4D8               	btfsc	status,2,c
  1398  00093C  D00C               	goto	l3446
  1399  00093E  0A22               	xorlw	34	; case 40
  1400  000940  B4D8               	btfsc	status,2,c
  1401  000942  D706               	goto	l91
  1402  000944  0A01               	xorlw	1	; case 41
  1403  000946  B4D8               	btfsc	status,2,c
  1404  000948  D703               	goto	l91
  1405  00094A  0A03               	xorlw	3	; case 42
  1406  00094C  B4D8               	btfsc	status,2,c
  1407  00094E  D7A9               	goto	l3434
  1408  000950  0A18               	xorlw	24	; case 50
  1409  000952  B4D8               	btfsc	status,2,c
  1410  000954  D7CF               	goto	l3440
  1411  000956                     l3446:
  1412                           
  1413                           ;main.c: 450: }
  1414                           ;main.c: 453: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1415  000956  0103               	movlb	3	; () banked
  1416  000958  0E03               	movlw	high main@msgtype
  1417  00095A  0101               	movlb	1	; () banked
  1418  00095C  0101               	movlb	1	; () banked
  1419  00095E  6F5F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1420  000960  0103               	movlb	3	; () banked
  1421  000962  0E1B               	movlw	low main@msgtype
  1422  000964  0101               	movlb	1	; () banked
  1423  000966  0101               	movlb	1	; () banked
  1424  000968  6F5E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1425  00096A  0103               	movlb	3	; () banked
  1426  00096C  0E03               	movlw	high main@msgbuffer
  1427  00096E  0101               	movlb	1	; () banked
  1428  000970  0101               	movlb	1	; () banked
  1429  000972  6F61               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1430  000974  0103               	movlb	3	; () banked
  1431  000976  0E0B               	movlw	low main@msgbuffer
  1432  000978  0101               	movlb	1	; () banked
  1433  00097A  0101               	movlb	1	; () banked
  1434  00097C  6F60               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1435  00097E  0E0A               	movlw	10
  1436  000980  ECA2  F00B         	call	_ToMainLow_recvmsg
  1437  000984  0103               	movlb	3	; () banked
  1438  000986  0103               	movlb	3	; () banked
  1439  000988  6F1E               	movwf	main@length& (0+255),b
  1440                           
  1441                           ; BSR set to: 3
  1442                           ;main.c: 454: if (length < 0) {
  1443  00098A  0103               	movlb	3	; () banked
  1444  00098C  0103               	movlb	3	; () banked
  1445  00098E  BF1E               	btfsc	main@length& (0+255),7,b
  1446  000990  D6BE               	goto	l3394
  1447  000992  D01F               	goto	l3456
  1448  000994                     l3452:
  1449                           
  1450                           ; BSR set to: 3
  1451                           ;main.c: 462: {
  1452                           ;main.c: 463: addDataPoints(0, msgbuffer, length);
  1453  000994  0E00               	movlw	0
  1454  000996  0101               	movlb	1	; () banked
  1455  000998  0101               	movlb	1	; () banked
  1456  00099A  6F4F               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1457  00099C  0E00               	movlw	0
  1458  00099E  0101               	movlb	1	; () banked
  1459  0009A0  6F4E               	movwf	addDataPoints@sensorid& (0+255),b
  1460  0009A2  0103               	movlb	3	; () banked
  1461  0009A4  0E03               	movlw	high main@msgbuffer
  1462  0009A6  0101               	movlb	1	; () banked
  1463  0009A8  0101               	movlb	1	; () banked
  1464  0009AA  6F51               	movwf	(addDataPoints@data+1)& (0+255),b
  1465  0009AC  0103               	movlb	3	; () banked
  1466  0009AE  0E0B               	movlw	low main@msgbuffer
  1467  0009B0  0101               	movlb	1	; () banked
  1468  0009B2  0101               	movlb	1	; () banked
  1469  0009B4  6F50               	movwf	addDataPoints@data& (0+255),b
  1470  0009B6  0103               	movlb	3	; () banked
  1471  0009B8  0103               	movlb	3	; () banked
  1472  0009BA  511E               	movf	main@length& (0+255),w,b
  1473  0009BC  0101               	movlb	1	; () banked
  1474  0009BE  0101               	movlb	1	; () banked
  1475  0009C0  6F52               	movwf	addDataPoints@len& (0+255),b
  1476  0009C2  0101               	movlb	1	; () banked
  1477  0009C4  6B53               	clrf	(addDataPoints@len+1)& (0+255),b
  1478  0009C6  0101               	movlb	1	; () banked
  1479  0009C8  BF52               	btfsc	addDataPoints@len& (0+255),7,b
  1480  0009CA  0753               	decf	(addDataPoints@len+1)& (0+255),f,b
  1481  0009CC  EC25  F00D         	call	_addDataPoints	;wreg free
  1482                           
  1483                           ;main.c: 469: break;
  1484  0009D0  D69E               	goto	l3394
  1485  0009D2                     l3456:
  1486  0009D2  0103               	movlb	3	; () banked
  1487  0009D4  0103               	movlb	3	; () banked
  1488  0009D6  511B               	movf	main@msgtype& (0+255),w,b
  1489                           
  1490                           ; Switch size 1, requested type "space"
  1491                           ; Number of cases is 1, Range of values is 50 to 50
  1492                           ; switch strategies available:
  1493                           ; Name         Instructions Cycles
  1494                           ; simple_byte            4     3 (average)
  1495                           ;	Chosen strategy is simple_byte
  1496  0009D8  0A32               	xorlw	50	; case 50
  1497  0009DA  B4D8               	btfsc	status,2,c
  1498  0009DC  D7DB               	goto	l3452
  1499  0009DE  D697               	goto	l3394
  1500  0009E0                     __end_of_main:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           indf1	equ	0xFE7
  1509                           postdec1	equ	0xFE5
  1510                           fsr1h	equ	0xFE2
  1511                           fsr1l	equ	0xFE1
  1512                           indf2	equ	0xFDF
  1513                           fsr2h	equ	0xFDA
  1514                           fsr2l	equ	0xFD9
  1515                           status	equ	0xFD8
  1516                           
  1517 ;; *************** function _start_i2c_slave_reply *****************
  1518 ;; Defined at:
  1519 ;;		line 60 in file "../src/my_i2c.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  length          1    wreg     unsigned char 
  1522 ;;  msg             2   14[BANK1 ] PTR unsigned char 
  1523 ;;		 -> sendADdata@outBuff(103), main@msgbuffer(11), 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  length          1   18[BANK1 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1535 ;;      Params:         0       0       2       0       0
  1536 ;;      Locals:         0       0       1       0       0
  1537 ;;      Temps:          0       0       2       0       0
  1538 ;;      Totals:         0       0       5       0       0
  1539 ;;Total ram usage:        5 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:   11
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text1
  1550  000B16                     __ptext1:
  1551                           	opt stack 0
  1552  000B16                     _start_i2c_slave_reply:
  1553                           	opt stack 19
  1554                           
  1555                           ; BSR set to: 3
  1556                           ;incstack = 0
  1557                           ;start_i2c_slave_reply@length stored from wreg
  1558  000B16  CFE8 F14A          	movff	wreg,start_i2c_slave_reply@length
  1559                           
  1560                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1561  000B1A  0101               	movlb	1	; () banked
  1562  000B1C  EE20 F076          	lfsr	2,118
  1563  000B20  0101               	movlb	1	; () banked
  1564  000B22  5100               	movf	_ic_ptr& (0+255),w,b
  1565  000B24  26D9               	addwf	fsr2l,f,c
  1566  000B26  0101               	movlb	1	; () banked
  1567  000B28  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1568  000B2A  22DA               	addwfc	fsr2h,f,c
  1569  000B2C  0E00               	movlw	0
  1570  000B2E  6EDF               	movwf	indf2,c
  1571  000B30  D042               	goto	l3558
  1572  000B32                     l3554:
  1573                           
  1574                           ; BSR set to: 1
  1575                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1576  000B32  0101               	movlb	1	; () banked
  1577  000B34  EE20 F076          	lfsr	2,118
  1578  000B38  0101               	movlb	1	; () banked
  1579  000B3A  5100               	movf	_ic_ptr& (0+255),w,b
  1580  000B3C  26D9               	addwf	fsr2l,f,c
  1581  000B3E  0101               	movlb	1	; () banked
  1582  000B40  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1583  000B42  22DA               	addwfc	fsr2h,f,c
  1584  000B44  50DF               	movf	indf2,w,c
  1585  000B46  0101               	movlb	1	; () banked
  1586  000B48  6F48               	movwf	??_start_i2c_slave_reply& (0+255),b
  1587  000B4A  0101               	movlb	1	; () banked
  1588  000B4C  5148               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1589  000B4E  0D01               	mullw	1
  1590  000B50  50F3               	movf	prodl,w,c
  1591  000B52  0101               	movlb	1	; () banked
  1592  000B54  0101               	movlb	1	; () banked
  1593  000B56  2546               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1594  000B58  6ED9               	movwf	fsr2l,c
  1595  000B5A  50F4               	movf	prodh,w,c
  1596  000B5C  0101               	movlb	1	; () banked
  1597  000B5E  0101               	movlb	1	; () banked
  1598  000B60  2147               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1599  000B62  6EDA               	movwf	fsr2h,c
  1600  000B64  0101               	movlb	1	; () banked
  1601  000B66  EE10 F076          	lfsr	1,118
  1602  000B6A  0101               	movlb	1	; () banked
  1603  000B6C  5100               	movf	_ic_ptr& (0+255),w,b
  1604  000B6E  26E1               	addwf	fsr1l,f,c
  1605  000B70  0101               	movlb	1	; () banked
  1606  000B72  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1607  000B74  22E2               	addwfc	fsr1h,f,c
  1608  000B76  50E7               	movf	indf1,w,c
  1609  000B78  0101               	movlb	1	; () banked
  1610  000B7A  6F49               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1611  000B7C  0101               	movlb	1	; () banked
  1612  000B7E  5149               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1613  000B80  0D01               	mullw	1
  1614  000B82  0E0F               	movlw	15
  1615  000B84  26F3               	addwf	prodl,f,c
  1616  000B86  0E00               	movlw	0
  1617  000B88  22F4               	addwfc	prodh,f,c
  1618  000B8A  50F3               	movf	prodl,w,c
  1619  000B8C  0101               	movlb	1	; () banked
  1620  000B8E  0101               	movlb	1	; () banked
  1621  000B90  2500               	addwf	_ic_ptr& (0+255),w,b
  1622  000B92  6EE1               	movwf	fsr1l,c
  1623  000B94  50F4               	movf	prodh,w,c
  1624  000B96  0101               	movlb	1	; () banked
  1625  000B98  0101               	movlb	1	; () banked
  1626  000B9A  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1627  000B9C  6EE2               	movwf	fsr1h,c
  1628  000B9E  CFDF FFE7          	movff	indf2,indf1
  1629                           
  1630                           ; BSR set to: 1
  1631  000BA2  0101               	movlb	1	; () banked
  1632  000BA4  EE20 F076          	lfsr	2,118
  1633  000BA8  0101               	movlb	1	; () banked
  1634  000BAA  5100               	movf	_ic_ptr& (0+255),w,b
  1635  000BAC  26D9               	addwf	fsr2l,f,c
  1636  000BAE  0101               	movlb	1	; () banked
  1637  000BB0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1638  000BB2  22DA               	addwfc	fsr2h,f,c
  1639  000BB4  2ADF               	incf	indf2,f,c
  1640  000BB6                     l3558:
  1641                           
  1642                           ; BSR set to: 1
  1643  000BB6  0101               	movlb	1	; () banked
  1644  000BB8  EE20 F076          	lfsr	2,118
  1645  000BBC  0101               	movlb	1	; () banked
  1646  000BBE  5100               	movf	_ic_ptr& (0+255),w,b
  1647  000BC0  26D9               	addwf	fsr2l,f,c
  1648  000BC2  0101               	movlb	1	; () banked
  1649  000BC4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1650  000BC6  22DA               	addwfc	fsr2h,f,c
  1651  000BC8  50DF               	movf	indf2,w,c
  1652  000BCA  0101               	movlb	1	; () banked
  1653  000BCC  6F48               	movwf	??_start_i2c_slave_reply& (0+255),b
  1654  000BCE  0101               	movlb	1	; () banked
  1655  000BD0  0101               	movlb	1	; () banked
  1656  000BD2  514A               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1657  000BD4  0101               	movlb	1	; () banked
  1658  000BD6  5D48               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1659  000BD8  A0D8               	btfss	status,0,c
  1660  000BDA  D7AB               	goto	l3554
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;my_i2c.c: 64: }
  1664                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  1665                           
  1666                           ; BSR set to: 1
  1667  000BDC  0101               	movlb	1	; () banked
  1668  000BDE  EE20 F076          	lfsr	2,118
  1669  000BE2  0101               	movlb	1	; () banked
  1670  000BE4  5100               	movf	_ic_ptr& (0+255),w,b
  1671  000BE6  26D9               	addwf	fsr2l,f,c
  1672  000BE8  0101               	movlb	1	; () banked
  1673  000BEA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1674  000BEC  22DA               	addwfc	fsr2h,f,c
  1675  000BEE  0101               	movlb	1	; () banked
  1676  000BF0  C14A  FFDF         	movff	start_i2c_slave_reply@length,indf2
  1677                           
  1678                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  1679  000BF4  0101               	movlb	1	; () banked
  1680  000BF6  EE20 F077          	lfsr	2,119
  1681  000BFA  0101               	movlb	1	; () banked
  1682  000BFC  5100               	movf	_ic_ptr& (0+255),w,b
  1683  000BFE  26D9               	addwf	fsr2l,f,c
  1684  000C00  0101               	movlb	1	; () banked
  1685  000C02  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1686  000C04  22DA               	addwfc	fsr2h,f,c
  1687  000C06  0E01               	movlw	1
  1688  000C08  6EDF               	movwf	indf2,c
  1689                           
  1690                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  1691  000C0A  0101               	movlb	1	; () banked
  1692  000C0C  EE20 F00F          	lfsr	2,15
  1693  000C10  0101               	movlb	1	; () banked
  1694  000C12  5100               	movf	_ic_ptr& (0+255),w,b
  1695  000C14  26D9               	addwf	fsr2l,f,c
  1696  000C16  0101               	movlb	1	; () banked
  1697  000C18  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1698  000C1A  22DA               	addwfc	fsr2h,f,c
  1699  000C1C  50DF               	movf	indf2,w,c
  1700  000C1E  6EC9               	movwf	4041,c	;volatile
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  1704  000C20  88C6               	bsf	4038,4,c	;volatile
  1705                           
  1706                           ; BSR set to: 1
  1707  000C22  0012               	return	
  1708  000C24                     __end_of_start_i2c_slave_reply:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           prodh	equ	0xFF4
  1715                           prodl	equ	0xFF3
  1716                           postinc0	equ	0xFEE
  1717                           wreg	equ	0xFE8
  1718                           indf1	equ	0xFE7
  1719                           postdec1	equ	0xFE5
  1720                           fsr1h	equ	0xFE2
  1721                           fsr1l	equ	0xFE1
  1722                           indf2	equ	0xFDF
  1723                           fsr2h	equ	0xFDA
  1724                           fsr2l	equ	0xFD9
  1725                           status	equ	0xFD8
  1726                           
  1727 ;; *************** function _resetAccumulators *****************
  1728 ;; Defined at:
  1729 ;;		line 80 in file "../src/sensorcomm.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;		None               void
  1736 ;; Registers used:
  1737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1743 ;;      Params:         0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0
  1746 ;;      Totals:         0       0       0       0       0
  1747 ;;Total ram usage:        0 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:   12
  1750 ;; This function calls:
  1751 ;;		_resetADacc
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text2
  1758  001C26                     __ptext2:
  1759                           	opt stack 0
  1760  001C26                     _resetAccumulators:
  1761                           	opt stack 18
  1762                           
  1763                           ;sensorcomm.c: 81: resetADacc();
  1764                           
  1765                           ; BSR set to: 1
  1766                           ;incstack = 0
  1767  001C26  EC59  F009         	call	_resetADacc	;wreg free
  1768  001C2A  0012               	return	
  1769  001C2C                     __end_of_resetAccumulators:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           prodh	equ	0xFF4
  1776                           prodl	equ	0xFF3
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           indf1	equ	0xFE7
  1780                           postdec1	equ	0xFE5
  1781                           fsr1h	equ	0xFE2
  1782                           fsr1l	equ	0xFE1
  1783                           indf2	equ	0xFDF
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _resetADacc *****************
  1789 ;; Defined at:
  1790 ;;		line 72 in file "../src/sensorcomm.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  i               2   17[BANK1 ] int 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;		None               void
  1797 ;; Registers used:
  1798 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1804 ;;      Params:         0       0       0       0       0
  1805 ;;      Locals:         0       0       2       0       0
  1806 ;;      Temps:          0       0       3       0       0
  1807 ;;      Totals:         0       0       5       0       0
  1808 ;;Total ram usage:        5 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:   11
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_resetAccumulators
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text3
  1819  0012B2                     __ptext3:
  1820                           	opt stack 0
  1821  0012B2                     _resetADacc:
  1822                           	opt stack 18
  1823                           
  1824                           ;sensorcomm.c: 73: int i = 0;
  1825                           
  1826                           ;incstack = 0
  1827  0012B2  0E00               	movlw	0
  1828  0012B4  0101               	movlb	1	; () banked
  1829  0012B6  0101               	movlb	1	; () banked
  1830  0012B8  6F4A               	movwf	(resetADacc@i+1)& (0+255),b
  1831  0012BA  0E00               	movlw	0
  1832  0012BC  0101               	movlb	1	; () banked
  1833  0012BE  6F49               	movwf	resetADacc@i& (0+255),b
  1834  0012C0  D012               	goto	l3758
  1835  0012C2                     l3754:
  1836                           
  1837                           ; BSR set to: 1
  1838                           ;sensorcomm.c: 75: ADacc.data[i].data = 0;
  1839  0012C2  0102               	movlb	2	; () banked
  1840  0012C4  0E01               	movlw	low (_ADacc+1)
  1841  0012C6  0101               	movlb	1	; () banked
  1842  0012C8  0101               	movlb	1	; () banked
  1843  0012CA  2549               	addwf	resetADacc@i& (0+255),w,b
  1844  0012CC  6ED9               	movwf	fsr2l,c
  1845  0012CE  0102               	movlb	2	; () banked
  1846  0012D0  0E02               	movlw	high (_ADacc+1)
  1847  0012D2  0101               	movlb	1	; () banked
  1848  0012D4  0101               	movlb	1	; () banked
  1849  0012D6  214A               	addwfc	(resetADacc@i+1)& (0+255),w,b
  1850  0012D8  6EDA               	movwf	fsr2h,c
  1851  0012DA  0E00               	movlw	0
  1852  0012DC  6EDF               	movwf	indf2,c
  1853                           
  1854                           ; BSR set to: 1
  1855  0012DE  0101               	movlb	1	; () banked
  1856  0012E0  0101               	movlb	1	; () banked
  1857  0012E2  4B49               	infsnz	resetADacc@i& (0+255),f,b
  1858  0012E4  2B4A               	incf	(resetADacc@i+1)& (0+255),f,b
  1859  0012E6                     l3758:
  1860                           
  1861                           ; BSR set to: 1
  1862  0012E6  0102               	movlb	2	; () banked
  1863  0012E8  0102               	movlb	2	; () banked
  1864  0012EA  5100               	movf	_ADacc& (0+255),w,b
  1865  0012EC  0101               	movlb	1	; () banked
  1866  0012EE  6F46               	movwf	??_resetADacc& (0+255),b
  1867  0012F0  6B47               	clrf	(??_resetADacc+1)& (0+255),b
  1868  0012F2  0101               	movlb	1	; () banked
  1869  0012F4  0101               	movlb	1	; () banked
  1870  0012F6  514A               	movf	(resetADacc@i+1)& (0+255),w,b
  1871  0012F8  0A80               	xorlw	128
  1872  0012FA  0101               	movlb	1	; () banked
  1873  0012FC  6F48               	movwf	(??_resetADacc+2)& (0+255),b
  1874  0012FE  5146               	movf	??_resetADacc& (0+255),w,b
  1875  001300  0101               	movlb	1	; () banked
  1876  001302  0101               	movlb	1	; () banked
  1877  001304  5D49               	subwf	resetADacc@i& (0+255),w,b
  1878  001306  0101               	movlb	1	; () banked
  1879  001308  5147               	movf	(??_resetADacc+1)& (0+255),w,b
  1880  00130A  0A80               	xorlw	128
  1881  00130C  0101               	movlb	1	; () banked
  1882  00130E  5948               	subwfb	(??_resetADacc+2)& (0+255),w,b
  1883  001310  A0D8               	btfss	status,0,c
  1884  001312  D7D7               	goto	l3754
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;sensorcomm.c: 76: }
  1888                           ;sensorcomm.c: 77: ADacc.len = 0;
  1889                           
  1890                           ; BSR set to: 1
  1891  001314  0101               	movlb	1	; () banked
  1892  001316  6F46               	movwf	??_resetADacc& (0+255),b
  1893  001318  0E00               	movlw	0
  1894  00131A  0102               	movlb	2	; () banked
  1895  00131C  0102               	movlb	2	; () banked
  1896  00131E  6F00               	movwf	_ADacc& (0+255),b
  1897  001320  0101               	movlb	1	; () banked
  1898  001322  5146               	movf	??_resetADacc& (0+255),w,b
  1899                           
  1900                           ; BSR set to: 1
  1901  001324  0012               	return	
  1902  001326                     __end_of_resetADacc:
  1903                           	opt stack 0
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           prodh	equ	0xFF4
  1909                           prodl	equ	0xFF3
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           indf1	equ	0xFE7
  1913                           postdec1	equ	0xFE5
  1914                           fsr1h	equ	0xFE2
  1915                           fsr1l	equ	0xFE1
  1916                           indf2	equ	0xFDF
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _init_queues *****************
  1922 ;; Defined at:
  1923 ;;		line 195 in file "../src/messages.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;		None               void
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1937 ;;      Params:         0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0
  1939 ;;      Temps:          0       0       1       0       0
  1940 ;;      Totals:         0       0       1       0       0
  1941 ;;Total ram usage:        1 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:   12
  1944 ;; This function calls:
  1945 ;;		_init_queue
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text4
  1952  00139A                     __ptext4:
  1953                           	opt stack 0
  1954  00139A                     _init_queues:
  1955                           	opt stack 18
  1956                           
  1957                           ;messages.c: 196: MQ_Main_Willing_to_block = 0;
  1958                           
  1959                           ; BSR set to: 1
  1960                           ;incstack = 0
  1961  00139A  0101               	movlb	1	; () banked
  1962  00139C  6F4A               	movwf	??_init_queues& (0+255),b
  1963  00139E  0E00               	movlw	0
  1964  0013A0  6E44               	movwf	_MQ_Main_Willing_to_block,c
  1965  0013A2  0101               	movlb	1	; () banked
  1966  0013A4  514A               	movf	??_init_queues& (0+255),w,b
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;messages.c: 197: init_queue(&ToMainLow_MQ);
  1970  0013A6  0102               	movlb	2	; () banked
  1971  0013A8  0E02               	movlw	high _ToMainLow_MQ
  1972  0013AA  0101               	movlb	1	; () banked
  1973  0013AC  0101               	movlb	1	; () banked
  1974  0013AE  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  1975  0013B0  0102               	movlb	2	; () banked
  1976  0013B2  0E9B               	movlw	low _ToMainLow_MQ
  1977  0013B4  0101               	movlb	1	; () banked
  1978  0013B6  0101               	movlb	1	; () banked
  1979  0013B8  6F46               	movwf	init_queue@qptr& (0+255),b
  1980  0013BA  EC1C  F009         	call	_init_queue	;wreg free
  1981                           
  1982                           ;messages.c: 198: init_queue(&ToMainHigh_MQ);
  1983  0013BE  0101               	movlb	1	; () banked
  1984  0013C0  0E01               	movlw	high _ToMainHigh_MQ
  1985  0013C2  0101               	movlb	1	; () banked
  1986  0013C4  0101               	movlb	1	; () banked
  1987  0013C6  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  1988  0013C8  0101               	movlb	1	; () banked
  1989  0013CA  0E02               	movlw	low _ToMainHigh_MQ
  1990  0013CC  0101               	movlb	1	; () banked
  1991  0013CE  0101               	movlb	1	; () banked
  1992  0013D0  6F46               	movwf	init_queue@qptr& (0+255),b
  1993  0013D2  EC1C  F009         	call	_init_queue	;wreg free
  1994                           
  1995                           ;messages.c: 199: init_queue(&FromMainLow_MQ);
  1996  0013D6  0102               	movlb	2	; () banked
  1997  0013D8  0E02               	movlw	high _FromMainLow_MQ
  1998  0013DA  0101               	movlb	1	; () banked
  1999  0013DC  0101               	movlb	1	; () banked
  2000  0013DE  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  2001  0013E0  0102               	movlb	2	; () banked
  2002  0013E2  0E65               	movlw	low _FromMainLow_MQ
  2003  0013E4  0101               	movlb	1	; () banked
  2004  0013E6  0101               	movlb	1	; () banked
  2005  0013E8  6F46               	movwf	init_queue@qptr& (0+255),b
  2006  0013EA  EC1C  F009         	call	_init_queue	;wreg free
  2007                           
  2008                           ;messages.c: 200: init_queue(&FromMainHigh_MQ);
  2009  0013EE  0103               	movlb	3	; () banked
  2010  0013F0  0E03               	movlw	high _FromMainHigh_MQ
  2011  0013F2  0101               	movlb	1	; () banked
  2012  0013F4  0101               	movlb	1	; () banked
  2013  0013F6  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  2014  0013F8  0103               	movlb	3	; () banked
  2015  0013FA  0E98               	movlw	low _FromMainHigh_MQ
  2016  0013FC  0101               	movlb	1	; () banked
  2017  0013FE  0101               	movlb	1	; () banked
  2018  001400  6F46               	movwf	init_queue@qptr& (0+255),b
  2019  001402  EC1C  F009         	call	_init_queue	;wreg free
  2020  001406  0012               	return	
  2021  001408                     __end_of_init_queues:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           prodh	equ	0xFF4
  2028                           prodl	equ	0xFF3
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           indf1	equ	0xFE7
  2032                           postdec1	equ	0xFE5
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           indf2	equ	0xFDF
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _init_queue *****************
  2041 ;; Defined at:
  2042 ;;		line 15 in file "../src/messages.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  qptr            2   14[BANK1 ] PTR struct __msg_queue
  2045 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  i               1   17[BANK1 ] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;		None               void
  2050 ;; Registers used:
  2051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2057 ;;      Params:         0       0       2       0       0
  2058 ;;      Locals:         0       0       1       0       0
  2059 ;;      Temps:          0       0       1       0       0
  2060 ;;      Totals:         0       0       4       0       0
  2061 ;;Total ram usage:        4 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:   11
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_init_queues
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text5
  2072  001238                     __ptext5:
  2073                           	opt stack 0
  2074  001238                     _init_queue:
  2075                           	opt stack 18
  2076                           
  2077                           ;messages.c: 16: unsigned char i;
  2078                           ;messages.c: 18: qptr->cur_write_ind = 0;
  2079                           
  2080                           ;incstack = 0
  2081  001238  0101               	movlb	1	; () banked
  2082  00123A  EE20 F034          	lfsr	2,52
  2083  00123E  0101               	movlb	1	; () banked
  2084  001240  5146               	movf	init_queue@qptr& (0+255),w,b
  2085  001242  26D9               	addwf	fsr2l,f,c
  2086  001244  0101               	movlb	1	; () banked
  2087  001246  5147               	movf	(init_queue@qptr+1)& (0+255),w,b
  2088  001248  22DA               	addwfc	fsr2h,f,c
  2089  00124A  0E00               	movlw	0
  2090  00124C  6EDF               	movwf	indf2,c
  2091                           
  2092                           ;messages.c: 19: qptr->cur_read_ind = 0;
  2093  00124E  0101               	movlb	1	; () banked
  2094  001250  EE20 F035          	lfsr	2,53
  2095  001254  0101               	movlb	1	; () banked
  2096  001256  5146               	movf	init_queue@qptr& (0+255),w,b
  2097  001258  26D9               	addwf	fsr2l,f,c
  2098  00125A  0101               	movlb	1	; () banked
  2099  00125C  5147               	movf	(init_queue@qptr+1)& (0+255),w,b
  2100  00125E  22DA               	addwfc	fsr2h,f,c
  2101  001260  0E00               	movlw	0
  2102  001262  6EDF               	movwf	indf2,c
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;messages.c: 20: for (i = 0; i < 4; i++) {
  2106  001264  0101               	movlb	1	; () banked
  2107  001266  6F48               	movwf	??_init_queue& (0+255),b
  2108  001268  0E00               	movlw	0
  2109  00126A  0101               	movlb	1	; () banked
  2110  00126C  0101               	movlb	1	; () banked
  2111  00126E  6F49               	movwf	init_queue@i& (0+255),b
  2112  001270  0101               	movlb	1	; () banked
  2113  001272  5148               	movf	??_init_queue& (0+255),w,b
  2114                           
  2115                           ; BSR set to: 1
  2116  001274  0E03               	movlw	3
  2117  001276  0101               	movlb	1	; () banked
  2118  001278  0101               	movlb	1	; () banked
  2119  00127A  6549               	cpfsgt	init_queue@i& (0+255),b
  2120  00127C  D001               	goto	l3580
  2121  00127E  0012               	return	
  2122  001280                     l3580:
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;messages.c: 21: qptr->queue[i].full = 0;
  2126  001280  0101               	movlb	1	; () banked
  2127  001282  0101               	movlb	1	; () banked
  2128  001284  5149               	movf	init_queue@i& (0+255),w,b
  2129  001286  0D0D               	mullw	13
  2130  001288  50F3               	movf	prodl,w,c
  2131  00128A  0101               	movlb	1	; () banked
  2132  00128C  0101               	movlb	1	; () banked
  2133  00128E  2546               	addwf	init_queue@qptr& (0+255),w,b
  2134  001290  6ED9               	movwf	fsr2l,c
  2135  001292  50F4               	movf	prodh,w,c
  2136  001294  0101               	movlb	1	; () banked
  2137  001296  0101               	movlb	1	; () banked
  2138  001298  2147               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2139  00129A  6EDA               	movwf	fsr2h,c
  2140  00129C  0E00               	movlw	0
  2141  00129E  6EDF               	movwf	indf2,c
  2142                           
  2143                           ; BSR set to: 1
  2144  0012A0  0101               	movlb	1	; () banked
  2145  0012A2  0101               	movlb	1	; () banked
  2146  0012A4  2B49               	incf	init_queue@i& (0+255),f,b
  2147                           
  2148                           ; BSR set to: 1
  2149  0012A6  0E03               	movlw	3
  2150  0012A8  0101               	movlb	1	; () banked
  2151  0012AA  0101               	movlb	1	; () banked
  2152  0012AC  6549               	cpfsgt	init_queue@i& (0+255),b
  2153  0012AE  D7E8               	goto	l3580
  2154  0012B0  0012               	return	
  2155  0012B2                     __end_of_init_queue:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           postinc0	equ	0xFEE
  2164                           wreg	equ	0xFE8
  2165                           indf1	equ	0xFE7
  2166                           postdec1	equ	0xFE5
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           indf2	equ	0xFDF
  2170                           fsr2h	equ	0xFDA
  2171                           fsr2l	equ	0xFD9
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _init_i2c *****************
  2175 ;; Defined at:
  2176 ;;		line 294 in file "../src/my_i2c.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  ic              2   14[BANK1 ] PTR struct __i2c_comm
  2179 ;;		 -> main@ic(121), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2191 ;;      Params:         0       0       2       0       0
  2192 ;;      Locals:         0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0
  2194 ;;      Totals:         0       0       2       0       0
  2195 ;;Total ram usage:        2 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:   11
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text6
  2206  001408                     __ptext6:
  2207                           	opt stack 0
  2208  001408                     _init_i2c:
  2209                           	opt stack 19
  2210                           
  2211                           ;my_i2c.c: 295: ic_ptr = ic;
  2212                           
  2213                           ; BSR set to: 1
  2214                           ;incstack = 0
  2215  001408  0101               	movlb	1	; () banked
  2216  00140A  0101               	movlb	1	; () banked
  2217  00140C  C147  F101         	movff	init_i2c@ic+1,_ic_ptr+1
  2218  001410  0101               	movlb	1	; () banked
  2219  001412  0101               	movlb	1	; () banked
  2220  001414  C146  F100         	movff	init_i2c@ic,_ic_ptr
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;my_i2c.c: 296: ic_ptr->buflen = 0;
  2224  001418  0101               	movlb	1	; () banked
  2225  00141A  EE20 F00A          	lfsr	2,10
  2226  00141E  0101               	movlb	1	; () banked
  2227  001420  5100               	movf	_ic_ptr& (0+255),w,b
  2228  001422  26D9               	addwf	fsr2l,f,c
  2229  001424  0101               	movlb	1	; () banked
  2230  001426  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2231  001428  22DA               	addwfc	fsr2h,f,c
  2232  00142A  0E00               	movlw	0
  2233  00142C  6EDF               	movwf	indf2,c
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;my_i2c.c: 297: ic_ptr->event_count = 0;
  2237  00142E  0101               	movlb	1	; () banked
  2238  001430  EE20 F00B          	lfsr	2,11
  2239  001434  0101               	movlb	1	; () banked
  2240  001436  5100               	movf	_ic_ptr& (0+255),w,b
  2241  001438  26D9               	addwf	fsr2l,f,c
  2242  00143A  0101               	movlb	1	; () banked
  2243  00143C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2244  00143E  22DA               	addwfc	fsr2h,f,c
  2245  001440  0E00               	movlw	0
  2246  001442  6EDF               	movwf	indf2,c
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;my_i2c.c: 298: ic_ptr->status = 0x5;
  2250  001444  0101               	movlb	1	; () banked
  2251  001446  EE20 F00C          	lfsr	2,12
  2252  00144A  0101               	movlb	1	; () banked
  2253  00144C  5100               	movf	_ic_ptr& (0+255),w,b
  2254  00144E  26D9               	addwf	fsr2l,f,c
  2255  001450  0101               	movlb	1	; () banked
  2256  001452  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2257  001454  22DA               	addwfc	fsr2h,f,c
  2258  001456  0E05               	movlw	5
  2259  001458  6EDF               	movwf	indf2,c
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;my_i2c.c: 299: ic_ptr->error_count = 0;
  2263  00145A  0101               	movlb	1	; () banked
  2264  00145C  EE20 F00E          	lfsr	2,14
  2265  001460  0101               	movlb	1	; () banked
  2266  001462  5100               	movf	_ic_ptr& (0+255),w,b
  2267  001464  26D9               	addwf	fsr2l,f,c
  2268  001466  0101               	movlb	1	; () banked
  2269  001468  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2270  00146A  22DA               	addwfc	fsr2h,f,c
  2271  00146C  0E00               	movlw	0
  2272  00146E  6EDF               	movwf	indf2,c
  2273                           
  2274                           ; BSR set to: 1
  2275  001470  0012               	return	
  2276  001472                     __end_of_init_i2c:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           prodh	equ	0xFF4
  2283                           prodl	equ	0xFF3
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           indf1	equ	0xFE7
  2287                           postdec1	equ	0xFE5
  2288                           fsr1h	equ	0xFE2
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _init_adc *****************
  2296 ;; Defined at:
  2297 ;;		line 21 in file "../src/my_adc.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;		None               void
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2311 ;;      Params:         0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0
  2313 ;;      Temps:          0       0       2       0       0
  2314 ;;      Totals:         0       0       2       0       0
  2315 ;;Total ram usage:        2 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:   12
  2318 ;; This function calls:
  2319 ;;		_Delay10TCYx
  2320 ;;		_OpenADC
  2321 ;;		_SetChanADC
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text7
  2328  001848                     __ptext7:
  2329                           	opt stack 0
  2330  001848                     _init_adc:
  2331                           	opt stack 18
  2332                           
  2333                           ;my_adc.c: 22: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  2334                           ;my_adc.c: 23: 0b10001111 & 0b11111111 & 0b11111110 & 0b11111111,
  2335                           ;my_adc.c: 24: 0xC);
  2336                           
  2337                           ; BSR set to: 1
  2338                           ;incstack = 0
  2339  001848  0101               	movlb	1	; () banked
  2340  00184A  6F4B               	movwf	??_init_adc& (0+255),b
  2341  00184C  0E8E               	movlw	142
  2342  00184E  0101               	movlb	1	; () banked
  2343  001850  0101               	movlb	1	; () banked
  2344  001852  6F46               	movwf	OpenADC@config2& (0+255),b
  2345  001854  0101               	movlb	1	; () banked
  2346  001856  514B               	movf	??_init_adc& (0+255),w,b
  2347  001858  0101               	movlb	1	; () banked
  2348  00185A  6F4C               	movwf	(??_init_adc+1)& (0+255),b
  2349  00185C  0E0C               	movlw	12
  2350  00185E  0101               	movlb	1	; () banked
  2351  001860  0101               	movlb	1	; () banked
  2352  001862  6F47               	movwf	OpenADC@portconfig& (0+255),b
  2353  001864  0101               	movlb	1	; () banked
  2354  001866  514C               	movf	(??_init_adc+1)& (0+255),w,b
  2355  001868  0E91               	movlw	145
  2356  00186A  EC5A  F008         	call	_OpenADC
  2357                           
  2358                           ;my_adc.c: 26: SetChanADC(0b10001111);
  2359  00186E  0E8F               	movlw	143
  2360  001870  ECAF  F00D         	call	_SetChanADC
  2361                           
  2362                           ;my_adc.c: 27: Delay10TCYx(50);
  2363  001874  0E32               	movlw	50
  2364  001876  ECCD  F00D         	call	_Delay10TCYx
  2365                           
  2366                           ;my_adc.c: 29: TRISAbits.TRISA1 = 1;
  2367  00187A  8292               	bsf	3986,1,c	;volatile
  2368                           
  2369                           ;my_adc.c: 30: TRISAbits.TRISA2 = 1;
  2370  00187C  8492               	bsf	3986,2,c	;volatile
  2371                           
  2372                           ;my_adc.c: 38: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  2373  00187E  9C9E               	bcf	3998,6,c	;volatile
  2374  001880  8CF2               	bsf	intcon,6,c	;volatile
  2375  001882  8C9D               	bsf	3997,6,c	;volatile
  2376  001884  0012               	return	
  2377  001886                     __end_of_init_adc:
  2378                           	opt stack 0
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           intcon	equ	0xFF2
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           indf1	equ	0xFE7
  2389                           postdec1	equ	0xFE5
  2390                           fsr1h	equ	0xFE2
  2391                           fsr1l	equ	0xFE1
  2392                           indf2	equ	0xFDF
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function _SetChanADC *****************
  2398 ;; Defined at:
  2399 ;;		line 30 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  channel         1    wreg     unsigned char 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  channel         1   15[BANK1 ] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;		None               void
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       1       0       0
  2415 ;;      Temps:          0       0       1       0       0
  2416 ;;      Totals:         0       0       2       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:   11
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_init_adc
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text8
  2428  001B5E                     __ptext8:
  2429                           	opt stack 0
  2430  001B5E                     _SetChanADC:
  2431                           	opt stack 18
  2432                           
  2433                           ;incstack = 0
  2434                           ;SetChanADC@channel stored from wreg
  2435  001B5E  CFE8 F147          	movff	wreg,SetChanADC@channel
  2436  001B62  CFC2 F146          	movff	4034,??_SetChanADC	;volatile
  2437  001B66  0EC3               	movlw	195
  2438  001B68  0101               	movlb	1	; () banked
  2439  001B6A  1746               	andwf	??_SetChanADC& (0+255),f,b
  2440  001B6C  0101               	movlb	1	; () banked
  2441  001B6E  0101               	movlb	1	; () banked
  2442  001B70  90D8               	bcf	status,0,c
  2443  001B72  3147               	rrcf	SetChanADC@channel& (0+255),w,b
  2444  001B74  0B3C               	andlw	60
  2445  001B76  0101               	movlb	1	; () banked
  2446  001B78  1146               	iorwf	??_SetChanADC& (0+255),w,b
  2447  001B7A  6EC2               	movwf	4034,c	;volatile
  2448                           
  2449                           ; BSR set to: 1
  2450  001B7C  0012               	return	
  2451  001B7E                     __end_of_SetChanADC:
  2452                           	opt stack 0
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           prodh	equ	0xFF4
  2458                           prodl	equ	0xFF3
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           indf1	equ	0xFE7
  2463                           postdec1	equ	0xFE5
  2464                           fsr1h	equ	0xFE2
  2465                           fsr1l	equ	0xFE1
  2466                           indf2	equ	0xFDF
  2467                           fsr2h	equ	0xFDA
  2468                           fsr2l	equ	0xFD9
  2469                           status	equ	0xFD8
  2470                           
  2471 ;; *************** function _OpenADC *****************
  2472 ;; Defined at:
  2473 ;;		line 68 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  config          1    wreg     unsigned char 
  2476 ;;  config2         1   14[BANK1 ] unsigned char 
  2477 ;;  portconfig      1   15[BANK1 ] unsigned char 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  config          1   18[BANK1 ] unsigned char 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;		None               void
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2489 ;;      Params:         0       0       2       0       0
  2490 ;;      Locals:         0       0       1       0       0
  2491 ;;      Temps:          0       0       2       0       0
  2492 ;;      Totals:         0       0       5       0       0
  2493 ;;Total ram usage:        5 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:   11
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_init_adc
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text9
  2504  0010B4                     __ptext9:
  2505                           	opt stack 0
  2506  0010B4                     _OpenADC:
  2507                           	opt stack 18
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;incstack = 0
  2511                           ;OpenADC@config stored from wreg
  2512  0010B4  CFE8 F14A          	movff	wreg,OpenADC@config
  2513  0010B8  0E00               	movlw	0
  2514  0010BA  6EC2               	movwf	4034,c	;volatile
  2515  0010BC  0E00               	movlw	0
  2516  0010BE  6EC0               	movwf	4032,c	;volatile
  2517  0010C0  0101               	movlb	1	; () banked
  2518  0010C2  0101               	movlb	1	; () banked
  2519  0010C4  90D8               	bcf	status,0,c
  2520  0010C6  3146               	rrcf	OpenADC@config2& (0+255),w,b
  2521  0010C8  0B3C               	andlw	60
  2522  0010CA  6EC2               	movwf	4034,c	;volatile
  2523                           
  2524                           ; BSR set to: 1
  2525  0010CC  C146  F148         	movff	OpenADC@config2,??_OpenADC
  2526  0010D0  0101               	movlb	1	; () banked
  2527  0010D2  3B48               	swapf	??_OpenADC& (0+255),f,b
  2528  0010D4  0EF0               	movlw	240
  2529  0010D6  1748               	andwf	??_OpenADC& (0+255),f,b
  2530  0010D8  0E30               	movlw	48
  2531  0010DA  0101               	movlb	1	; () banked
  2532  0010DC  1748               	andwf	??_OpenADC& (0+255),f,b
  2533  0010DE  0101               	movlb	1	; () banked
  2534  0010E0  0101               	movlb	1	; () banked
  2535  0010E2  5147               	movf	OpenADC@portconfig& (0+255),w,b
  2536  0010E4  0B0F               	andlw	15
  2537  0010E6  0101               	movlb	1	; () banked
  2538  0010E8  1148               	iorwf	??_OpenADC& (0+255),w,b
  2539  0010EA  6EC1               	movwf	4033,c	;volatile
  2540                           
  2541                           ; BSR set to: 1
  2542  0010EC  C14A  F148         	movff	OpenADC@config,??_OpenADC
  2543  0010F0  0101               	movlb	1	; () banked
  2544  0010F2  90D8               	bcf	status,0,c
  2545  0010F4  3748               	rlcf	??_OpenADC& (0+255),f,b
  2546  0010F6  0101               	movlb	1	; () banked
  2547  0010F8  90D8               	bcf	status,0,c
  2548  0010FA  3748               	rlcf	??_OpenADC& (0+255),f,b
  2549  0010FC  0E38               	movlw	56
  2550  0010FE  0101               	movlb	1	; () banked
  2551  001100  1748               	andwf	??_OpenADC& (0+255),f,b
  2552  001102  C14A  F149         	movff	OpenADC@config,??_OpenADC+1
  2553  001106  0101               	movlb	1	; () banked
  2554  001108  3B49               	swapf	(??_OpenADC+1)& (0+255),f,b
  2555  00110A  0E0F               	movlw	15
  2556  00110C  1749               	andwf	(??_OpenADC+1)& (0+255),f,b
  2557  00110E  0E07               	movlw	7
  2558  001110  0101               	movlb	1	; () banked
  2559  001112  1749               	andwf	(??_OpenADC+1)& (0+255),f,b
  2560  001114  0101               	movlb	1	; () banked
  2561  001116  0101               	movlb	1	; () banked
  2562  001118  514A               	movf	OpenADC@config& (0+255),w,b
  2563  00111A  0B80               	andlw	128
  2564  00111C  0101               	movlb	1	; () banked
  2565  00111E  1149               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2566  001120  0101               	movlb	1	; () banked
  2567  001122  1148               	iorwf	??_OpenADC& (0+255),w,b
  2568  001124  6EC0               	movwf	4032,c	;volatile
  2569                           
  2570                           ; BSR set to: 1
  2571  001126  0101               	movlb	1	; () banked
  2572  001128  0101               	movlb	1	; () banked
  2573  00112A  AF46               	btfss	OpenADC@config2& (0+255),7,b
  2574  00112C  D003               	goto	l554
  2575                           
  2576                           ; BSR set to: 1
  2577  00112E  9C9E               	bcf	3998,6,c	;volatile
  2578  001130  8C9D               	bsf	3997,6,c	;volatile
  2579  001132  8CF2               	bsf	intcon,6,c	;volatile
  2580  001134                     l554:
  2581                           
  2582                           ; BSR set to: 1
  2583  001134  80C2               	bsf	4034,0,c	;volatile
  2584                           
  2585                           ; BSR set to: 1
  2586  001136  0012               	return	
  2587  001138                     __end_of_OpenADC:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           intcon	equ	0xFF2
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           indf1	equ	0xFE7
  2599                           postdec1	equ	0xFE5
  2600                           fsr1h	equ	0xFE2
  2601                           fsr1l	equ	0xFE1
  2602                           indf2	equ	0xFDF
  2603                           fsr2h	equ	0xFDA
  2604                           fsr2l	equ	0xFD9
  2605                           status	equ	0xFD8
  2606                           
  2607 ;; *************** function _Delay10TCYx *****************
  2608 ;; Defined at:
  2609 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d10tcyx.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  unit            1    wreg     unsigned char 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  unit            1   14[BANK1 ] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;		None               void
  2616 ;; Registers used:
  2617 ;;		wreg
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2623 ;;      Params:         0       0       0       0       0
  2624 ;;      Locals:         0       0       1       0       0
  2625 ;;      Temps:          0       0       0       0       0
  2626 ;;      Totals:         0       0       1       0       0
  2627 ;;Total ram usage:        1 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:   11
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_init_adc
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text10
  2638  001B9A                     __ptext10:
  2639                           	opt stack 0
  2640  001B9A                     _Delay10TCYx:
  2641                           	opt stack 18
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;incstack = 0
  2645                           ;Delay10TCYx@unit stored from wreg
  2646  001B9A  CFE8 F146          	movff	wreg,Delay10TCYx@unit
  2647  001B9E                     l829:
  2648  001B9E  0E03               	movlw	3
  2649  001BA0                     u2667:
  2650  001BA0  2EE8               	decfsz	wreg,f,c
  2651  001BA2  D7FE               	goto	u2667
  2652  001BA4  F000               	nop	
  2653  001BA6  0101               	movlb	1	; () banked
  2654  001BA8  0101               	movlb	1	; () banked
  2655  001BAA  2F46               	decfsz	Delay10TCYx@unit& (0+255),f,b
  2656  001BAC  D7F8               	goto	l829
  2657  001BAE  0012               	return	
  2658  001BB0                     __end_of_Delay10TCYx:
  2659                           	opt stack 0
  2660                           tblptru	equ	0xFF8
  2661                           tblptrh	equ	0xFF7
  2662                           tblptrl	equ	0xFF6
  2663                           tablat	equ	0xFF5
  2664                           prodh	equ	0xFF4
  2665                           prodl	equ	0xFF3
  2666                           intcon	equ	0xFF2
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           indf1	equ	0xFE7
  2670                           postdec1	equ	0xFE5
  2671                           fsr1h	equ	0xFE2
  2672                           fsr1l	equ	0xFE1
  2673                           indf2	equ	0xFDF
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _i2c_configure_slave *****************
  2679 ;; Defined at:
  2680 ;;		line 305 in file "../src/my_i2c.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  addr            1    wreg     unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  addr            1   14[BANK1 ] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2694 ;;      Params:         0       0       0       0       0
  2695 ;;      Locals:         0       0       1       0       0
  2696 ;;      Temps:          0       0       0       0       0
  2697 ;;      Totals:         0       0       1       0       0
  2698 ;;Total ram usage:        1 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:   11
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text11
  2709  001AC8                     __ptext11:
  2710                           	opt stack 0
  2711  001AC8                     _i2c_configure_slave:
  2712                           	opt stack 19
  2713                           
  2714                           ; BSR set to: 1
  2715                           ;incstack = 0
  2716                           ;i2c_configure_slave@addr stored from wreg
  2717  001AC8  CFE8 F146          	movff	wreg,i2c_configure_slave@addr
  2718                           
  2719                           ;my_i2c.c: 317: TRISCbits.TRISC3 = 1;
  2720  001ACC  8694               	bsf	3988,3,c	;volatile
  2721                           
  2722                           ;my_i2c.c: 318: TRISCbits.TRISC4 = 1;
  2723  001ACE  8894               	bsf	3988,4,c	;volatile
  2724                           
  2725                           ;my_i2c.c: 323: SSPADD = addr;
  2726  001AD0  C146  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2727                           
  2728                           ;my_i2c.c: 325: SSPSTAT = 0x0;
  2729  001AD4  0E00               	movlw	0
  2730  001AD6  6EC7               	movwf	4039,c	;volatile
  2731                           
  2732                           ;my_i2c.c: 326: SSPCON1 = 0x0;
  2733  001AD8  0E00               	movlw	0
  2734  001ADA  6EC6               	movwf	4038,c	;volatile
  2735                           
  2736                           ;my_i2c.c: 327: SSPCON2 = 0x0;
  2737  001ADC  0E00               	movlw	0
  2738  001ADE  6EC5               	movwf	4037,c	;volatile
  2739                           
  2740                           ;my_i2c.c: 328: SSPCON1 |= 0x0E;
  2741  001AE0  0E0E               	movlw	14
  2742  001AE2  12C6               	iorwf	4038,f,c	;volatile
  2743                           
  2744                           ;my_i2c.c: 329: SSPSTAT |= 0b10000000;
  2745  001AE4  8EC7               	bsf	4039,7,c	;volatile
  2746                           
  2747                           ;my_i2c.c: 332: TRISCbits.TRISC3 = 1;
  2748  001AE6  8694               	bsf	3988,3,c	;volatile
  2749                           
  2750                           ;my_i2c.c: 333: TRISCbits.TRISC4 = 1;
  2751  001AE8  8894               	bsf	3988,4,c	;volatile
  2752                           
  2753                           ;my_i2c.c: 354: SSPCON2bits.SEN = 1;
  2754  001AEA  80C5               	bsf	4037,0,c	;volatile
  2755                           
  2756                           ;my_i2c.c: 355: SSPCON1 |= 0b00100000;
  2757  001AEC  8AC6               	bsf	4038,5,c	;volatile
  2758  001AEE  0012               	return	
  2759  001AF0                     __end_of_i2c_configure_slave:
  2760                           	opt stack 0
  2761                           tblptru	equ	0xFF8
  2762                           tblptrh	equ	0xFF7
  2763                           tblptrl	equ	0xFF6
  2764                           tablat	equ	0xFF5
  2765                           prodh	equ	0xFF4
  2766                           prodl	equ	0xFF3
  2767                           intcon	equ	0xFF2
  2768                           postinc0	equ	0xFEE
  2769                           wreg	equ	0xFE8
  2770                           indf1	equ	0xFE7
  2771                           postdec1	equ	0xFE5
  2772                           fsr1h	equ	0xFE2
  2773                           fsr1l	equ	0xFE1
  2774                           indf2	equ	0xFDF
  2775                           fsr2h	equ	0xFDA
  2776                           fsr2l	equ	0xFD9
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _enable_interrupts *****************
  2780 ;; Defined at:
  2781 ;;		line 16 in file "../src/interrupts.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;		None               void
  2788 ;; Registers used:
  2789 ;;		None
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:   11
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_main
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text12
  2810  001C1E                     __ptext12:
  2811                           	opt stack 0
  2812  001C1E                     _enable_interrupts:
  2813                           	opt stack 19
  2814                           
  2815                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  2816                           
  2817                           ;incstack = 0
  2818  001C1E  8ED0               	bsf	4048,7,c	;volatile
  2819                           
  2820                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  2821  001C20  8EF2               	bsf	intcon,7,c	;volatile
  2822                           
  2823                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  2824  001C22  8CF2               	bsf	intcon,6,c	;volatile
  2825  001C24  0012               	return	
  2826  001C26                     __end_of_enable_interrupts:
  2827                           	opt stack 0
  2828                           tblptru	equ	0xFF8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           tablat	equ	0xFF5
  2832                           prodh	equ	0xFF4
  2833                           prodl	equ	0xFF3
  2834                           intcon	equ	0xFF2
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           indf1	equ	0xFE7
  2838                           postdec1	equ	0xFE5
  2839                           fsr1h	equ	0xFE2
  2840                           fsr1l	equ	0xFE1
  2841                           indf2	equ	0xFDF
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _block_on_To_msgqueues *****************
  2847 ;; Defined at:
  2848 ;;		line 259 in file "../src/messages.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;		None               void
  2855 ;; Registers used:
  2856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2862 ;;      Params:         0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0
  2864 ;;      Temps:          0       0       1       0       0
  2865 ;;      Totals:         0       0       1       0       0
  2866 ;;Total ram usage:        1 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:   14
  2869 ;; This function calls:
  2870 ;;		_Delay1KTCYx
  2871 ;;		_check_msg
  2872 ;;		_in_main
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text13
  2879  0011BA                     __ptext13:
  2880                           	opt stack 0
  2881  0011BA                     _block_on_To_msgqueues:
  2882                           	opt stack 16
  2883                           
  2884                           ;messages.c: 260: if (!in_main()) {
  2885                           
  2886                           ;incstack = 0
  2887  0011BA  EC80  F00B         	call	_in_main	;wreg free
  2888  0011BE  0101               	movlb	1	; () banked
  2889  0011C0  0101               	movlb	1	; () banked
  2890  0011C2  514B               	movf	(?_in_main+1)& (0+255),w,b
  2891  0011C4  0101               	movlb	1	; () banked
  2892  0011C6  114A               	iorwf	?_in_main& (0+255),w,b
  2893  0011C8  B4D8               	btfsc	status,2,c
  2894  0011CA  0012               	return	
  2895                           
  2896                           ; BSR set to: 1
  2897                           ;messages.c: 262: }
  2898                           ;messages.c: 264: MQ_Main_Willing_to_block = 1;
  2899                           
  2900                           ; BSR set to: 1
  2901                           
  2902                           ; BSR set to: 1
  2903                           ;messages.c: 261: return;
  2904  0011CC  0101               	movlb	1	; () banked
  2905  0011CE  6F4C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2906  0011D0  0E01               	movlw	1
  2907  0011D2  6E44               	movwf	_MQ_Main_Willing_to_block,c
  2908  0011D4  0101               	movlb	1	; () banked
  2909  0011D6  514C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2910  0011D8                     l3534:
  2911                           
  2912                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  2913  0011D8  0101               	movlb	1	; () banked
  2914  0011DA  0E01               	movlw	high _ToMainHigh_MQ
  2915  0011DC  0101               	movlb	1	; () banked
  2916  0011DE  0101               	movlb	1	; () banked
  2917  0011E0  6F47               	movwf	(check_msg@qptr+1)& (0+255),b
  2918  0011E2  0101               	movlb	1	; () banked
  2919  0011E4  0E02               	movlw	low _ToMainHigh_MQ
  2920  0011E6  0101               	movlb	1	; () banked
  2921  0011E8  0101               	movlb	1	; () banked
  2922  0011EA  6F46               	movwf	check_msg@qptr& (0+255),b
  2923  0011EC  ECDA  F00C         	call	_check_msg	;wreg free
  2924  0011F0  0900               	iorlw	0
  2925  0011F2  B4D8               	btfsc	status,2,c
  2926  0011F4  D007               	goto	l3540
  2927                           
  2928                           ;messages.c: 267: MQ_Main_Willing_to_block = 0;
  2929  0011F6  0101               	movlb	1	; () banked
  2930  0011F8  6F4C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2931  0011FA  0E00               	movlw	0
  2932  0011FC  6E44               	movwf	_MQ_Main_Willing_to_block,c
  2933  0011FE  0101               	movlb	1	; () banked
  2934  001200  514C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2935  001202  0012               	return	
  2936  001204                     l3540:
  2937                           
  2938                           ;messages.c: 272: }
  2939                           ;messages.c: 273: if (check_msg(&ToMainLow_MQ)) {
  2940  001204  0102               	movlb	2	; () banked
  2941  001206  0E02               	movlw	high _ToMainLow_MQ
  2942  001208  0101               	movlb	1	; () banked
  2943  00120A  0101               	movlb	1	; () banked
  2944  00120C  6F47               	movwf	(check_msg@qptr+1)& (0+255),b
  2945  00120E  0102               	movlb	2	; () banked
  2946  001210  0E9B               	movlw	low _ToMainLow_MQ
  2947  001212  0101               	movlb	1	; () banked
  2948  001214  0101               	movlb	1	; () banked
  2949  001216  6F46               	movwf	check_msg@qptr& (0+255),b
  2950  001218  ECDA  F00C         	call	_check_msg	;wreg free
  2951  00121C  0900               	iorlw	0
  2952  00121E  B4D8               	btfsc	status,2,c
  2953  001220  D007               	goto	l3546
  2954                           
  2955                           ;messages.c: 274: MQ_Main_Willing_to_block = 0;
  2956  001222  0101               	movlb	1	; () banked
  2957  001224  6F4C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2958  001226  0E00               	movlw	0
  2959  001228  6E44               	movwf	_MQ_Main_Willing_to_block,c
  2960  00122A  0101               	movlb	1	; () banked
  2961  00122C  514C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2962  00122E  0012               	return	
  2963  001230                     l3546:
  2964                           
  2965                           ;messages.c: 279: }
  2966                           ;messages.c: 280: Delay1KTCYx(10);
  2967  001230  0E0A               	movlw	10
  2968  001232  ECD8  F00D         	call	_Delay1KTCYx
  2969  001236  D7D0               	goto	l3534
  2970  001238                     __end_of_block_on_To_msgqueues:
  2971                           	opt stack 0
  2972                           tblptru	equ	0xFF8
  2973                           tblptrh	equ	0xFF7
  2974                           tblptrl	equ	0xFF6
  2975                           tablat	equ	0xFF5
  2976                           prodh	equ	0xFF4
  2977                           prodl	equ	0xFF3
  2978                           intcon	equ	0xFF2
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           indf1	equ	0xFE7
  2982                           postdec1	equ	0xFE5
  2983                           fsr1h	equ	0xFE2
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990 ;; *************** function _in_main *****************
  2991 ;; Defined at:
  2992 ;;		line 42 in file "../src/interrupts.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  2   18[BANK1 ] int 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3006 ;;      Params:         0       0       2       0       0
  3007 ;;      Locals:         0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0
  3009 ;;      Totals:         0       0       2       0       0
  3010 ;;Total ram usage:        2 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:   13
  3013 ;; This function calls:
  3014 ;;		_in_high_int
  3015 ;;		_in_low_int
  3016 ;; This function is called by:
  3017 ;;		_block_on_To_msgqueues
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text14
  3022  001700                     __ptext14:
  3023                           	opt stack 0
  3024  001700                     _in_main:
  3025                           	opt stack 16
  3026                           
  3027                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  3028                           
  3029                           ;incstack = 0
  3030  001700  EC5D  F00B         	call	_in_low_int	;wreg free
  3031  001704  0101               	movlb	1	; () banked
  3032  001706  0101               	movlb	1	; () banked
  3033  001708  5149               	movf	(?_in_low_int+1)& (0+255),w,b
  3034  00170A  0101               	movlb	1	; () banked
  3035  00170C  1148               	iorwf	?_in_low_int& (0+255),w,b
  3036  00170E  A4D8               	btfss	status,2,c
  3037  001710  D011               	goto	l3206
  3038                           
  3039                           ; BSR set to: 1
  3040  001712  ECED  F00D         	call	_in_high_int	;wreg free
  3041  001716  0101               	movlb	1	; () banked
  3042  001718  0101               	movlb	1	; () banked
  3043  00171A  5147               	movf	(?_in_high_int+1)& (0+255),w,b
  3044  00171C  0101               	movlb	1	; () banked
  3045  00171E  1146               	iorwf	?_in_high_int& (0+255),w,b
  3046  001720  A4D8               	btfss	status,2,c
  3047  001722  D008               	goto	l3206
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;interrupts.c: 44: return (1);
  3051  001724  0E00               	movlw	0
  3052  001726  0101               	movlb	1	; () banked
  3053  001728  0101               	movlb	1	; () banked
  3054  00172A  6F4B               	movwf	(?_in_main+1)& (0+255),b
  3055  00172C  0E01               	movlw	1
  3056  00172E  0101               	movlb	1	; () banked
  3057  001730  6F4A               	movwf	?_in_main& (0+255),b
  3058  001732  0012               	return	
  3059  001734                     l3206:
  3060                           
  3061                           ; BSR set to: 1
  3062                           ;interrupts.c: 46: return (0);
  3063  001734  0E00               	movlw	0
  3064  001736  0101               	movlb	1	; () banked
  3065  001738  0101               	movlb	1	; () banked
  3066  00173A  6F4B               	movwf	(?_in_main+1)& (0+255),b
  3067  00173C  0E00               	movlw	0
  3068  00173E  0101               	movlb	1	; () banked
  3069  001740  6F4A               	movwf	?_in_main& (0+255),b
  3070  001742  0012               	return	
  3071  001744                     __end_of_in_main:
  3072                           	opt stack 0
  3073                           tblptru	equ	0xFF8
  3074                           tblptrh	equ	0xFF7
  3075                           tblptrl	equ	0xFF6
  3076                           tablat	equ	0xFF5
  3077                           prodh	equ	0xFF4
  3078                           prodl	equ	0xFF3
  3079                           intcon	equ	0xFF2
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           indf1	equ	0xFE7
  3083                           postdec1	equ	0xFE5
  3084                           fsr1h	equ	0xFE2
  3085                           fsr1l	equ	0xFE1
  3086                           indf2	equ	0xFDF
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function _in_low_int *****************
  3092 ;; Defined at:
  3093 ;;		line 32 in file "../src/interrupts.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2   16[BANK1 ] int 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3107 ;;      Params:         0       0       2       0       0
  3108 ;;      Locals:         0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0
  3110 ;;      Totals:         0       0       2       0       0
  3111 ;;Total ram usage:        2 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:   12
  3114 ;; This function calls:
  3115 ;;		_in_high_int
  3116 ;; This function is called by:
  3117 ;;		_in_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text15
  3122  0016BA                     __ptext15:
  3123                           	opt stack 0
  3124  0016BA                     _in_low_int:
  3125                           	opt stack 16
  3126                           
  3127                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  3128                           
  3129                           ; BSR set to: 1
  3130                           ;incstack = 0
  3131  0016BA  ACF2               	btfss	intcon,6,c	;volatile
  3132  0016BC  D008               	goto	l3184
  3133                           
  3134                           ;interrupts.c: 34: return (0);
  3135  0016BE  0E00               	movlw	0
  3136  0016C0  0101               	movlb	1	; () banked
  3137  0016C2  0101               	movlb	1	; () banked
  3138  0016C4  6F49               	movwf	(?_in_low_int+1)& (0+255),b
  3139  0016C6  0E00               	movlw	0
  3140  0016C8  0101               	movlb	1	; () banked
  3141  0016CA  6F48               	movwf	?_in_low_int& (0+255),b
  3142  0016CC  0012               	return	
  3143  0016CE                     l3184:
  3144  0016CE  ECED  F00D         	call	_in_high_int	;wreg free
  3145  0016D2  0101               	movlb	1	; () banked
  3146  0016D4  0101               	movlb	1	; () banked
  3147  0016D6  5147               	movf	(?_in_high_int+1)& (0+255),w,b
  3148  0016D8  0101               	movlb	1	; () banked
  3149  0016DA  1146               	iorwf	?_in_high_int& (0+255),w,b
  3150  0016DC  B4D8               	btfsc	status,2,c
  3151  0016DE  D008               	goto	l3192
  3152                           
  3153                           ; BSR set to: 1
  3154                           ;interrupts.c: 36: return (0);
  3155  0016E0  0E00               	movlw	0
  3156  0016E2  0101               	movlb	1	; () banked
  3157  0016E4  0101               	movlb	1	; () banked
  3158  0016E6  6F49               	movwf	(?_in_low_int+1)& (0+255),b
  3159  0016E8  0E00               	movlw	0
  3160  0016EA  0101               	movlb	1	; () banked
  3161  0016EC  6F48               	movwf	?_in_low_int& (0+255),b
  3162  0016EE  0012               	return	
  3163  0016F0                     l3192:
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;interrupts.c: 38: return (1);
  3167  0016F0  0E00               	movlw	0
  3168  0016F2  0101               	movlb	1	; () banked
  3169  0016F4  0101               	movlb	1	; () banked
  3170  0016F6  6F49               	movwf	(?_in_low_int+1)& (0+255),b
  3171  0016F8  0E01               	movlw	1
  3172  0016FA  0101               	movlb	1	; () banked
  3173  0016FC  6F48               	movwf	?_in_low_int& (0+255),b
  3174  0016FE  0012               	return	
  3175  001700                     __end_of_in_low_int:
  3176                           	opt stack 0
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           intcon	equ	0xFF2
  3184                           postinc0	equ	0xFEE
  3185                           wreg	equ	0xFE8
  3186                           indf1	equ	0xFE7
  3187                           postdec1	equ	0xFE5
  3188                           fsr1h	equ	0xFE2
  3189                           fsr1l	equ	0xFE1
  3190                           indf2	equ	0xFDF
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _in_high_int *****************
  3196 ;; Defined at:
  3197 ;;		line 24 in file "../src/interrupts.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2   14[BANK1 ] int 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3211 ;;      Params:         0       0       2       0       0
  3212 ;;      Locals:         0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0
  3214 ;;      Totals:         0       0       2       0       0
  3215 ;;Total ram usage:        2 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:   11
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_in_low_int
  3222 ;;		_in_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text16
  3227  001BDA                     __ptext16:
  3228                           	opt stack 0
  3229  001BDA                     _in_high_int:
  3230                           	opt stack 16
  3231                           
  3232                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3233                           
  3234                           ; BSR set to: 1
  3235                           ;incstack = 0
  3236  001BDA  0E00               	movlw	0
  3237  001BDC  AEF2               	btfss	intcon,7,c	;volatile
  3238  001BDE  0E01               	movlw	1
  3239  001BE0  0101               	movlb	1	; () banked
  3240  001BE2  0101               	movlb	1	; () banked
  3241  001BE4  6F46               	movwf	?_in_high_int& (0+255),b
  3242  001BE6  0101               	movlb	1	; () banked
  3243  001BE8  6B47               	clrf	(?_in_high_int+1)& (0+255),b
  3244  001BEA  0012               	return	
  3245  001BEC                     __end_of_in_high_int:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           indf1	equ	0xFE7
  3257                           postdec1	equ	0xFE5
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _check_msg *****************
  3266 ;; Defined at:
  3267 ;;		line 223 in file "../src/messages.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  qptr            2   14[BANK1 ] PTR struct __msg_queue
  3270 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      unsigned char 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3282 ;;      Params:         0       0       2       0       0
  3283 ;;      Locals:         0       0       0       0       0
  3284 ;;      Temps:          0       0       1       0       0
  3285 ;;      Totals:         0       0       3       0       0
  3286 ;;Total ram usage:        3 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:   11
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_block_on_To_msgqueues
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text17
  3297  0019B4                     __ptext17:
  3298                           	opt stack 0
  3299  0019B4                     _check_msg:
  3300                           	opt stack 18
  3301                           
  3302                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  3303                           
  3304                           ; BSR set to: 1
  3305                           ;incstack = 0
  3306  0019B4  0101               	movlb	1	; () banked
  3307  0019B6  EE20 F035          	lfsr	2,53
  3308  0019BA  0101               	movlb	1	; () banked
  3309  0019BC  5146               	movf	check_msg@qptr& (0+255),w,b
  3310  0019BE  26D9               	addwf	fsr2l,f,c
  3311  0019C0  0101               	movlb	1	; () banked
  3312  0019C2  5147               	movf	(check_msg@qptr+1)& (0+255),w,b
  3313  0019C4  22DA               	addwfc	fsr2h,f,c
  3314  0019C6  50DF               	movf	indf2,w,c
  3315  0019C8  0101               	movlb	1	; () banked
  3316  0019CA  6F48               	movwf	??_check_msg& (0+255),b
  3317  0019CC  0101               	movlb	1	; () banked
  3318  0019CE  5148               	movf	??_check_msg& (0+255),w,b
  3319  0019D0  0D0D               	mullw	13
  3320  0019D2  50F3               	movf	prodl,w,c
  3321  0019D4  0101               	movlb	1	; () banked
  3322  0019D6  0101               	movlb	1	; () banked
  3323  0019D8  2546               	addwf	check_msg@qptr& (0+255),w,b
  3324  0019DA  6ED9               	movwf	fsr2l,c
  3325  0019DC  50F4               	movf	prodh,w,c
  3326  0019DE  0101               	movlb	1	; () banked
  3327  0019E0  0101               	movlb	1	; () banked
  3328  0019E2  2147               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3329  0019E4  6EDA               	movwf	fsr2h,c
  3330  0019E6  50DF               	movf	indf2,w,c
  3331  0019E8  0012               	return	
  3332  0019EA                     __end_of_check_msg:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           intcon	equ	0xFF2
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           indf1	equ	0xFE7
  3344                           postdec1	equ	0xFE5
  3345                           fsr1h	equ	0xFE2
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           fsr2h	equ	0xFDA
  3349                           fsr2l	equ	0xFD9
  3350                           status	equ	0xFD8
  3351                           
  3352 ;; *************** function _Delay1KTCYx *****************
  3353 ;; Defined at:
  3354 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  unit            1    wreg     unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  unit            1   14[BANK1 ] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;		None               void
  3361 ;; Registers used:
  3362 ;;		wreg
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3368 ;;      Params:         0       0       0       0       0
  3369 ;;      Locals:         0       0       1       0       0
  3370 ;;      Temps:          0       0       0       0       0
  3371 ;;      Totals:         0       0       1       0       0
  3372 ;;Total ram usage:        1 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:   11
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_block_on_To_msgqueues
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text18
  3383  001BB0                     __ptext18:
  3384                           	opt stack 0
  3385  001BB0                     _Delay1KTCYx:
  3386                           	opt stack 18
  3387                           
  3388                           ; BSR set to: 1
  3389                           ;incstack = 0
  3390                           ;Delay1KTCYx@unit stored from wreg
  3391  001BB0  CFE8 F146          	movff	wreg,Delay1KTCYx@unit
  3392  001BB4                     l836:
  3393  001BB4  0EFA               	movlw	250
  3394  001BB6                     u2677:
  3395  001BB6  F000               	nop	
  3396  001BB8  2EE8               	decfsz	wreg,f,c
  3397  001BBA  D7FD               	goto	u2677
  3398  001BBC  0101               	movlb	1	; () banked
  3399  001BBE  0101               	movlb	1	; () banked
  3400  001BC0  2F46               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3401  001BC2  D7F8               	goto	l836
  3402  001BC4  0012               	return	
  3403  001BC6                     __end_of_Delay1KTCYx:
  3404                           	opt stack 0
  3405                           tblptru	equ	0xFF8
  3406                           tblptrh	equ	0xFF7
  3407                           tblptrl	equ	0xFF6
  3408                           tablat	equ	0xFF5
  3409                           prodh	equ	0xFF4
  3410                           prodl	equ	0xFF3
  3411                           intcon	equ	0xFF2
  3412                           postinc0	equ	0xFEE
  3413                           wreg	equ	0xFE8
  3414                           indf1	equ	0xFE7
  3415                           postdec1	equ	0xFE5
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           indf2	equ	0xFDF
  3419                           fsr2h	equ	0xFDA
  3420                           fsr2l	equ	0xFD9
  3421                           status	equ	0xFD8
  3422                           
  3423 ;; *************** function _addDataPoints *****************
  3424 ;; Defined at:
  3425 ;;		line 48 in file "../src/sensorcomm.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  sensorid        2   22[BANK1 ] int 
  3428 ;;  data            2   24[BANK1 ] PTR void 
  3429 ;;		 -> main@msgbuffer(11), 
  3430 ;;  len             2   26[BANK1 ] int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;		None               void
  3435 ;; Registers used:
  3436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3442 ;;      Params:         0       0       6       0       0
  3443 ;;      Locals:         0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0
  3445 ;;      Totals:         0       0       6       0       0
  3446 ;;Total ram usage:        6 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:   12
  3449 ;; This function calls:
  3450 ;;		_addADDataPoints
  3451 ;; This function is called by:
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text19
  3457  001A4A                     __ptext19:
  3458                           	opt stack 0
  3459  001A4A                     _addDataPoints:
  3460                           	opt stack 18
  3461                           
  3462                           ;sensorcomm.c: 51: if(sensorid == 0){
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;incstack = 0
  3466  001A4A  0101               	movlb	1	; () banked
  3467  001A4C  0101               	movlb	1	; () banked
  3468  001A4E  514F               	movf	(addDataPoints@sensorid+1)& (0+255),w,b
  3469  001A50  114E               	iorwf	addDataPoints@sensorid& (0+255),w,b
  3470  001A52  A4D8               	btfss	status,2,c
  3471  001A54  0012               	return	
  3472                           
  3473                           ; BSR set to: 1
  3474                           ;sensorcomm.c: 52: addADDataPoints((sensorADData*) data, len);
  3475  001A56  0101               	movlb	1	; () banked
  3476  001A58  0101               	movlb	1	; () banked
  3477  001A5A  C151  F147         	movff	addDataPoints@data+1,addADDataPoints@data+1
  3478  001A5E  0101               	movlb	1	; () banked
  3479  001A60  0101               	movlb	1	; () banked
  3480  001A62  C150  F146         	movff	addDataPoints@data,addADDataPoints@data
  3481  001A66  C152  F148         	movff	addDataPoints@len,addADDataPoints@len
  3482  001A6A  C153  F149         	movff	addDataPoints@len+1,addADDataPoints@len+1
  3483  001A6E  EC59  F007         	call	_addADDataPoints	;wreg free
  3484  001A72  0012               	return	
  3485  001A74                     __end_of_addDataPoints:
  3486                           	opt stack 0
  3487                           tblptru	equ	0xFF8
  3488                           tblptrh	equ	0xFF7
  3489                           tblptrl	equ	0xFF6
  3490                           tablat	equ	0xFF5
  3491                           prodh	equ	0xFF4
  3492                           prodl	equ	0xFF3
  3493                           intcon	equ	0xFF2
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           indf1	equ	0xFE7
  3497                           postdec1	equ	0xFE5
  3498                           fsr1h	equ	0xFE2
  3499                           fsr1l	equ	0xFE1
  3500                           indf2	equ	0xFDF
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _addADDataPoints *****************
  3506 ;; Defined at:
  3507 ;;		line 57 in file "../src/sensorcomm.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  data            2   14[BANK1 ] PTR struct .
  3510 ;;		 -> main@msgbuffer(11), 
  3511 ;;  len             2   16[BANK1 ] int 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  i               2   20[BANK1 ] int 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;		None               void
  3516 ;; Registers used:
  3517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3523 ;;      Params:         0       0       4       0       0
  3524 ;;      Locals:         0       0       2       0       0
  3525 ;;      Temps:          0       0       2       0       0
  3526 ;;      Totals:         0       0       8       0       0
  3527 ;;Total ram usage:        8 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:   11
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_addDataPoints
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text20
  3538  000EB2                     __ptext20:
  3539                           	opt stack 0
  3540  000EB2                     _addADDataPoints:
  3541                           	opt stack 18
  3542                           
  3543                           ;sensorcomm.c: 59: if(ADacc.len + len < (int) sizeof(ADacc.data)){
  3544                           
  3545                           ;incstack = 0
  3546  000EB2  0102               	movlb	2	; () banked
  3547  000EB4  0102               	movlb	2	; () banked
  3548  000EB6  5100               	movf	_ADacc& (0+255),w,b
  3549  000EB8  0101               	movlb	1	; () banked
  3550  000EBA  0101               	movlb	1	; () banked
  3551  000EBC  2548               	addwf	addADDataPoints@len& (0+255),w,b
  3552  000EBE  0101               	movlb	1	; () banked
  3553  000EC0  6F4A               	movwf	??_addADDataPoints& (0+255),b
  3554  000EC2  0E00               	movlw	0
  3555  000EC4  0101               	movlb	1	; () banked
  3556  000EC6  0101               	movlb	1	; () banked
  3557  000EC8  2149               	addwfc	(addADDataPoints@len+1)& (0+255),w,b
  3558  000ECA  0101               	movlb	1	; () banked
  3559  000ECC  6F4B               	movwf	(??_addADDataPoints+1)& (0+255),b
  3560  000ECE  0101               	movlb	1	; () banked
  3561  000ED0  514B               	movf	(??_addADDataPoints+1)& (0+255),w,b
  3562  000ED2  0A80               	xorlw	128
  3563  000ED4  6EF3               	movwf	prodl,c
  3564  000ED6  0E80               	movlw	128
  3565  000ED8  5CF3               	subwf	prodl,w,c
  3566  000EDA  0E64               	movlw	100
  3567  000EDC  B4D8               	btfsc	status,2,c
  3568  000EDE  5D4A               	subwf	??_addADDataPoints& (0+255),w,b
  3569  000EE0  B0D8               	btfsc	status,0,c
  3570  000EE2  0012               	return	
  3571                           
  3572                           ; BSR set to: 1
  3573                           ;sensorcomm.c: 60: int i = 0;
  3574  000EE4  0E00               	movlw	0
  3575  000EE6  0101               	movlb	1	; () banked
  3576  000EE8  0101               	movlb	1	; () banked
  3577  000EEA  6F4D               	movwf	(addADDataPoints@i+1)& (0+255),b
  3578  000EEC  0E00               	movlw	0
  3579  000EEE  0101               	movlb	1	; () banked
  3580  000EF0  6F4C               	movwf	addADDataPoints@i& (0+255),b
  3581  000EF2  D023               	goto	l3772
  3582  000EF4                     l3766:
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;sensorcomm.c: 62: ADacc.data[ADacc.len++] = data[i];
  3586  000EF4  0101               	movlb	1	; () banked
  3587  000EF6  0101               	movlb	1	; () banked
  3588  000EF8  514C               	movf	addADDataPoints@i& (0+255),w,b
  3589  000EFA  0101               	movlb	1	; () banked
  3590  000EFC  0101               	movlb	1	; () banked
  3591  000EFE  2546               	addwf	addADDataPoints@data& (0+255),w,b
  3592  000F00  6ED9               	movwf	fsr2l,c
  3593  000F02  0101               	movlb	1	; () banked
  3594  000F04  0101               	movlb	1	; () banked
  3595  000F06  514D               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3596  000F08  0101               	movlb	1	; () banked
  3597  000F0A  0101               	movlb	1	; () banked
  3598  000F0C  2147               	addwfc	(addADDataPoints@data+1)& (0+255),w,b
  3599  000F0E  6EDA               	movwf	fsr2h,c
  3600  000F10  0102               	movlb	2	; () banked
  3601  000F12  0102               	movlb	2	; () banked
  3602  000F14  5100               	movf	_ADacc& (0+255),w,b
  3603  000F16  0D01               	mullw	1
  3604  000F18  0102               	movlb	2	; () banked
  3605  000F1A  0E01               	movlw	low (_ADacc+1)
  3606  000F1C  24F3               	addwf	prodl,w,c
  3607  000F1E  6EE1               	movwf	fsr1l,c
  3608  000F20  0102               	movlb	2	; () banked
  3609  000F22  0E02               	movlw	high (_ADacc+1)
  3610  000F24  20F4               	addwfc	prodh,w,c
  3611  000F26  6EE2               	movwf	fsr1h,c
  3612  000F28  CFDF FFE7          	movff	indf2,indf1
  3613                           
  3614                           ; BSR set to: 2
  3615  000F2C  0102               	movlb	2	; () banked
  3616  000F2E  0102               	movlb	2	; () banked
  3617  000F30  2B00               	incf	_ADacc& (0+255),f,b
  3618                           
  3619                           ; BSR set to: 2
  3620  000F32  0101               	movlb	1	; () banked
  3621  000F34  0101               	movlb	1	; () banked
  3622  000F36  4B4C               	infsnz	addADDataPoints@i& (0+255),f,b
  3623  000F38  2B4D               	incf	(addADDataPoints@i+1)& (0+255),f,b
  3624  000F3A                     l3772:
  3625                           
  3626                           ; BSR set to: 1
  3627  000F3A  0101               	movlb	1	; () banked
  3628  000F3C  0101               	movlb	1	; () banked
  3629  000F3E  514D               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3630  000F40  0A80               	xorlw	128
  3631  000F42  0101               	movlb	1	; () banked
  3632  000F44  6F4A               	movwf	??_addADDataPoints& (0+255),b
  3633  000F46  0101               	movlb	1	; () banked
  3634  000F48  5148               	movf	addADDataPoints@len& (0+255),w,b
  3635  000F4A  0101               	movlb	1	; () banked
  3636  000F4C  0101               	movlb	1	; () banked
  3637  000F4E  5D4C               	subwf	addADDataPoints@i& (0+255),w,b
  3638  000F50  0101               	movlb	1	; () banked
  3639  000F52  0101               	movlb	1	; () banked
  3640  000F54  5149               	movf	(addADDataPoints@len+1)& (0+255),w,b
  3641  000F56  0A80               	xorlw	128
  3642  000F58  0101               	movlb	1	; () banked
  3643  000F5A  594A               	subwfb	??_addADDataPoints& (0+255),w,b
  3644  000F5C  B0D8               	btfsc	status,0,c
  3645                           
  3646                           ; BSR set to: 1
  3647                           
  3648                           ; BSR set to: 1
  3649                           
  3650                           ; BSR set to: 1
  3651  000F5E  0012               	return	
  3652  000F60  D7C9               	goto	l3766
  3653  000F62                     __end_of_addADDataPoints:
  3654                           	opt stack 0
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           prodh	equ	0xFF4
  3660                           prodl	equ	0xFF3
  3661                           intcon	equ	0xFF2
  3662                           postinc0	equ	0xFEE
  3663                           wreg	equ	0xFE8
  3664                           indf1	equ	0xFE7
  3665                           postdec1	equ	0xFE5
  3666                           fsr1h	equ	0xFE2
  3667                           fsr1l	equ	0xFE1
  3668                           indf2	equ	0xFDF
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _ToMainLow_recvmsg *****************
  3674 ;; Defined at:
  3675 ;;		line 113 in file "../src/messages.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  maxlength       1    wreg     unsigned char 
  3678 ;;  msgtype         2   38[BANK1 ] PTR unsigned char 
  3679 ;;		 -> main@msgtype(1), 
  3680 ;;  data            2   40[BANK1 ] PTR void 
  3681 ;;		 -> main@msgbuffer(11), 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  maxlength       1   42[BANK1 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      char 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3693 ;;      Params:         0       0       4       0       0
  3694 ;;      Locals:         0       0       1       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       0       5       0       0
  3697 ;;Total ram usage:        5 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:   13
  3700 ;; This function calls:
  3701 ;;		_recv_msg
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text21
  3708  001744                     __ptext21:
  3709                           	opt stack 0
  3710  001744                     _ToMainLow_recvmsg:
  3711                           	opt stack 17
  3712                           
  3713                           ; BSR set to: 1
  3714                           ;incstack = 0
  3715                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3716  001744  CFE8 F162          	movff	wreg,ToMainLow_recvmsg@maxlength
  3717                           
  3718                           ;messages.c: 119: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3719  001748  0102               	movlb	2	; () banked
  3720  00174A  0E02               	movlw	high _ToMainLow_MQ
  3721  00174C  0101               	movlb	1	; () banked
  3722  00174E  0101               	movlb	1	; () banked
  3723  001750  6F51               	movwf	(recv_msg@qptr+1)& (0+255),b
  3724  001752  0102               	movlb	2	; () banked
  3725  001754  0E9B               	movlw	low _ToMainLow_MQ
  3726  001756  0101               	movlb	1	; () banked
  3727  001758  0101               	movlb	1	; () banked
  3728  00175A  6F50               	movwf	recv_msg@qptr& (0+255),b
  3729  00175C  C162  F152         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3730  001760  0101               	movlb	1	; () banked
  3731  001762  0101               	movlb	1	; () banked
  3732  001764  C15F  F154         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3733  001768  0101               	movlb	1	; () banked
  3734  00176A  0101               	movlb	1	; () banked
  3735  00176C  C15E  F153         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3736  001770  0101               	movlb	1	; () banked
  3737  001772  0101               	movlb	1	; () banked
  3738  001774  C161  F156         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3739  001778  0101               	movlb	1	; () banked
  3740  00177A  0101               	movlb	1	; () banked
  3741  00177C  C160  F155         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3742  001780  ECF0  F004         	call	_recv_msg	;wreg free
  3743  001784  0012               	return	
  3744  001786                     __end_of_ToMainLow_recvmsg:
  3745                           	opt stack 0
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           prodh	equ	0xFF4
  3751                           prodl	equ	0xFF3
  3752                           intcon	equ	0xFF2
  3753                           postinc0	equ	0xFEE
  3754                           wreg	equ	0xFE8
  3755                           indf1	equ	0xFE7
  3756                           postdec1	equ	0xFE5
  3757                           fsr1h	equ	0xFE2
  3758                           fsr1l	equ	0xFE1
  3759                           indf2	equ	0xFDF
  3760                           fsr2h	equ	0xFDA
  3761                           fsr2l	equ	0xFD9
  3762                           status	equ	0xFD8
  3763                           
  3764 ;; *************** function _ToMainHigh_recvmsg *****************
  3765 ;; Defined at:
  3766 ;;		line 136 in file "../src/messages.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  maxlength       1    wreg     unsigned char 
  3769 ;;  msgtype         2   38[BANK1 ] PTR unsigned char 
  3770 ;;		 -> main@msgtype(1), 
  3771 ;;  data            2   40[BANK1 ] PTR void 
  3772 ;;		 -> main@msgbuffer(11), 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  maxlength       1   42[BANK1 ] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      char 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3784 ;;      Params:         0       0       4       0       0
  3785 ;;      Locals:         0       0       1       0       0
  3786 ;;      Temps:          0       0       0       0       0
  3787 ;;      Totals:         0       0       5       0       0
  3788 ;;Total ram usage:        5 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:   13
  3791 ;; This function calls:
  3792 ;;		_recv_msg
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text22
  3799  001786                     __ptext22:
  3800                           	opt stack 0
  3801  001786                     _ToMainHigh_recvmsg:
  3802                           	opt stack 17
  3803                           
  3804                           ;incstack = 0
  3805                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3806  001786  CFE8 F162          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3807                           
  3808                           ;messages.c: 142: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3809  00178A  0101               	movlb	1	; () banked
  3810  00178C  0E01               	movlw	high _ToMainHigh_MQ
  3811  00178E  0101               	movlb	1	; () banked
  3812  001790  0101               	movlb	1	; () banked
  3813  001792  6F51               	movwf	(recv_msg@qptr+1)& (0+255),b
  3814  001794  0101               	movlb	1	; () banked
  3815  001796  0E02               	movlw	low _ToMainHigh_MQ
  3816  001798  0101               	movlb	1	; () banked
  3817  00179A  0101               	movlb	1	; () banked
  3818  00179C  6F50               	movwf	recv_msg@qptr& (0+255),b
  3819  00179E  C162  F152         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3820  0017A2  0101               	movlb	1	; () banked
  3821  0017A4  0101               	movlb	1	; () banked
  3822  0017A6  C15F  F154         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3823  0017AA  0101               	movlb	1	; () banked
  3824  0017AC  0101               	movlb	1	; () banked
  3825  0017AE  C15E  F153         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3826  0017B2  0101               	movlb	1	; () banked
  3827  0017B4  0101               	movlb	1	; () banked
  3828  0017B6  C161  F156         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3829  0017BA  0101               	movlb	1	; () banked
  3830  0017BC  0101               	movlb	1	; () banked
  3831  0017BE  C160  F155         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3832  0017C2  ECF0  F004         	call	_recv_msg	;wreg free
  3833  0017C6  0012               	return	
  3834  0017C8                     __end_of_ToMainHigh_recvmsg:
  3835                           	opt stack 0
  3836                           tblptru	equ	0xFF8
  3837                           tblptrh	equ	0xFF7
  3838                           tblptrl	equ	0xFF6
  3839                           tablat	equ	0xFF5
  3840                           prodh	equ	0xFF4
  3841                           prodl	equ	0xFF3
  3842                           intcon	equ	0xFF2
  3843                           postinc0	equ	0xFEE
  3844                           wreg	equ	0xFE8
  3845                           indf1	equ	0xFE7
  3846                           postdec1	equ	0xFE5
  3847                           fsr1h	equ	0xFE2
  3848                           fsr1l	equ	0xFE1
  3849                           indf2	equ	0xFDF
  3850                           fsr2h	equ	0xFDA
  3851                           fsr2l	equ	0xFD9
  3852                           status	equ	0xFD8
  3853                           
  3854 ;; *************** function _recv_msg *****************
  3855 ;; Defined at:
  3856 ;;		line 64 in file "../src/messages.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  qptr            2   24[BANK1 ] PTR struct __msg_queue
  3859 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3860 ;;  maxlength       1   26[BANK1 ] unsigned char 
  3861 ;;  msgtype         2   27[BANK1 ] PTR unsigned char 
  3862 ;;		 -> main@msgtype(1), 
  3863 ;;  data            2   29[BANK1 ] PTR void 
  3864 ;;		 -> main@msgbuffer(11), 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  qmsg            2   36[BANK1 ] PTR struct __msg
  3867 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3868 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3869 ;;  tlength         2   34[BANK1 ] unsigned int 
  3870 ;;  slot            1   33[BANK1 ] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      char 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3880 ;;      Params:         0       0       7       0       0
  3881 ;;      Locals:         0       0       5       0       0
  3882 ;;      Temps:          0       0       2       0       0
  3883 ;;      Totals:         0       0      14       0       0
  3884 ;;Total ram usage:       14 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:   12
  3887 ;; This function calls:
  3888 ;;		_memcpy
  3889 ;; This function is called by:
  3890 ;;		_ToMainLow_recvmsg
  3891 ;;		_ToMainHigh_recvmsg
  3892 ;;		_FromMainLow_recvmsg
  3893 ;;		_FromMainHigh_recvmsg
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text23
  3898  0009E0                     __ptext23:
  3899                           	opt stack 0
  3900  0009E0                     _recv_msg:
  3901                           	opt stack 17
  3902                           
  3903                           ;messages.c: 65: unsigned char slot;
  3904                           ;messages.c: 69: msg *qmsg;
  3905                           ;messages.c: 70: size_t tlength;
  3906                           ;messages.c: 73: slot = qptr->cur_read_ind;
  3907                           
  3908                           ;incstack = 0
  3909  0009E0  0101               	movlb	1	; () banked
  3910  0009E2  EE20 F035          	lfsr	2,53
  3911  0009E6  0101               	movlb	1	; () banked
  3912  0009E8  5150               	movf	recv_msg@qptr& (0+255),w,b
  3913  0009EA  26D9               	addwf	fsr2l,f,c
  3914  0009EC  0101               	movlb	1	; () banked
  3915  0009EE  5151               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3916  0009F0  22DA               	addwfc	fsr2h,f,c
  3917  0009F2  50DF               	movf	indf2,w,c
  3918  0009F4  0101               	movlb	1	; () banked
  3919  0009F6  0101               	movlb	1	; () banked
  3920  0009F8  6F59               	movwf	recv_msg@slot& (0+255),b
  3921                           
  3922                           ; BSR set to: 1
  3923                           ;messages.c: 74: qmsg = &(qptr->queue[slot]);
  3924  0009FA  0101               	movlb	1	; () banked
  3925  0009FC  0101               	movlb	1	; () banked
  3926  0009FE  5159               	movf	recv_msg@slot& (0+255),w,b
  3927  000A00  0D0D               	mullw	13
  3928  000A02  50F3               	movf	prodl,w,c
  3929  000A04  0101               	movlb	1	; () banked
  3930  000A06  0101               	movlb	1	; () banked
  3931  000A08  2550               	addwf	recv_msg@qptr& (0+255),w,b
  3932  000A0A  0101               	movlb	1	; () banked
  3933  000A0C  0101               	movlb	1	; () banked
  3934  000A0E  6F5C               	movwf	recv_msg@qmsg& (0+255),b
  3935  000A10  50F4               	movf	prodh,w,c
  3936  000A12  0101               	movlb	1	; () banked
  3937  000A14  0101               	movlb	1	; () banked
  3938  000A16  2151               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3939  000A18  0101               	movlb	1	; () banked
  3940  000A1A  6F5D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;messages.c: 75: if (qmsg->full == 1) {
  3944  000A1C  0E01               	movlw	1
  3945  000A1E  C15C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3946  000A22  C15D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3947  000A26  62DF               	cpfseq	indf2,c
  3948  000A28  D074               	goto	l3624
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;messages.c: 77: if (qmsg->length > maxlength) {
  3952  000A2A  0101               	movlb	1	; () banked
  3953  000A2C  EE20 F001          	lfsr	2,1
  3954  000A30  0101               	movlb	1	; () banked
  3955  000A32  515C               	movf	recv_msg@qmsg& (0+255),w,b
  3956  000A34  26D9               	addwf	fsr2l,f,c
  3957  000A36  0101               	movlb	1	; () banked
  3958  000A38  515D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3959  000A3A  22DA               	addwfc	fsr2h,f,c
  3960  000A3C  50DF               	movf	indf2,w,c
  3961  000A3E  0101               	movlb	1	; () banked
  3962  000A40  0101               	movlb	1	; () banked
  3963  000A42  5D52               	subwf	recv_msg@maxlength& (0+255),w,b
  3964  000A44  B0D8               	btfsc	status,0,c
  3965  000A46  D002               	goto	l3608
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;messages.c: 78: return (-3);
  3969  000A48  0EFD               	movlw	253
  3970  000A4A  0012               	return	
  3971  000A4C                     l3608:
  3972                           
  3973                           ; BSR set to: 1
  3974                           ;messages.c: 79: }
  3975                           ;messages.c: 81: tlength = qmsg->length;
  3976  000A4C  0101               	movlb	1	; () banked
  3977  000A4E  EE20 F001          	lfsr	2,1
  3978  000A52  0101               	movlb	1	; () banked
  3979  000A54  515C               	movf	recv_msg@qmsg& (0+255),w,b
  3980  000A56  26D9               	addwf	fsr2l,f,c
  3981  000A58  0101               	movlb	1	; () banked
  3982  000A5A  515D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3983  000A5C  22DA               	addwfc	fsr2h,f,c
  3984  000A5E  50DF               	movf	indf2,w,c
  3985  000A60  0101               	movlb	1	; () banked
  3986  000A62  6F57               	movwf	??_recv_msg& (0+255),b
  3987  000A64  0101               	movlb	1	; () banked
  3988  000A66  5157               	movf	??_recv_msg& (0+255),w,b
  3989  000A68  0101               	movlb	1	; () banked
  3990  000A6A  0101               	movlb	1	; () banked
  3991  000A6C  6F5A               	movwf	recv_msg@tlength& (0+255),b
  3992  000A6E  0101               	movlb	1	; () banked
  3993  000A70  6B5B               	clrf	(recv_msg@tlength+1)& (0+255),b
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;messages.c: 82: memcpy(data, qmsg->data, tlength);
  3997  000A72  0101               	movlb	1	; () banked
  3998  000A74  0101               	movlb	1	; () banked
  3999  000A76  C156  F147         	movff	recv_msg@data+1,memcpy@d1+1
  4000  000A7A  0101               	movlb	1	; () banked
  4001  000A7C  0101               	movlb	1	; () banked
  4002  000A7E  C155  F146         	movff	recv_msg@data,memcpy@d1
  4003  000A82  0E03               	movlw	3
  4004  000A84  0101               	movlb	1	; () banked
  4005  000A86  0101               	movlb	1	; () banked
  4006  000A88  255C               	addwf	recv_msg@qmsg& (0+255),w,b
  4007  000A8A  0101               	movlb	1	; () banked
  4008  000A8C  6F57               	movwf	??_recv_msg& (0+255),b
  4009  000A8E  0E00               	movlw	0
  4010  000A90  0101               	movlb	1	; () banked
  4011  000A92  0101               	movlb	1	; () banked
  4012  000A94  215D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4013  000A96  0101               	movlb	1	; () banked
  4014  000A98  6F58               	movwf	(??_recv_msg+1)& (0+255),b
  4015  000A9A  C157  F148         	movff	??_recv_msg,memcpy@s1
  4016  000A9E  C158  F149         	movff	??_recv_msg+1,memcpy@s1+1
  4017  000AA2  C15A  F14A         	movff	recv_msg@tlength,memcpy@n
  4018  000AA6  C15B  F14B         	movff	recv_msg@tlength+1,memcpy@n+1
  4019  000AAA  EC39  F00A         	call	_memcpy	;wreg free
  4020                           
  4021                           ;messages.c: 88: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4022  000AAE  0101               	movlb	1	; () banked
  4023  000AB0  EE20 F035          	lfsr	2,53
  4024  000AB4  0101               	movlb	1	; () banked
  4025  000AB6  5150               	movf	recv_msg@qptr& (0+255),w,b
  4026  000AB8  26D9               	addwf	fsr2l,f,c
  4027  000ABA  0101               	movlb	1	; () banked
  4028  000ABC  5151               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4029  000ABE  22DA               	addwfc	fsr2h,f,c
  4030  000AC0  0101               	movlb	1	; () banked
  4031  000AC2  EE10 F035          	lfsr	1,53
  4032  000AC6  0101               	movlb	1	; () banked
  4033  000AC8  5150               	movf	recv_msg@qptr& (0+255),w,b
  4034  000ACA  26E1               	addwf	fsr1l,f,c
  4035  000ACC  0101               	movlb	1	; () banked
  4036  000ACE  5151               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4037  000AD0  22E2               	addwfc	fsr1h,f,c
  4038  000AD2  50E7               	movf	indf1,w,c
  4039  000AD4  0101               	movlb	1	; () banked
  4040  000AD6  6F57               	movwf	??_recv_msg& (0+255),b
  4041  000AD8  0101               	movlb	1	; () banked
  4042  000ADA  2957               	incf	??_recv_msg& (0+255),w,b
  4043  000ADC  0B03               	andlw	3
  4044  000ADE  6EDF               	movwf	indf2,c
  4045                           
  4046                           ; BSR set to: 1
  4047                           ;messages.c: 90: (*msgtype) = qmsg->msgtype;
  4048  000AE0  0101               	movlb	1	; () banked
  4049  000AE2  EE20 F002          	lfsr	2,2
  4050  000AE6  0101               	movlb	1	; () banked
  4051  000AE8  515C               	movf	recv_msg@qmsg& (0+255),w,b
  4052  000AEA  26D9               	addwf	fsr2l,f,c
  4053  000AEC  0101               	movlb	1	; () banked
  4054  000AEE  515D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4055  000AF0  22DA               	addwfc	fsr2h,f,c
  4056  000AF2  C153  FFE1         	movff	recv_msg@msgtype,fsr1l
  4057  000AF6  C154  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4058  000AFA  CFDF FFE7          	movff	indf2,indf1
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;messages.c: 92: qmsg->full = 0;
  4062  000AFE  C15C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4063  000B02  C15D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4064  000B06  0E00               	movlw	0
  4065  000B08  6EDF               	movwf	indf2,c
  4066                           
  4067                           ; BSR set to: 1
  4068                           ;messages.c: 93: return (tlength);
  4069  000B0A  0101               	movlb	1	; () banked
  4070  000B0C  0101               	movlb	1	; () banked
  4071  000B0E  515A               	movf	recv_msg@tlength& (0+255),w,b
  4072  000B10  0012               	return	
  4073  000B12                     l3624:
  4074                           
  4075                           ; BSR set to: 1
  4076                           ;messages.c: 95: return (-4);
  4077  000B12  0EFC               	movlw	252
  4078  000B14  0012               	return	
  4079  000B16                     __end_of_recv_msg:
  4080                           	opt stack 0
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           intcon	equ	0xFF2
  4088                           postinc0	equ	0xFEE
  4089                           wreg	equ	0xFE8
  4090                           indf1	equ	0xFE7
  4091                           postdec1	equ	0xFE5
  4092                           fsr1h	equ	0xFE2
  4093                           fsr1l	equ	0xFE1
  4094                           indf2	equ	0xFDF
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _memcpy *****************
  4100 ;; Defined at:
  4101 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  d1              2   14[BANK1 ] PTR void 
  4104 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4105 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4106 ;;		 -> main@msgbuffer(11), 
  4107 ;;  s1              2   16[BANK1 ] PTR const void 
  4108 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4109 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4110 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4111 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4112 ;;  n               2   18[BANK1 ] unsigned int 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  s               2   22[BANK1 ] PTR const unsigned char 
  4115 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4116 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4117 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4118 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4119 ;;  d               2   20[BANK1 ] PTR unsigned char 
  4120 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4121 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4122 ;;		 -> main@msgbuffer(11), 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2   14[BANK1 ] PTR void 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4132 ;;      Params:         0       0       6       0       0
  4133 ;;      Locals:         0       0       4       0       0
  4134 ;;      Temps:          0       0       0       0       0
  4135 ;;      Totals:         0       0      10       0       0
  4136 ;;Total ram usage:       10 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:   11
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_recv_msg
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text24
  4147  001472                     __ptext24:
  4148                           	opt stack 0
  4149  001472                     _memcpy:
  4150                           	opt stack 17
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;incstack = 0
  4154  001472  0101               	movlb	1	; () banked
  4155  001474  0101               	movlb	1	; () banked
  4156  001476  C149  F14F         	movff	memcpy@s1+1,memcpy@s+1
  4157  00147A  0101               	movlb	1	; () banked
  4158  00147C  0101               	movlb	1	; () banked
  4159  00147E  C148  F14E         	movff	memcpy@s1,memcpy@s
  4160  001482  0101               	movlb	1	; () banked
  4161  001484  0101               	movlb	1	; () banked
  4162  001486  C147  F14D         	movff	memcpy@d1+1,memcpy@d+1
  4163  00148A  0101               	movlb	1	; () banked
  4164  00148C  0101               	movlb	1	; () banked
  4165  00148E  C146  F14C         	movff	memcpy@d1,memcpy@d
  4166  001492  D012               	goto	l3594
  4167  001494                     l3588:
  4168                           
  4169                           ; BSR set to: 1
  4170  001494  C14E  FFD9         	movff	memcpy@s,fsr2l
  4171  001498  C14F  FFDA         	movff	memcpy@s+1,fsr2h
  4172  00149C  C14C  FFE1         	movff	memcpy@d,fsr1l
  4173  0014A0  C14D  FFE2         	movff	memcpy@d+1,fsr1h
  4174  0014A4  CFDF FFE7          	movff	indf2,indf1
  4175                           
  4176                           ; BSR set to: 1
  4177  0014A8  0101               	movlb	1	; () banked
  4178  0014AA  0101               	movlb	1	; () banked
  4179  0014AC  4B4E               	infsnz	memcpy@s& (0+255),f,b
  4180  0014AE  2B4F               	incf	(memcpy@s+1)& (0+255),f,b
  4181                           
  4182                           ; BSR set to: 1
  4183  0014B0  0101               	movlb	1	; () banked
  4184  0014B2  0101               	movlb	1	; () banked
  4185  0014B4  4B4C               	infsnz	memcpy@d& (0+255),f,b
  4186  0014B6  2B4D               	incf	(memcpy@d+1)& (0+255),f,b
  4187  0014B8                     l3594:
  4188                           
  4189                           ; BSR set to: 1
  4190  0014B8  0101               	movlb	1	; () banked
  4191  0014BA  0101               	movlb	1	; () banked
  4192  0014BC  074A               	decf	memcpy@n& (0+255),f,b
  4193  0014BE  A0D8               	btfss	status,0,c
  4194  0014C0  074B               	decf	(memcpy@n+1)& (0+255),f,b
  4195  0014C2  0101               	movlb	1	; () banked
  4196  0014C4  294A               	incf	memcpy@n& (0+255),w,b
  4197  0014C6  B4D8               	btfsc	status,2,c
  4198  0014C8  294B               	incf	(memcpy@n+1)& (0+255),w,b
  4199  0014CA  B4D8               	btfsc	status,2,c
  4200                           
  4201                           ; BSR set to: 1
  4202                           
  4203                           ; BSR set to: 1
  4204                           ;	Return value of _memcpy is never used
  4205  0014CC  0012               	return	
  4206  0014CE  D7E2               	goto	l3588
  4207  0014D0                     __end_of_memcpy:
  4208                           	opt stack 0
  4209                           tblptru	equ	0xFF8
  4210                           tblptrh	equ	0xFF7
  4211                           tblptrl	equ	0xFF6
  4212                           tablat	equ	0xFF5
  4213                           prodh	equ	0xFF4
  4214                           prodl	equ	0xFF3
  4215                           intcon	equ	0xFF2
  4216                           postinc0	equ	0xFEE
  4217                           wreg	equ	0xFE8
  4218                           indf1	equ	0xFE7
  4219                           postdec1	equ	0xFE5
  4220                           fsr1h	equ	0xFE2
  4221                           fsr1l	equ	0xFE1
  4222                           indf2	equ	0xFDF
  4223                           fsr2h	equ	0xFDA
  4224                           fsr2l	equ	0xFD9
  4225                           status	equ	0xFD8
  4226                           
  4227 ;; *************** function _OpenTimer0 *****************
  4228 ;; Defined at:
  4229 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  config          1    wreg     unsigned char 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  config          1   14[BANK1 ] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;		None               void
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4243 ;;      Params:         0       0       0       0       0
  4244 ;;      Locals:         0       0       1       0       0
  4245 ;;      Temps:          0       0       0       0       0
  4246 ;;      Totals:         0       0       1       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:   11
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text25
  4258  001A74                     __ptext25:
  4259                           	opt stack 0
  4260  001A74                     _OpenTimer0:
  4261                           	opt stack 19
  4262                           
  4263                           ; BSR set to: 1
  4264                           ;incstack = 0
  4265                           ;OpenTimer0@config stored from wreg
  4266  001A74  CFE8 F146          	movff	wreg,OpenTimer0@config
  4267  001A78  0101               	movlb	1	; () banked
  4268  001A7A  0101               	movlb	1	; () banked
  4269  001A7C  5146               	movf	OpenTimer0@config& (0+255),w,b
  4270  001A7E  0B7F               	andlw	127
  4271  001A80  6ED5               	movwf	4053,c	;volatile
  4272                           
  4273                           ; BSR set to: 1
  4274  001A82  0E00               	movlw	0
  4275  001A84  6ED7               	movwf	4055,c	;volatile
  4276                           
  4277                           ; BSR set to: 1
  4278  001A86  0E00               	movlw	0
  4279  001A88  6ED6               	movwf	4054,c	;volatile
  4280                           
  4281                           ; BSR set to: 1
  4282  001A8A  94F2               	bcf	intcon,2,c	;volatile
  4283                           
  4284                           ; BSR set to: 1
  4285  001A8C  0101               	movlb	1	; () banked
  4286  001A8E  0101               	movlb	1	; () banked
  4287  001A90  AF46               	btfss	OpenTimer0@config& (0+255),7,b
  4288  001A92  D002               	goto	l580
  4289                           
  4290                           ; BSR set to: 1
  4291  001A94  8AF2               	bsf	intcon,5,c	;volatile
  4292  001A96  D001               	goto	l581
  4293  001A98                     l580:
  4294                           
  4295                           ; BSR set to: 1
  4296  001A98  9AF2               	bcf	intcon,5,c	;volatile
  4297  001A9A                     l581:
  4298                           
  4299                           ; BSR set to: 1
  4300  001A9A  8ED5               	bsf	4053,7,c	;volatile
  4301                           
  4302                           ; BSR set to: 1
  4303  001A9C  0012               	return	
  4304  001A9E                     __end_of_OpenTimer0:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           prodh	equ	0xFF4
  4311                           prodl	equ	0xFF3
  4312                           intcon	equ	0xFF2
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           indf1	equ	0xFE7
  4316                           postdec1	equ	0xFE5
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           indf2	equ	0xFDF
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function _InterruptHandlerLow *****************
  4325 ;; Defined at:
  4326 ;;		line 124 in file "../src/interrupts.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;		None               void
  4333 ;; Registers used:
  4334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4340 ;;      Params:         0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0
  4342 ;;      Temps:         17       0       0       0       0
  4343 ;;      Totals:        17       0       0       0       0
  4344 ;;Total ram usage:       17 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:   10
  4347 ;; This function calls:
  4348 ;;		_adc_int_handler
  4349 ;; This function is called by:
  4350 ;;		Interrupt level 1
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	intcodelo
  4355  000018                     __pintcodelo:
  4356                           	opt stack 0
  4357  000018                     _InterruptHandlerLow:
  4358                           	opt stack 16
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;incstack = 0
  4362  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4363  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4364  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4365  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4366  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4367  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4368  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4369  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4370  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4371  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4372  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4373  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4374  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4375  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4376  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4377  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  4378  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  4379                           
  4380                           ;interrupts.c: 126: if (PIR1bits.ADIF) {
  4381  00005C  AC9E               	btfss	3998,6,c	;volatile
  4382  00005E  D003               	goto	i1l44
  4383                           
  4384                           ;interrupts.c: 127: PIR1bits.ADIF = 0;
  4385  000060  9C9E               	bcf	3998,6,c	;volatile
  4386                           
  4387                           ;interrupts.c: 128: adc_int_handler();
  4388  000062  ECE7  F00A         	call	_adc_int_handler	;wreg free
  4389  000066                     i1l44:
  4390  000066  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4391  00006A  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4392  00006E  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4393  000072  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4394  000076  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4395  00007A  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4396  00007E  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4397  000082  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4398  000086  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4399  00008A  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4400  00008E  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4401  000092  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4402  000096  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4403  00009A  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4404  00009E  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4405  0000A2  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4406  0000A6  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  4407  0000AA  0010               	retfie	
  4408  0000AC                     __end_of_InterruptHandlerLow:
  4409                           	opt stack 0
  4410                           pclatu	equ	0xFFB
  4411                           pclath	equ	0xFFA
  4412                           tblptru	equ	0xFF8
  4413                           tblptrh	equ	0xFF7
  4414                           tblptrl	equ	0xFF6
  4415                           tablat	equ	0xFF5
  4416                           prodh	equ	0xFF4
  4417                           prodl	equ	0xFF3
  4418                           intcon	equ	0xFF2
  4419                           postinc0	equ	0xFEE
  4420                           fsr0h	equ	0xFEA
  4421                           fsr0l	equ	0xFE9
  4422                           wreg	equ	0xFE8
  4423                           indf1	equ	0xFE7
  4424                           postdec1	equ	0xFE5
  4425                           fsr1h	equ	0xFE2
  4426                           fsr1l	equ	0xFE1
  4427                           bsr	equ	0xFE0
  4428                           indf2	equ	0xFDF
  4429                           fsr2h	equ	0xFDA
  4430                           fsr2l	equ	0xFD9
  4431                           status	equ	0xFD8
  4432                           
  4433 ;; *************** function _adc_int_handler *****************
  4434 ;; Defined at:
  4435 ;;		line 46 in file "../src/my_adc.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  data            2   27[COMRAM] unsigned int 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;		None               void
  4442 ;; Registers used:
  4443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4449 ;;      Params:         0       0       0       0       0
  4450 ;;      Locals:         2       0       0       0       0
  4451 ;;      Temps:          1       0       0       0       0
  4452 ;;      Totals:         3       0       0       0       0
  4453 ;;Total ram usage:        3 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    9
  4456 ;; This function calls:
  4457 ;;		_ReadADC
  4458 ;;		_ToMainHigh_sendmsg
  4459 ;;		_addBuffer
  4460 ;;		_debugNum
  4461 ;; This function is called by:
  4462 ;;		_InterruptHandlerLow
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text27
  4467  0015CE                     __ptext27:
  4468                           	opt stack 0
  4469  0015CE                     _adc_int_handler:
  4470                           	opt stack 16
  4471                           
  4472                           ;my_adc.c: 47: unsigned int data;
  4473                           ;my_adc.c: 49: data = ReadADC();
  4474                           
  4475                           ;incstack = 0
  4476  0015CE  EC05  F00E         	call	_ReadADC	;wreg free
  4477  0015D2  C001  F01C         	movff	?_ReadADC,adc_int_handler@data
  4478  0015D6  C002  F01D         	movff	?_ReadADC+1,adc_int_handler@data+1
  4479                           
  4480                           ;my_adc.c: 50: data >>= 2;
  4481  0015DA  90D8               	bcf	status,0,c
  4482  0015DC  321D               	rrcf	adc_int_handler@data+1,f,c
  4483  0015DE  321C               	rrcf	adc_int_handler@data,f,c
  4484  0015E0  90D8               	bcf	status,0,c
  4485  0015E2  321D               	rrcf	adc_int_handler@data+1,f,c
  4486  0015E4  321C               	rrcf	adc_int_handler@data,f,c
  4487                           
  4488                           ;my_adc.c: 53: debugNum(2);
  4489  0015E6  0E00               	movlw	0
  4490  0015E8  6E03               	movwf	debugNum@num+1,c
  4491  0015EA  0E02               	movlw	2
  4492  0015EC  6E02               	movwf	debugNum@num,c
  4493  0015EE  EC95  F00A         	call	_debugNum	;wreg free
  4494                           
  4495                           ;my_adc.c: 54: addBuffer((char) data);
  4496  0015F2  501C               	movf	adc_int_handler@data,w,c
  4497  0015F4  EC8B  F00D         	call	_addBuffer
  4498                           
  4499                           ;my_adc.c: 55: if(count >= 7){
  4500  0015F8  0E06               	movlw	6
  4501  0015FA  6446               	cpfsgt	_count,c
  4502  0015FC  0012               	return	
  4503                           
  4504                           ;my_adc.c: 56: ToMainHigh_sendmsg(7,50, ADCBuffer);
  4505  0015FE  6E1B               	movwf	??_adc_int_handler& (0+255),c
  4506  001600  0E32               	movlw	50
  4507  001602  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  4508  001604  501B               	movf	??_adc_int_handler& (0+255),w,c
  4509  001606  0E00               	movlw	high _ADCBuffer
  4510  001608  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  4511  00160A  0E48               	movlw	low _ADCBuffer
  4512  00160C  6E18               	movwf	ToMainHigh_sendmsg@data,c
  4513  00160E  0E07               	movlw	7
  4514  001610  EC78  F00D         	call	_ToMainHigh_sendmsg
  4515                           
  4516                           ;my_adc.c: 57: count = 0;
  4517  001614  6E1B               	movwf	??_adc_int_handler& (0+255),c
  4518  001616  0E00               	movlw	0
  4519  001618  6E46               	movwf	_count,c
  4520  00161A  501B               	movf	??_adc_int_handler& (0+255),w,c
  4521  00161C  0012               	return	
  4522  00161E                     __end_of_adc_int_handler:
  4523                           	opt stack 0
  4524                           pclatu	equ	0xFFB
  4525                           pclath	equ	0xFFA
  4526                           tblptru	equ	0xFF8
  4527                           tblptrh	equ	0xFF7
  4528                           tblptrl	equ	0xFF6
  4529                           tablat	equ	0xFF5
  4530                           prodh	equ	0xFF4
  4531                           prodl	equ	0xFF3
  4532                           intcon	equ	0xFF2
  4533                           postinc0	equ	0xFEE
  4534                           fsr0h	equ	0xFEA
  4535                           fsr0l	equ	0xFE9
  4536                           wreg	equ	0xFE8
  4537                           indf1	equ	0xFE7
  4538                           postdec1	equ	0xFE5
  4539                           fsr1h	equ	0xFE2
  4540                           fsr1l	equ	0xFE1
  4541                           bsr	equ	0xFE0
  4542                           indf2	equ	0xFDF
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function _debugNum *****************
  4548 ;; Defined at:
  4549 ;;		line 69 in file "../src/debug.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  num             2    1[COMRAM] int 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;		None               void
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4563 ;;      Params:         2       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0
  4566 ;;      Totals:         2       0       0       0       0
  4567 ;;Total ram usage:        2 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    7
  4570 ;; This function calls:
  4571 ;;		_resetDBG
  4572 ;;		_setDBG
  4573 ;; This function is called by:
  4574 ;;		_adc_int_handler
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text28
  4579  00152A                     __ptext28:
  4580                           	opt stack 0
  4581  00152A                     _debugNum:
  4582                           	opt stack 17
  4583                           
  4584                           ;debug.c: 70: if(num & 1){
  4585                           
  4586                           ;incstack = 0
  4587  00152A  A002               	btfss	debugNum@num,0,c
  4588  00152C  D006               	goto	i1l2278
  4589                           
  4590                           ;debug.c: 71: setDBG(DBG1);
  4591  00152E  0E00               	movlw	0
  4592  001530  EC62  F00C         	call	_setDBG
  4593                           
  4594                           ;debug.c: 72: resetDBG(DBG1);
  4595  001534  0E00               	movlw	0
  4596  001536  EC80  F00C         	call	_resetDBG
  4597  00153A                     i1l2278:
  4598                           
  4599                           ;debug.c: 73: }
  4600                           ;debug.c: 74: if(num & 2){
  4601  00153A  A202               	btfss	debugNum@num,1,c
  4602  00153C  D006               	goto	i1l2282
  4603                           
  4604                           ;debug.c: 75: setDBG(DBG2);
  4605  00153E  0E01               	movlw	1
  4606  001540  EC62  F00C         	call	_setDBG
  4607                           
  4608                           ;debug.c: 76: resetDBG(DBG2);
  4609  001544  0E01               	movlw	1
  4610  001546  EC80  F00C         	call	_resetDBG
  4611  00154A                     i1l2282:
  4612                           
  4613                           ;debug.c: 77: }
  4614                           ;debug.c: 78: if(num & 4){
  4615  00154A  A402               	btfss	debugNum@num,2,c
  4616  00154C  D006               	goto	i1l2286
  4617                           
  4618                           ;debug.c: 79: setDBG(DBG3);
  4619  00154E  0E02               	movlw	2
  4620  001550  EC62  F00C         	call	_setDBG
  4621                           
  4622                           ;debug.c: 80: resetDBG(DBG3);
  4623  001554  0E02               	movlw	2
  4624  001556  EC80  F00C         	call	_resetDBG
  4625  00155A                     i1l2286:
  4626                           
  4627                           ;debug.c: 81: }
  4628                           ;debug.c: 82: if(num & 8){
  4629  00155A  A602               	btfss	debugNum@num,3,c
  4630  00155C  D006               	goto	i1l2290
  4631                           
  4632                           ;debug.c: 83: setDBG(DBG4);
  4633  00155E  0E03               	movlw	3
  4634  001560  EC62  F00C         	call	_setDBG
  4635                           
  4636                           ;debug.c: 84: resetDBG(DBG4);
  4637  001564  0E03               	movlw	3
  4638  001566  EC80  F00C         	call	_resetDBG
  4639  00156A                     i1l2290:
  4640                           
  4641                           ;debug.c: 85: }
  4642                           ;debug.c: 86: if(num & 16){
  4643  00156A  A802               	btfss	debugNum@num,4,c
  4644  00156C  0012               	return	
  4645                           
  4646                           ;debug.c: 87: setDBG(DBG5);
  4647  00156E  0E04               	movlw	4
  4648  001570  EC62  F00C         	call	_setDBG
  4649                           
  4650                           ;debug.c: 88: resetDBG(DBG5);
  4651  001574  0E04               	movlw	4
  4652  001576  EC80  F00C         	call	_resetDBG
  4653  00157A  0012               	return	
  4654  00157C                     __end_of_debugNum:
  4655                           	opt stack 0
  4656                           pclatu	equ	0xFFB
  4657                           pclath	equ	0xFFA
  4658                           tblptru	equ	0xFF8
  4659                           tblptrh	equ	0xFF7
  4660                           tblptrl	equ	0xFF6
  4661                           tablat	equ	0xFF5
  4662                           prodh	equ	0xFF4
  4663                           prodl	equ	0xFF3
  4664                           intcon	equ	0xFF2
  4665                           postinc0	equ	0xFEE
  4666                           fsr0h	equ	0xFEA
  4667                           fsr0l	equ	0xFE9
  4668                           wreg	equ	0xFE8
  4669                           indf1	equ	0xFE7
  4670                           postdec1	equ	0xFE5
  4671                           fsr1h	equ	0xFE2
  4672                           fsr1l	equ	0xFE1
  4673                           bsr	equ	0xFE0
  4674                           indf2	equ	0xFDF
  4675                           fsr2h	equ	0xFDA
  4676                           fsr2l	equ	0xFD9
  4677                           status	equ	0xFD8
  4678                           
  4679 ;; *************** function _setDBG *****************
  4680 ;; Defined at:
  4681 ;;		line 4 in file "../src/debug.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  b               1    wreg     unsigned char 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  b               1    0[COMRAM] unsigned char 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;		None               void
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4695 ;;      Params:         0       0       0       0       0
  4696 ;;      Locals:         1       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0
  4698 ;;      Totals:         1       0       0       0       0
  4699 ;;Total ram usage:        1 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    6
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_debugNum
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text29
  4710  0018C4                     __ptext29:
  4711                           	opt stack 0
  4712  0018C4                     _setDBG:
  4713                           	opt stack 17
  4714                           
  4715                           ;incstack = 0
  4716                           ;setDBG@b stored from wreg
  4717  0018C4  CFE8 F001          	movff	wreg,setDBG@b
  4718                           
  4719                           ;debug.c: 5: switch(b) {
  4720  0018C8  D00A               	goto	i1l1838
  4721  0018CA                     i1l367:
  4722                           
  4723                           ;debug.c: 7: LATBbits.LATB0 = 1;
  4724  0018CA  808A               	bsf	3978,0,c	;volatile
  4725                           
  4726                           ;debug.c: 8: break;
  4727  0018CC  0012               	return	
  4728  0018CE                     i1l369:
  4729                           
  4730                           ;debug.c: 10: LATBbits.LATB1 = 1;
  4731  0018CE  828A               	bsf	3978,1,c	;volatile
  4732                           
  4733                           ;debug.c: 11: break;
  4734  0018D0  0012               	return	
  4735  0018D2                     i1l370:
  4736                           
  4737                           ;debug.c: 13: LATBbits.LATB2 = 1;
  4738  0018D2  848A               	bsf	3978,2,c	;volatile
  4739                           
  4740                           ;debug.c: 14: break;
  4741  0018D4  0012               	return	
  4742  0018D6                     i1l371:
  4743                           
  4744                           ;debug.c: 16: LATBbits.LATB3 = 1;
  4745  0018D6  868A               	bsf	3978,3,c	;volatile
  4746                           
  4747                           ;debug.c: 17: break;
  4748  0018D8  0012               	return	
  4749  0018DA                     i1l372:
  4750                           
  4751                           ;debug.c: 19: LATBbits.LATB4 = 1;
  4752  0018DA  888A               	bsf	3978,4,c	;volatile
  4753                           
  4754                           ;debug.c: 20: break;
  4755  0018DC  0012               	return	
  4756  0018DE                     i1l1838:
  4757  0018DE  5001               	movf	setDBG@b,w,c
  4758                           
  4759                           ; Switch size 1, requested type "space"
  4760                           ; Number of cases is 5, Range of values is 0 to 4
  4761                           ; switch strategies available:
  4762                           ; Name         Instructions Cycles
  4763                           ; simple_byte           16     9 (average)
  4764                           ;	Chosen strategy is simple_byte
  4765  0018E0  0A00               	xorlw	0	; case 0
  4766  0018E2  B4D8               	btfsc	status,2,c
  4767  0018E4  D7F2               	goto	i1l367
  4768  0018E6  0A01               	xorlw	1	; case 1
  4769  0018E8  B4D8               	btfsc	status,2,c
  4770  0018EA  D7F1               	goto	i1l369
  4771  0018EC  0A03               	xorlw	3	; case 2
  4772  0018EE  B4D8               	btfsc	status,2,c
  4773  0018F0  D7F0               	goto	i1l370
  4774  0018F2  0A01               	xorlw	1	; case 3
  4775  0018F4  B4D8               	btfsc	status,2,c
  4776  0018F6  D7EF               	goto	i1l371
  4777  0018F8  0A07               	xorlw	7	; case 4
  4778  0018FA  A4D8               	btfss	status,2,c
  4779  0018FC  0012               	return	
  4780  0018FE  D7ED               	goto	i1l372
  4781  001900                     __end_of_setDBG:
  4782                           	opt stack 0
  4783                           pclatu	equ	0xFFB
  4784                           pclath	equ	0xFFA
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           prodh	equ	0xFF4
  4790                           prodl	equ	0xFF3
  4791                           intcon	equ	0xFF2
  4792                           postinc0	equ	0xFEE
  4793                           fsr0h	equ	0xFEA
  4794                           fsr0l	equ	0xFE9
  4795                           wreg	equ	0xFE8
  4796                           indf1	equ	0xFE7
  4797                           postdec1	equ	0xFE5
  4798                           fsr1h	equ	0xFE2
  4799                           fsr1l	equ	0xFE1
  4800                           bsr	equ	0xFE0
  4801                           indf2	equ	0xFDF
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _resetDBG *****************
  4807 ;; Defined at:
  4808 ;;		line 26 in file "../src/debug.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  b               1    wreg     unsigned char 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  b               1    0[COMRAM] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;		None               void
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4822 ;;      Params:         0       0       0       0       0
  4823 ;;      Locals:         1       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0
  4825 ;;      Totals:         1       0       0       0       0
  4826 ;;Total ram usage:        1 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    6
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_debugNum
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text30
  4837  001900                     __ptext30:
  4838                           	opt stack 0
  4839  001900                     _resetDBG:
  4840                           	opt stack 17
  4841                           
  4842                           ;incstack = 0
  4843                           ;resetDBG@b stored from wreg
  4844  001900  CFE8 F001          	movff	wreg,resetDBG@b
  4845                           
  4846                           ;debug.c: 27: switch(b) {
  4847  001904  D00A               	goto	i1l1844
  4848  001906                     i1l378:
  4849                           
  4850                           ;debug.c: 29: LATBbits.LATB0 = 0;
  4851  001906  908A               	bcf	3978,0,c	;volatile
  4852                           
  4853                           ;debug.c: 30: break;
  4854  001908  0012               	return	
  4855  00190A                     i1l380:
  4856                           
  4857                           ;debug.c: 32: LATBbits.LATB1 = 0;
  4858  00190A  928A               	bcf	3978,1,c	;volatile
  4859                           
  4860                           ;debug.c: 33: break;
  4861  00190C  0012               	return	
  4862  00190E                     i1l381:
  4863                           
  4864                           ;debug.c: 35: LATBbits.LATB2 = 0;
  4865  00190E  948A               	bcf	3978,2,c	;volatile
  4866                           
  4867                           ;debug.c: 36: break;
  4868  001910  0012               	return	
  4869  001912                     i1l382:
  4870                           
  4871                           ;debug.c: 38: LATBbits.LATB3 = 0;
  4872  001912  968A               	bcf	3978,3,c	;volatile
  4873                           
  4874                           ;debug.c: 39: break;
  4875  001914  0012               	return	
  4876  001916                     i1l383:
  4877                           
  4878                           ;debug.c: 41: LATBbits.LATB4 = 0;
  4879  001916  988A               	bcf	3978,4,c	;volatile
  4880                           
  4881                           ;debug.c: 42: break;
  4882  001918  0012               	return	
  4883  00191A                     i1l1844:
  4884  00191A  5001               	movf	resetDBG@b,w,c
  4885                           
  4886                           ; Switch size 1, requested type "space"
  4887                           ; Number of cases is 5, Range of values is 0 to 4
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte           16     9 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892  00191C  0A00               	xorlw	0	; case 0
  4893  00191E  B4D8               	btfsc	status,2,c
  4894  001920  D7F2               	goto	i1l378
  4895  001922  0A01               	xorlw	1	; case 1
  4896  001924  B4D8               	btfsc	status,2,c
  4897  001926  D7F1               	goto	i1l380
  4898  001928  0A03               	xorlw	3	; case 2
  4899  00192A  B4D8               	btfsc	status,2,c
  4900  00192C  D7F0               	goto	i1l381
  4901  00192E  0A01               	xorlw	1	; case 3
  4902  001930  B4D8               	btfsc	status,2,c
  4903  001932  D7EF               	goto	i1l382
  4904  001934  0A07               	xorlw	7	; case 4
  4905  001936  A4D8               	btfss	status,2,c
  4906  001938  0012               	return	
  4907  00193A  D7ED               	goto	i1l383
  4908  00193C                     __end_of_resetDBG:
  4909                           	opt stack 0
  4910                           pclatu	equ	0xFFB
  4911                           pclath	equ	0xFFA
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           fsr0h	equ	0xFEA
  4921                           fsr0l	equ	0xFE9
  4922                           wreg	equ	0xFE8
  4923                           indf1	equ	0xFE7
  4924                           postdec1	equ	0xFE5
  4925                           fsr1h	equ	0xFE2
  4926                           fsr1l	equ	0xFE1
  4927                           bsr	equ	0xFE0
  4928                           indf2	equ	0xFDF
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function _addBuffer *****************
  4934 ;; Defined at:
  4935 ;;		line 16 in file "../src/my_adc.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  data            1    wreg     unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  data            1    0[COMRAM] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4949 ;;      Params:         0       0       0       0       0
  4950 ;;      Locals:         1       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0
  4952 ;;      Totals:         1       0       0       0       0
  4953 ;;Total ram usage:        1 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    6
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_adc_int_handler
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text31
  4964  001B16                     __ptext31:
  4965                           	opt stack 0
  4966  001B16                     _addBuffer:
  4967                           	opt stack 18
  4968                           
  4969                           ;incstack = 0
  4970                           ;addBuffer@data stored from wreg
  4971  001B16  CFE8 F001          	movff	wreg,addBuffer@data
  4972                           
  4973                           ;my_adc.c: 17: if(count < 7)
  4974  001B1A  0E07               	movlw	7
  4975  001B1C  5C46               	subwf	_count,w,c
  4976  001B1E  B0D8               	btfsc	status,0,c
  4977  001B20  0012               	return	
  4978                           
  4979                           ;my_adc.c: 18: ADCBuffer[count++] = data;
  4980  001B22  5046               	movf	_count,w,c
  4981  001B24  0D01               	mullw	1
  4982  001B26  0E48               	movlw	low _ADCBuffer
  4983  001B28  24F3               	addwf	prodl,w,c
  4984  001B2A  6ED9               	movwf	fsr2l,c
  4985  001B2C  0E00               	movlw	high _ADCBuffer
  4986  001B2E  20F4               	addwfc	prodh,w,c
  4987  001B30  6EDA               	movwf	fsr2h,c
  4988  001B32  C001  FFDF         	movff	addBuffer@data,indf2
  4989  001B36  2A46               	incf	_count,f,c
  4990  001B38  0012               	return	
  4991  001B3A                     __end_of_addBuffer:
  4992                           	opt stack 0
  4993                           pclatu	equ	0xFFB
  4994                           pclath	equ	0xFFA
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           postinc0	equ	0xFEE
  5003                           fsr0h	equ	0xFEA
  5004                           fsr0l	equ	0xFE9
  5005                           wreg	equ	0xFE8
  5006                           indf1	equ	0xFE7
  5007                           postdec1	equ	0xFE5
  5008                           fsr1h	equ	0xFE2
  5009                           fsr1l	equ	0xFE1
  5010                           bsr	equ	0xFE0
  5011                           indf2	equ	0xFDF
  5012                           fsr2h	equ	0xFDA
  5013                           fsr2l	equ	0xFD9
  5014                           status	equ	0xFD8
  5015                           
  5016 ;; *************** function _ToMainHigh_sendmsg *****************
  5017 ;; Defined at:
  5018 ;;		line 127 in file "../src/messages.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  length          1    wreg     unsigned char 
  5021 ;;  msgtype         1   22[COMRAM] unsigned char 
  5022 ;;  data            2   23[COMRAM] PTR void 
  5023 ;;		 -> ADCBuffer(5), reqADData@buf(10), i2c_int_handler@error_buf(3), 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  length          1   25[COMRAM] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      char 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5035 ;;      Params:         3       0       0       0       0
  5036 ;;      Locals:         1       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0
  5038 ;;      Totals:         4       0       0       0       0
  5039 ;;Total ram usage:        4 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    8
  5042 ;; This function calls:
  5043 ;;		_send_msg
  5044 ;; This function is called by:
  5045 ;;		_adc_int_handler
  5046 ;;		_reqADData
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text32
  5051  001AF0                     __ptext32:
  5052                           	opt stack 0
  5053  001AF0                     _ToMainHigh_sendmsg:
  5054                           	opt stack 16
  5055                           
  5056                           ;incstack = 0
  5057                           ;ToMainHigh_sendmsg@length stored from wreg
  5058  001AF0  CFE8 F01A          	movff	wreg,ToMainHigh_sendmsg@length
  5059                           
  5060                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5061                           ;	Return value of _ToMainHigh_sendmsg is never used
  5062  001AF4  0101               	movlb	1	; () banked
  5063  001AF6  0E01               	movlw	high _ToMainHigh_MQ
  5064  001AF8  6E0C               	movwf	send_msg@qptr+1,c
  5065  001AFA  0101               	movlb	1	; () banked
  5066  001AFC  0E02               	movlw	low _ToMainHigh_MQ
  5067  001AFE  6E0B               	movwf	send_msg@qptr,c
  5068  001B00  C01A  F00D         	movff	ToMainHigh_sendmsg@length,send_msg@length
  5069  001B04  C017  F00E         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  5070  001B08  C019  F010         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  5071  001B0C  C018  F00F         	movff	ToMainHigh_sendmsg@data,send_msg@data
  5072  001B10  ECB1  F007         	call	_send_msg	;wreg free
  5073  001B14  0012               	return	
  5074  001B16                     __end_of_ToMainHigh_sendmsg:
  5075                           	opt stack 0
  5076                           pclatu	equ	0xFFB
  5077                           pclath	equ	0xFFA
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           intcon	equ	0xFF2
  5085                           postinc0	equ	0xFEE
  5086                           fsr0h	equ	0xFEA
  5087                           fsr0l	equ	0xFE9
  5088                           wreg	equ	0xFE8
  5089                           indf1	equ	0xFE7
  5090                           postdec1	equ	0xFE5
  5091                           fsr1h	equ	0xFE2
  5092                           fsr1l	equ	0xFE1
  5093                           bsr	equ	0xFE0
  5094                           indf2	equ	0xFDF
  5095                           fsr2h	equ	0xFDA
  5096                           fsr2l	equ	0xFD9
  5097                           status	equ	0xFD8
  5098                           
  5099 ;; *************** function _send_msg *****************
  5100 ;; Defined at:
  5101 ;;		line 25 in file "../src/messages.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5104 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5105 ;;  length          1   12[COMRAM] unsigned char 
  5106 ;;  msgtype         1   13[COMRAM] unsigned char 
  5107 ;;  data            2   14[COMRAM] PTR void 
  5108 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  5111 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5112 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5113 ;;  tlength         2   17[COMRAM] unsigned int 
  5114 ;;  slot            1   19[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      char 
  5117 ;; Registers used:
  5118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5124 ;;      Params:         6       0       0       0       0
  5125 ;;      Locals:         5       0       0       0       0
  5126 ;;      Temps:          1       0       0       0       0
  5127 ;;      Totals:        12       0       0       0       0
  5128 ;;Total ram usage:       12 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    7
  5131 ;; This function calls:
  5132 ;;		i1_memcpy
  5133 ;; This function is called by:
  5134 ;;		_ToMainHigh_sendmsg
  5135 ;;		_ToMainLow_sendmsg
  5136 ;;		_FromMainLow_sendmsg
  5137 ;;		_FromMainHigh_sendmsg
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text33
  5142  000F62                     __ptext33:
  5143                           	opt stack 0
  5144  000F62                     _send_msg:
  5145                           	opt stack 16
  5146                           
  5147                           ;messages.c: 26: unsigned char slot;
  5148                           ;messages.c: 28: msg *qmsg;
  5149                           ;messages.c: 29: size_t tlength = length;
  5150                           
  5151                           ;incstack = 0
  5152  000F62  C00D  F012         	movff	send_msg@length,send_msg@tlength
  5153  000F66  6A13               	clrf	send_msg@tlength+1,c
  5154                           
  5155                           ;messages.c: 39: slot = qptr->cur_write_ind;
  5156  000F68  EE20 F034          	lfsr	2,52
  5157  000F6C  500B               	movf	send_msg@qptr,w,c
  5158  000F6E  26D9               	addwf	fsr2l,f,c
  5159  000F70  500C               	movf	send_msg@qptr+1,w,c
  5160  000F72  22DA               	addwfc	fsr2h,f,c
  5161  000F74  50DF               	movf	indf2,w,c
  5162  000F76  6E14               	movwf	send_msg@slot,c
  5163                           
  5164                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  5165  000F78  5014               	movf	send_msg@slot,w,c
  5166  000F7A  0D0D               	mullw	13
  5167  000F7C  50F3               	movf	prodl,w,c
  5168  000F7E  240B               	addwf	send_msg@qptr,w,c
  5169  000F80  6E15               	movwf	send_msg@qmsg,c
  5170  000F82  50F4               	movf	prodh,w,c
  5171  000F84  200C               	addwfc	send_msg@qptr+1,w,c
  5172  000F86  6E16               	movwf	send_msg@qmsg+1,c
  5173                           
  5174                           ;messages.c: 42: if (qmsg->full != 0) {
  5175  000F88  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5176  000F8C  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5177  000F90  50DF               	movf	indf2,w,c
  5178  000F92  B4D8               	btfsc	status,2,c
  5179  000F94  D002               	goto	i1l3894
  5180                           
  5181                           ;messages.c: 43: return (-1);
  5182  000F96  0EFF               	movlw	255
  5183  000F98  0012               	return	
  5184  000F9A                     i1l3894:
  5185                           
  5186                           ;messages.c: 44: }
  5187                           ;messages.c: 47: qmsg->length = length;
  5188  000F9A  EE20 F001          	lfsr	2,1
  5189  000F9E  5015               	movf	send_msg@qmsg,w,c
  5190  000FA0  26D9               	addwf	fsr2l,f,c
  5191  000FA2  5016               	movf	send_msg@qmsg+1,w,c
  5192  000FA4  22DA               	addwfc	fsr2h,f,c
  5193  000FA6  C00D  FFDF         	movff	send_msg@length,indf2
  5194                           
  5195                           ;messages.c: 48: qmsg->msgtype = msgtype;
  5196  000FAA  EE20 F002          	lfsr	2,2
  5197  000FAE  5015               	movf	send_msg@qmsg,w,c
  5198  000FB0  26D9               	addwf	fsr2l,f,c
  5199  000FB2  5016               	movf	send_msg@qmsg+1,w,c
  5200  000FB4  22DA               	addwfc	fsr2h,f,c
  5201  000FB6  C00E  FFDF         	movff	send_msg@msgtype,indf2
  5202                           
  5203                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  5204  000FBA  0E03               	movlw	3
  5205  000FBC  2415               	addwf	send_msg@qmsg,w,c
  5206  000FBE  6E01               	movwf	i1memcpy@d1,c
  5207  000FC0  0E00               	movlw	0
  5208  000FC2  2016               	addwfc	send_msg@qmsg+1,w,c
  5209  000FC4  6E02               	movwf	i1memcpy@d1+1,c
  5210  000FC6  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  5211  000FCA  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  5212  000FCE  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  5213  000FD2  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  5214  000FD6  ECE4  F00B         	call	i1_memcpy	;wreg free
  5215                           
  5216                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5217  000FDA  EE20 F034          	lfsr	2,52
  5218  000FDE  500B               	movf	send_msg@qptr,w,c
  5219  000FE0  26D9               	addwf	fsr2l,f,c
  5220  000FE2  500C               	movf	send_msg@qptr+1,w,c
  5221  000FE4  22DA               	addwfc	fsr2h,f,c
  5222  000FE6  EE10 F034          	lfsr	1,52
  5223  000FEA  500B               	movf	send_msg@qptr,w,c
  5224  000FEC  26E1               	addwf	fsr1l,f,c
  5225  000FEE  500C               	movf	send_msg@qptr+1,w,c
  5226  000FF0  22E2               	addwfc	fsr1h,f,c
  5227  000FF2  50E7               	movf	indf1,w,c
  5228  000FF4  6E11               	movwf	??_send_msg& (0+255),c
  5229  000FF6  2811               	incf	??_send_msg,w,c
  5230  000FF8  0B03               	andlw	3
  5231  000FFA  6EDF               	movwf	indf2,c
  5232                           
  5233                           ;messages.c: 60: qmsg->full = 1;
  5234  000FFC  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5235  001000  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5236  001004  0E01               	movlw	1
  5237  001006  6EDF               	movwf	indf2,c
  5238                           
  5239                           ;messages.c: 61: return (1);
  5240  001008  0E01               	movlw	1
  5241  00100A  0012               	return	
  5242  00100C                     __end_of_send_msg:
  5243                           	opt stack 0
  5244                           pclatu	equ	0xFFB
  5245                           pclath	equ	0xFFA
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           postinc0	equ	0xFEE
  5254                           fsr0h	equ	0xFEA
  5255                           fsr0l	equ	0xFE9
  5256                           wreg	equ	0xFE8
  5257                           indf1	equ	0xFE7
  5258                           postdec1	equ	0xFE5
  5259                           fsr1h	equ	0xFE2
  5260                           fsr1l	equ	0xFE1
  5261                           bsr	equ	0xFE0
  5262                           indf2	equ	0xFDF
  5263                           fsr2h	equ	0xFDA
  5264                           fsr2l	equ	0xFD9
  5265                           status	equ	0xFD8
  5266                           
  5267 ;; *************** function i1_memcpy *****************
  5268 ;; Defined at:
  5269 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  d1              2    0[COMRAM] PTR void 
  5272 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5273 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5274 ;;		 -> main@msgbuffer(11), 
  5275 ;;  s1              2    2[COMRAM] PTR const void 
  5276 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5277 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5278 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5279 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5280 ;;  n               2    4[COMRAM] unsigned int 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5283 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5284 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5285 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5286 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5287 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5288 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5289 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5290 ;;		 -> main@msgbuffer(11), 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  2    0[COMRAM] PTR void 
  5293 ;; Registers used:
  5294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5300 ;;      Params:         6       0       0       0       0
  5301 ;;      Locals:         4       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0
  5303 ;;      Totals:        10       0       0       0       0
  5304 ;;Total ram usage:       10 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    6
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_send_msg
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text34
  5315  0017C8                     __ptext34:
  5316                           	opt stack 0
  5317  0017C8                     i1_memcpy:
  5318                           	opt stack 16
  5319                           
  5320                           ;incstack = 0
  5321  0017C8  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5322  0017CC  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5323  0017D0  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5324  0017D4  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5325  0017D8  D00E               	goto	i1l3870
  5326  0017DA                     i1l3864:
  5327  0017DA  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5328  0017DE  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5329  0017E2  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5330  0017E6  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5331  0017EA  CFDF FFE7          	movff	indf2,indf1
  5332  0017EE  4A09               	infsnz	i1memcpy@s,f,c
  5333  0017F0  2A0A               	incf	i1memcpy@s+1,f,c
  5334  0017F2  4A07               	infsnz	i1memcpy@d,f,c
  5335  0017F4  2A08               	incf	i1memcpy@d+1,f,c
  5336  0017F6                     i1l3870:
  5337  0017F6  0605               	decf	i1memcpy@n,f,c
  5338  0017F8  A0D8               	btfss	status,0,c
  5339  0017FA  0606               	decf	i1memcpy@n+1,f,c
  5340  0017FC  2805               	incf	i1memcpy@n& (0+255),w,c
  5341  0017FE  B4D8               	btfsc	status,2,c
  5342  001800  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5343  001802  B4D8               	btfsc	status,2,c
  5344                           
  5345                           ;	Return value of i1_memcpy is never used
  5346  001804  0012               	return	
  5347  001806  D7E9               	goto	i1l3864
  5348  001808                     __end_ofi1_memcpy:
  5349                           	opt stack 0
  5350                           pclatu	equ	0xFFB
  5351                           pclath	equ	0xFFA
  5352                           tblptru	equ	0xFF8
  5353                           tblptrh	equ	0xFF7
  5354                           tblptrl	equ	0xFF6
  5355                           tablat	equ	0xFF5
  5356                           prodh	equ	0xFF4
  5357                           prodl	equ	0xFF3
  5358                           intcon	equ	0xFF2
  5359                           postinc0	equ	0xFEE
  5360                           fsr0h	equ	0xFEA
  5361                           fsr0l	equ	0xFE9
  5362                           wreg	equ	0xFE8
  5363                           indf1	equ	0xFE7
  5364                           postdec1	equ	0xFE5
  5365                           fsr1h	equ	0xFE2
  5366                           fsr1l	equ	0xFE1
  5367                           bsr	equ	0xFE0
  5368                           indf2	equ	0xFDF
  5369                           fsr2h	equ	0xFDA
  5370                           fsr2l	equ	0xFD9
  5371                           status	equ	0xFD8
  5372                           
  5373 ;; *************** function _ReadADC *****************
  5374 ;; Defined at:
  5375 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  2    0[COMRAM] int 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5389 ;;      Params:         2       0       0       0       0
  5390 ;;      Locals:         0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0
  5392 ;;      Totals:         2       0       0       0       0
  5393 ;;Total ram usage:        2 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    6
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_adc_int_handler
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text35
  5404  001C0A                     __ptext35:
  5405                           	opt stack 0
  5406  001C0A                     _ReadADC:
  5407                           	opt stack 18
  5408                           
  5409                           ;incstack = 0
  5410  001C0A  50C4               	movf	4036,w,c	;volatile
  5411  001C0C  6E02               	movwf	?_ReadADC+1,c
  5412  001C0E  50C3               	movf	4035,w,c	;volatile
  5413  001C10  6E01               	movwf	?_ReadADC,c
  5414  001C12  0012               	return	
  5415  001C14                     __end_of_ReadADC:
  5416                           	opt stack 0
  5417                           pclatu	equ	0xFFB
  5418                           pclath	equ	0xFFA
  5419                           tblptru	equ	0xFF8
  5420                           tblptrh	equ	0xFF7
  5421                           tblptrl	equ	0xFF6
  5422                           tablat	equ	0xFF5
  5423                           prodh	equ	0xFF4
  5424                           prodl	equ	0xFF3
  5425                           intcon	equ	0xFF2
  5426                           postinc0	equ	0xFEE
  5427                           fsr0h	equ	0xFEA
  5428                           fsr0l	equ	0xFE9
  5429                           wreg	equ	0xFE8
  5430                           indf1	equ	0xFE7
  5431                           postdec1	equ	0xFE5
  5432                           fsr1h	equ	0xFE2
  5433                           fsr1l	equ	0xFE1
  5434                           bsr	equ	0xFE0
  5435                           indf2	equ	0xFDF
  5436                           fsr2h	equ	0xFDA
  5437                           fsr2l	equ	0xFD9
  5438                           status	equ	0xFD8
  5439                           
  5440 ;; *************** function _InterruptHandlerHigh *****************
  5441 ;; Defined at:
  5442 ;;		line 85 in file "../src/interrupts.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;		None               void
  5449 ;; Registers used:
  5450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5456 ;;      Params:         0       0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0
  5458 ;;      Temps:          0       0      14       0       0
  5459 ;;      Totals:         0       0      14       0       0
  5460 ;;Total ram usage:       14 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    5
  5463 ;; This function calls:
  5464 ;;		_SleepIfOkay
  5465 ;;		_i2c_int_handler
  5466 ;;		_timer0_int_handler
  5467 ;; This function is called by:
  5468 ;;		Interrupt level 2
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	intcode
  5473  000008                     __pintcode:
  5474                           	opt stack 0
  5475  000008                     _InterruptHandlerHigh:
  5476                           	opt stack 16
  5477                           
  5478                           ;incstack = 0
  5479  000008  CFFA F138          	movff	pclath,??_InterruptHandlerHigh
  5480  00000C  CFFB F139          	movff	pclatu,??_InterruptHandlerHigh+1
  5481  000010  EF9C  F008         	goto	int_func
  5482                           pclatu	equ	0xFFB
  5483                           pclath	equ	0xFFA
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           postinc0	equ	0xFEE
  5492                           fsr0h	equ	0xFEA
  5493                           fsr0l	equ	0xFE9
  5494                           wreg	equ	0xFE8
  5495                           indf1	equ	0xFE7
  5496                           postdec1	equ	0xFE5
  5497                           fsr1h	equ	0xFE2
  5498                           fsr1l	equ	0xFE1
  5499                           bsr	equ	0xFE0
  5500                           indf2	equ	0xFDF
  5501                           fsr2h	equ	0xFDA
  5502                           fsr2l	equ	0xFD9
  5503                           status	equ	0xFD8
  5504                           
  5505                           	psect	intcode_body
  5506  001138                     __pintcode_body:
  5507                           	opt stack 16
  5508  001138                     int_func:
  5509                           	opt stack 16
  5510  001138  CFE9 F13A          	movff	fsr0l,??_InterruptHandlerHigh+2
  5511  00113C  CFEA F13B          	movff	fsr0h,??_InterruptHandlerHigh+3
  5512  001140  CFE1 F13C          	movff	fsr1l,??_InterruptHandlerHigh+4
  5513  001144  CFE2 F13D          	movff	fsr1h,??_InterruptHandlerHigh+5
  5514  001148  CFD9 F13E          	movff	fsr2l,??_InterruptHandlerHigh+6
  5515  00114C  CFDA F13F          	movff	fsr2h,??_InterruptHandlerHigh+7
  5516  001150  CFF3 F140          	movff	prodl,??_InterruptHandlerHigh+8
  5517  001154  CFF4 F141          	movff	prodh,??_InterruptHandlerHigh+9
  5518  001158  CFF6 F142          	movff	tblptrl,??_InterruptHandlerHigh+10
  5519  00115C  CFF7 F143          	movff	tblptrh,??_InterruptHandlerHigh+11
  5520  001160  CFF8 F144          	movff	tblptru,??_InterruptHandlerHigh+12
  5521  001164  CFF5 F145          	movff	tablat,??_InterruptHandlerHigh+13
  5522                           
  5523                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  5524  001168  A69E               	btfss	3998,3,c	;volatile
  5525  00116A  D003               	goto	i2l3216
  5526                           
  5527                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  5528  00116C  969E               	bcf	3998,3,c	;volatile
  5529                           
  5530                           ;interrupts.c: 94: i2c_int_handler();
  5531  00116E  EC58  F000         	call	_i2c_int_handler	;wreg free
  5532  001172                     i2l3216:
  5533                           
  5534                           ;interrupts.c: 95: }
  5535                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  5536  001172  A4F2               	btfss	intcon,2,c	;volatile
  5537  001174  D003               	goto	i2l3222
  5538                           
  5539                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  5540  001176  94F2               	bcf	intcon,2,c	;volatile
  5541                           
  5542                           ;interrupts.c: 101: timer0_int_handler();
  5543  001178  ECBF  F00D         	call	_timer0_int_handler	;wreg free
  5544  00117C                     i2l3222:
  5545                           
  5546                           ;interrupts.c: 102: }
  5547                           ;interrupts.c: 111: SleepIfOkay();
  5548  00117C  EC36  F00B         	call	_SleepIfOkay	;wreg free
  5549  001180  C145  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5550  001184  C144  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5551  001188  C143  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5552  00118C  C142  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5553  001190  C141  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5554  001194  C140  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5555  001198  C13F  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5556  00119C  C13E  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5557  0011A0  C13D  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5558  0011A4  C13C  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5559  0011A8  C13B  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5560  0011AC  C13A  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5561  0011B0  C139  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5562  0011B4  C138  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5563  0011B8  0011               	retfie		f
  5564  0011BA                     __end_of_InterruptHandlerHigh:
  5565                           	opt stack 0
  5566                           pclatu	equ	0xFFB
  5567                           pclath	equ	0xFFA
  5568                           tblptru	equ	0xFF8
  5569                           tblptrh	equ	0xFF7
  5570                           tblptrl	equ	0xFF6
  5571                           tablat	equ	0xFF5
  5572                           prodh	equ	0xFF4
  5573                           prodl	equ	0xFF3
  5574                           intcon	equ	0xFF2
  5575                           postinc0	equ	0xFEE
  5576                           fsr0h	equ	0xFEA
  5577                           fsr0l	equ	0xFE9
  5578                           wreg	equ	0xFE8
  5579                           indf1	equ	0xFE7
  5580                           postdec1	equ	0xFE5
  5581                           fsr1h	equ	0xFE2
  5582                           fsr1l	equ	0xFE1
  5583                           bsr	equ	0xFE0
  5584                           indf2	equ	0xFDF
  5585                           fsr2h	equ	0xFDA
  5586                           fsr2l	equ	0xFD9
  5587                           status	equ	0xFD8
  5588                           
  5589 ;; *************** function _timer0_int_handler *****************
  5590 ;; Defined at:
  5591 ;;		line 17 in file "../src/user_interrupts.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;		None               void
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5605 ;;      Params:         0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    2
  5612 ;; This function calls:
  5613 ;;		_WriteTimer0
  5614 ;;		i2_debugNum
  5615 ;; This function is called by:
  5616 ;;		_InterruptHandlerHigh
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text37
  5621  001B7E                     __ptext37:
  5622                           	opt stack 0
  5623  001B7E                     _timer0_int_handler:
  5624                           	opt stack 18
  5625                           
  5626                           ;user_interrupts.c: 18: debugNum(1);
  5627                           
  5628                           ;incstack = 0
  5629  001B7E  0E00               	movlw	0
  5630  001B80  6E31               	movwf	i2debugNum@num+1,c
  5631  001B82  0E01               	movlw	1
  5632  001B84  6E30               	movwf	i2debugNum@num,c
  5633  001B86  ECBE  F00A         	call	i2_debugNum	;wreg free
  5634                           
  5635                           ;user_interrupts.c: 21: ADCON0bits.GO = 1;
  5636  001B8A  82C2               	bsf	4034,1,c	;volatile
  5637                           
  5638                           ;user_interrupts.c: 31: WriteTimer0(0xFFFF-375);
  5639  001B8C  0EFE               	movlw	254
  5640  001B8E  6E30               	movwf	WriteTimer0@timer0+1,c
  5641  001B90  0E88               	movlw	136
  5642  001B92  6E2F               	movwf	WriteTimer0@timer0,c
  5643  001B94  ECF6  F00D         	call	_WriteTimer0	;wreg free
  5644  001B98  0012               	return	
  5645  001B9A                     __end_of_timer0_int_handler:
  5646                           	opt stack 0
  5647                           pclatu	equ	0xFFB
  5648                           pclath	equ	0xFFA
  5649                           tblptru	equ	0xFF8
  5650                           tblptrh	equ	0xFF7
  5651                           tblptrl	equ	0xFF6
  5652                           tablat	equ	0xFF5
  5653                           prodh	equ	0xFF4
  5654                           prodl	equ	0xFF3
  5655                           intcon	equ	0xFF2
  5656                           postinc0	equ	0xFEE
  5657                           fsr0h	equ	0xFEA
  5658                           fsr0l	equ	0xFE9
  5659                           wreg	equ	0xFE8
  5660                           indf1	equ	0xFE7
  5661                           postdec1	equ	0xFE5
  5662                           fsr1h	equ	0xFE2
  5663                           fsr1l	equ	0xFE1
  5664                           bsr	equ	0xFE0
  5665                           indf2	equ	0xFDF
  5666                           fsr2h	equ	0xFDA
  5667                           fsr2l	equ	0xFD9
  5668                           status	equ	0xFD8
  5669                           
  5670 ;; *************** function i2_debugNum *****************
  5671 ;; Defined at:
  5672 ;;		line 69 in file "../src/debug.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  num             2   47[COMRAM] int 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;		None               void
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5686 ;;      Params:         2       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0
  5689 ;;      Totals:         2       0       0       0       0
  5690 ;;Total ram usage:        2 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    1
  5693 ;; This function calls:
  5694 ;;		i2_resetDBG
  5695 ;;		i2_setDBG
  5696 ;; This function is called by:
  5697 ;;		_timer0_int_handler
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text38
  5702  00157C                     __ptext38:
  5703                           	opt stack 0
  5704  00157C                     i2_debugNum:
  5705                           	opt stack 18
  5706                           
  5707                           ;debug.c: 70: if(num & 1){
  5708                           
  5709                           ;incstack = 0
  5710  00157C  A030               	btfss	i2debugNum@num,0,c
  5711  00157E  D006               	goto	i2l3074
  5712                           
  5713                           ;debug.c: 71: setDBG(DBG1);
  5714  001580  0E00               	movlw	0
  5715  001582  EC9E  F00C         	call	i2_setDBG
  5716                           
  5717                           ;debug.c: 72: resetDBG(DBG1);
  5718  001586  0E00               	movlw	0
  5719  001588  ECBC  F00C         	call	i2_resetDBG
  5720  00158C                     i2l3074:
  5721                           
  5722                           ;debug.c: 73: }
  5723                           ;debug.c: 74: if(num & 2){
  5724  00158C  A230               	btfss	i2debugNum@num,1,c
  5725  00158E  D006               	goto	i2l3078
  5726                           
  5727                           ;debug.c: 75: setDBG(DBG2);
  5728  001590  0E01               	movlw	1
  5729  001592  EC9E  F00C         	call	i2_setDBG
  5730                           
  5731                           ;debug.c: 76: resetDBG(DBG2);
  5732  001596  0E01               	movlw	1
  5733  001598  ECBC  F00C         	call	i2_resetDBG
  5734  00159C                     i2l3078:
  5735                           
  5736                           ;debug.c: 77: }
  5737                           ;debug.c: 78: if(num & 4){
  5738  00159C  A430               	btfss	i2debugNum@num,2,c
  5739  00159E  D006               	goto	i2l3082
  5740                           
  5741                           ;debug.c: 79: setDBG(DBG3);
  5742  0015A0  0E02               	movlw	2
  5743  0015A2  EC9E  F00C         	call	i2_setDBG
  5744                           
  5745                           ;debug.c: 80: resetDBG(DBG3);
  5746  0015A6  0E02               	movlw	2
  5747  0015A8  ECBC  F00C         	call	i2_resetDBG
  5748  0015AC                     i2l3082:
  5749                           
  5750                           ;debug.c: 81: }
  5751                           ;debug.c: 82: if(num & 8){
  5752  0015AC  A630               	btfss	i2debugNum@num,3,c
  5753  0015AE  D006               	goto	i2l3086
  5754                           
  5755                           ;debug.c: 83: setDBG(DBG4);
  5756  0015B0  0E03               	movlw	3
  5757  0015B2  EC9E  F00C         	call	i2_setDBG
  5758                           
  5759                           ;debug.c: 84: resetDBG(DBG4);
  5760  0015B6  0E03               	movlw	3
  5761  0015B8  ECBC  F00C         	call	i2_resetDBG
  5762  0015BC                     i2l3086:
  5763                           
  5764                           ;debug.c: 85: }
  5765                           ;debug.c: 86: if(num & 16){
  5766  0015BC  A830               	btfss	i2debugNum@num,4,c
  5767  0015BE  0012               	return	
  5768                           
  5769                           ;debug.c: 87: setDBG(DBG5);
  5770  0015C0  0E04               	movlw	4
  5771  0015C2  EC9E  F00C         	call	i2_setDBG
  5772                           
  5773                           ;debug.c: 88: resetDBG(DBG5);
  5774  0015C6  0E04               	movlw	4
  5775  0015C8  ECBC  F00C         	call	i2_resetDBG
  5776  0015CC  0012               	return	
  5777  0015CE                     __end_ofi2_debugNum:
  5778                           	opt stack 0
  5779                           pclatu	equ	0xFFB
  5780                           pclath	equ	0xFFA
  5781                           tblptru	equ	0xFF8
  5782                           tblptrh	equ	0xFF7
  5783                           tblptrl	equ	0xFF6
  5784                           tablat	equ	0xFF5
  5785                           prodh	equ	0xFF4
  5786                           prodl	equ	0xFF3
  5787                           intcon	equ	0xFF2
  5788                           postinc0	equ	0xFEE
  5789                           fsr0h	equ	0xFEA
  5790                           fsr0l	equ	0xFE9
  5791                           wreg	equ	0xFE8
  5792                           indf1	equ	0xFE7
  5793                           postdec1	equ	0xFE5
  5794                           fsr1h	equ	0xFE2
  5795                           fsr1l	equ	0xFE1
  5796                           bsr	equ	0xFE0
  5797                           indf2	equ	0xFDF
  5798                           fsr2h	equ	0xFDA
  5799                           fsr2l	equ	0xFD9
  5800                           status	equ	0xFD8
  5801                           
  5802 ;; *************** function i2_setDBG *****************
  5803 ;; Defined at:
  5804 ;;		line 4 in file "../src/debug.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  b               1    wreg     unsigned char 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  b               1   46[COMRAM] unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;		None               void
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5818 ;;      Params:         0       0       0       0       0
  5819 ;;      Locals:         1       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0
  5821 ;;      Totals:         1       0       0       0       0
  5822 ;;Total ram usage:        1 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		i2_debugNum
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text39
  5832  00193C                     __ptext39:
  5833                           	opt stack 0
  5834  00193C                     i2_setDBG:
  5835                           	opt stack 18
  5836                           
  5837                           ;incstack = 0
  5838                           ;i2setDBG@b stored from wreg
  5839  00193C  CFE8 F02F          	movff	wreg,i2setDBG@b
  5840                           
  5841                           ;debug.c: 5: switch(b) {
  5842  001940  D00A               	goto	i2l3062
  5843  001942                     i2l367:
  5844                           
  5845                           ;debug.c: 7: LATBbits.LATB0 = 1;
  5846  001942  808A               	bsf	3978,0,c	;volatile
  5847                           
  5848                           ;debug.c: 8: break;
  5849  001944  0012               	return	
  5850  001946                     i2l369:
  5851                           
  5852                           ;debug.c: 10: LATBbits.LATB1 = 1;
  5853  001946  828A               	bsf	3978,1,c	;volatile
  5854                           
  5855                           ;debug.c: 11: break;
  5856  001948  0012               	return	
  5857  00194A                     i2l370:
  5858                           
  5859                           ;debug.c: 13: LATBbits.LATB2 = 1;
  5860  00194A  848A               	bsf	3978,2,c	;volatile
  5861                           
  5862                           ;debug.c: 14: break;
  5863  00194C  0012               	return	
  5864  00194E                     i2l371:
  5865                           
  5866                           ;debug.c: 16: LATBbits.LATB3 = 1;
  5867  00194E  868A               	bsf	3978,3,c	;volatile
  5868                           
  5869                           ;debug.c: 17: break;
  5870  001950  0012               	return	
  5871  001952                     i2l372:
  5872                           
  5873                           ;debug.c: 19: LATBbits.LATB4 = 1;
  5874  001952  888A               	bsf	3978,4,c	;volatile
  5875                           
  5876                           ;debug.c: 20: break;
  5877  001954  0012               	return	
  5878  001956                     i2l3062:
  5879  001956  502F               	movf	i2setDBG@b,w,c
  5880                           
  5881                           ; Switch size 1, requested type "space"
  5882                           ; Number of cases is 5, Range of values is 0 to 4
  5883                           ; switch strategies available:
  5884                           ; Name         Instructions Cycles
  5885                           ; simple_byte           16     9 (average)
  5886                           ;	Chosen strategy is simple_byte
  5887  001958  0A00               	xorlw	0	; case 0
  5888  00195A  B4D8               	btfsc	status,2,c
  5889  00195C  D7F2               	goto	i2l367
  5890  00195E  0A01               	xorlw	1	; case 1
  5891  001960  B4D8               	btfsc	status,2,c
  5892  001962  D7F1               	goto	i2l369
  5893  001964  0A03               	xorlw	3	; case 2
  5894  001966  B4D8               	btfsc	status,2,c
  5895  001968  D7F0               	goto	i2l370
  5896  00196A  0A01               	xorlw	1	; case 3
  5897  00196C  B4D8               	btfsc	status,2,c
  5898  00196E  D7EF               	goto	i2l371
  5899  001970  0A07               	xorlw	7	; case 4
  5900  001972  A4D8               	btfss	status,2,c
  5901  001974  0012               	return	
  5902  001976  D7ED               	goto	i2l372
  5903  001978                     __end_ofi2_setDBG:
  5904                           	opt stack 0
  5905                           pclatu	equ	0xFFB
  5906                           pclath	equ	0xFFA
  5907                           tblptru	equ	0xFF8
  5908                           tblptrh	equ	0xFF7
  5909                           tblptrl	equ	0xFF6
  5910                           tablat	equ	0xFF5
  5911                           prodh	equ	0xFF4
  5912                           prodl	equ	0xFF3
  5913                           intcon	equ	0xFF2
  5914                           postinc0	equ	0xFEE
  5915                           fsr0h	equ	0xFEA
  5916                           fsr0l	equ	0xFE9
  5917                           wreg	equ	0xFE8
  5918                           indf1	equ	0xFE7
  5919                           postdec1	equ	0xFE5
  5920                           fsr1h	equ	0xFE2
  5921                           fsr1l	equ	0xFE1
  5922                           bsr	equ	0xFE0
  5923                           indf2	equ	0xFDF
  5924                           fsr2h	equ	0xFDA
  5925                           fsr2l	equ	0xFD9
  5926                           status	equ	0xFD8
  5927                           
  5928 ;; *************** function i2_resetDBG *****************
  5929 ;; Defined at:
  5930 ;;		line 26 in file "../src/debug.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  b               1    wreg     unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  b               1   46[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;		None               void
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5944 ;;      Params:         0       0       0       0       0
  5945 ;;      Locals:         1       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0
  5947 ;;      Totals:         1       0       0       0       0
  5948 ;;Total ram usage:        1 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		i2_debugNum
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text40
  5958  001978                     __ptext40:
  5959                           	opt stack 0
  5960  001978                     i2_resetDBG:
  5961                           	opt stack 18
  5962                           
  5963                           ;incstack = 0
  5964                           ;i2resetDBG@b stored from wreg
  5965  001978  CFE8 F02F          	movff	wreg,i2resetDBG@b
  5966                           
  5967                           ;debug.c: 27: switch(b) {
  5968  00197C  D00A               	goto	i2l3068
  5969  00197E                     i2l378:
  5970                           
  5971                           ;debug.c: 29: LATBbits.LATB0 = 0;
  5972  00197E  908A               	bcf	3978,0,c	;volatile
  5973                           
  5974                           ;debug.c: 30: break;
  5975  001980  0012               	return	
  5976  001982                     i2l380:
  5977                           
  5978                           ;debug.c: 32: LATBbits.LATB1 = 0;
  5979  001982  928A               	bcf	3978,1,c	;volatile
  5980                           
  5981                           ;debug.c: 33: break;
  5982  001984  0012               	return	
  5983  001986                     i2l381:
  5984                           
  5985                           ;debug.c: 35: LATBbits.LATB2 = 0;
  5986  001986  948A               	bcf	3978,2,c	;volatile
  5987                           
  5988                           ;debug.c: 36: break;
  5989  001988  0012               	return	
  5990  00198A                     i2l382:
  5991                           
  5992                           ;debug.c: 38: LATBbits.LATB3 = 0;
  5993  00198A  968A               	bcf	3978,3,c	;volatile
  5994                           
  5995                           ;debug.c: 39: break;
  5996  00198C  0012               	return	
  5997  00198E                     i2l383:
  5998                           
  5999                           ;debug.c: 41: LATBbits.LATB4 = 0;
  6000  00198E  988A               	bcf	3978,4,c	;volatile
  6001                           
  6002                           ;debug.c: 42: break;
  6003  001990  0012               	return	
  6004  001992                     i2l3068:
  6005  001992  502F               	movf	i2resetDBG@b,w,c
  6006                           
  6007                           ; Switch size 1, requested type "space"
  6008                           ; Number of cases is 5, Range of values is 0 to 4
  6009                           ; switch strategies available:
  6010                           ; Name         Instructions Cycles
  6011                           ; simple_byte           16     9 (average)
  6012                           ;	Chosen strategy is simple_byte
  6013  001994  0A00               	xorlw	0	; case 0
  6014  001996  B4D8               	btfsc	status,2,c
  6015  001998  D7F2               	goto	i2l378
  6016  00199A  0A01               	xorlw	1	; case 1
  6017  00199C  B4D8               	btfsc	status,2,c
  6018  00199E  D7F1               	goto	i2l380
  6019  0019A0  0A03               	xorlw	3	; case 2
  6020  0019A2  B4D8               	btfsc	status,2,c
  6021  0019A4  D7F0               	goto	i2l381
  6022  0019A6  0A01               	xorlw	1	; case 3
  6023  0019A8  B4D8               	btfsc	status,2,c
  6024  0019AA  D7EF               	goto	i2l382
  6025  0019AC  0A07               	xorlw	7	; case 4
  6026  0019AE  A4D8               	btfss	status,2,c
  6027  0019B0  0012               	return	
  6028  0019B2  D7ED               	goto	i2l383
  6029  0019B4                     __end_ofi2_resetDBG:
  6030                           	opt stack 0
  6031                           pclatu	equ	0xFFB
  6032                           pclath	equ	0xFFA
  6033                           tblptru	equ	0xFF8
  6034                           tblptrh	equ	0xFF7
  6035                           tblptrl	equ	0xFF6
  6036                           tablat	equ	0xFF5
  6037                           prodh	equ	0xFF4
  6038                           prodl	equ	0xFF3
  6039                           intcon	equ	0xFF2
  6040                           postinc0	equ	0xFEE
  6041                           fsr0h	equ	0xFEA
  6042                           fsr0l	equ	0xFE9
  6043                           wreg	equ	0xFE8
  6044                           indf1	equ	0xFE7
  6045                           postdec1	equ	0xFE5
  6046                           fsr1h	equ	0xFE2
  6047                           fsr1l	equ	0xFE1
  6048                           bsr	equ	0xFE0
  6049                           indf2	equ	0xFDF
  6050                           fsr2h	equ	0xFDA
  6051                           fsr2l	equ	0xFD9
  6052                           status	equ	0xFD8
  6053                           
  6054 ;; *************** function _WriteTimer0 *****************
  6055 ;; Defined at:
  6056 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  timer0          2   46[COMRAM] unsigned int 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  timer           2   48[COMRAM] struct Timers
  6061 ;; Return value:  Size  Location     Type
  6062 ;;		None               void
  6063 ;; Registers used:
  6064 ;;		None
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6070 ;;      Params:         2       0       0       0       0
  6071 ;;      Locals:         2       0       0       0       0
  6072 ;;      Temps:          0       0       0       0       0
  6073 ;;      Totals:         4       0       0       0       0
  6074 ;;Total ram usage:        4 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_timer0_int_handler
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text41
  6084  001BEC                     __ptext41:
  6085                           	opt stack 0
  6086  001BEC                     _WriteTimer0:
  6087                           	opt stack 19
  6088                           
  6089                           ;incstack = 0
  6090  001BEC  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6091  001BF0  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6092  001BF4  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6093  001BF8  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6094  001BFC  0012               	return	
  6095  001BFE                     __end_of_WriteTimer0:
  6096                           	opt stack 0
  6097                           pclatu	equ	0xFFB
  6098                           pclath	equ	0xFFA
  6099                           tblptru	equ	0xFF8
  6100                           tblptrh	equ	0xFF7
  6101                           tblptrl	equ	0xFF6
  6102                           tablat	equ	0xFF5
  6103                           prodh	equ	0xFF4
  6104                           prodl	equ	0xFF3
  6105                           intcon	equ	0xFF2
  6106                           postinc0	equ	0xFEE
  6107                           fsr0h	equ	0xFEA
  6108                           fsr0l	equ	0xFE9
  6109                           wreg	equ	0xFE8
  6110                           indf1	equ	0xFE7
  6111                           postdec1	equ	0xFE5
  6112                           fsr1h	equ	0xFE2
  6113                           fsr1l	equ	0xFE1
  6114                           bsr	equ	0xFE0
  6115                           indf2	equ	0xFDF
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _i2c_int_handler *****************
  6121 ;; Defined at:
  6122 ;;		line 107 in file "../src/my_i2c.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  error_buf       3  114[BANK0 ] unsigned char [3]
  6127 ;;  data_read       1  122[BANK0 ] unsigned char 
  6128 ;;  msg_ready       1  121[BANK0 ] unsigned char 
  6129 ;;  msg_to_send     1  120[BANK0 ] unsigned char 
  6130 ;;  i2c_data        1  119[BANK0 ] unsigned char 
  6131 ;;  overrun_erro    1  118[BANK0 ] unsigned char 
  6132 ;;  data_written    1  117[BANK0 ] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;		None               void
  6135 ;; Registers used:
  6136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6142 ;;      Params:         0       0       0       0       0
  6143 ;;      Locals:         0       9       0       0       0
  6144 ;;      Temps:          0       1       0       0       0
  6145 ;;      Totals:         0      10       0       0       0
  6146 ;;Total ram usage:       10 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    4
  6149 ;; This function calls:
  6150 ;;		_handle_start
  6151 ;;		_sendRequestedData
  6152 ;;		_setBrainReqData
  6153 ;;		i2_ToMainHigh_sendmsg
  6154 ;; This function is called by:
  6155 ;;		_InterruptHandlerHigh
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text42
  6160  0000B0                     __ptext42:
  6161                           	opt stack 0
  6162  0000B0                     _i2c_int_handler:
  6163                           	opt stack 16
  6164                           
  6165                           ;my_i2c.c: 109: unsigned char i2c_data;
  6166                           ;my_i2c.c: 110: unsigned char data_read = 0;
  6167                           
  6168                           ;incstack = 0
  6169  0000B0  0100               	movlb	0	; () banked
  6170  0000B2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6171  0000B4  0E00               	movlw	0
  6172  0000B6  0100               	movlb	0	; () banked
  6173  0000B8  0100               	movlb	0	; () banked
  6174  0000BA  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6175  0000BC  0100               	movlb	0	; () banked
  6176  0000BE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6177                           
  6178                           ;my_i2c.c: 111: unsigned char data_written = 0;
  6179  0000C0  0100               	movlb	0	; () banked
  6180  0000C2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6181  0000C4  0E00               	movlw	0
  6182  0000C6  0100               	movlb	0	; () banked
  6183  0000C8  0100               	movlb	0	; () banked
  6184  0000CA  6FF5               	movwf	i2c_int_handler@data_written& (0+255),b
  6185  0000CC  0100               	movlb	0	; () banked
  6186  0000CE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6187                           
  6188                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  6189  0000D0  0100               	movlb	0	; () banked
  6190  0000D2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6191  0000D4  0E00               	movlw	0
  6192  0000D6  0100               	movlb	0	; () banked
  6193  0000D8  0100               	movlb	0	; () banked
  6194  0000DA  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6195  0000DC  0100               	movlb	0	; () banked
  6196  0000DE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6197                           
  6198                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  6199  0000E0  0100               	movlb	0	; () banked
  6200  0000E2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6201  0000E4  0E00               	movlw	0
  6202  0000E6  0100               	movlb	0	; () banked
  6203  0000E8  0100               	movlb	0	; () banked
  6204  0000EA  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6205  0000EC  0100               	movlb	0	; () banked
  6206  0000EE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6207                           
  6208                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  6209  0000F0  0100               	movlb	0	; () banked
  6210  0000F2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6211  0000F4  0E00               	movlw	0
  6212  0000F6  0100               	movlb	0	; () banked
  6213  0000F8  0100               	movlb	0	; () banked
  6214  0000FA  6FF6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6215  0000FC  0100               	movlb	0	; () banked
  6216  0000FE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;my_i2c.c: 115: unsigned char error_buf[3];
  6220                           ;my_i2c.c: 118: if (SSPCON1bits.SSPOV == 1) {
  6221  000100  ACC6               	btfss	4038,6,c	;volatile
  6222  000102  D029               	goto	i2l3238
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;my_i2c.c: 119: SSPCON1bits.SSPOV = 0;
  6226  000104  9CC6               	bcf	4038,6,c	;volatile
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;my_i2c.c: 123: ic_ptr->status = 0x5;
  6230  000106  0101               	movlb	1	; () banked
  6231  000108  EE20 F00C          	lfsr	2,12
  6232  00010C  0101               	movlb	1	; () banked
  6233  00010E  5100               	movf	_ic_ptr& (0+255),w,b
  6234  000110  26D9               	addwf	fsr2l,f,c
  6235  000112  0101               	movlb	1	; () banked
  6236  000114  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6237  000116  22DA               	addwfc	fsr2h,f,c
  6238  000118  0E05               	movlw	5
  6239  00011A  6EDF               	movwf	indf2,c
  6240                           
  6241                           ; BSR set to: 1
  6242                           ;my_i2c.c: 124: overrun_error = 1;
  6243  00011C  0100               	movlb	0	; () banked
  6244  00011E  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6245  000120  0E01               	movlw	1
  6246  000122  0100               	movlb	0	; () banked
  6247  000124  0100               	movlb	0	; () banked
  6248  000126  6FF6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6249  000128  0100               	movlb	0	; () banked
  6250  00012A  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;my_i2c.c: 125: ic_ptr->error_count++;
  6254  00012C  0101               	movlb	1	; () banked
  6255  00012E  EE20 F00E          	lfsr	2,14
  6256  000132  0101               	movlb	1	; () banked
  6257  000134  5100               	movf	_ic_ptr& (0+255),w,b
  6258  000136  26D9               	addwf	fsr2l,f,c
  6259  000138  0101               	movlb	1	; () banked
  6260  00013A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6261  00013C  22DA               	addwfc	fsr2h,f,c
  6262  00013E  2ADF               	incf	indf2,f,c
  6263                           
  6264                           ; BSR set to: 1
  6265                           ;my_i2c.c: 126: ic_ptr->error_code = 0x4;
  6266  000140  0101               	movlb	1	; () banked
  6267  000142  EE20 F00D          	lfsr	2,13
  6268  000146  0101               	movlb	1	; () banked
  6269  000148  5100               	movf	_ic_ptr& (0+255),w,b
  6270  00014A  26D9               	addwf	fsr2l,f,c
  6271  00014C  0101               	movlb	1	; () banked
  6272  00014E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6273  000150  22DA               	addwfc	fsr2h,f,c
  6274  000152  0E04               	movlw	4
  6275  000154  6EDF               	movwf	indf2,c
  6276  000156                     i2l3238:
  6277                           
  6278                           ;my_i2c.c: 127: }
  6279                           ;my_i2c.c: 129: if (SSPSTATbits.BF == 1) {
  6280  000156  A0C7               	btfss	4039,0,c	;volatile
  6281  000158  D00A               	goto	i2l3244
  6282                           
  6283                           ;my_i2c.c: 130: i2c_data = SSPBUF;
  6284  00015A  CFC9 F0F7          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6285                           
  6286                           ;my_i2c.c: 131: data_read = 1;
  6287  00015E  0100               	movlb	0	; () banked
  6288  000160  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6289  000162  0E01               	movlw	1
  6290  000164  0100               	movlb	0	; () banked
  6291  000166  0100               	movlb	0	; () banked
  6292  000168  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6293  00016A  0100               	movlb	0	; () banked
  6294  00016C  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6295  00016E                     i2l3244:
  6296                           
  6297                           ;my_i2c.c: 132: }
  6298                           ;my_i2c.c: 134: if (!overrun_error) {
  6299  00016E  0100               	movlb	0	; () banked
  6300  000170  0100               	movlb	0	; () banked
  6301  000172  67F6               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6302  000174  D1CE               	goto	i2l258
  6303  000176  D1B7               	goto	i2l3332
  6304  000178                     i2l260:
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;my_i2c.c: 137: {
  6308                           ;my_i2c.c: 139: if (SSPSTATbits.S == 1) {
  6309  000178  A6C7               	btfss	4039,3,c	;volatile
  6310  00017A  D1CB               	goto	i2l258
  6311                           
  6312                           ; BSR set to: 1
  6313                           ;my_i2c.c: 140: handle_start(data_read);
  6314  00017C  0100               	movlb	0	; () banked
  6315  00017E  0100               	movlb	0	; () banked
  6316  000180  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6317  000182  ECF5  F006         	call	_handle_start
  6318                           
  6319                           ;my_i2c.c: 142: if (ic_ptr->status == 0x8) {
  6320  000186  0101               	movlb	1	; () banked
  6321  000188  EE20 F00C          	lfsr	2,12
  6322  00018C  0101               	movlb	1	; () banked
  6323  00018E  5100               	movf	_ic_ptr& (0+255),w,b
  6324  000190  26D9               	addwf	fsr2l,f,c
  6325  000192  0101               	movlb	1	; () banked
  6326  000194  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6327  000196  22DA               	addwfc	fsr2h,f,c
  6328  000198  0E08               	movlw	8
  6329  00019A  62DF               	cpfseq	indf2,c
  6330  00019C  D1BA               	goto	i2l258
  6331                           
  6332                           ; BSR set to: 1
  6333                           ;my_i2c.c: 143: data_read = 0;
  6334  00019E  0100               	movlb	0	; () banked
  6335  0001A0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6336  0001A2  0E00               	movlw	0
  6337  0001A4  0100               	movlb	0	; () banked
  6338  0001A6  0100               	movlb	0	; () banked
  6339  0001A8  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6340  0001AA  0100               	movlb	0	; () banked
  6341  0001AC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6342                           
  6343                           ;my_i2c.c: 144: msg_to_send = 1;
  6344  0001AE  0100               	movlb	0	; () banked
  6345  0001B0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6346  0001B2  0E01               	movlw	1
  6347  0001B4  0100               	movlb	0	; () banked
  6348  0001B6  0100               	movlb	0	; () banked
  6349  0001B8  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6350  0001BA  D187               	goto	L6
  6351  0001BC                     i2l264:
  6352                           
  6353                           ; BSR set to: 1
  6354                           ;my_i2c.c: 150: {
  6355                           ;my_i2c.c: 152: if (SSPSTATbits.P == 1) {
  6356  0001BC  A8C7               	btfss	4039,4,c	;volatile
  6357  0001BE  D030               	goto	i2l3264
  6358                           
  6359                           ; BSR set to: 1
  6360                           ;my_i2c.c: 155: ic_ptr->event_count++;
  6361  0001C0  0101               	movlb	1	; () banked
  6362  0001C2  EE20 F00B          	lfsr	2,11
  6363  0001C6  0101               	movlb	1	; () banked
  6364  0001C8  5100               	movf	_ic_ptr& (0+255),w,b
  6365  0001CA  26D9               	addwf	fsr2l,f,c
  6366  0001CC  0101               	movlb	1	; () banked
  6367  0001CE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6368  0001D0  22DA               	addwfc	fsr2h,f,c
  6369  0001D2  2ADF               	incf	indf2,f,c
  6370                           
  6371                           ; BSR set to: 1
  6372                           ;my_i2c.c: 156: if (data_read) {
  6373  0001D4  0100               	movlb	0	; () banked
  6374  0001D6  0100               	movlb	0	; () banked
  6375  0001D8  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6376  0001DA  B4D8               	btfsc	status,2,c
  6377  0001DC  D179               	goto	L8
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;my_i2c.c: 157: if (SSPSTATbits.D_A == 0) {
  6381  0001DE  BAC7               	btfsc	4039,5,c	;volatile
  6382  0001E0  D009               	goto	i2l3262
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;my_i2c.c: 158: msg_ready = 1;
  6386  0001E2  0100               	movlb	0	; () banked
  6387  0001E4  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6388  0001E6  0E01               	movlw	1
  6389  0001E8  0100               	movlb	0	; () banked
  6390  0001EA  0100               	movlb	0	; () banked
  6391  0001EC  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6392  0001EE  0100               	movlb	0	; () banked
  6393  0001F0  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6394                           
  6395                           ;my_i2c.c: 159: } else {
  6396  0001F2  D16E               	goto	L8
  6397  0001F4                     i2l3262:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;my_i2c.c: 160: ic_ptr->error_count++;
  6401  0001F4  0101               	movlb	1	; () banked
  6402  0001F6  EE20 F00E          	lfsr	2,14
  6403  0001FA  0101               	movlb	1	; () banked
  6404  0001FC  5100               	movf	_ic_ptr& (0+255),w,b
  6405  0001FE  26D9               	addwf	fsr2l,f,c
  6406  000200  0101               	movlb	1	; () banked
  6407  000202  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6408  000204  22DA               	addwfc	fsr2h,f,c
  6409  000206  2ADF               	incf	indf2,f,c
  6410                           
  6411                           ;my_i2c.c: 161: ic_ptr->error_code = 0x6;
  6412  000208  0101               	movlb	1	; () banked
  6413  00020A  EE20 F00D          	lfsr	2,13
  6414  00020E  0101               	movlb	1	; () banked
  6415  000210  5100               	movf	_ic_ptr& (0+255),w,b
  6416  000212  26D9               	addwf	fsr2l,f,c
  6417  000214  0101               	movlb	1	; () banked
  6418  000216  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6419  000218  22DA               	addwfc	fsr2h,f,c
  6420  00021A  0E06               	movlw	6
  6421  00021C  6EDF               	movwf	indf2,c
  6422                           
  6423                           ; BSR set to: 1
  6424  00021E  D158               	goto	L8
  6425  000220                     i2l3264:
  6426                           
  6427                           ; BSR set to: 1
  6428  000220  0100               	movlb	0	; () banked
  6429  000222  0100               	movlb	0	; () banked
  6430  000224  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6431  000226  B4D8               	btfsc	status,2,c
  6432  000228  D174               	goto	i2l258
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;my_i2c.c: 166: ic_ptr->event_count++;
  6436  00022A  0101               	movlb	1	; () banked
  6437  00022C  EE20 F00B          	lfsr	2,11
  6438  000230  0101               	movlb	1	; () banked
  6439  000232  5100               	movf	_ic_ptr& (0+255),w,b
  6440  000234  26D9               	addwf	fsr2l,f,c
  6441  000236  0101               	movlb	1	; () banked
  6442  000238  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6443  00023A  22DA               	addwfc	fsr2h,f,c
  6444  00023C  2ADF               	incf	indf2,f,c
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;my_i2c.c: 167: if (SSPSTATbits.D_A == 0) {
  6448  00023E  BAC7               	btfsc	4039,5,c	;volatile
  6449  000240  D019               	goto	i2l3280
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;my_i2c.c: 168: if (SSPSTATbits.R_W == 0) {
  6453  000242  B4C7               	btfsc	4039,2,c	;volatile
  6454  000244  D00B               	goto	i2l3274
  6455                           
  6456                           ; BSR set to: 1
  6457                           ;my_i2c.c: 169: ic_ptr->status = 0x7;
  6458  000246  0101               	movlb	1	; () banked
  6459  000248  EE20 F00C          	lfsr	2,12
  6460  00024C  0101               	movlb	1	; () banked
  6461  00024E  5100               	movf	_ic_ptr& (0+255),w,b
  6462  000250  26D9               	addwf	fsr2l,f,c
  6463  000252  0101               	movlb	1	; () banked
  6464  000254  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6465  000256  22DA               	addwfc	fsr2h,f,c
  6466  000258  0E07               	movlw	7
  6467  00025A  D076               	goto	L5
  6468  00025C                     i2l3274:
  6469                           
  6470                           ; BSR set to: 1
  6471                           ;my_i2c.c: 171: ic_ptr->status = 0x8;
  6472  00025C  0101               	movlb	1	; () banked
  6473  00025E  EE20 F00C          	lfsr	2,12
  6474  000262  0101               	movlb	1	; () banked
  6475  000264  5100               	movf	_ic_ptr& (0+255),w,b
  6476  000266  26D9               	addwf	fsr2l,f,c
  6477  000268  0101               	movlb	1	; () banked
  6478  00026A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6479  00026C  22DA               	addwfc	fsr2h,f,c
  6480  00026E  0E08               	movlw	8
  6481  000270  6EDF               	movwf	indf2,c
  6482  000272  D11D               	goto	L9
  6483  000274                     i2l3280:
  6484                           
  6485                           ;my_i2c.c: 177: ic_ptr->error_count++;
  6486  000274  0101               	movlb	1	; () banked
  6487  000276  EE20 F00E          	lfsr	2,14
  6488  00027A  0101               	movlb	1	; () banked
  6489  00027C  5100               	movf	_ic_ptr& (0+255),w,b
  6490  00027E  26D9               	addwf	fsr2l,f,c
  6491  000280  0101               	movlb	1	; () banked
  6492  000282  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6493  000284  22DA               	addwfc	fsr2h,f,c
  6494  000286  2ADF               	incf	indf2,f,c
  6495                           
  6496                           ;my_i2c.c: 178: ic_ptr->status = 0x5;
  6497  000288  0101               	movlb	1	; () banked
  6498  00028A  EE20 F00C          	lfsr	2,12
  6499  00028E  0101               	movlb	1	; () banked
  6500  000290  5100               	movf	_ic_ptr& (0+255),w,b
  6501  000292  26D9               	addwf	fsr2l,f,c
  6502  000294  0101               	movlb	1	; () banked
  6503  000296  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6504  000298  22DA               	addwfc	fsr2h,f,c
  6505  00029A  0E05               	movlw	5
  6506  00029C  6EDF               	movwf	indf2,c
  6507                           
  6508                           ;my_i2c.c: 179: ic_ptr->error_code = 0x6;
  6509  00029E  0101               	movlb	1	; () banked
  6510  0002A0  EE20 F00D          	lfsr	2,13
  6511  0002A4  0101               	movlb	1	; () banked
  6512  0002A6  5100               	movf	_ic_ptr& (0+255),w,b
  6513  0002A8  26D9               	addwf	fsr2l,f,c
  6514  0002AA  0101               	movlb	1	; () banked
  6515  0002AC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6516  0002AE  22DA               	addwfc	fsr2h,f,c
  6517  0002B0  0E06               	movlw	6
  6518  0002B2  D04A               	goto	L5
  6519  0002B4                     i2l3282:
  6520                           
  6521                           ; BSR set to: 1
  6522                           ;my_i2c.c: 185: {
  6523                           ;my_i2c.c: 186: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6524  0002B4  0101               	movlb	1	; () banked
  6525  0002B6  EE20 F077          	lfsr	2,119
  6526  0002BA  0101               	movlb	1	; () banked
  6527  0002BC  5100               	movf	_ic_ptr& (0+255),w,b
  6528  0002BE  26D9               	addwf	fsr2l,f,c
  6529  0002C0  0101               	movlb	1	; () banked
  6530  0002C2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6531  0002C4  22DA               	addwfc	fsr2h,f,c
  6532  0002C6  50DF               	movf	indf2,w,c
  6533  0002C8  0100               	movlb	0	; () banked
  6534  0002CA  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6535  0002CC  0101               	movlb	1	; () banked
  6536  0002CE  EE20 F076          	lfsr	2,118
  6537  0002D2  0101               	movlb	1	; () banked
  6538  0002D4  5100               	movf	_ic_ptr& (0+255),w,b
  6539  0002D6  26D9               	addwf	fsr2l,f,c
  6540  0002D8  0101               	movlb	1	; () banked
  6541  0002DA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6542  0002DC  22DA               	addwfc	fsr2h,f,c
  6543  0002DE  50DF               	movf	indf2,w,c
  6544  0002E0  0100               	movlb	0	; () banked
  6545  0002E2  5DF1               	subwf	??_i2c_int_handler& (0+255),w,b
  6546  0002E4  B0D8               	btfsc	status,0,c
  6547  0002E6  D0F4               	goto	L8
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;my_i2c.c: 189: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6551  0002E8  0101               	movlb	1	; () banked
  6552  0002EA  EE20 F077          	lfsr	2,119
  6553  0002EE  0101               	movlb	1	; () banked
  6554  0002F0  5100               	movf	_ic_ptr& (0+255),w,b
  6555  0002F2  26D9               	addwf	fsr2l,f,c
  6556  0002F4  0101               	movlb	1	; () banked
  6557  0002F6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6558  0002F8  22DA               	addwfc	fsr2h,f,c
  6559  0002FA  50DF               	movf	indf2,w,c
  6560  0002FC  0100               	movlb	0	; () banked
  6561  0002FE  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6562  000300  0100               	movlb	0	; () banked
  6563  000302  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6564  000304  0D01               	mullw	1
  6565  000306  0E0F               	movlw	15
  6566  000308  26F3               	addwf	prodl,f,c
  6567  00030A  0E00               	movlw	0
  6568  00030C  22F4               	addwfc	prodh,f,c
  6569  00030E  50F3               	movf	prodl,w,c
  6570  000310  0101               	movlb	1	; () banked
  6571  000312  0101               	movlb	1	; () banked
  6572  000314  2500               	addwf	_ic_ptr& (0+255),w,b
  6573  000316  6ED9               	movwf	fsr2l,c
  6574  000318  50F4               	movf	prodh,w,c
  6575  00031A  0101               	movlb	1	; () banked
  6576  00031C  0101               	movlb	1	; () banked
  6577  00031E  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6578  000320  6EDA               	movwf	fsr2h,c
  6579  000322  50DF               	movf	indf2,w,c
  6580  000324  6EC9               	movwf	4041,c	;volatile
  6581                           
  6582                           ; BSR set to: 1
  6583                           ;my_i2c.c: 190: ic_ptr->outbufind++;
  6584  000326  0101               	movlb	1	; () banked
  6585  000328  EE20 F077          	lfsr	2,119
  6586  00032C  0101               	movlb	1	; () banked
  6587  00032E  5100               	movf	_ic_ptr& (0+255),w,b
  6588  000330  26D9               	addwf	fsr2l,f,c
  6589  000332  0101               	movlb	1	; () banked
  6590  000334  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6591  000336  22DA               	addwfc	fsr2h,f,c
  6592  000338  2ADF               	incf	indf2,f,c
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;my_i2c.c: 191: data_written = 1;
  6596  00033A  0100               	movlb	0	; () banked
  6597  00033C  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6598  00033E  0E01               	movlw	1
  6599  000340  0100               	movlb	0	; () banked
  6600  000342  0100               	movlb	0	; () banked
  6601  000344  6FF5               	movwf	i2c_int_handler@data_written& (0+255),b
  6602  000346  D0C1               	goto	L6
  6603  000348                     L5:
  6604  000348  6EDF               	movwf	indf2,c
  6605  00034A  D0E3               	goto	i2l258
  6606  00034C                     i2l278:
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;my_i2c.c: 199: {
  6610                           ;my_i2c.c: 201: if (SSPSTATbits.P == 1) {
  6611  00034C  A8C7               	btfss	4039,4,c	;volatile
  6612  00034E  D062               	goto	i2l3310
  6613                           
  6614                           ; BSR set to: 1
  6615                           ;my_i2c.c: 203: ic_ptr->event_count++;
  6616  000350  0101               	movlb	1	; () banked
  6617  000352  EE20 F00B          	lfsr	2,11
  6618  000356  0101               	movlb	1	; () banked
  6619  000358  5100               	movf	_ic_ptr& (0+255),w,b
  6620  00035A  26D9               	addwf	fsr2l,f,c
  6621  00035C  0101               	movlb	1	; () banked
  6622  00035E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6623  000360  22DA               	addwfc	fsr2h,f,c
  6624  000362  2ADF               	incf	indf2,f,c
  6625                           
  6626                           ; BSR set to: 1
  6627                           ;my_i2c.c: 204: if (data_read) {
  6628  000364  0100               	movlb	0	; () banked
  6629  000366  0100               	movlb	0	; () banked
  6630  000368  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6631  00036A  B4D8               	btfsc	status,2,c
  6632  00036C  D04A               	goto	i2l3306
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;my_i2c.c: 205: if (SSPSTATbits.D_A == 1) {
  6636  00036E  AAC7               	btfss	4039,5,c	;volatile
  6637  000370  D027               	goto	i2l3304
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;my_i2c.c: 206: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6641  000372  0101               	movlb	1	; () banked
  6642  000374  EE20 F00A          	lfsr	2,10
  6643  000378  0101               	movlb	1	; () banked
  6644  00037A  5100               	movf	_ic_ptr& (0+255),w,b
  6645  00037C  26D9               	addwf	fsr2l,f,c
  6646  00037E  0101               	movlb	1	; () banked
  6647  000380  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6648  000382  22DA               	addwfc	fsr2h,f,c
  6649  000384  50DF               	movf	indf2,w,c
  6650  000386  0100               	movlb	0	; () banked
  6651  000388  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6652  00038A  0100               	movlb	0	; () banked
  6653  00038C  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6654  00038E  0D01               	mullw	1
  6655  000390  50F3               	movf	prodl,w,c
  6656  000392  0101               	movlb	1	; () banked
  6657  000394  0101               	movlb	1	; () banked
  6658  000396  2500               	addwf	_ic_ptr& (0+255),w,b
  6659  000398  6ED9               	movwf	fsr2l,c
  6660  00039A  50F4               	movf	prodh,w,c
  6661  00039C  0101               	movlb	1	; () banked
  6662  00039E  0101               	movlb	1	; () banked
  6663  0003A0  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6664  0003A2  6EDA               	movwf	fsr2h,c
  6665  0003A4  0100               	movlb	0	; () banked
  6666  0003A6  C0F7  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;my_i2c.c: 207: ic_ptr->buflen++;
  6670  0003AA  0101               	movlb	1	; () banked
  6671  0003AC  EE20 F00A          	lfsr	2,10
  6672  0003B0  0101               	movlb	1	; () banked
  6673  0003B2  5100               	movf	_ic_ptr& (0+255),w,b
  6674  0003B4  26D9               	addwf	fsr2l,f,c
  6675  0003B6  0101               	movlb	1	; () banked
  6676  0003B8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6677  0003BA  22DA               	addwfc	fsr2h,f,c
  6678  0003BC  2ADF               	incf	indf2,f,c
  6679  0003BE  D021               	goto	i2l3306
  6680  0003C0                     i2l3304:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;my_i2c.c: 210: ic_ptr->error_count++;
  6684  0003C0  0101               	movlb	1	; () banked
  6685  0003C2  EE20 F00E          	lfsr	2,14
  6686  0003C6  0101               	movlb	1	; () banked
  6687  0003C8  5100               	movf	_ic_ptr& (0+255),w,b
  6688  0003CA  26D9               	addwf	fsr2l,f,c
  6689  0003CC  0101               	movlb	1	; () banked
  6690  0003CE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6691  0003D0  22DA               	addwfc	fsr2h,f,c
  6692  0003D2  2ADF               	incf	indf2,f,c
  6693                           
  6694                           ;my_i2c.c: 211: ic_ptr->error_code = 0x6;
  6695  0003D4  0101               	movlb	1	; () banked
  6696  0003D6  EE20 F00D          	lfsr	2,13
  6697  0003DA  0101               	movlb	1	; () banked
  6698  0003DC  5100               	movf	_ic_ptr& (0+255),w,b
  6699  0003DE  26D9               	addwf	fsr2l,f,c
  6700  0003E0  0101               	movlb	1	; () banked
  6701  0003E2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6702  0003E4  22DA               	addwfc	fsr2h,f,c
  6703  0003E6  0E06               	movlw	6
  6704  0003E8  6EDF               	movwf	indf2,c
  6705                           
  6706                           ;my_i2c.c: 212: ic_ptr->status = 0x5;
  6707  0003EA  0101               	movlb	1	; () banked
  6708  0003EC  EE20 F00C          	lfsr	2,12
  6709  0003F0  0101               	movlb	1	; () banked
  6710  0003F2  5100               	movf	_ic_ptr& (0+255),w,b
  6711  0003F4  26D9               	addwf	fsr2l,f,c
  6712  0003F6  0101               	movlb	1	; () banked
  6713  0003F8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6714  0003FA  22DA               	addwfc	fsr2h,f,c
  6715  0003FC  0E05               	movlw	5
  6716  0003FE  6EDF               	movwf	indf2,c
  6717  000400  D067               	goto	L8
  6718  000402                     i2l3306:
  6719                           
  6720                           ;my_i2c.c: 215: msg_ready = 1;
  6721  000402  0100               	movlb	0	; () banked
  6722  000404  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6723  000406  0E01               	movlw	1
  6724  000408  0100               	movlb	0	; () banked
  6725  00040A  0100               	movlb	0	; () banked
  6726  00040C  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6727  00040E  0100               	movlb	0	; () banked
  6728  000410  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6729                           
  6730                           ; BSR set to: 0
  6731  000412  D05E               	goto	L8
  6732  000414                     i2l3310:
  6733                           
  6734                           ; BSR set to: 1
  6735  000414  0100               	movlb	0	; () banked
  6736  000416  0100               	movlb	0	; () banked
  6737  000418  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6738  00041A  B4D8               	btfsc	status,2,c
  6739  00041C  D07A               	goto	i2l258
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;my_i2c.c: 219: ic_ptr->event_count++;
  6743  00041E  0101               	movlb	1	; () banked
  6744  000420  EE20 F00B          	lfsr	2,11
  6745  000424  0101               	movlb	1	; () banked
  6746  000426  5100               	movf	_ic_ptr& (0+255),w,b
  6747  000428  26D9               	addwf	fsr2l,f,c
  6748  00042A  0101               	movlb	1	; () banked
  6749  00042C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6750  00042E  22DA               	addwfc	fsr2h,f,c
  6751  000430  2ADF               	incf	indf2,f,c
  6752                           
  6753                           ; BSR set to: 1
  6754                           ;my_i2c.c: 220: if (SSPSTATbits.D_A == 1) {
  6755  000432  AAC7               	btfss	4039,5,c	;volatile
  6756  000434  D027               	goto	i2l286
  6757                           
  6758                           ; BSR set to: 1
  6759                           ;my_i2c.c: 221: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6760  000436  0101               	movlb	1	; () banked
  6761  000438  EE20 F00A          	lfsr	2,10
  6762  00043C  0101               	movlb	1	; () banked
  6763  00043E  5100               	movf	_ic_ptr& (0+255),w,b
  6764  000440  26D9               	addwf	fsr2l,f,c
  6765  000442  0101               	movlb	1	; () banked
  6766  000444  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6767  000446  22DA               	addwfc	fsr2h,f,c
  6768  000448  50DF               	movf	indf2,w,c
  6769  00044A  0100               	movlb	0	; () banked
  6770  00044C  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6771  00044E  0100               	movlb	0	; () banked
  6772  000450  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6773  000452  0D01               	mullw	1
  6774  000454  50F3               	movf	prodl,w,c
  6775  000456  0101               	movlb	1	; () banked
  6776  000458  0101               	movlb	1	; () banked
  6777  00045A  2500               	addwf	_ic_ptr& (0+255),w,b
  6778  00045C  6ED9               	movwf	fsr2l,c
  6779  00045E  50F4               	movf	prodh,w,c
  6780  000460  0101               	movlb	1	; () banked
  6781  000462  0101               	movlb	1	; () banked
  6782  000464  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6783  000466  6EDA               	movwf	fsr2h,c
  6784  000468  0100               	movlb	0	; () banked
  6785  00046A  C0F7  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;my_i2c.c: 222: ic_ptr->buflen++;
  6789  00046E  0101               	movlb	1	; () banked
  6790  000470  EE20 F00A          	lfsr	2,10
  6791  000474  0101               	movlb	1	; () banked
  6792  000476  5100               	movf	_ic_ptr& (0+255),w,b
  6793  000478  26D9               	addwf	fsr2l,f,c
  6794  00047A  0101               	movlb	1	; () banked
  6795  00047C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6796  00047E  22DA               	addwfc	fsr2h,f,c
  6797  000480  2ADF               	incf	indf2,f,c
  6798                           
  6799                           ;my_i2c.c: 223: } else {
  6800  000482  D047               	goto	i2l258
  6801  000484                     i2l286:
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;my_i2c.c: 224: if (SSPSTATbits.R_W == 1) {
  6805  000484  A4C7               	btfss	4039,2,c	;volatile
  6806  000486  D6B6               	goto	i2l3262
  6807                           
  6808                           ; BSR set to: 1
  6809                           ;my_i2c.c: 225: ic_ptr->status = 0x8;
  6810  000488  0101               	movlb	1	; () banked
  6811  00048A  EE20 F00C          	lfsr	2,12
  6812  00048E  0101               	movlb	1	; () banked
  6813  000490  5100               	movf	_ic_ptr& (0+255),w,b
  6814  000492  26D9               	addwf	fsr2l,f,c
  6815  000494  0101               	movlb	1	; () banked
  6816  000496  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6817  000498  22DA               	addwfc	fsr2h,f,c
  6818  00049A  0E08               	movlw	8
  6819  00049C  6EDF               	movwf	indf2,c
  6820                           
  6821                           ; BSR set to: 1
  6822                           ;my_i2c.c: 226: msg_ready = 1;
  6823  00049E  0100               	movlb	0	; () banked
  6824  0004A0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6825  0004A2  0E01               	movlw	1
  6826  0004A4  0100               	movlb	0	; () banked
  6827  0004A6  0100               	movlb	0	; () banked
  6828  0004A8  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6829  0004AA  0100               	movlb	0	; () banked
  6830  0004AC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6831  0004AE                     L9:
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;my_i2c.c: 227: msg_to_send = 1;
  6835  0004AE  0100               	movlb	0	; () banked
  6836  0004B0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6837  0004B2  0E01               	movlw	1
  6838  0004B4  0100               	movlb	0	; () banked
  6839  0004B6  0100               	movlb	0	; () banked
  6840  0004B8  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6841  0004BA  0100               	movlb	0	; () banked
  6842  0004BC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;my_i2c.c: 229: data_read = 0;
  6846  0004BE  0100               	movlb	0	; () banked
  6847  0004C0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6848  0004C2  0E00               	movlw	0
  6849  0004C4  0100               	movlb	0	; () banked
  6850  0004C6  0100               	movlb	0	; () banked
  6851  0004C8  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6852  0004CA                     L6:
  6853  0004CA  0100               	movlb	0	; () banked
  6854  0004CC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6855                           
  6856                           ;my_i2c.c: 230: } else {
  6857  0004CE  D021               	goto	i2l258
  6858  0004D0                     L8:
  6859                           
  6860                           ;my_i2c.c: 233: ic_ptr->status = 0x5;
  6861  0004D0  0101               	movlb	1	; () banked
  6862  0004D2  EE20 F00C          	lfsr	2,12
  6863  0004D6  0101               	movlb	1	; () banked
  6864  0004D8  5100               	movf	_ic_ptr& (0+255),w,b
  6865  0004DA  26D9               	addwf	fsr2l,f,c
  6866  0004DC  0101               	movlb	1	; () banked
  6867  0004DE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6868  0004E0  22DA               	addwfc	fsr2h,f,c
  6869  0004E2  0E05               	movlw	5
  6870  0004E4  D731               	goto	L5
  6871  0004E6                     i2l3332:
  6872  0004E6  0101               	movlb	1	; () banked
  6873  0004E8  EE20 F00C          	lfsr	2,12
  6874  0004EC  0101               	movlb	1	; () banked
  6875  0004EE  5100               	movf	_ic_ptr& (0+255),w,b
  6876  0004F0  26D9               	addwf	fsr2l,f,c
  6877  0004F2  0101               	movlb	1	; () banked
  6878  0004F4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6879  0004F6  22DA               	addwfc	fsr2h,f,c
  6880  0004F8  50DF               	movf	indf2,w,c
  6881                           
  6882                           ; Switch size 1, requested type "space"
  6883                           ; Number of cases is 4, Range of values is 5 to 8
  6884                           ; switch strategies available:
  6885                           ; Name         Instructions Cycles
  6886                           ; simple_byte           13     7 (average)
  6887                           ;	Chosen strategy is simple_byte
  6888  0004FA  0A05               	xorlw	5	; case 5
  6889  0004FC  B4D8               	btfsc	status,2,c
  6890  0004FE  D63C               	goto	i2l260
  6891  000500  0A03               	xorlw	3	; case 6
  6892  000502  B4D8               	btfsc	status,2,c
  6893  000504  D65B               	goto	i2l264
  6894  000506  0A01               	xorlw	1	; case 7
  6895  000508  B4D8               	btfsc	status,2,c
  6896  00050A  D720               	goto	i2l278
  6897  00050C  0A0F               	xorlw	15	; case 8
  6898  00050E  B4D8               	btfsc	status,2,c
  6899  000510  D6D1               	goto	i2l3282
  6900  000512                     i2l258:
  6901                           
  6902                           ;my_i2c.c: 240: }
  6903                           ;my_i2c.c: 243: if (data_read || data_written) {
  6904  000512  0100               	movlb	0	; () banked
  6905  000514  0100               	movlb	0	; () banked
  6906  000516  67FA               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6907  000518  D005               	goto	i2l292
  6908                           
  6909                           ; BSR set to: 0
  6910  00051A  0100               	movlb	0	; () banked
  6911  00051C  0100               	movlb	0	; () banked
  6912  00051E  51F5               	movf	i2c_int_handler@data_written& (0+255),w,b
  6913  000520  B4D8               	btfsc	status,2,c
  6914  000522  D002               	goto	i2l3338
  6915  000524                     i2l292:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;my_i2c.c: 248: if (SSPCON1bits.CKP == 0) {
  6919  000524  A8C6               	btfss	4038,4,c	;volatile
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;my_i2c.c: 249: SSPCON1bits.CKP = 1;
  6923  000526  88C6               	bsf	4038,4,c	;volatile
  6924  000528                     i2l3338:
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;my_i2c.c: 250: }
  6928                           ;my_i2c.c: 251: }
  6929                           ;my_i2c.c: 254: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6930  000528  0101               	movlb	1	; () banked
  6931  00052A  EE20 F00A          	lfsr	2,10
  6932  00052E  0101               	movlb	1	; () banked
  6933  000530  5100               	movf	_ic_ptr& (0+255),w,b
  6934  000532  26D9               	addwf	fsr2l,f,c
  6935  000534  0101               	movlb	1	; () banked
  6936  000536  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6937  000538  22DA               	addwfc	fsr2h,f,c
  6938  00053A  0E08               	movlw	8
  6939  00053C  64DF               	cpfsgt	indf2,c
  6940  00053E  D024               	goto	i2l3344
  6941                           
  6942                           ; BSR set to: 1
  6943  000540  0100               	movlb	0	; () banked
  6944  000542  0100               	movlb	0	; () banked
  6945  000544  67F9               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6946  000546  D020               	goto	i2l3344
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;my_i2c.c: 255: ic_ptr->status = 0x5;
  6950  000548  0101               	movlb	1	; () banked
  6951  00054A  EE20 F00C          	lfsr	2,12
  6952  00054E  0101               	movlb	1	; () banked
  6953  000550  5100               	movf	_ic_ptr& (0+255),w,b
  6954  000552  26D9               	addwf	fsr2l,f,c
  6955  000554  0101               	movlb	1	; () banked
  6956  000556  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6957  000558  22DA               	addwfc	fsr2h,f,c
  6958  00055A  0E05               	movlw	5
  6959  00055C  6EDF               	movwf	indf2,c
  6960                           
  6961                           ;my_i2c.c: 256: ic_ptr->error_count++;
  6962  00055E  0101               	movlb	1	; () banked
  6963  000560  EE20 F00E          	lfsr	2,14
  6964  000564  0101               	movlb	1	; () banked
  6965  000566  5100               	movf	_ic_ptr& (0+255),w,b
  6966  000568  26D9               	addwf	fsr2l,f,c
  6967  00056A  0101               	movlb	1	; () banked
  6968  00056C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6969  00056E  22DA               	addwfc	fsr2h,f,c
  6970  000570  2ADF               	incf	indf2,f,c
  6971                           
  6972                           ;my_i2c.c: 257: ic_ptr->error_code = 0x7;
  6973  000572  0101               	movlb	1	; () banked
  6974  000574  EE20 F00D          	lfsr	2,13
  6975  000578  0101               	movlb	1	; () banked
  6976  00057A  5100               	movf	_ic_ptr& (0+255),w,b
  6977  00057C  26D9               	addwf	fsr2l,f,c
  6978  00057E  0101               	movlb	1	; () banked
  6979  000580  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6980  000582  22DA               	addwfc	fsr2h,f,c
  6981  000584  0E07               	movlw	7
  6982  000586  6EDF               	movwf	indf2,c
  6983  000588                     i2l3344:
  6984                           
  6985                           ;my_i2c.c: 258: }
  6986                           ;my_i2c.c: 260: if (msg_ready) {
  6987  000588  0100               	movlb	0	; () banked
  6988  00058A  0100               	movlb	0	; () banked
  6989  00058C  51F9               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6990  00058E  B4D8               	btfsc	status,2,c
  6991  000590  D030               	goto	i2l3352
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;my_i2c.c: 261: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6995  000592  0101               	movlb	1	; () banked
  6996  000594  EE20 F00B          	lfsr	2,11
  6997  000598  0101               	movlb	1	; () banked
  6998  00059A  5100               	movf	_ic_ptr& (0+255),w,b
  6999  00059C  26D9               	addwf	fsr2l,f,c
  7000  00059E  0101               	movlb	1	; () banked
  7001  0005A0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7002  0005A2  22DA               	addwfc	fsr2h,f,c
  7003  0005A4  0101               	movlb	1	; () banked
  7004  0005A6  EE10 F00A          	lfsr	1,10
  7005  0005AA  0101               	movlb	1	; () banked
  7006  0005AC  5100               	movf	_ic_ptr& (0+255),w,b
  7007  0005AE  26E1               	addwf	fsr1l,f,c
  7008  0005B0  0101               	movlb	1	; () banked
  7009  0005B2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7010  0005B4  22E2               	addwfc	fsr1h,f,c
  7011  0005B6  50E7               	movf	indf1,w,c
  7012  0005B8  0100               	movlb	0	; () banked
  7013  0005BA  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  7014  0005BC  0100               	movlb	0	; () banked
  7015  0005BE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  7016  0005C0  0D01               	mullw	1
  7017  0005C2  50F3               	movf	prodl,w,c
  7018  0005C4  0101               	movlb	1	; () banked
  7019  0005C6  0101               	movlb	1	; () banked
  7020  0005C8  2500               	addwf	_ic_ptr& (0+255),w,b
  7021  0005CA  6EE1               	movwf	fsr1l,c
  7022  0005CC  50F4               	movf	prodh,w,c
  7023  0005CE  0101               	movlb	1	; () banked
  7024  0005D0  0101               	movlb	1	; () banked
  7025  0005D2  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7026  0005D4  6EE2               	movwf	fsr1h,c
  7027  0005D6  CFDF FFE7          	movff	indf2,indf1
  7028                           
  7029                           ; BSR set to: 1
  7030                           ;my_i2c.c: 262: setBrainReqData(ic_ptr->buffer);
  7031  0005DA  0101               	movlb	1	; () banked
  7032  0005DC  C101  F032         	movff	_ic_ptr+1,setBrainReqData@buf+1
  7033  0005E0  0101               	movlb	1	; () banked
  7034  0005E2  C100  F031         	movff	_ic_ptr,setBrainReqData@buf
  7035  0005E6  ECF5  F00C         	call	_setBrainReqData	;wreg free
  7036                           
  7037                           ;my_i2c.c: 265: ic_ptr->buflen = 0;
  7038  0005EA  0101               	movlb	1	; () banked
  7039  0005EC  EE20 F00A          	lfsr	2,10
  7040  0005F0  D04B               	goto	L7
  7041  0005F2                     i2l3352:
  7042  0005F2  0101               	movlb	1	; () banked
  7043  0005F4  EE20 F00E          	lfsr	2,14
  7044  0005F8  0101               	movlb	1	; () banked
  7045  0005FA  5100               	movf	_ic_ptr& (0+255),w,b
  7046  0005FC  26D9               	addwf	fsr2l,f,c
  7047  0005FE  0101               	movlb	1	; () banked
  7048  000600  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7049  000602  22DA               	addwfc	fsr2h,f,c
  7050  000604  50DF               	movf	indf2,w,c
  7051  000606  B4D8               	btfsc	status,2,c
  7052  000608  D047               	goto	i2l3360
  7053                           
  7054                           ; BSR set to: 1
  7055                           ;my_i2c.c: 267: error_buf[0] = ic_ptr->error_count;
  7056  00060A  0101               	movlb	1	; () banked
  7057  00060C  EE20 F00E          	lfsr	2,14
  7058  000610  0101               	movlb	1	; () banked
  7059  000612  5100               	movf	_ic_ptr& (0+255),w,b
  7060  000614  26D9               	addwf	fsr2l,f,c
  7061  000616  0101               	movlb	1	; () banked
  7062  000618  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7063  00061A  22DA               	addwfc	fsr2h,f,c
  7064  00061C  50DF               	movf	indf2,w,c
  7065  00061E  0100               	movlb	0	; () banked
  7066  000620  0100               	movlb	0	; () banked
  7067  000622  6FF2               	movwf	i2c_int_handler@error_buf& (0+255),b
  7068                           
  7069                           ;my_i2c.c: 268: error_buf[1] = ic_ptr->error_code;
  7070  000624  0101               	movlb	1	; () banked
  7071  000626  EE20 F00D          	lfsr	2,13
  7072  00062A  0101               	movlb	1	; () banked
  7073  00062C  5100               	movf	_ic_ptr& (0+255),w,b
  7074  00062E  26D9               	addwf	fsr2l,f,c
  7075  000630  0101               	movlb	1	; () banked
  7076  000632  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7077  000634  22DA               	addwfc	fsr2h,f,c
  7078  000636  50DF               	movf	indf2,w,c
  7079  000638  0100               	movlb	0	; () banked
  7080  00063A  0100               	movlb	0	; () banked
  7081  00063C  6FF3               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7082                           
  7083                           ;my_i2c.c: 269: error_buf[2] = ic_ptr->event_count;
  7084  00063E  0101               	movlb	1	; () banked
  7085  000640  EE20 F00B          	lfsr	2,11
  7086  000644  0101               	movlb	1	; () banked
  7087  000646  5100               	movf	_ic_ptr& (0+255),w,b
  7088  000648  26D9               	addwf	fsr2l,f,c
  7089  00064A  0101               	movlb	1	; () banked
  7090  00064C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7091  00064E  22DA               	addwfc	fsr2h,f,c
  7092  000650  50DF               	movf	indf2,w,c
  7093  000652  0100               	movlb	0	; () banked
  7094  000654  0100               	movlb	0	; () banked
  7095  000656  6FF4               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;my_i2c.c: 270: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7099  000658  0100               	movlb	0	; () banked
  7100  00065A  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  7101  00065C  0E29               	movlw	41
  7102  00065E  0100               	movlb	0	; () banked
  7103  000660  0100               	movlb	0	; () banked
  7104  000662  6F85               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  7105  000664  0100               	movlb	0	; () banked
  7106  000666  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  7107  000668  0100               	movlb	0	; () banked
  7108  00066A  0E00               	movlw	high i2c_int_handler@error_buf
  7109  00066C  0100               	movlb	0	; () banked
  7110  00066E  0100               	movlb	0	; () banked
  7111  000670  6F87               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  7112  000672  0100               	movlb	0	; () banked
  7113  000674  0EF2               	movlw	low i2c_int_handler@error_buf
  7114  000676  0100               	movlb	0	; () banked
  7115  000678  0100               	movlb	0	; () banked
  7116  00067A  6F86               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  7117  00067C  0E03               	movlw	3
  7118  00067E  EC4F  F00D         	call	i2_ToMainHigh_sendmsg
  7119                           
  7120                           ;my_i2c.c: 271: ic_ptr->error_count = 0;
  7121  000682  0101               	movlb	1	; () banked
  7122  000684  EE20 F00E          	lfsr	2,14
  7123  000688                     L7:
  7124  000688  0101               	movlb	1	; () banked
  7125  00068A  5100               	movf	_ic_ptr& (0+255),w,b
  7126  00068C  26D9               	addwf	fsr2l,f,c
  7127  00068E  0101               	movlb	1	; () banked
  7128  000690  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7129  000692  22DA               	addwfc	fsr2h,f,c
  7130  000694  0E00               	movlw	0
  7131  000696  6EDF               	movwf	indf2,c
  7132  000698                     i2l3360:
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;my_i2c.c: 272: }
  7136                           ;my_i2c.c: 273: if (msg_to_send) {
  7137  000698  0100               	movlb	0	; () banked
  7138  00069A  0100               	movlb	0	; () banked
  7139  00069C  51F8               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7140  00069E  B4D8               	btfsc	status,2,c
  7141  0006A0  0012               	return	
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;my_i2c.c: 286: sendRequestedData();
  7145  0006A2  ECE3  F00D         	call	_sendRequestedData	;wreg free
  7146                           
  7147                           ;my_i2c.c: 287: msg_to_send = 0;
  7148  0006A6  0100               	movlb	0	; () banked
  7149  0006A8  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  7150  0006AA  0E00               	movlw	0
  7151  0006AC  0100               	movlb	0	; () banked
  7152  0006AE  0100               	movlb	0	; () banked
  7153  0006B0  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7154  0006B2  0100               	movlb	0	; () banked
  7155  0006B4  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  7156  0006B6  0012               	return	
  7157  0006B8                     __end_of_i2c_int_handler:
  7158                           	opt stack 0
  7159                           pclatu	equ	0xFFB
  7160                           pclath	equ	0xFFA
  7161                           tblptru	equ	0xFF8
  7162                           tblptrh	equ	0xFF7
  7163                           tblptrl	equ	0xFF6
  7164                           tablat	equ	0xFF5
  7165                           prodh	equ	0xFF4
  7166                           prodl	equ	0xFF3
  7167                           intcon	equ	0xFF2
  7168                           postinc0	equ	0xFEE
  7169                           fsr0h	equ	0xFEA
  7170                           fsr0l	equ	0xFE9
  7171                           wreg	equ	0xFE8
  7172                           indf1	equ	0xFE7
  7173                           postdec1	equ	0xFE5
  7174                           fsr1h	equ	0xFE2
  7175                           fsr1l	equ	0xFE1
  7176                           bsr	equ	0xFE0
  7177                           indf2	equ	0xFDF
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function i2_ToMainHigh_sendmsg *****************
  7183 ;; Defined at:
  7184 ;;		line 127 in file "../src/messages.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;  length          1    wreg     unsigned char 
  7187 ;;  msgtype         1    5[BANK0 ] unsigned char 
  7188 ;;  data            2    6[BANK0 ] PTR void 
  7189 ;;		 -> ADCBuffer(5), reqADData@buf(10), i2c_int_handler@error_buf(3), 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  length          1    8[BANK0 ] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      char 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7201 ;;      Params:         0       3       0       0       0
  7202 ;;      Locals:         0       1       0       0       0
  7203 ;;      Temps:          0       0       0       0       0
  7204 ;;      Totals:         0       4       0       0       0
  7205 ;;Total ram usage:        4 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    2
  7208 ;; This function calls:
  7209 ;;		i2_send_msg
  7210 ;; This function is called by:
  7211 ;;		_i2c_int_handler
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text43
  7216  001A9E                     __ptext43:
  7217                           	opt stack 0
  7218  001A9E                     i2_ToMainHigh_sendmsg:
  7219                           	opt stack 17
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;incstack = 0
  7223                           ;i2ToMainHigh_sendmsg@length stored from wreg
  7224  001A9E  CFE8 F088          	movff	wreg,i2ToMainHigh_sendmsg@length
  7225                           
  7226                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7227                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  7228  001AA2  0101               	movlb	1	; () banked
  7229  001AA4  0E01               	movlw	high _ToMainHigh_MQ
  7230  001AA6  6E3A               	movwf	i2send_msg@qptr+1,c
  7231  001AA8  0101               	movlb	1	; () banked
  7232  001AAA  0E02               	movlw	low _ToMainHigh_MQ
  7233  001AAC  6E39               	movwf	i2send_msg@qptr,c
  7234  001AAE  C088  F03B         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  7235  001AB2  C085  F03C         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7236  001AB6  0100               	movlb	0	; () banked
  7237  001AB8  C087  F03E         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7238  001ABC  0100               	movlb	0	; () banked
  7239  001ABE  C086  F03D         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  7240  001AC2  EC8C  F006         	call	i2_send_msg	;wreg free
  7241  001AC6  0012               	return	
  7242  001AC8                     __end_ofi2_ToMainHigh_sendmsg:
  7243                           	opt stack 0
  7244                           pclatu	equ	0xFFB
  7245                           pclath	equ	0xFFA
  7246                           tblptru	equ	0xFF8
  7247                           tblptrh	equ	0xFF7
  7248                           tblptrl	equ	0xFF6
  7249                           tablat	equ	0xFF5
  7250                           prodh	equ	0xFF4
  7251                           prodl	equ	0xFF3
  7252                           intcon	equ	0xFF2
  7253                           postinc0	equ	0xFEE
  7254                           fsr0h	equ	0xFEA
  7255                           fsr0l	equ	0xFE9
  7256                           wreg	equ	0xFE8
  7257                           indf1	equ	0xFE7
  7258                           postdec1	equ	0xFE5
  7259                           fsr1h	equ	0xFE2
  7260                           fsr1l	equ	0xFE1
  7261                           bsr	equ	0xFE0
  7262                           indf2	equ	0xFDF
  7263                           fsr2h	equ	0xFDA
  7264                           fsr2l	equ	0xFD9
  7265                           status	equ	0xFD8
  7266                           
  7267 ;; *************** function i2_send_msg *****************
  7268 ;; Defined at:
  7269 ;;		line 25 in file "../src/messages.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7272 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7273 ;;  length          1   58[COMRAM] unsigned char 
  7274 ;;  msgtype         1   59[COMRAM] unsigned char 
  7275 ;;  data            2   60[COMRAM] PTR void 
  7276 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  7279 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7280 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7281 ;;  send_msg        2    0[BANK0 ] unsigned int 
  7282 ;;  send_msg        1    2[BANK0 ] unsigned char 
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      char 
  7285 ;; Registers used:
  7286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7292 ;;      Params:         6       0       0       0       0
  7293 ;;      Locals:         0       5       0       0       0
  7294 ;;      Temps:          1       0       0       0       0
  7295 ;;      Totals:         7       5       0       0       0
  7296 ;;Total ram usage:       12 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; Hardware stack levels required when called:    1
  7299 ;; This function calls:
  7300 ;;		i2_memcpy
  7301 ;; This function is called by:
  7302 ;;		i2_ToMainHigh_sendmsg
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text44
  7307  000D18                     __ptext44:
  7308                           	opt stack 0
  7309  000D18                     i2_send_msg:
  7310                           	opt stack 17
  7311                           
  7312                           ;messages.c: 26: unsigned char slot;
  7313                           ;messages.c: 28: msg *qmsg;
  7314                           ;messages.c: 29: size_t tlength = length;
  7315                           
  7316                           ;incstack = 0
  7317  000D18  0100               	movlb	0	; () banked
  7318  000D1A  C03B  F080         	movff	i2send_msg@length,i2send_msg@tlength
  7319  000D1E  0100               	movlb	0	; () banked
  7320  000D20  0100               	movlb	0	; () banked
  7321  000D22  6B81               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;messages.c: 39: slot = qptr->cur_write_ind;
  7325  000D24  EE20 F034          	lfsr	2,52
  7326  000D28  5039               	movf	i2send_msg@qptr,w,c
  7327  000D2A  26D9               	addwf	fsr2l,f,c
  7328  000D2C  503A               	movf	i2send_msg@qptr+1,w,c
  7329  000D2E  22DA               	addwfc	fsr2h,f,c
  7330  000D30  50DF               	movf	indf2,w,c
  7331  000D32  0100               	movlb	0	; () banked
  7332  000D34  0100               	movlb	0	; () banked
  7333  000D36  6F82               	movwf	i2send_msg@slot& (0+255),b
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  7337  000D38  0100               	movlb	0	; () banked
  7338  000D3A  0100               	movlb	0	; () banked
  7339  000D3C  5182               	movf	i2send_msg@slot& (0+255),w,b
  7340  000D3E  0D0D               	mullw	13
  7341  000D40  50F3               	movf	prodl,w,c
  7342  000D42  2439               	addwf	i2send_msg@qptr,w,c
  7343  000D44  0100               	movlb	0	; () banked
  7344  000D46  0100               	movlb	0	; () banked
  7345  000D48  6F83               	movwf	i2send_msg@qmsg& (0+255),b
  7346  000D4A  50F4               	movf	prodh,w,c
  7347  000D4C  203A               	addwfc	i2send_msg@qptr+1,w,c
  7348  000D4E  0100               	movlb	0	; () banked
  7349  000D50  6F84               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;messages.c: 42: if (qmsg->full != 0) {
  7353  000D52  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7354  000D56  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7355  000D5A  50DF               	movf	indf2,w,c
  7356  000D5C  B4D8               	btfsc	status,2,c
  7357  000D5E  D002               	goto	i2l3824
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;messages.c: 43: return (-1);
  7361  000D60  0EFF               	movlw	255
  7362  000D62  0012               	return	
  7363  000D64                     i2l3824:
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;messages.c: 44: }
  7367                           ;messages.c: 47: qmsg->length = length;
  7368  000D64  0100               	movlb	0	; () banked
  7369  000D66  EE20 F001          	lfsr	2,1
  7370  000D6A  0100               	movlb	0	; () banked
  7371  000D6C  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  7372  000D6E  26D9               	addwf	fsr2l,f,c
  7373  000D70  0100               	movlb	0	; () banked
  7374  000D72  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7375  000D74  22DA               	addwfc	fsr2h,f,c
  7376  000D76  C03B  FFDF         	movff	i2send_msg@length,indf2
  7377                           
  7378                           ;messages.c: 48: qmsg->msgtype = msgtype;
  7379  000D7A  0100               	movlb	0	; () banked
  7380  000D7C  EE20 F002          	lfsr	2,2
  7381  000D80  0100               	movlb	0	; () banked
  7382  000D82  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  7383  000D84  26D9               	addwf	fsr2l,f,c
  7384  000D86  0100               	movlb	0	; () banked
  7385  000D88  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7386  000D8A  22DA               	addwfc	fsr2h,f,c
  7387  000D8C  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  7391  000D90  0E03               	movlw	3
  7392  000D92  0100               	movlb	0	; () banked
  7393  000D94  0100               	movlb	0	; () banked
  7394  000D96  2583               	addwf	i2send_msg@qmsg& (0+255),w,b
  7395  000D98  6E2F               	movwf	i2memcpy@d1,c
  7396  000D9A  0E00               	movlw	0
  7397  000D9C  0100               	movlb	0	; () banked
  7398  000D9E  0100               	movlb	0	; () banked
  7399  000DA0  2184               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7400  000DA2  6E30               	movwf	i2memcpy@d1+1,c
  7401  000DA4  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7402  000DA8  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  7403  000DAC  C080  F033         	movff	i2send_msg@tlength,i2memcpy@n
  7404  000DB0  C081  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7405  000DB4  EC04  F00C         	call	i2_memcpy	;wreg free
  7406                           
  7407                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7408  000DB8  EE20 F034          	lfsr	2,52
  7409  000DBC  5039               	movf	i2send_msg@qptr,w,c
  7410  000DBE  26D9               	addwf	fsr2l,f,c
  7411  000DC0  503A               	movf	i2send_msg@qptr+1,w,c
  7412  000DC2  22DA               	addwfc	fsr2h,f,c
  7413  000DC4  EE10 F034          	lfsr	1,52
  7414  000DC8  5039               	movf	i2send_msg@qptr,w,c
  7415  000DCA  26E1               	addwf	fsr1l,f,c
  7416  000DCC  503A               	movf	i2send_msg@qptr+1,w,c
  7417  000DCE  22E2               	addwfc	fsr1h,f,c
  7418  000DD0  50E7               	movf	indf1,w,c
  7419  000DD2  6E3F               	movwf	??i2_send_msg& (0+255),c
  7420  000DD4  283F               	incf	??i2_send_msg,w,c
  7421  000DD6  0B03               	andlw	3
  7422  000DD8  6EDF               	movwf	indf2,c
  7423                           
  7424                           ;messages.c: 60: qmsg->full = 1;
  7425  000DDA  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7426  000DDE  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7427  000DE2  0E01               	movlw	1
  7428  000DE4  6EDF               	movwf	indf2,c
  7429                           
  7430                           ;messages.c: 61: return (1);
  7431  000DE6  0E01               	movlw	1
  7432  000DE8  0012               	return	
  7433  000DEA                     __end_ofi2_send_msg:
  7434                           	opt stack 0
  7435                           pclatu	equ	0xFFB
  7436                           pclath	equ	0xFFA
  7437                           tblptru	equ	0xFF8
  7438                           tblptrh	equ	0xFF7
  7439                           tblptrl	equ	0xFF6
  7440                           tablat	equ	0xFF5
  7441                           prodh	equ	0xFF4
  7442                           prodl	equ	0xFF3
  7443                           intcon	equ	0xFF2
  7444                           postinc0	equ	0xFEE
  7445                           fsr0h	equ	0xFEA
  7446                           fsr0l	equ	0xFE9
  7447                           wreg	equ	0xFE8
  7448                           indf1	equ	0xFE7
  7449                           postdec1	equ	0xFE5
  7450                           fsr1h	equ	0xFE2
  7451                           fsr1l	equ	0xFE1
  7452                           bsr	equ	0xFE0
  7453                           indf2	equ	0xFDF
  7454                           fsr2h	equ	0xFDA
  7455                           fsr2l	equ	0xFD9
  7456                           status	equ	0xFD8
  7457                           
  7458 ;; *************** function i2_memcpy *****************
  7459 ;; Defined at:
  7460 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  d1              2   46[COMRAM] PTR void 
  7463 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7464 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7465 ;;		 -> main@msgbuffer(11), 
  7466 ;;  s1              2   48[COMRAM] PTR const void 
  7467 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7468 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7469 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  7470 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7471 ;;  n               2   50[COMRAM] unsigned int 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  7474 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7475 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7476 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  7477 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7478 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  7479 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7480 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7481 ;;		 -> main@msgbuffer(11), 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  2   46[COMRAM] PTR void 
  7484 ;; Registers used:
  7485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7491 ;;      Params:         6       0       0       0       0
  7492 ;;      Locals:         4       0       0       0       0
  7493 ;;      Temps:          0       0       0       0       0
  7494 ;;      Totals:        10       0       0       0       0
  7495 ;;Total ram usage:       10 bytes
  7496 ;; Hardware stack levels used:    1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		i2_send_msg
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text45
  7505  001808                     __ptext45:
  7506                           	opt stack 0
  7507  001808                     i2_memcpy:
  7508                           	opt stack 17
  7509                           
  7510                           ;incstack = 0
  7511  001808  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7512  00180C  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  7513  001810  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7514  001814  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  7515  001818  D00E               	goto	i2l3880
  7516  00181A                     i2l3874:
  7517  00181A  C037  FFD9         	movff	i2memcpy@s,fsr2l
  7518  00181E  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  7519  001822  C035  FFE1         	movff	i2memcpy@d,fsr1l
  7520  001826  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  7521  00182A  CFDF FFE7          	movff	indf2,indf1
  7522  00182E  4A37               	infsnz	i2memcpy@s,f,c
  7523  001830  2A38               	incf	i2memcpy@s+1,f,c
  7524  001832  4A35               	infsnz	i2memcpy@d,f,c
  7525  001834  2A36               	incf	i2memcpy@d+1,f,c
  7526  001836                     i2l3880:
  7527  001836  0633               	decf	i2memcpy@n,f,c
  7528  001838  A0D8               	btfss	status,0,c
  7529  00183A  0634               	decf	i2memcpy@n+1,f,c
  7530  00183C  2833               	incf	i2memcpy@n& (0+255),w,c
  7531  00183E  B4D8               	btfsc	status,2,c
  7532  001840  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  7533  001842  B4D8               	btfsc	status,2,c
  7534                           
  7535                           ;	Return value of i2_memcpy is never used
  7536  001844  0012               	return	
  7537  001846  D7E9               	goto	i2l3874
  7538  001848                     __end_ofi2_memcpy:
  7539                           	opt stack 0
  7540                           pclatu	equ	0xFFB
  7541                           pclath	equ	0xFFA
  7542                           tblptru	equ	0xFF8
  7543                           tblptrh	equ	0xFF7
  7544                           tblptrl	equ	0xFF6
  7545                           tablat	equ	0xFF5
  7546                           prodh	equ	0xFF4
  7547                           prodl	equ	0xFF3
  7548                           intcon	equ	0xFF2
  7549                           postinc0	equ	0xFEE
  7550                           fsr0h	equ	0xFEA
  7551                           fsr0l	equ	0xFE9
  7552                           wreg	equ	0xFE8
  7553                           indf1	equ	0xFE7
  7554                           postdec1	equ	0xFE5
  7555                           fsr1h	equ	0xFE2
  7556                           fsr1l	equ	0xFE1
  7557                           bsr	equ	0xFE0
  7558                           indf2	equ	0xFDF
  7559                           fsr2h	equ	0xFDA
  7560                           fsr2l	equ	0xFD9
  7561                           status	equ	0xFD8
  7562                           
  7563 ;; *************** function _setBrainReqData *****************
  7564 ;; Defined at:
  7565 ;;		line 16 in file "../src/sensorcomm.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  buf             2   48[COMRAM] PTR unsigned char 
  7568 ;;		 -> NULL(0), main@ic(121), 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  tempBrain       2   50[COMRAM] PTR struct .
  7571 ;;		 -> NULL(0), main@ic(121), 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;		None               void
  7574 ;; Registers used:
  7575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7581 ;;      Params:         2       0       0       0       0
  7582 ;;      Locals:         2       0       0       0       0
  7583 ;;      Temps:          0       0       0       0       0
  7584 ;;      Totals:         4       0       0       0       0
  7585 ;;Total ram usage:        4 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    1
  7588 ;; This function calls:
  7589 ;;		_unpackBrainMsg
  7590 ;; This function is called by:
  7591 ;;		_i2c_int_handler
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text46
  7596  0019EA                     __ptext46:
  7597                           	opt stack 0
  7598  0019EA                     _setBrainReqData:
  7599                           	opt stack 18
  7600                           
  7601                           ;sensorcomm.c: 18: BrainMsg* tempBrain = unpackBrainMsg(buf);
  7602                           
  7603                           ;incstack = 0
  7604  0019EA  C032  F030         	movff	setBrainReqData@buf+1,unpackBrainMsg@buf+1
  7605  0019EE  C031  F02F         	movff	setBrainReqData@buf,unpackBrainMsg@buf
  7606  0019F2  EC0A  F00E         	call	_unpackBrainMsg	;wreg free
  7607  0019F6  C02F  F033         	movff	?_unpackBrainMsg,setBrainReqData@tempBrain
  7608  0019FA  C030  F034         	movff	?_unpackBrainMsg+1,setBrainReqData@tempBrain+1
  7609                           
  7610                           ;sensorcomm.c: 21: BrainMsgRecv.flags = tempBrain->flags;
  7611  0019FE  C033  FFD9         	movff	setBrainReqData@tempBrain,fsr2l
  7612  001A02  C034  FFDA         	movff	setBrainReqData@tempBrain+1,fsr2h
  7613  001A06  50DF               	movf	indf2,w,c
  7614  001A08  6E40               	movwf	_BrainMsgRecv,c
  7615                           
  7616                           ;sensorcomm.c: 22: BrainMsgRecv.sensorMask = tempBrain->sensorMask;
  7617  001A0A  EE20 F001          	lfsr	2,1
  7618  001A0E  5033               	movf	setBrainReqData@tempBrain,w,c
  7619  001A10  26D9               	addwf	fsr2l,f,c
  7620  001A12  5034               	movf	setBrainReqData@tempBrain+1,w,c
  7621  001A14  22DA               	addwfc	fsr2h,f,c
  7622  001A16  50DF               	movf	indf2,w,c
  7623  001A18  6E41               	movwf	_BrainMsgRecv+1,c
  7624  001A1A  0012               	return	
  7625  001A1C                     __end_of_setBrainReqData:
  7626                           	opt stack 0
  7627                           pclatu	equ	0xFFB
  7628                           pclath	equ	0xFFA
  7629                           tblptru	equ	0xFF8
  7630                           tblptrh	equ	0xFF7
  7631                           tblptrl	equ	0xFF6
  7632                           tablat	equ	0xFF5
  7633                           prodh	equ	0xFF4
  7634                           prodl	equ	0xFF3
  7635                           intcon	equ	0xFF2
  7636                           postinc0	equ	0xFEE
  7637                           fsr0h	equ	0xFEA
  7638                           fsr0l	equ	0xFE9
  7639                           wreg	equ	0xFE8
  7640                           indf1	equ	0xFE7
  7641                           postdec1	equ	0xFE5
  7642                           fsr1h	equ	0xFE2
  7643                           fsr1l	equ	0xFE1
  7644                           bsr	equ	0xFE0
  7645                           indf2	equ	0xFDF
  7646                           fsr2h	equ	0xFDA
  7647                           fsr2l	equ	0xFD9
  7648                           status	equ	0xFD8
  7649                           
  7650 ;; *************** function _unpackBrainMsg *****************
  7651 ;; Defined at:
  7652 ;;		line 42 in file "../../../../common/communication/brain_rover.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  buf             2   46[COMRAM] PTR unsigned char 
  7655 ;;		 -> NULL(0), main@ic(121), 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  2   46[COMRAM] PTR struct .
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7667 ;;      Params:         2       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0
  7670 ;;      Totals:         2       0       0       0       0
  7671 ;;Total ram usage:        2 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_setBrainReqData
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text47
  7681  001C14                     __ptext47:
  7682                           	opt stack 0
  7683  001C14                     _unpackBrainMsg:
  7684                           	opt stack 18
  7685                           
  7686                           ;brain_rover.c: 43: return (BrainMsg*) buf;
  7687                           
  7688                           ;incstack = 0
  7689  001C14  C030  F030         	movff	unpackBrainMsg@buf+1,?_unpackBrainMsg+1
  7690  001C18  C02F  F02F         	movff	unpackBrainMsg@buf,?_unpackBrainMsg
  7691  001C1C  0012               	return	
  7692  001C1E                     __end_of_unpackBrainMsg:
  7693                           	opt stack 0
  7694                           pclatu	equ	0xFFB
  7695                           pclath	equ	0xFFA
  7696                           tblptru	equ	0xFF8
  7697                           tblptrh	equ	0xFF7
  7698                           tblptrl	equ	0xFF6
  7699                           tablat	equ	0xFF5
  7700                           prodh	equ	0xFF4
  7701                           prodl	equ	0xFF3
  7702                           intcon	equ	0xFF2
  7703                           postinc0	equ	0xFEE
  7704                           fsr0h	equ	0xFEA
  7705                           fsr0l	equ	0xFE9
  7706                           wreg	equ	0xFE8
  7707                           indf1	equ	0xFE7
  7708                           postdec1	equ	0xFE5
  7709                           fsr1h	equ	0xFE2
  7710                           fsr1l	equ	0xFE1
  7711                           bsr	equ	0xFE0
  7712                           indf2	equ	0xFDF
  7713                           fsr2h	equ	0xFDA
  7714                           fsr2l	equ	0xFD9
  7715                           status	equ	0xFD8
  7716                           
  7717 ;; *************** function _sendRequestedData *****************
  7718 ;; Defined at:
  7719 ;;		line 25 in file "../src/sensorcomm.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;		None               void
  7726 ;; Registers used:
  7727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7733 ;;      Params:         0       0       0       0       0
  7734 ;;      Locals:         0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0
  7736 ;;      Totals:         0       0       0       0       0
  7737 ;;Total ram usage:        0 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    3
  7740 ;; This function calls:
  7741 ;;		_sendADdata
  7742 ;;		i2_resetADacc
  7743 ;; This function is called by:
  7744 ;;		_i2c_int_handler
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           	psect	text48
  7749  001BC6                     __ptext48:
  7750                           	opt stack 0
  7751  001BC6                     _sendRequestedData:
  7752                           	opt stack 16
  7753                           
  7754                           ;sensorcomm.c: 26: if(BrainMsgRecv.flags == 1){
  7755                           
  7756                           ;incstack = 0
  7757  001BC6  0440               	decf	_BrainMsgRecv,w,c
  7758  001BC8  A4D8               	btfss	status,2,c
  7759  001BCA  0012               	return	
  7760                           
  7761                           ;sensorcomm.c: 27: if(BrainMsgRecv.sensorMask == 0){
  7762  001BCC  6641               	tstfsz	_BrainMsgRecv+1,c
  7763  001BCE  0012               	return	
  7764                           
  7765                           ;sensorcomm.c: 28: sendADdata();
  7766  001BD0  EC93  F009         	call	_sendADdata	;wreg free
  7767                           
  7768                           ;sensorcomm.c: 29: resetADacc();
  7769  001BD4  EC0F  F00B         	call	i2_resetADacc	;wreg free
  7770  001BD8  0012               	return	
  7771  001BDA                     __end_of_sendRequestedData:
  7772                           	opt stack 0
  7773                           pclatu	equ	0xFFB
  7774                           pclath	equ	0xFFA
  7775                           tblptru	equ	0xFF8
  7776                           tblptrh	equ	0xFF7
  7777                           tblptrl	equ	0xFF6
  7778                           tablat	equ	0xFF5
  7779                           prodh	equ	0xFF4
  7780                           prodl	equ	0xFF3
  7781                           intcon	equ	0xFF2
  7782                           postinc0	equ	0xFEE
  7783                           fsr0h	equ	0xFEA
  7784                           fsr0l	equ	0xFE9
  7785                           wreg	equ	0xFE8
  7786                           indf1	equ	0xFE7
  7787                           postdec1	equ	0xFE5
  7788                           fsr1h	equ	0xFE2
  7789                           fsr1l	equ	0xFE1
  7790                           bsr	equ	0xFE0
  7791                           indf2	equ	0xFDF
  7792                           fsr2h	equ	0xFDA
  7793                           fsr2l	equ	0xFD9
  7794                           status	equ	0xFD8
  7795                           
  7796 ;; *************** function i2_resetADacc *****************
  7797 ;; Defined at:
  7798 ;;		line 72 in file "../src/sensorcomm.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  resetADacc      2   49[COMRAM] int 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;		None               void
  7805 ;; Registers used:
  7806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7812 ;;      Params:         0       0       0       0       0
  7813 ;;      Locals:         2       0       0       0       0
  7814 ;;      Temps:          3       0       0       0       0
  7815 ;;      Totals:         5       0       0       0       0
  7816 ;;Total ram usage:        5 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_sendRequestedData
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text49
  7826  00161E                     __ptext49:
  7827                           	opt stack 0
  7828  00161E                     i2_resetADacc:
  7829                           	opt stack 18
  7830                           
  7831                           ;sensorcomm.c: 73: int i = 0;
  7832                           
  7833                           ;incstack = 0
  7834  00161E  0E00               	movlw	0
  7835  001620  6E33               	movwf	i2resetADacc@i+1,c
  7836  001622  0E00               	movlw	0
  7837  001624  6E32               	movwf	i2resetADacc@i,c
  7838  001626  D00C               	goto	i2l3858
  7839  001628                     i2l3854:
  7840                           
  7841                           ;sensorcomm.c: 75: ADacc.data[i].data = 0;
  7842  001628  0102               	movlb	2	; () banked
  7843  00162A  0E01               	movlw	low (_ADacc+1)
  7844  00162C  2432               	addwf	i2resetADacc@i,w,c
  7845  00162E  6ED9               	movwf	fsr2l,c
  7846  001630  0102               	movlb	2	; () banked
  7847  001632  0E02               	movlw	high (_ADacc+1)
  7848  001634  2033               	addwfc	i2resetADacc@i+1,w,c
  7849  001636  6EDA               	movwf	fsr2h,c
  7850  001638  0E00               	movlw	0
  7851  00163A  6EDF               	movwf	indf2,c
  7852                           
  7853                           ; BSR set to: 2
  7854  00163C  4A32               	infsnz	i2resetADacc@i,f,c
  7855  00163E  2A33               	incf	i2resetADacc@i+1,f,c
  7856  001640                     i2l3858:
  7857  001640  0102               	movlb	2	; () banked
  7858  001642  0102               	movlb	2	; () banked
  7859  001644  5100               	movf	_ADacc& (0+255),w,b
  7860  001646  6E2F               	movwf	??i2_resetADacc& (0+255),c
  7861  001648  6A30               	clrf	(??i2_resetADacc+1)& (0+255),c
  7862  00164A  5033               	movf	i2resetADacc@i+1,w,c
  7863  00164C  0A80               	xorlw	128
  7864  00164E  6E31               	movwf	(??i2_resetADacc+2)& (0+255),c
  7865  001650  502F               	movf	??i2_resetADacc,w,c
  7866  001652  5C32               	subwf	i2resetADacc@i,w,c
  7867  001654  5030               	movf	??i2_resetADacc+1,w,c
  7868  001656  0A80               	xorlw	128
  7869  001658  5831               	subwfb	(??i2_resetADacc+2)& (0+255),w,c
  7870  00165A  A0D8               	btfss	status,0,c
  7871  00165C  D7E5               	goto	i2l3854
  7872                           
  7873                           ; BSR set to: 2
  7874                           ;sensorcomm.c: 76: }
  7875                           ;sensorcomm.c: 77: ADacc.len = 0;
  7876                           
  7877                           ; BSR set to: 2
  7878  00165E  6E2F               	movwf	??i2_resetADacc& (0+255),c
  7879  001660  0E00               	movlw	0
  7880  001662  0102               	movlb	2	; () banked
  7881  001664  0102               	movlb	2	; () banked
  7882  001666  6F00               	movwf	_ADacc& (0+255),b
  7883  001668  502F               	movf	??i2_resetADacc& (0+255),w,c
  7884                           
  7885                           ; BSR set to: 2
  7886  00166A  0012               	return	
  7887  00166C                     __end_ofi2_resetADacc:
  7888                           	opt stack 0
  7889                           pclatu	equ	0xFFB
  7890                           pclath	equ	0xFFA
  7891                           tblptru	equ	0xFF8
  7892                           tblptrh	equ	0xFF7
  7893                           tblptrl	equ	0xFF6
  7894                           tablat	equ	0xFF5
  7895                           prodh	equ	0xFF4
  7896                           prodl	equ	0xFF3
  7897                           intcon	equ	0xFF2
  7898                           postinc0	equ	0xFEE
  7899                           fsr0h	equ	0xFEA
  7900                           fsr0l	equ	0xFE9
  7901                           wreg	equ	0xFE8
  7902                           indf1	equ	0xFE7
  7903                           postdec1	equ	0xFE5
  7904                           fsr1h	equ	0xFE2
  7905                           fsr1l	equ	0xFE1
  7906                           bsr	equ	0xFE0
  7907                           indf2	equ	0xFDF
  7908                           fsr2h	equ	0xFDA
  7909                           fsr2l	equ	0xFD9
  7910                           status	equ	0xFD8
  7911                           
  7912 ;; *************** function _sendADdata *****************
  7913 ;; Defined at:
  7914 ;;		line 34 in file "../src/sensorcomm.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;		None
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  outBuff       103    8[BANK0 ] unsigned char [103]
  7919 ;;  bytes_packed    2  111[BANK0 ] int 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;		None               void
  7922 ;; Registers used:
  7923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7929 ;;      Params:         0       0       0       0       0
  7930 ;;      Locals:         0     105       0       0       0
  7931 ;;      Temps:          0       0       0       0       0
  7932 ;;      Totals:         0     105       0       0       0
  7933 ;;Total ram usage:      105 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:    2
  7936 ;; This function calls:
  7937 ;;		_packADData
  7938 ;;		i2_start_i2c_slave_reply
  7939 ;; This function is called by:
  7940 ;;		_sendRequestedData
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text50
  7945  001326                     __ptext50:
  7946                           	opt stack 0
  7947  001326                     _sendADdata:
  7948                           	opt stack 16
  7949                           
  7950                           ;sensorcomm.c: 36: char outBuff[103];
  7951                           ;sensorcomm.c: 37: int bytes_packed = packADData( ADacc.data, ADacc.len, outBuff, sizeof
      +                          (outBuff));
  7952                           
  7953                           ; BSR set to: 2
  7954                           ;incstack = 0
  7955  001326  0102               	movlb	2	; () banked
  7956  001328  0E02               	movlw	high (_ADacc+1)
  7957  00132A  0100               	movlb	0	; () banked
  7958  00132C  0100               	movlb	0	; () banked
  7959  00132E  6F81               	movwf	(packADData@data+1)& (0+255),b
  7960  001330  0102               	movlb	2	; () banked
  7961  001332  0E01               	movlw	low (_ADacc+1)
  7962  001334  0100               	movlb	0	; () banked
  7963  001336  0100               	movlb	0	; () banked
  7964  001338  6F80               	movwf	packADData@data& (0+255),b
  7965  00133A  0102               	movlb	2	; () banked
  7966  00133C  0100               	movlb	0	; () banked
  7967  00133E  C200  F082         	movff	_ADacc,packADData@len
  7968  001342  0100               	movlb	0	; () banked
  7969  001344  0100               	movlb	0	; () banked
  7970  001346  6B83               	clrf	(packADData@len+1)& (0+255),b
  7971  001348  0100               	movlb	0	; () banked
  7972  00134A  0E00               	movlw	high sendADdata@outBuff
  7973  00134C  0100               	movlb	0	; () banked
  7974  00134E  0100               	movlb	0	; () banked
  7975  001350  6F85               	movwf	(packADData@out+1)& (0+255),b
  7976  001352  0100               	movlb	0	; () banked
  7977  001354  0E88               	movlw	low sendADdata@outBuff
  7978  001356  0100               	movlb	0	; () banked
  7979  001358  0100               	movlb	0	; () banked
  7980  00135A  6F84               	movwf	packADData@out& (0+255),b
  7981  00135C  0E00               	movlw	0
  7982  00135E  0100               	movlb	0	; () banked
  7983  001360  0100               	movlb	0	; () banked
  7984  001362  6F87               	movwf	(packADData@maxout+1)& (0+255),b
  7985  001364  0E67               	movlw	103
  7986  001366  0100               	movlb	0	; () banked
  7987  001368  6F86               	movwf	packADData@maxout& (0+255),b
  7988  00136A  EC43  F00C         	call	_packADData	;wreg free
  7989  00136E  0100               	movlb	0	; () banked
  7990  001370  C080  F0EF         	movff	?_packADData,sendADdata@bytes_packed
  7991  001374  0100               	movlb	0	; () banked
  7992  001376  C081  F0F0         	movff	?_packADData+1,sendADdata@bytes_packed+1
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;sensorcomm.c: 38: if(bytes_packed == 0){
  7996  00137A  0100               	movlb	0	; () banked
  7997  00137C  0100               	movlb	0	; () banked
  7998  00137E  51F0               	movf	(sendADdata@bytes_packed+1)& (0+255),w,b
  7999  001380  11EF               	iorwf	sendADdata@bytes_packed& (0+255),w,b
  8000  001382  B4D8               	btfsc	status,2,c
  8001  001384  0012               	return	
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;sensorcomm.c: 41: else{
  8005                           ;sensorcomm.c: 44: start_i2c_slave_reply(103, outBuff);
  8006                           
  8007                           ; BSR set to: 0
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;sensorcomm.c: 40: }
  8011  001386  0100               	movlb	0	; () banked
  8012  001388  0E00               	movlw	high sendADdata@outBuff
  8013  00138A  6E30               	movwf	i2start_i2c_slave_reply@msg+1,c
  8014  00138C  0100               	movlb	0	; () banked
  8015  00138E  0E88               	movlw	low sendADdata@outBuff
  8016  001390  6E2F               	movwf	i2start_i2c_slave_reply@msg,c
  8017  001392  0E67               	movlw	103
  8018  001394  EC12  F006         	call	i2_start_i2c_slave_reply
  8019  001398  0012               	return	
  8020  00139A                     __end_of_sendADdata:
  8021                           	opt stack 0
  8022                           pclatu	equ	0xFFB
  8023                           pclath	equ	0xFFA
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           postinc0	equ	0xFEE
  8032                           fsr0h	equ	0xFEA
  8033                           fsr0l	equ	0xFE9
  8034                           wreg	equ	0xFE8
  8035                           indf1	equ	0xFE7
  8036                           postdec1	equ	0xFE5
  8037                           fsr1h	equ	0xFE2
  8038                           fsr1l	equ	0xFE1
  8039                           bsr	equ	0xFE0
  8040                           indf2	equ	0xFDF
  8041                           fsr2h	equ	0xFDA
  8042                           fsr2l	equ	0xFD9
  8043                           status	equ	0xFD8
  8044                           
  8045 ;; *************** function i2_start_i2c_slave_reply *****************
  8046 ;; Defined at:
  8047 ;;		line 60 in file "../src/my_i2c.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  length          1    wreg     unsigned char 
  8050 ;;  msg             2   46[COMRAM] PTR unsigned char 
  8051 ;;		 -> sendADdata@outBuff(103), main@msgbuffer(11), 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  length          1   50[COMRAM] unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;		None               void
  8056 ;; Registers used:
  8057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8063 ;;      Params:         2       0       0       0       0
  8064 ;;      Locals:         1       0       0       0       0
  8065 ;;      Temps:          2       0       0       0       0
  8066 ;;      Totals:         5       0       0       0       0
  8067 ;;Total ram usage:        5 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_sendADdata
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text51
  8077  000C24                     __ptext51:
  8078                           	opt stack 0
  8079  000C24                     i2_start_i2c_slave_reply:
  8080                           	opt stack 17
  8081                           
  8082                           ;incstack = 0
  8083                           ;i2start_i2c_slave_reply@length stored from wreg
  8084  000C24  CFE8 F033          	movff	wreg,i2start_i2c_slave_reply@length
  8085                           
  8086                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8087  000C28  0101               	movlb	1	; () banked
  8088  000C2A  EE20 F076          	lfsr	2,118
  8089  000C2E  0101               	movlb	1	; () banked
  8090  000C30  5100               	movf	_ic_ptr& (0+255),w,b
  8091  000C32  26D9               	addwf	fsr2l,f,c
  8092  000C34  0101               	movlb	1	; () banked
  8093  000C36  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8094  000C38  22DA               	addwfc	fsr2h,f,c
  8095  000C3A  0E00               	movlw	0
  8096  000C3C  6EDF               	movwf	indf2,c
  8097  000C3E  D03A               	goto	i2l3846
  8098  000C40                     i2l3842:
  8099                           
  8100                           ; BSR set to: 1
  8101                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8102  000C40  0101               	movlb	1	; () banked
  8103  000C42  EE20 F076          	lfsr	2,118
  8104  000C46  0101               	movlb	1	; () banked
  8105  000C48  5100               	movf	_ic_ptr& (0+255),w,b
  8106  000C4A  26D9               	addwf	fsr2l,f,c
  8107  000C4C  0101               	movlb	1	; () banked
  8108  000C4E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8109  000C50  22DA               	addwfc	fsr2h,f,c
  8110  000C52  50DF               	movf	indf2,w,c
  8111  000C54  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8112  000C56  5031               	movf	??i2_start_i2c_slave_reply,w,c
  8113  000C58  0D01               	mullw	1
  8114  000C5A  50F3               	movf	prodl,w,c
  8115  000C5C  242F               	addwf	i2start_i2c_slave_reply@msg,w,c
  8116  000C5E  6ED9               	movwf	fsr2l,c
  8117  000C60  50F4               	movf	prodh,w,c
  8118  000C62  2030               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  8119  000C64  6EDA               	movwf	fsr2h,c
  8120  000C66  0101               	movlb	1	; () banked
  8121  000C68  EE10 F076          	lfsr	1,118
  8122  000C6C  0101               	movlb	1	; () banked
  8123  000C6E  5100               	movf	_ic_ptr& (0+255),w,b
  8124  000C70  26E1               	addwf	fsr1l,f,c
  8125  000C72  0101               	movlb	1	; () banked
  8126  000C74  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8127  000C76  22E2               	addwfc	fsr1h,f,c
  8128  000C78  50E7               	movf	indf1,w,c
  8129  000C7A  6E32               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  8130  000C7C  5032               	movf	??i2_start_i2c_slave_reply+1,w,c
  8131  000C7E  0D01               	mullw	1
  8132  000C80  0E0F               	movlw	15
  8133  000C82  26F3               	addwf	prodl,f,c
  8134  000C84  0E00               	movlw	0
  8135  000C86  22F4               	addwfc	prodh,f,c
  8136  000C88  50F3               	movf	prodl,w,c
  8137  000C8A  0101               	movlb	1	; () banked
  8138  000C8C  0101               	movlb	1	; () banked
  8139  000C8E  2500               	addwf	_ic_ptr& (0+255),w,b
  8140  000C90  6EE1               	movwf	fsr1l,c
  8141  000C92  50F4               	movf	prodh,w,c
  8142  000C94  0101               	movlb	1	; () banked
  8143  000C96  0101               	movlb	1	; () banked
  8144  000C98  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8145  000C9A  6EE2               	movwf	fsr1h,c
  8146  000C9C  CFDF FFE7          	movff	indf2,indf1
  8147                           
  8148                           ; BSR set to: 1
  8149  000CA0  0101               	movlb	1	; () banked
  8150  000CA2  EE20 F076          	lfsr	2,118
  8151  000CA6  0101               	movlb	1	; () banked
  8152  000CA8  5100               	movf	_ic_ptr& (0+255),w,b
  8153  000CAA  26D9               	addwf	fsr2l,f,c
  8154  000CAC  0101               	movlb	1	; () banked
  8155  000CAE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8156  000CB0  22DA               	addwfc	fsr2h,f,c
  8157  000CB2  2ADF               	incf	indf2,f,c
  8158  000CB4                     i2l3846:
  8159                           
  8160                           ; BSR set to: 1
  8161  000CB4  0101               	movlb	1	; () banked
  8162  000CB6  EE20 F076          	lfsr	2,118
  8163  000CBA  0101               	movlb	1	; () banked
  8164  000CBC  5100               	movf	_ic_ptr& (0+255),w,b
  8165  000CBE  26D9               	addwf	fsr2l,f,c
  8166  000CC0  0101               	movlb	1	; () banked
  8167  000CC2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8168  000CC4  22DA               	addwfc	fsr2h,f,c
  8169  000CC6  50DF               	movf	indf2,w,c
  8170  000CC8  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8171  000CCA  5033               	movf	i2start_i2c_slave_reply@length,w,c
  8172  000CCC  5C31               	subwf	??i2_start_i2c_slave_reply,w,c
  8173  000CCE  A0D8               	btfss	status,0,c
  8174  000CD0  D7B7               	goto	i2l3842
  8175                           
  8176                           ; BSR set to: 1
  8177                           ;my_i2c.c: 64: }
  8178                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  8179                           
  8180                           ; BSR set to: 1
  8181  000CD2  0101               	movlb	1	; () banked
  8182  000CD4  EE20 F076          	lfsr	2,118
  8183  000CD8  0101               	movlb	1	; () banked
  8184  000CDA  5100               	movf	_ic_ptr& (0+255),w,b
  8185  000CDC  26D9               	addwf	fsr2l,f,c
  8186  000CDE  0101               	movlb	1	; () banked
  8187  000CE0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8188  000CE2  22DA               	addwfc	fsr2h,f,c
  8189  000CE4  C033  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  8190                           
  8191                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  8192  000CE8  0101               	movlb	1	; () banked
  8193  000CEA  EE20 F077          	lfsr	2,119
  8194  000CEE  0101               	movlb	1	; () banked
  8195  000CF0  5100               	movf	_ic_ptr& (0+255),w,b
  8196  000CF2  26D9               	addwf	fsr2l,f,c
  8197  000CF4  0101               	movlb	1	; () banked
  8198  000CF6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8199  000CF8  22DA               	addwfc	fsr2h,f,c
  8200  000CFA  0E01               	movlw	1
  8201  000CFC  6EDF               	movwf	indf2,c
  8202                           
  8203                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  8204  000CFE  0101               	movlb	1	; () banked
  8205  000D00  EE20 F00F          	lfsr	2,15
  8206  000D04  0101               	movlb	1	; () banked
  8207  000D06  5100               	movf	_ic_ptr& (0+255),w,b
  8208  000D08  26D9               	addwf	fsr2l,f,c
  8209  000D0A  0101               	movlb	1	; () banked
  8210  000D0C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8211  000D0E  22DA               	addwfc	fsr2h,f,c
  8212  000D10  50DF               	movf	indf2,w,c
  8213  000D12  6EC9               	movwf	4041,c	;volatile
  8214                           
  8215                           ; BSR set to: 1
  8216                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  8217  000D14  88C6               	bsf	4038,4,c	;volatile
  8218                           
  8219                           ; BSR set to: 1
  8220  000D16  0012               	return	
  8221  000D18                     __end_ofi2_start_i2c_slave_reply:
  8222                           	opt stack 0
  8223                           pclatu	equ	0xFFB
  8224                           pclath	equ	0xFFA
  8225                           tblptru	equ	0xFF8
  8226                           tblptrh	equ	0xFF7
  8227                           tblptrl	equ	0xFF6
  8228                           tablat	equ	0xFF5
  8229                           prodh	equ	0xFF4
  8230                           prodl	equ	0xFF3
  8231                           intcon	equ	0xFF2
  8232                           postinc0	equ	0xFEE
  8233                           fsr0h	equ	0xFEA
  8234                           fsr0l	equ	0xFE9
  8235                           wreg	equ	0xFE8
  8236                           indf1	equ	0xFE7
  8237                           postdec1	equ	0xFE5
  8238                           fsr1h	equ	0xFE2
  8239                           fsr1l	equ	0xFE1
  8240                           bsr	equ	0xFE0
  8241                           indf2	equ	0xFDF
  8242                           fsr2h	equ	0xFDA
  8243                           fsr2l	equ	0xFD9
  8244                           status	equ	0xFD8
  8245                           
  8246 ;; *************** function _packADData *****************
  8247 ;; Defined at:
  8248 ;;		line 38 in file "../../../../common/communication/brain_rover.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  data            2    0[BANK0 ] PTR struct .
  8251 ;;		 -> ADacc(101), 
  8252 ;;  len             2    2[BANK0 ] int 
  8253 ;;  out             2    4[BANK0 ] PTR unsigned char 
  8254 ;;		 -> sendADdata@outBuff(103), 
  8255 ;;  maxout          2    6[BANK0 ] int 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  2    0[BANK0 ] int 
  8260 ;; Registers used:
  8261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8267 ;;      Params:         0       8       0       0       0
  8268 ;;      Locals:         0       0       0       0       0
  8269 ;;      Temps:          0       0       0       0       0
  8270 ;;      Totals:         0       8       0       0       0
  8271 ;;Total ram usage:        8 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    1
  8274 ;; This function calls:
  8275 ;;		_packReturnData
  8276 ;; This function is called by:
  8277 ;;		_sendADdata
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text52
  8282  001886                     __ptext52:
  8283                           	opt stack 0
  8284  001886                     _packADData:
  8285                           	opt stack 16
  8286                           
  8287                           ;brain_rover.c: 39: return packReturnData((char*)data, len*sizeof(sensorADData), (RoverM
      +                          sg*)out, maxout, 0);
  8288                           
  8289                           ; BSR set to: 1
  8290                           ;incstack = 0
  8291  001886  0100               	movlb	0	; () banked
  8292  001888  C081  F030         	movff	packADData@data+1,packReturnData@data+1
  8293  00188C  0100               	movlb	0	; () banked
  8294  00188E  C080  F02F         	movff	packADData@data,packReturnData@data
  8295  001892  C082  F031         	movff	packADData@len,packReturnData@payloadLen
  8296  001896  C083  F032         	movff	packADData@len+1,packReturnData@payloadLen+1
  8297  00189A  0100               	movlb	0	; () banked
  8298  00189C  C085  F034         	movff	packADData@out+1,packReturnData@msg+1
  8299  0018A0  0100               	movlb	0	; () banked
  8300  0018A2  C084  F033         	movff	packADData@out,packReturnData@msg
  8301  0018A6  C086  F035         	movff	packADData@maxout,packReturnData@maxout
  8302  0018AA  C087  F036         	movff	packADData@maxout+1,packReturnData@maxout+1
  8303  0018AE  0E00               	movlw	0
  8304  0018B0  6E38               	movwf	packReturnData@sensorID+1,c
  8305  0018B2  0E00               	movlw	0
  8306  0018B4  6E37               	movwf	packReturnData@sensorID,c
  8307  0018B6  EC06  F008         	call	_packReturnData	;wreg free
  8308  0018BA  C02F  F080         	movff	?_packReturnData,?_packADData
  8309  0018BE  C030  F081         	movff	?_packReturnData+1,?_packADData+1
  8310  0018C2  0012               	return	
  8311  0018C4                     __end_of_packADData:
  8312                           	opt stack 0
  8313                           pclatu	equ	0xFFB
  8314                           pclath	equ	0xFFA
  8315                           tblptru	equ	0xFF8
  8316                           tblptrh	equ	0xFF7
  8317                           tblptrl	equ	0xFF6
  8318                           tablat	equ	0xFF5
  8319                           prodh	equ	0xFF4
  8320                           prodl	equ	0xFF3
  8321                           intcon	equ	0xFF2
  8322                           postinc0	equ	0xFEE
  8323                           fsr0h	equ	0xFEA
  8324                           fsr0l	equ	0xFE9
  8325                           wreg	equ	0xFE8
  8326                           indf1	equ	0xFE7
  8327                           postdec1	equ	0xFE5
  8328                           fsr1h	equ	0xFE2
  8329                           fsr1l	equ	0xFE1
  8330                           bsr	equ	0xFE0
  8331                           indf2	equ	0xFDF
  8332                           fsr2h	equ	0xFDA
  8333                           fsr2l	equ	0xFD9
  8334                           status	equ	0xFD8
  8335                           
  8336 ;; *************** function _packReturnData *****************
  8337 ;; Defined at:
  8338 ;;		line 17 in file "../../../../common/communication/brain_rover.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  data            2   46[COMRAM] PTR unsigned char 
  8341 ;;		 -> ADacc(101), 
  8342 ;;  payloadLen      2   48[COMRAM] int 
  8343 ;;  msg             2   50[COMRAM] PTR struct .
  8344 ;;		 -> sendADdata@outBuff(103), 
  8345 ;;  maxout          2   52[COMRAM] int 
  8346 ;;  sensorID        2   54[COMRAM] int 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  dest            2   61[COMRAM] PTR unsigned char 
  8349 ;;		 -> sendADdata@outBuff.payload(0), sendADdata@outBuff(103), 
  8350 ;;  end             2   59[COMRAM] PTR unsigned char 
  8351 ;;		 -> sendADdata@outBuff.payload(0), sendADdata@outBuff(103), 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  2   46[COMRAM] int 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8361 ;;      Params:        10       0       0       0       0
  8362 ;;      Locals:         4       0       0       0       0
  8363 ;;      Temps:          3       0       0       0       0
  8364 ;;      Totals:        17       0       0       0       0
  8365 ;;Total ram usage:       17 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; This function calls:
  8368 ;;		Nothing
  8369 ;; This function is called by:
  8370 ;;		_packADData
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text53
  8375  00100C                     __ptext53:
  8376                           	opt stack 0
  8377  00100C                     _packReturnData:
  8378                           	opt stack 16
  8379                           
  8380                           ;brain_rover.c: 18: if (payloadLen + 3 >= maxout) {
  8381                           
  8382                           ;incstack = 0
  8383  00100C  0E03               	movlw	3
  8384  00100E  2431               	addwf	packReturnData@payloadLen,w,c
  8385  001010  6E39               	movwf	??_packReturnData& (0+255),c
  8386  001012  0E00               	movlw	0
  8387  001014  2032               	addwfc	packReturnData@payloadLen+1,w,c
  8388  001016  6E3A               	movwf	(??_packReturnData+1)& (0+255),c
  8389  001018  503A               	movf	??_packReturnData+1,w,c
  8390  00101A  0A80               	xorlw	128
  8391  00101C  6E3B               	movwf	(??_packReturnData+2)& (0+255),c
  8392  00101E  5035               	movf	packReturnData@maxout,w,c
  8393  001020  5C39               	subwf	??_packReturnData,w,c
  8394  001022  5036               	movf	packReturnData@maxout+1,w,c
  8395  001024  0A80               	xorlw	128
  8396  001026  583B               	subwfb	(??_packReturnData+2)& (0+255),w,c
  8397  001028  A0D8               	btfss	status,0,c
  8398  00102A  D005               	goto	i2l3714
  8399                           
  8400                           ;brain_rover.c: 19: return 0;
  8401  00102C  0E00               	movlw	0
  8402  00102E  6E30               	movwf	?_packReturnData+1,c
  8403  001030  0E00               	movlw	0
  8404  001032  6E2F               	movwf	?_packReturnData,c
  8405  001034  0012               	return	
  8406  001036                     i2l3714:
  8407                           
  8408                           ;brain_rover.c: 20: }
  8409                           ;brain_rover.c: 22: msg->flags = 1;
  8410  001036  C033  FFD9         	movff	packReturnData@msg,fsr2l
  8411  00103A  C034  FFDA         	movff	packReturnData@msg+1,fsr2h
  8412  00103E  0E01               	movlw	1
  8413  001040  6EDF               	movwf	indf2,c
  8414                           
  8415                           ;brain_rover.c: 23: msg->sensorID = sensorID;
  8416  001042  EE20 F001          	lfsr	2,1
  8417  001046  5033               	movf	packReturnData@msg,w,c
  8418  001048  26D9               	addwf	fsr2l,f,c
  8419  00104A  5034               	movf	packReturnData@msg+1,w,c
  8420  00104C  22DA               	addwfc	fsr2h,f,c
  8421  00104E  C037  FFDF         	movff	packReturnData@sensorID,indf2
  8422                           
  8423                           ;brain_rover.c: 24: msg->payloadLen = payloadLen;
  8424  001052  EE20 F002          	lfsr	2,2
  8425  001056  5033               	movf	packReturnData@msg,w,c
  8426  001058  26D9               	addwf	fsr2l,f,c
  8427  00105A  5034               	movf	packReturnData@msg+1,w,c
  8428  00105C  22DA               	addwfc	fsr2h,f,c
  8429  00105E  C031  FFDF         	movff	packReturnData@payloadLen,indf2
  8430                           
  8431                           ;brain_rover.c: 26: char* dest = msg->payload;
  8432  001062  0E03               	movlw	3
  8433  001064  2433               	addwf	packReturnData@msg,w,c
  8434  001066  6E3E               	movwf	packReturnData@dest,c
  8435  001068  0E00               	movlw	0
  8436  00106A  2034               	addwfc	packReturnData@msg+1,w,c
  8437  00106C  6E3F               	movwf	packReturnData@dest+1,c
  8438                           
  8439                           ;brain_rover.c: 27: char* end = dest + payloadLen;
  8440  00106E  5031               	movf	packReturnData@payloadLen,w,c
  8441  001070  243E               	addwf	packReturnData@dest,w,c
  8442  001072  6E3C               	movwf	packReturnData@end,c
  8443  001074  5032               	movf	packReturnData@payloadLen+1,w,c
  8444  001076  203F               	addwfc	packReturnData@dest+1,w,c
  8445  001078  6E3D               	movwf	packReturnData@end+1,c
  8446                           
  8447                           ;brain_rover.c: 28: while (dest != end) {
  8448  00107A  D00E               	goto	i2l3730
  8449  00107C                     i2l3724:
  8450                           
  8451                           ;brain_rover.c: 29: *dest++ = *data++;
  8452  00107C  C02F  FFD9         	movff	packReturnData@data,fsr2l
  8453  001080  C030  FFDA         	movff	packReturnData@data+1,fsr2h
  8454  001084  C03E  FFE1         	movff	packReturnData@dest,fsr1l
  8455  001088  C03F  FFE2         	movff	packReturnData@dest+1,fsr1h
  8456  00108C  CFDF FFE7          	movff	indf2,indf1
  8457  001090  4A2F               	infsnz	packReturnData@data,f,c
  8458  001092  2A30               	incf	packReturnData@data+1,f,c
  8459  001094  4A3E               	infsnz	packReturnData@dest,f,c
  8460  001096  2A3F               	incf	packReturnData@dest+1,f,c
  8461  001098                     i2l3730:
  8462  001098  503D               	movf	packReturnData@end+1,w,c
  8463  00109A  183F               	xorwf	packReturnData@dest+1,w,c
  8464  00109C  E102               	bnz	i2u252_45
  8465  00109E  503C               	movf	packReturnData@end,w,c
  8466  0010A0  183E               	xorwf	packReturnData@dest,w,c
  8467  0010A2                     i2u252_45:
  8468  0010A2  A4D8               	btfss	status,2,c
  8469  0010A4  D7EB               	goto	i2l3724
  8470                           
  8471                           ;brain_rover.c: 30: }
  8472                           ;brain_rover.c: 31: return payloadLen + 3;
  8473  0010A6  0E03               	movlw	3
  8474  0010A8  2431               	addwf	packReturnData@payloadLen,w,c
  8475  0010AA  6E2F               	movwf	?_packReturnData,c
  8476  0010AC  0E00               	movlw	0
  8477  0010AE  2032               	addwfc	packReturnData@payloadLen+1,w,c
  8478  0010B0  6E30               	movwf	?_packReturnData+1,c
  8479  0010B2  0012               	return	
  8480  0010B4                     __end_of_packReturnData:
  8481                           	opt stack 0
  8482                           pclatu	equ	0xFFB
  8483                           pclath	equ	0xFFA
  8484                           tblptru	equ	0xFF8
  8485                           tblptrh	equ	0xFF7
  8486                           tblptrl	equ	0xFF6
  8487                           tablat	equ	0xFF5
  8488                           prodh	equ	0xFF4
  8489                           prodl	equ	0xFF3
  8490                           intcon	equ	0xFF2
  8491                           postinc0	equ	0xFEE
  8492                           fsr0h	equ	0xFEA
  8493                           fsr0l	equ	0xFE9
  8494                           wreg	equ	0xFE8
  8495                           indf1	equ	0xFE7
  8496                           postdec1	equ	0xFE5
  8497                           fsr1h	equ	0xFE2
  8498                           fsr1l	equ	0xFE1
  8499                           bsr	equ	0xFE0
  8500                           indf2	equ	0xFDF
  8501                           fsr2h	equ	0xFDA
  8502                           fsr2l	equ	0xFD9
  8503                           status	equ	0xFD8
  8504                           
  8505 ;; *************** function _handle_start *****************
  8506 ;; Defined at:
  8507 ;;		line 78 in file "../src/my_i2c.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  data_read       1    wreg     unsigned char 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  data_read       1   46[COMRAM] unsigned char 
  8512 ;; Return value:  Size  Location     Type
  8513 ;;		None               void
  8514 ;; Registers used:
  8515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8521 ;;      Params:         0       0       0       0       0
  8522 ;;      Locals:         1       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0
  8524 ;;      Totals:         1       0       0       0       0
  8525 ;;Total ram usage:        1 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_i2c_int_handler
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text54
  8535  000DEA                     __ptext54:
  8536                           	opt stack 0
  8537  000DEA                     _handle_start:
  8538                           	opt stack 19
  8539                           
  8540                           ;incstack = 0
  8541                           ;handle_start@data_read stored from wreg
  8542  000DEA  CFE8 F02F          	movff	wreg,handle_start@data_read
  8543                           
  8544                           ;my_i2c.c: 79: ic_ptr->event_count = 1;
  8545  000DEE  0101               	movlb	1	; () banked
  8546  000DF0  EE20 F00B          	lfsr	2,11
  8547  000DF4  0101               	movlb	1	; () banked
  8548  000DF6  5100               	movf	_ic_ptr& (0+255),w,b
  8549  000DF8  26D9               	addwf	fsr2l,f,c
  8550  000DFA  0101               	movlb	1	; () banked
  8551  000DFC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8552  000DFE  22DA               	addwfc	fsr2h,f,c
  8553  000E00  0E01               	movlw	1
  8554  000E02  6EDF               	movwf	indf2,c
  8555                           
  8556                           ;my_i2c.c: 80: ic_ptr->buflen = 0;
  8557  000E04  0101               	movlb	1	; () banked
  8558  000E06  EE20 F00A          	lfsr	2,10
  8559  000E0A  0101               	movlb	1	; () banked
  8560  000E0C  5100               	movf	_ic_ptr& (0+255),w,b
  8561  000E0E  26D9               	addwf	fsr2l,f,c
  8562  000E10  0101               	movlb	1	; () banked
  8563  000E12  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8564  000E14  22DA               	addwfc	fsr2h,f,c
  8565  000E16  0E00               	movlw	0
  8566  000E18  6EDF               	movwf	indf2,c
  8567                           
  8568                           ; BSR set to: 1
  8569                           ;my_i2c.c: 82: if (data_read) {
  8570  000E1A  502F               	movf	handle_start@data_read,w,c
  8571  000E1C  B4D8               	btfsc	status,2,c
  8572  000E1E  D03D               	goto	i2l3668
  8573                           
  8574                           ; BSR set to: 1
  8575                           ;my_i2c.c: 83: if (SSPSTATbits.D_A == 1) {
  8576  000E20  AAC7               	btfss	4039,5,c	;volatile
  8577  000E22  D021               	goto	i2l248
  8578                           
  8579                           ; BSR set to: 1
  8580                           ;my_i2c.c: 86: ic_ptr->status = 0x5;
  8581  000E24  0101               	movlb	1	; () banked
  8582  000E26  EE20 F00C          	lfsr	2,12
  8583  000E2A  0101               	movlb	1	; () banked
  8584  000E2C  5100               	movf	_ic_ptr& (0+255),w,b
  8585  000E2E  26D9               	addwf	fsr2l,f,c
  8586  000E30  0101               	movlb	1	; () banked
  8587  000E32  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8588  000E34  22DA               	addwfc	fsr2h,f,c
  8589  000E36  0E05               	movlw	5
  8590  000E38  6EDF               	movwf	indf2,c
  8591                           
  8592                           ;my_i2c.c: 87: ic_ptr->error_count++;
  8593  000E3A  0101               	movlb	1	; () banked
  8594  000E3C  EE20 F00E          	lfsr	2,14
  8595  000E40  0101               	movlb	1	; () banked
  8596  000E42  5100               	movf	_ic_ptr& (0+255),w,b
  8597  000E44  26D9               	addwf	fsr2l,f,c
  8598  000E46  0101               	movlb	1	; () banked
  8599  000E48  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8600  000E4A  22DA               	addwfc	fsr2h,f,c
  8601  000E4C  2ADF               	incf	indf2,f,c
  8602                           
  8603                           ;my_i2c.c: 88: ic_ptr->error_code = 0x5;
  8604  000E4E  0101               	movlb	1	; () banked
  8605  000E50  EE20 F00D          	lfsr	2,13
  8606  000E54  0101               	movlb	1	; () banked
  8607  000E56  5100               	movf	_ic_ptr& (0+255),w,b
  8608  000E58  26D9               	addwf	fsr2l,f,c
  8609  000E5A  0101               	movlb	1	; () banked
  8610  000E5C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8611  000E5E  22DA               	addwfc	fsr2h,f,c
  8612  000E60  0E05               	movlw	5
  8613  000E62  6EDF               	movwf	indf2,c
  8614                           
  8615                           ;my_i2c.c: 89: } else {
  8616  000E64  0012               	return	
  8617  000E66                     i2l248:
  8618                           
  8619                           ; BSR set to: 1
  8620                           ;my_i2c.c: 90: if (SSPSTATbits.R_W == 1) {
  8621  000E66  A4C7               	btfss	4039,2,c	;volatile
  8622  000E68  D00C               	goto	i2l3666
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;my_i2c.c: 91: ic_ptr->status = 0x8;
  8626  000E6A  0101               	movlb	1	; () banked
  8627  000E6C  EE20 F00C          	lfsr	2,12
  8628  000E70  0101               	movlb	1	; () banked
  8629  000E72  5100               	movf	_ic_ptr& (0+255),w,b
  8630  000E74  26D9               	addwf	fsr2l,f,c
  8631  000E76  0101               	movlb	1	; () banked
  8632  000E78  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8633  000E7A  22DA               	addwfc	fsr2h,f,c
  8634  000E7C  0E08               	movlw	8
  8635  000E7E  6EDF               	movwf	indf2,c
  8636                           
  8637                           ;my_i2c.c: 92: } else {
  8638  000E80  0012               	return	
  8639  000E82                     i2l3666:
  8640                           
  8641                           ; BSR set to: 1
  8642                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  8643  000E82  0101               	movlb	1	; () banked
  8644  000E84  EE20 F00C          	lfsr	2,12
  8645  000E88  0101               	movlb	1	; () banked
  8646  000E8A  5100               	movf	_ic_ptr& (0+255),w,b
  8647  000E8C  26D9               	addwf	fsr2l,f,c
  8648  000E8E  0101               	movlb	1	; () banked
  8649  000E90  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8650  000E92  22DA               	addwfc	fsr2h,f,c
  8651  000E94  0E07               	movlw	7
  8652  000E96  6EDF               	movwf	indf2,c
  8653  000E98  0012               	return	
  8654  000E9A                     i2l3668:
  8655                           
  8656                           ; BSR set to: 1
  8657                           ;my_i2c.c: 97: ic_ptr->status = 0x6;
  8658  000E9A  0101               	movlb	1	; () banked
  8659  000E9C  EE20 F00C          	lfsr	2,12
  8660  000EA0  0101               	movlb	1	; () banked
  8661  000EA2  5100               	movf	_ic_ptr& (0+255),w,b
  8662  000EA4  26D9               	addwf	fsr2l,f,c
  8663  000EA6  0101               	movlb	1	; () banked
  8664  000EA8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8665  000EAA  22DA               	addwfc	fsr2h,f,c
  8666  000EAC  0E06               	movlw	6
  8667  000EAE  6EDF               	movwf	indf2,c
  8668  000EB0  0012               	return	
  8669  000EB2                     __end_of_handle_start:
  8670                           	opt stack 0
  8671                           pclatu	equ	0xFFB
  8672                           pclath	equ	0xFFA
  8673                           tblptru	equ	0xFF8
  8674                           tblptrh	equ	0xFF7
  8675                           tblptrl	equ	0xFF6
  8676                           tablat	equ	0xFF5
  8677                           prodh	equ	0xFF4
  8678                           prodl	equ	0xFF3
  8679                           intcon	equ	0xFF2
  8680                           postinc0	equ	0xFEE
  8681                           fsr0h	equ	0xFEA
  8682                           fsr0l	equ	0xFE9
  8683                           wreg	equ	0xFE8
  8684                           indf1	equ	0xFE7
  8685                           postdec1	equ	0xFE5
  8686                           fsr1h	equ	0xFE2
  8687                           fsr1l	equ	0xFE1
  8688                           bsr	equ	0xFE0
  8689                           indf2	equ	0xFDF
  8690                           fsr2h	equ	0xFDA
  8691                           fsr2l	equ	0xFD9
  8692                           status	equ	0xFD8
  8693                           
  8694 ;; *************** function _SleepIfOkay *****************
  8695 ;; Defined at:
  8696 ;;		line 229 in file "../src/messages.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;		None
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;		None
  8701 ;; Return value:  Size  Location     Type
  8702 ;;		None               void
  8703 ;; Registers used:
  8704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8710 ;;      Params:         0       0       0       0       0
  8711 ;;      Locals:         0       0       0       0       0
  8712 ;;      Temps:          0       0       0       0       0
  8713 ;;      Totals:         0       0       0       0       0
  8714 ;;Total ram usage:        0 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:    2
  8717 ;; This function calls:
  8718 ;;		_enter_sleep_mode
  8719 ;;		i2_check_msg
  8720 ;;		i2_in_high_int
  8721 ;;		i2_in_low_int
  8722 ;; This function is called by:
  8723 ;;		_InterruptHandlerHigh
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           	psect	text55
  8728  00166C                     __ptext55:
  8729                           	opt stack 0
  8730  00166C                     _SleepIfOkay:
  8731                           	opt stack 18
  8732                           
  8733                           ;messages.c: 231: if (MQ_Main_Willing_to_block == 0) {
  8734                           
  8735                           ; BSR set to: 1
  8736                           ;incstack = 0
  8737  00166C  6644               	tstfsz	_MQ_Main_Willing_to_block,c
  8738  00166E  D001               	goto	i2l2524
  8739  001670  0012               	return	
  8740  001672                     i2l2524:
  8741                           
  8742                           ;messages.c: 233: }
  8743                           ;messages.c: 236: if (in_low_int()) {
  8744  001672  EC0E  F00D         	call	i2_in_low_int	;wreg free
  8745  001676  5032               	movf	?i2_in_low_int+1,w,c
  8746  001678  1031               	iorwf	?i2_in_low_int,w,c
  8747  00167A  A4D8               	btfss	status,2,c
  8748  00167C  0012               	return	
  8749                           
  8750                           ;messages.c: 238: }
  8751                           ;messages.c: 241: if (!in_high_int()) {
  8752                           
  8753                           ;messages.c: 237: return;
  8754  00167E  ECFF  F00D         	call	i2_in_high_int	;wreg free
  8755  001682  5030               	movf	?i2_in_high_int+1,w,c
  8756  001684  102F               	iorwf	?i2_in_high_int,w,c
  8757  001686  B4D8               	btfsc	status,2,c
  8758  001688  0012               	return	
  8759                           
  8760                           ;messages.c: 243: }
  8761                           ;messages.c: 248: if (check_msg(&ToMainHigh_MQ)) {
  8762                           
  8763                           ;messages.c: 242: return;
  8764  00168A  0101               	movlb	1	; () banked
  8765  00168C  0E01               	movlw	high _ToMainHigh_MQ
  8766  00168E  6E30               	movwf	i2check_msg@qptr+1,c
  8767  001690  0101               	movlb	1	; () banked
  8768  001692  0E02               	movlw	low _ToMainHigh_MQ
  8769  001694  6E2F               	movwf	i2check_msg@qptr,c
  8770  001696  EC9D  F00D         	call	i2_check_msg	;wreg free
  8771  00169A  0900               	iorlw	0
  8772  00169C  A4D8               	btfss	status,2,c
  8773  00169E  0012               	return	
  8774                           
  8775                           ;messages.c: 250: }
  8776                           ;messages.c: 251: if (check_msg(&ToMainLow_MQ)) {
  8777                           
  8778                           ;messages.c: 249: return;
  8779  0016A0  0102               	movlb	2	; () banked
  8780  0016A2  0E02               	movlw	high _ToMainLow_MQ
  8781  0016A4  6E30               	movwf	i2check_msg@qptr+1,c
  8782  0016A6  0102               	movlb	2	; () banked
  8783  0016A8  0E9B               	movlw	low _ToMainLow_MQ
  8784  0016AA  6E2F               	movwf	i2check_msg@qptr,c
  8785  0016AC  EC9D  F00D         	call	i2_check_msg	;wreg free
  8786  0016B0  0900               	iorlw	0
  8787  0016B2  B4D8               	btfsc	status,2,c
  8788                           
  8789                           ;messages.c: 253: }
  8790                           ;messages.c: 254: enter_sleep_mode();
  8791                           
  8792                           ;messages.c: 252: return;
  8793  0016B4  EC16  F00E         	call	_enter_sleep_mode	;wreg free
  8794  0016B8  0012               	return	
  8795  0016BA                     __end_of_SleepIfOkay:
  8796                           	opt stack 0
  8797                           pclatu	equ	0xFFB
  8798                           pclath	equ	0xFFA
  8799                           tblptru	equ	0xFF8
  8800                           tblptrh	equ	0xFF7
  8801                           tblptrl	equ	0xFF6
  8802                           tablat	equ	0xFF5
  8803                           prodh	equ	0xFF4
  8804                           prodl	equ	0xFF3
  8805                           intcon	equ	0xFF2
  8806                           postinc0	equ	0xFEE
  8807                           fsr0h	equ	0xFEA
  8808                           fsr0l	equ	0xFE9
  8809                           wreg	equ	0xFE8
  8810                           indf1	equ	0xFE7
  8811                           postdec1	equ	0xFE5
  8812                           fsr1h	equ	0xFE2
  8813                           fsr1l	equ	0xFE1
  8814                           bsr	equ	0xFE0
  8815                           indf2	equ	0xFDF
  8816                           fsr2h	equ	0xFDA
  8817                           fsr2l	equ	0xFD9
  8818                           status	equ	0xFD8
  8819                           
  8820 ;; *************** function i2_in_low_int *****************
  8821 ;; Defined at:
  8822 ;;		line 32 in file "../src/interrupts.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;		None
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  2   48[COMRAM] int 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0, cstack
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8836 ;;      Params:         2       0       0       0       0
  8837 ;;      Locals:         0       0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0
  8839 ;;      Totals:         2       0       0       0       0
  8840 ;;Total ram usage:        2 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    1
  8843 ;; This function calls:
  8844 ;;		i2_in_high_int
  8845 ;; This function is called by:
  8846 ;;		_SleepIfOkay
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text56
  8851  001A1C                     __ptext56:
  8852                           	opt stack 0
  8853  001A1C                     i2_in_low_int:
  8854                           	opt stack 18
  8855                           
  8856                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  8857                           
  8858                           ;incstack = 0
  8859  001A1C  ACF2               	btfss	intcon,6,c	;volatile
  8860  001A1E  D005               	goto	i2l3002
  8861                           
  8862                           ;interrupts.c: 34: return (0);
  8863  001A20  0E00               	movlw	0
  8864  001A22  6E32               	movwf	?i2_in_low_int+1,c
  8865  001A24  0E00               	movlw	0
  8866  001A26  6E31               	movwf	?i2_in_low_int,c
  8867  001A28  0012               	return	
  8868  001A2A                     i2l3002:
  8869  001A2A  ECFF  F00D         	call	i2_in_high_int	;wreg free
  8870  001A2E  5030               	movf	?i2_in_high_int+1,w,c
  8871  001A30  102F               	iorwf	?i2_in_high_int,w,c
  8872  001A32  B4D8               	btfsc	status,2,c
  8873  001A34  D005               	goto	i2l3010
  8874                           
  8875                           ;interrupts.c: 36: return (0);
  8876  001A36  0E00               	movlw	0
  8877  001A38  6E32               	movwf	?i2_in_low_int+1,c
  8878  001A3A  0E00               	movlw	0
  8879  001A3C  6E31               	movwf	?i2_in_low_int,c
  8880  001A3E  0012               	return	
  8881  001A40                     i2l3010:
  8882                           
  8883                           ;interrupts.c: 38: return (1);
  8884  001A40  0E00               	movlw	0
  8885  001A42  6E32               	movwf	?i2_in_low_int+1,c
  8886  001A44  0E01               	movlw	1
  8887  001A46  6E31               	movwf	?i2_in_low_int,c
  8888  001A48  0012               	return	
  8889  001A4A                     __end_ofi2_in_low_int:
  8890                           	opt stack 0
  8891                           pclatu	equ	0xFFB
  8892                           pclath	equ	0xFFA
  8893                           tblptru	equ	0xFF8
  8894                           tblptrh	equ	0xFF7
  8895                           tblptrl	equ	0xFF6
  8896                           tablat	equ	0xFF5
  8897                           prodh	equ	0xFF4
  8898                           prodl	equ	0xFF3
  8899                           intcon	equ	0xFF2
  8900                           postinc0	equ	0xFEE
  8901                           fsr0h	equ	0xFEA
  8902                           fsr0l	equ	0xFE9
  8903                           wreg	equ	0xFE8
  8904                           indf1	equ	0xFE7
  8905                           postdec1	equ	0xFE5
  8906                           fsr1h	equ	0xFE2
  8907                           fsr1l	equ	0xFE1
  8908                           bsr	equ	0xFE0
  8909                           indf2	equ	0xFDF
  8910                           fsr2h	equ	0xFDA
  8911                           fsr2l	equ	0xFD9
  8912                           status	equ	0xFD8
  8913                           
  8914 ;; *************** function i2_in_high_int *****************
  8915 ;; Defined at:
  8916 ;;		line 24 in file "../src/interrupts.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;		None
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;		None
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  2   46[COMRAM] int 
  8923 ;; Registers used:
  8924 ;;		wreg, status,2
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8930 ;;      Params:         2       0       0       0       0
  8931 ;;      Locals:         0       0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0
  8933 ;;      Totals:         2       0       0       0       0
  8934 ;;Total ram usage:        2 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_SleepIfOkay
  8940 ;;		i2_in_low_int
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text57
  8945  001BFE                     __ptext57:
  8946                           	opt stack 0
  8947  001BFE                     i2_in_high_int:
  8948                           	opt stack 18
  8949                           
  8950                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  8951                           
  8952                           ;incstack = 0
  8953  001BFE  0E00               	movlw	0
  8954  001C00  AEF2               	btfss	intcon,7,c	;volatile
  8955  001C02  0E01               	movlw	1
  8956  001C04  6E2F               	movwf	?i2_in_high_int,c
  8957  001C06  6A30               	clrf	?i2_in_high_int+1,c
  8958  001C08  0012               	return	
  8959  001C0A                     __end_ofi2_in_high_int:
  8960                           	opt stack 0
  8961                           pclatu	equ	0xFFB
  8962                           pclath	equ	0xFFA
  8963                           tblptru	equ	0xFF8
  8964                           tblptrh	equ	0xFF7
  8965                           tblptrl	equ	0xFF6
  8966                           tablat	equ	0xFF5
  8967                           prodh	equ	0xFF4
  8968                           prodl	equ	0xFF3
  8969                           intcon	equ	0xFF2
  8970                           postinc0	equ	0xFEE
  8971                           fsr0h	equ	0xFEA
  8972                           fsr0l	equ	0xFE9
  8973                           wreg	equ	0xFE8
  8974                           indf1	equ	0xFE7
  8975                           postdec1	equ	0xFE5
  8976                           fsr1h	equ	0xFE2
  8977                           fsr1l	equ	0xFE1
  8978                           bsr	equ	0xFE0
  8979                           indf2	equ	0xFDF
  8980                           fsr2h	equ	0xFDA
  8981                           fsr2l	equ	0xFD9
  8982                           status	equ	0xFD8
  8983                           
  8984 ;; *************** function i2_check_msg *****************
  8985 ;; Defined at:
  8986 ;;		line 223 in file "../src/messages.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8989 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      unsigned char 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9001 ;;      Params:         2       0       0       0       0
  9002 ;;      Locals:         0       0       0       0       0
  9003 ;;      Temps:          1       0       0       0       0
  9004 ;;      Totals:         3       0       0       0       0
  9005 ;;Total ram usage:        3 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_SleepIfOkay
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text58
  9015  001B3A                     __ptext58:
  9016                           	opt stack 0
  9017  001B3A                     i2_check_msg:
  9018                           	opt stack 19
  9019                           
  9020                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  9021                           
  9022                           ;incstack = 0
  9023  001B3A  EE20 F035          	lfsr	2,53
  9024  001B3E  502F               	movf	i2check_msg@qptr,w,c
  9025  001B40  26D9               	addwf	fsr2l,f,c
  9026  001B42  5030               	movf	i2check_msg@qptr+1,w,c
  9027  001B44  22DA               	addwfc	fsr2h,f,c
  9028  001B46  50DF               	movf	indf2,w,c
  9029  001B48  6E31               	movwf	??i2_check_msg& (0+255),c
  9030  001B4A  5031               	movf	??i2_check_msg,w,c
  9031  001B4C  0D0D               	mullw	13
  9032  001B4E  50F3               	movf	prodl,w,c
  9033  001B50  242F               	addwf	i2check_msg@qptr,w,c
  9034  001B52  6ED9               	movwf	fsr2l,c
  9035  001B54  50F4               	movf	prodh,w,c
  9036  001B56  2030               	addwfc	i2check_msg@qptr+1,w,c
  9037  001B58  6EDA               	movwf	fsr2h,c
  9038  001B5A  50DF               	movf	indf2,w,c
  9039  001B5C  0012               	return	
  9040  001B5E                     __end_ofi2_check_msg:
  9041                           	opt stack 0
  9042                           pclatu	equ	0xFFB
  9043                           pclath	equ	0xFFA
  9044                           tblptru	equ	0xFF8
  9045                           tblptrh	equ	0xFF7
  9046                           tblptrl	equ	0xFF6
  9047                           tablat	equ	0xFF5
  9048                           prodh	equ	0xFF4
  9049                           prodl	equ	0xFF3
  9050                           intcon	equ	0xFF2
  9051                           postinc0	equ	0xFEE
  9052                           fsr0h	equ	0xFEA
  9053                           fsr0l	equ	0xFE9
  9054                           wreg	equ	0xFE8
  9055                           indf1	equ	0xFE7
  9056                           postdec1	equ	0xFE5
  9057                           fsr1h	equ	0xFE2
  9058                           fsr1l	equ	0xFE1
  9059                           bsr	equ	0xFE0
  9060                           indf2	equ	0xFDF
  9061                           fsr2h	equ	0xFDA
  9062                           fsr2l	equ	0xFD9
  9063                           status	equ	0xFD8
  9064                           
  9065 ;; *************** function _enter_sleep_mode *****************
  9066 ;; Defined at:
  9067 ;;		line 203 in file "../src/messages.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;		None               void
  9074 ;; Registers used:
  9075 ;;		None
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9081 ;;      Params:         0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_SleepIfOkay
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text59
  9095  001C2C                     __ptext59:
  9096                           	opt stack 0
  9097  001C2C                     _enter_sleep_mode:
  9098                           	opt stack 19
  9099                           
  9100                           ;messages.c: 205: OSCCONbits.IDLEN = 1;
  9101                           
  9102                           ;incstack = 0
  9103  001C2C  8ED3               	bsf	4051,7,c	;volatile
  9104  001C2E  0003               	sleep		;# 
  9105  001C30  0012               	return	
  9106  001C32                     __end_of_enter_sleep_mode:
  9107                           	opt stack 0
  9108  0000                     pclatu	equ	0xFFB
  9109                           pclath	equ	0xFFA
  9110                           tblptru	equ	0xFF8
  9111                           tblptrh	equ	0xFF7
  9112                           tblptrl	equ	0xFF6
  9113                           tablat	equ	0xFF5
  9114                           prodh	equ	0xFF4
  9115                           prodl	equ	0xFF3
  9116                           intcon	equ	0xFF2
  9117                           postinc0	equ	0xFEE
  9118                           fsr0h	equ	0xFEA
  9119                           fsr0l	equ	0xFE9
  9120                           wreg	equ	0xFE8
  9121                           indf1	equ	0xFE7
  9122                           postdec1	equ	0xFE5
  9123                           fsr1h	equ	0xFE2
  9124                           fsr1l	equ	0xFE1
  9125                           bsr	equ	0xFE0
  9126                           indf2	equ	0xFDF
  9127                           fsr2h	equ	0xFDA
  9128                           fsr2l	equ	0xFD9
  9129                           status	equ	0xFD8
  9130                           pclatu	equ	0xFFB
  9131                           pclath	equ	0xFFA
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           postinc0	equ	0xFEE
  9140                           fsr0h	equ	0xFEA
  9141                           fsr0l	equ	0xFE9
  9142                           wreg	equ	0xFE8
  9143                           indf1	equ	0xFE7
  9144                           postdec1	equ	0xFE5
  9145                           fsr1h	equ	0xFE2
  9146                           fsr1l	equ	0xFE1
  9147                           bsr	equ	0xFE0
  9148                           indf2	equ	0xFDF
  9149                           fsr2h	equ	0xFDA
  9150                           fsr2l	equ	0xFD9
  9151                           status	equ	0xFD8
  9152                           
  9153                           	psect	rparam
  9154  0000                     pclatu	equ	0xFFB
  9155                           pclath	equ	0xFFA
  9156                           tblptru	equ	0xFF8
  9157                           tblptrh	equ	0xFF7
  9158                           tblptrl	equ	0xFF6
  9159                           tablat	equ	0xFF5
  9160                           prodh	equ	0xFF4
  9161                           prodl	equ	0xFF3
  9162                           intcon	equ	0xFF2
  9163                           postinc0	equ	0xFEE
  9164                           fsr0h	equ	0xFEA
  9165                           fsr0l	equ	0xFE9
  9166                           wreg	equ	0xFE8
  9167                           indf1	equ	0xFE7
  9168                           postdec1	equ	0xFE5
  9169                           fsr1h	equ	0xFE2
  9170                           fsr1l	equ	0xFE1
  9171                           bsr	equ	0xFE0
  9172                           indf2	equ	0xFDF
  9173                           fsr2h	equ	0xFDA
  9174                           fsr2l	equ	0xFD9
  9175                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         332
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      81
    BANK0           128    123     123
    BANK1           256     44     100
    BANK2           256      0     209
    BANK3           256    152     206

Pointer List with Targets:

    S1575$0$0	PTR struct . size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 
		 -> main@msgbuffer(BANK3[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 
		 -> main@msgbuffer(BANK3[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK2[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK3[10]), 
		 -> ToMainLow_MQ.queue.data(BANK2[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK3[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK2[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK3[10]), 
		 -> ToMainLow_MQ.queue.data(BANK2[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK3[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    addADDataPoints@data	PTR struct . size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    addDataPoints@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    setBrainReqData@buf	PTR unsigned char  size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    setBrainReqData@tempBrain	PTR struct . size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    S1575$adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    unpackRoverMsg@handler.adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    unpackBrainMsg@buf	PTR unsigned char  size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    packADData@out	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff(BANK0[103]), 

    packADData@data	PTR struct . size(2) Largest target is 101
		 -> ADacc(BANK2[101]), 

    packReturnData@data	PTR unsigned char  size(2) Largest target is 101
		 -> ADacc(BANK2[101]), 

    packReturnData@end	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff.payload(COMRAM[0]), sendADdata@outBuff(BANK0[103]), 

    packReturnData@dest	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff.payload(COMRAM[0]), sendADdata@outBuff(BANK0[103]), 

    packReturnData@msg	PTR struct . size(2) Largest target is 103
		 -> sendADdata@outBuff(BANK0[103]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 121
		 -> main@ic(BANK3[121]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff(BANK0[103]), main@msgbuffer(BANK3[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK3[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), i2c_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK3[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK3[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 
		 -> main@msgbuffer(BANK3[11]), 

    send_msg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    i2_debugNum->i2_resetDBG
    i2_debugNum->i2_setDBG
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _setBrainReqData->_unpackBrainMsg
    _packADData->_packReturnData
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_adc_int_handler
    _adc_int_handler->_ToMainHigh_sendmsg
    _debugNum->_resetDBG
    _debugNum->_setDBG
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    i2_ToMainHigh_sendmsg->i2_send_msg
    _sendRequestedData->_sendADdata
    _sendADdata->_packADData

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _resetAccumulators->_resetADacc
    _init_queues->_init_queue
    _init_adc->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _addDataPoints->_addADDataPoints
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               155   155      0    9290
                                             43 BANK1      1     1      0
                                              0 BANK3    152   152      0
                         _OpenTimer0
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                      _addDataPoints
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_adc
                           _init_i2c
                        _init_queues
                  _resetAccumulators
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     212
                                             14 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _resetAccumulators                                    0     0      0      68
                         _resetADacc
 ---------------------------------------------------------------------------------
 (2) _resetADacc                                           5     5      0      68
                                             14 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             18 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             14 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             2     2      0     433
                                             19 BANK1      2     2      0
                        _Delay10TCYx
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      31
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     371
                                             14 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay10TCYx                                          1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                             20 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             18 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             16 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             14 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _addDataPoints                                        6     0      6     870
                                             22 BANK1      6     0      6
                    _addADDataPoints
 ---------------------------------------------------------------------------------
 (2) _addADDataPoints                                      8     4      4     315
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2515
                                             38 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2515
                                             38 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2268
                                             24 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     531
                                             14 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3081
                                             29 COMRAM    17    17      0
                    _adc_int_handler
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      3     3      0    3081
                                             26 COMRAM     3     3      0
                            _ReadADC
                 _ToMainHigh_sendmsg
                          _addBuffer
                           _debugNum
 ---------------------------------------------------------------------------------
 (7) _debugNum                                             2     0      2     192
                                              1 COMRAM     2     0      2
                           _resetDBG
                             _setDBG
 ---------------------------------------------------------------------------------
 (8) _setDBG                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _resetDBG                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _addBuffer                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ToMainHigh_sendmsg                                   4     1      3    2837
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    2352
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     646
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6631
                                              0 BANK1     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     654
                        _WriteTimer0
                         i2_debugNum
 ---------------------------------------------------------------------------------
 (12) i2_debugNum                                          2     0      2     556
                                             47 COMRAM     2     0      2
                         i2_resetDBG
                           i2_setDBG
 ---------------------------------------------------------------------------------
 (13) i2_setDBG                                            1     1      0      73
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_resetDBG                                          1     1      0      73
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      98
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    5741
                                            113 BANK0     10    10      0
                       _handle_start
                  _sendRequestedData
                    _setBrainReqData
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    2919
                                              5 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2547
                                             56 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _setBrainReqData                                     4     2      2     281
                                             48 COMRAM     4     2      2
                     _unpackBrainMsg
 ---------------------------------------------------------------------------------
 (13) _unpackBrainMsg                                      2     0      2     108
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _sendRequestedData                                   0     0      0    1926
                         _sendADdata
                       i2_resetADacc
 ---------------------------------------------------------------------------------
 (13) i2_resetADacc                                        5     5      0     186
                                             46 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) _sendADdata                                        105   105      0    1740
                                              8 BANK0    105   105      0
                         _packADData
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) i2_start_i2c_slave_reply                             5     3      2     318
                                             46 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) _packADData                                          8     0      8    1294
                                              0 BANK0      8     0      8
                     _packReturnData
 ---------------------------------------------------------------------------------
 (15) _packReturnData                                     17     7     10     862
                                             46 COMRAM    17     7     10
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _addDataPoints
     _addADDataPoints
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_adc
     _Delay10TCYx
     _OpenADC
     _SetChanADC
   _init_i2c
   _init_queues
     _init_queue
   _resetAccumulators
     _resetADacc
   _start_i2c_slave_reply

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
     _ReadADC
     _ToMainHigh_sendmsg
       _send_msg
         i1_memcpy
     _addBuffer
     _debugNum
       _resetDBG
       _setDBG

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _handle_start
     _sendRequestedData
       _sendADdata
         _packADData
           _packReturnData
         i2_start_i2c_slave_reply
       i2_resetADacc
     _setBrainReqData
       _unpackBrainMsg
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _WriteTimer0
     i2_debugNum
       i2_resetDBG
       i2_setDBG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100     98      CE      10       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      D1       8       81.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     2C      64       6       39.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     7B      7B       4       96.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CF      11        0.0%
DATA                 0      0     2CF      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 10 22:52:05 2014

               packReturnData@end 003C                 packReturnData@msg 0033  
              packReturnData@data 002F                packReturnData@dest 003E  
        _MQ_Main_Willing_to_block 0044                    ?_addDataPoints 014E  
           ?i2_ToMainHigh_sendmsg 0085                       _SSPSTATbits 000FC7  
                              l91 0750         __end_of_ToMainLow_recvmsg 1786  
                              bsr 000FE0                      __CFG_CP0$OFF 000000  
            __end_ofi2_resetADacc 166C                               l554 1134  
                             l580 1A98                               l581 1A9A  
                             l836 1BB4                               l829 1B9E  
            __size_of_WriteTimer0 0012                    _FromMainLow_MQ 0265  
                             prod 000FF3                        i2_debugNum 157C  
                             wreg 000FE8                      __CFG_IESO$ON 000000  
                    ?_in_high_int 0146           __size_of_packReturnData 00A8  
            packReturnData@maxout 0035                              l3206 1734  
                            l3410 078A                              l3402 0756  
                            l3414 07C6                              l3192 16F0  
                            l3184 16CE                              l3440 08F4  
                            l3424 082C                              l3408 077A  
                            l3418 07EE                              l3434 08A2  
                            l3540 1204                              l3452 0994  
                            l3428 0868                              l3436 08B4  
                            l3444 0932                              l3534 11D8  
                            l3446 0956                              l3608 0A4C  
                            l3624 0B12                              l3456 09D2  
                            l3546 1230                              l3554 0B32  
                            l3394 070E                              l3580 1280  
                            l3558 0BB6                              l3594 14B8  
                            l3754 12C2                              l3588 1494  
                            l3772 0F3A                              l3766 0EF4  
                            l3758 12E6          setBrainReqData@tempBrain 0033  
                            _LATB 000F8A                              u2290 088E  
                            u2667 1BA0                              u2677 1BB6  
                            i1l44 0066                   _FromMainHigh_MQ 0398  
                   __CFG_FCMEN$ON 000000            ?_block_on_To_msgqueues 0001  
                            _main 06B8                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                       main@msgtype 031B  
                            pclat 000FFA                       i2_check_msg 1B3A  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002F                              start 00AC  
                   __CFG_FOSC2$ON 000000                  ?_adc_int_handler 0001  
                      i2_resetDBG 1978                        i2_send_msg 0D18  
       ToMainHigh_recvmsg@msgtype 015E                   __end_of_ReadADC 1C14  
                     _Delay10TCYx 1B9A                    send_msg@length 000D  
   i2start_i2c_slave_reply@length 0033                   __end_of_OpenADC 1138  
     __size_of_timer0_int_handler 001C                       _Delay1KTCYx 1BB0  
                ?_addADDataPoints 0146                             ?_main 0001  
                           _T0CON 000FD5                             _ADacc 0200  
                           i1l370 18D2                        i1memcpy@d1 0001  
                           i1l371 18D6                             i1l380 190A  
                           i1l372 18DA                             i1l381 190E  
                           i1l382 1912                             i1l383 1916  
                           i1l367 18CA                             i1l369 18CE  
                           i1l378 1906                             i2l260 0178  
                           i2l248 0E66                             i2l264 01BC  
                           i2l258 0512                             i2l370 194A  
                           i2l371 194E                             i2l292 0524  
                           i2l380 1982                             i2l372 1952  
                           i2l381 1986                             i2l286 0484  
                           i2l278 034C                             i2l382 198A  
                           i2l383 198E                             i2l367 1942  
                           i2l369 1946                             i2l378 197E  
                      i1memcpy@s1 0003                             _RCREG 000FAE  
                   packADData@len 0082                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                   packADData@out 0084                             _TMR1L 000FCE  
                           _TRISB 000F93                        i2memcpy@d1 002F  
                      i2memcpy@s1 0031                      ?_init_queues 0001  
       __size_of_enter_sleep_mode 0006                   __end_of_in_main 1744  
                           _count 0046        ToMainLow_recvmsg@maxlength 0162  
                           main@j 0317           __end_of_setBrainReqData 1A1C  
           addDataPoints@sensorid 014E           i2c_configure_slave@addr 0146  
                  _unpackBrainMsg 1C14                             tablat 000FF5  
                           status 000FD8          i2ToMainHigh_sendmsg@data 0086  
                __end_ofi1_memcpy 1808                 unpackBrainMsg@buf 002F  
                __end_ofi2_setDBG 1978                  __end_ofi2_memcpy 1848  
                 __initialization 14D0                   ??_addDataPoints 0154  
          ??i2_ToMainHigh_sendmsg 0040                      __end_of_main 09E0  
      __size_of_ToMainLow_recvmsg 0042             __size_ofi2_in_low_int 002E  
          packReturnData@sensorID 0037                            ??_main 0163  
                 send_msg@msgtype 000E                     __activetblptr 000002  
                 send_msg@tlength 0012                        _SetChanADC 1B5E  
            __end_of_handle_start 0EB2                       ?i2_debugNum 0030  
          __end_of_unpackBrainMsg 1C1E                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          i1l2290 156A                            i1l2282 154A  
                          i1l2286 155A                            i1l2278 153A  
                          i1l1844 191A                            i1l1838 18DE  
                          i2l3010 1A40                            i2l3002 1A2A  
                          i2l3310 0414                            i2l3062 1956  
                          i2l3222 117C                            i1l3870 17F6  
                          i2l3304 03C0                            i2l3216 1172  
                          i1l3864 17DA                        _OpenTimer0 1A74  
                          i2l3306 0402                            i2l3082 15AC  
                          i2l3074 158C                            i2l2524 1672  
                          i2l3332 04E6                            i2l3244 016E  
                          i2l3068 1992                            i2l3262 01F4  
                          i2l3238 0156                            i2l3086 15BC  
                          i2l3078 159C                            i1l3894 0F9A  
                  __CFG_WDTEN$OFF 000000                            i2l3360 0698  
                          i2l3352 05F2                            i2l3344 0588  
                          i2l3280 0274                            i2l3264 0220  
                          i2l3338 0528                            i2l3282 02B4  
                          i2l3274 025C                            i2l3730 1098  
                          i2l3714 1036                            i2l3724 107C  
                          i2l3824 0D64                            i2l3666 0E82  
                          i2l3842 0C40                            i2l3668 0E9A  
                          i2l3846 0CB4                            i2l3854 1628  
                          i2l3880 1836                            i2l3858 1640  
                          i2l3874 181A       __end_of_i2c_configure_slave 1AF0  
                   ??_SleepIfOkay 0033                    packADData@data 0080  
                          _OSCCON 000FD3                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
                       ??_ReadADC 0003                  __end_of_debugNum 157C  
   __end_of_start_i2c_slave_reply 0C24                         ??_OpenADC 0148  
                     ?i2_resetDBG 0001                      i2_in_low_int 1A1C  
                     ?i2_send_msg 0039                    __CFG_XINST$OFF 000000  
           __size_ofi2_resetADacc 004E                   _i2c_int_handler 00B0  
                OpenTimer0@config 0146                            _ic_ptr 0100  
                   main@msgbuffer 030B                  __end_of_init_i2c 1472  
                __end_of_init_adc 1886                            _setDBG 18C4  
                          _memcpy 1472                            clear_0 14D6  
                          clear_1 14E2                            clear_2 14EE  
                          clear_3 14FA                            _uc_ptr 0042  
                          main@ic 031F                  __end_of_recv_msg 0B16  
     start_i2c_slave_reply@length 014A                  __end_of_resetDBG 193C  
                       ??_in_main 014C                  __end_of_send_msg 100C  
                    __pdataCOMRAM 004D               adc_int_handler@data 001C  
                  _packReturnData 100C           i2c_int_handler@i2c_data 00F7  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 0149  
        ?i2_start_i2c_slave_reply 002F                   ?_unpackBrainMsg 002F  
        ToMainLow_recvmsg@msgtype 015E                 _sendRequestedData 1BC6  
                     i2resetDBG@b 002F              __size_of_in_high_int 0012  
              __size_of_addBuffer 0024                  ?_setBrainReqData 0031  
                 __CFG_FOSC$HSPLL 000000                ?_sendRequestedData 0001  
                      __accesstop 0080           __end_of__initialization 1520  
      __end_of_ToMainHigh_recvmsg 17C8        __end_of_ToMainHigh_sendmsg 1B16  
                    i2_resetADacc 161E                     addBuffer@data 0001  
             ??_sendRequestedData 0040               __end_of_SleepIfOkay 16BA  
             __size_ofi2_debugNum 0052                    __pcstackCOMRAM 0001  
          __size_ofi2_in_high_int 000C                __size_of_check_msg 0036  
                addDataPoints@len 0152                      _BrainMsgRecv 0040  
          __end_of_packReturnData 10B4                       ?_SetChanADC 0001  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 11B2  
     __end_of_InterruptHandlerLow 00AC                         ?i2_setDBG 0001  
                       ?i2_memcpy 002F                     _ToMainHigh_MQ 0102  
       __end_of_sendRequestedData 1BDA               __size_ofi2_resetDBG 003C  
                _enter_sleep_mode 1C2C               __size_ofi2_send_msg 00D2  
                   check_msg@qptr 0146           ??_block_on_To_msgqueues 014C  
            __size_of_init_queues 006E                        __pbssBANK1 0100  
                      __pbssBANK2 0200                        __pbssBANK3 0398  
                     ?_OpenTimer0 0001                main@to_send_buffer 0300  
         __end_of_i2c_int_handler 06B8                      ?i2_check_msg 002F  
                    ?_Delay10TCYx 0001                 recv_msg@maxlength 0152  
                 recv_msg@msgtype 0153                   recv_msg@tlength 015A  
           __size_of_handle_start 00C8                 __end_of_addBuffer 1B3A  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0031  
                         ?_setDBG 0001                           ?_memcpy 0146  
                   ??_WriteTimer0 0031                   ?_packReturnData 002F  
 __end_ofi2_start_i2c_slave_reply 0D18                        ??i1_memcpy 0007  
                       ?_debugNum 0002                        ??i2_setDBG 002F  
                      ??i2_memcpy 0035                        _packADData 1886  
      i2start_i2c_slave_reply@msg 002F                       resetADacc@i 0149  
                   i2_in_high_int 1BFE                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 19EA                         ?_init_i2c 0146  
                     _SleepIfOkay 166C                         ?_init_adc 0001  
                       _ADCBuffer 0048                           _ReadADC 1C0A  
                       ?_recv_msg 0150                           _OpenADC 10B4  
                      _in_low_int 16BA                      _handle_start 0DEA  
                       ?_resetDBG 0001                           __Hparam 0000  
             __size_of_SetChanADC 0020                         ?_send_msg 000B  
                         __Lparam 0000        __end_of_timer0_int_handler 1B9A  
               _resetAccumulators 1C26                   __CFG_STVREN$OFF 000000  
                         __pcinit 14D0                   __size_of_setDBG 003C  
                 __size_of_memcpy 005E                ?_resetAccumulators 0001  
        __size_of_adc_int_handler 0050                   Delay10TCYx@unit 0146  
                      _init_queue 1238                           __ramtop 0400  
             __size_of_OpenTimer0 002A                           __ptext0 06B8  
                         __ptext1 0B16                           __ptext2 1C26  
                         __ptext3 12B2                           __ptext4 139A  
                         __ptext5 1238                           __ptext6 1408  
                         __ptext7 1848                           __ptext8 1B5E  
                         __ptext9 10B4                         _T0CONbits 000FD5  
                         _in_main 1700                        _sendADdata 1326  
          sendADdata@bytes_packed 00EF                      ??i2_debugNum 0032  
                      ??_debugNum 0004                           _sample1 004D  
                         _sample2 004E                           _sample3 004F  
                         _sample4 0050                           _sample5 0051  
             ??_resetAccumulators 014B               __end_of_WriteTimer0 1BFE  
      __size_of_sendRequestedData 0014                    ?i2_in_high_int 002F  
        __size_of_addADDataPoints 00B0                     i2debugNum@num 0030  
                  OpenADC@config2 0146                    __pintcode_body 1138  
            end_of_initialization 1520                           setDBG@b 0001  
                         memcpy@d 014C                           memcpy@n 014A  
                         memcpy@s 014E                        ??_init_i2c 0148  
                      _resetADacc 12B2                        ??_init_adc 014B  
     i2c_int_handler@data_written 00F5                     __Lmediumconst 0000  
                         int_func 1138                 sendADdata@outBuff 0088  
                ?_i2c_int_handler 0001                        ??_recv_msg 0157  
                    ??i2_resetDBG 002F                        ??_resetDBG 0001  
                    ??i2_send_msg 003F                        ??_send_msg 0011  
       __end_of_resetAccumulators 1C2C                         _RCSTAbits 000FAB  
              __end_ofi2_debugNum 15CE                           postdec1 000FE5  
                         postinc0 000FEE         ToMainHigh_sendmsg@msgtype 0017  
           __end_of_addDataPoints 1A74     __size_ofi2_ToMainHigh_sendmsg 002A  
                addADDataPoints@i 014C                  ??_unpackBrainMsg 0031  
                     ?_packADData 0080                         _TRISAbits 000F92  
                       _TRISCbits 000F94                __end_ofi2_resetDBG 19B4  
              __end_ofi2_send_msg 0DEA                        main@length 031E  
                     ?_in_low_int 0148                setBrainReqData@buf 0031  
__size_ofi2_start_i2c_slave_reply 00F4             _start_i2c_slave_reply 0B16  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1C32                _ToMainHigh_recvmsg 1786  
                       i1memcpy@d 0007                _ToMainHigh_sendmsg 1AF0  
                       i1memcpy@n 0005                         i1memcpy@s 0009  
            __size_of_Delay10TCYx 0016                     __pidataCOMRAM 1C32  
                       i2setDBG@b 002F                       ?_init_queue 0146  
                       i2memcpy@d 0035                       _WriteTimer0 1BEC  
                       i2memcpy@n 0033                         i2memcpy@s 0037  
                  __end_of_setDBG 1900                    __end_of_memcpy 14D0  
               _enable_interrupts 1C1E              __size_of_Delay1KTCYx 0016  
                    ??_SetChanADC 0146                       ?_sendADdata 0001  
             ?_ToMainHigh_recvmsg 015E                   ??i2_in_high_int 0031  
        i2c_int_handler@data_read 00FA               ?_ToMainHigh_sendmsg 0017  
              ?_enable_interrupts 0001               start_initialization 14D0  
                   ??_in_high_int 0148                 addDataPoints@data 0150  
               ??_adc_int_handler 001B          packReturnData@payloadLen 0031  
               __size_ofi1_memcpy 0040                 __size_ofi2_setDBG 003C  
               __size_ofi2_memcpy 0040               ??_enable_interrupts 0146  
                    ??_OpenTimer0 0146    __size_of_block_on_To_msgqueues 007E  
   __end_of_block_on_To_msgqueues 1238                       ?_resetADacc 0001  
               ??_addADDataPoints 014A      __end_of_InterruptHandlerHigh 11BA  
                      init_i2c@ic 0146              ??_ToMainHigh_recvmsg 0162  
            ??_ToMainHigh_sendmsg 001A          __size_of_setBrainReqData 0032  
      __size_of_resetAccumulators 0006                __end_of_SetChanADC 1B7E  
             __size_of_packADData 003E                  ??_packReturnData 0039  
        i2c_int_handler@error_buf 00F2                          ??_setDBG 0001  
       __end_of_enable_interrupts 1C26                          ??_memcpy 014C  
              __end_of_OpenTimer0 1A9E                         _addBuffer 1B16  
        i2c_int_handler@msg_ready 00F9                       __pbssCOMRAM 0040  
                   ??_init_queues 014A                     __pcstackBANK0 0080  
                   __pcstackBANK1 0138                     __pcstackBANK3 0300  
             __size_of_in_low_int 0046          start_i2c_slave_reply@msg 0146  
               __size_of_debugNum 0052               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 0146      __size_of_InterruptHandlerLow 0094  
             __end_of_in_high_int 1BEC                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 0160                      _ToMainLow_MQ 029B  
             __size_of_init_queue 007A                          ?_ReadADC 0001  
                       _check_msg 19B4            ?_start_i2c_slave_reply 0146  
               __size_of_init_i2c 006A                 OpenADC@portconfig 0147  
                        ?_OpenADC 0146                 __size_of_init_adc 003E  
             __size_of_sendADdata 0074                      recv_msg@data 0155  
                    recv_msg@qmsg 015C                      recv_msg@slot 0159  
                    recv_msg@qptr 0150        i2ToMainHigh_sendmsg@length 0088  
               __size_of_recv_msg 0136                         __pintcode 0008  
               __size_of_resetDBG 003C                 __size_of_send_msg 00AA  
                     __pintcodelo 0018            ToMainHigh_recvmsg@data 0160  
             __size_of_resetADacc 0074        i2c_int_handler@msg_to_send 00F8  
                        ?_in_main 014A                        ?_addBuffer 0001  
               WriteTimer0@timer0 002F                _timer0_int_handler 1B7E  
             ?_timer0_int_handler 0001               __end_of_init_queues 1408  
                   OpenADC@config 014A                          _LATBbits 000F8A  
                 i2check_msg@qptr 002F                        ?_check_msg 0146  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0C24                     ?i2_in_low_int 0031  
                        i2u252_45 10A2                          _PIR1bits 000F9E  
          ToMainHigh_sendmsg@data 0018                          _RCONbits 000FD0  
                packADData@maxout 0086                  __CFG_WDTPS$32768 000000  
            ??_timer0_int_handler 0033        __size_of_enable_interrupts 0008  
               ??_setBrainReqData 0033                        _ADCON0bits 000FC2  
                       main@j_452 0319                          i1_memcpy 17C8  
            _InterruptHandlerHigh 0008                      ??_packADData 0040  
                        i2_setDBG 193C                          i2_memcpy 1808  
                     _in_high_int 1BDA                      send_msg@data 000F  
             _i2c_configure_slave 1AC8                      send_msg@qmsg 0015  
                    send_msg@slot 0014                      send_msg@qptr 000B  
    __end_ofi2_ToMainHigh_sendmsg 1AC8                         copy_data0 1514  
                   ?i2_resetADacc 0001                    ??i2_in_low_int 0033  
                    ??_in_low_int 014A                  __size_of_ReadADC 000A  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001                __end_of_packADData 18C4  
                 _adc_int_handler 15CE          __size_of_i2c_int_handler 0608  
              ??_enter_sleep_mode 002F                      ??_init_queue 0148  
                    ?_WriteTimer0 002F                       ??_addBuffer 0001  
                    ??_sendADdata 0040             ?_InterruptHandlerHigh 0001  
                __size_of_in_main 0044                          _debugNum 152A  
               i2send_msg@msgtype 003C                   _addADDataPoints 0EB2  
     ToMainHigh_recvmsg@maxlength 0162                 i2send_msg@tlength 0080  
                     _init_queues 139A                       debugNum@num 0002  
              __end_of_in_low_int 1700                          __ptext10 1B9A  
                        __ptext11 1AC8                          __ptext20 0EB2  
                        __ptext12 1C1E                          __ptext21 1744  
                        __ptext13 11BA                          __ptext30 1900  
                        __ptext22 1786                          __ptext14 1700  
                        __ptext31 1B16                          __ptext23 09E0  
                        __ptext15 16BA                          __ptext40 1978  
                        __ptext32 1AF0                          __ptext24 1472  
                        __ptext16 1BDA                          __ptext41 1BEC  
                        __ptext33 0F62                          __ptext25 1A74  
                        __ptext17 19B4                          __ptext50 1326  
                        __ptext42 00B0                          __ptext34 17C8  
                        __ptext18 1BB0                          __ptext51 0C24  
                        __ptext43 1A9E                          __ptext35 1C0A  
                        __ptext27 15CE                          __ptext19 1A4A  
                        __ptext52 1886                          __ptext44 0D18  
                        __ptext28 152A                          __ptext53 100C  
                        __ptext45 1808                          __ptext37 1B7E  
                        __ptext29 18C4                          __ptext54 0DEA  
                        __ptext46 19EA                          __ptext38 157C  
                        __ptext55 166C                          __ptext47 1C14  
                        __ptext39 193C                          __ptext56 1A1C  
                        __ptext48 1BC6                          __ptext57 1BFE  
                        __ptext49 161E                          __ptext58 1B3A  
                        __ptext59 1C2C                         resetDBG@b 0001  
          __size_of_addDataPoints 002A                    ??i2_resetADacc 002F  
       ??i2_start_i2c_slave_reply 0031                      ??_resetADacc 0146  
                        _init_i2c 1408                          _init_adc 1848  
             addADDataPoints@data 0146                     __size_of_main 0328  
                   ??i2_check_msg 0031                       ??_check_msg 0148  
              __end_of_init_queue 12B2              __size_of_SleepIfOkay 004E  
                        _recv_msg 09E0                          _resetDBG 1900  
           ??_i2c_configure_slave 0146                          _send_msg 0F62  
              __end_of_sendADdata 139A                    init_queue@qptr 0146  
                   ??_Delay10TCYx 0146                          _timesreq 0047  
                   ??_Delay1KTCYx 0146               _InterruptHandlerLow 0018  
              __end_of_resetADacc 1326                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                          memcpy@d1 0146  
                        memcpy@s1 0148             __end_ofi2_in_high_int 1C0A  
           main@data_points_count 031C      i2c_int_handler@overrun_error 00F6  
                i2send_msg@length 003B                          intlevel1 0000  
                        intlevel2 0000              ?_InterruptHandlerLow 0001  
         ??_start_i2c_slave_reply 0148           __size_of_unpackBrainMsg 000A  
               SetChanADC@channel 0147             _block_on_To_msgqueues 11BA  
                   ?_handle_start 0001                addADDataPoints@len 0148  
     __size_of_ToMainHigh_recvmsg 0042           __end_of_adc_int_handler 161E  
     __size_of_ToMainHigh_sendmsg 0026                        _OSCCONbits 000FD3  
     i2ToMainHigh_sendmsg@msgtype 0085          ToMainHigh_sendmsg@length 001A  
             __end_ofi2_check_msg 1B5E              i2_ToMainHigh_sendmsg 1A9E  
                   _addDataPoints 1A4A           __end_of_addADDataPoints 0F62  
          ??_InterruptHandlerHigh 0138                 _ToMainLow_recvmsg 1744  
             __end_of_Delay10TCYx 1BB0                main@last_reg_recvd 0316  
            __end_ofi2_in_low_int 1A4A                ?_ToMainLow_recvmsg 015E  
             __end_of_Delay1KTCYx 1BC6                 ??_i2c_int_handler 00F1  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                   i2resetADacc@i 0032                    i2send_msg@data 003D  
           ??_InterruptHandlerLow 001E               ??_ToMainLow_recvmsg 0162  
                  i2send_msg@qmsg 0083                    i2send_msg@slot 0082  
                  i2send_msg@qptr 0039                    ??_handle_start 002F  
                    _USART_Status 0045                   _setBrainReqData 19EA  
