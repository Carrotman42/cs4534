

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Feb 06 11:10:19 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71  0000                     _INTCONbits	set	4082
    72  0000                     _IPR1bits	set	3999
    73  0000                     _LATB	set	3978
    74  0000                     _LATBbits	set	3978
    75  0000                     _OSCCON	set	4051
    76  0000                     _OSCCONbits	set	4051
    77  0000                     _OSCTUNEbits	set	3995
    78  0000                     _PIE1bits	set	3997
    79  0000                     _PIR1bits	set	3998
    80  0000                     _RCONbits	set	4048
    81  0000                     _RCREG	set	4014
    82  0000                     _RCSTA	set	4011
    83  0000                     _RCSTAbits	set	4011
    84  0000                     _SPBRG	set	4015
    85  0000                     _SPBRGH	set	4016
    86  0000                     _SSPADD	set	4040
    87  0000                     _SSPBUF	set	4041
    88  0000                     _SSPCON1	set	4038
    89  0000                     _SSPCON1bits	set	4038
    90  0000                     _SSPCON2	set	4037
    91  0000                     _SSPCON2bits	set	4037
    92  0000                     _SSPSTAT	set	4039
    93  0000                     _SSPSTATbits	set	4039
    94  0000                     _T0CON	set	4053
    95  0000                     _T0CONbits	set	4053
    96  0000                     _T1CON	set	4045
    97  0000                     _T1CONbits	set	4045
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _TMR1H	set	4047
   101  0000                     _TMR1L	set	4046
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISCbits	set	3988
   104  0000                     _TXSTA	set	4012
   105  0000                     _TXSTAbits	set	4012
   106                           
   107                           	psect	nvCOMRAM
   108  00004D                     __pnvCOMRAM:
   109                           	opt stack 0
   110  00004D                     _uc_ptr:
   111                           	opt stack 0
   112  00004D                     	ds	2
   113                           
   114                           	psect	nvBANK0
   115  0000E7                     __pnvBANK0:
   116                           	opt stack 0
   117  0000E7                     _ic_ptr:
   118                           	opt stack 0
   119  0000E7                     	ds	2
   120                           
   121                           ; #config settings
   122  0000                     
   123                           	psect	cinit
   124  001A54                     __pcinit:
   125                           	opt stack 0
   126  001A54                     start_initialization:
   127                           	opt stack 0
   128  001A54                     __initialization:
   129                           	opt stack 0
   130                           
   131                           ; Clear objects allocated to BANK1 (162 bytes)
   132  001A54  EE01  F000         	lfsr	0,__pbssBANK1
   133  001A58  0EA2               	movlw	162
   134  001A5A                     clear_0:
   135  001A5A  6AEE               	clrf	postinc0,c
   136  001A5C  06E8               	decf	wreg,f,c
   137  001A5E  E1FD               	bnz	clear_0
   138                           
   139                           ; Clear objects allocated to BANK0 (54 bytes)
   140  001A60  EE00  F080         	lfsr	0,__pbssBANK0
   141  001A64  0E36               	movlw	54
   142  001A66                     clear_1:
   143  001A66  6AEE               	clrf	postinc0,c
   144  001A68  06E8               	decf	wreg,f,c
   145  001A6A  E1FD               	bnz	clear_1
   146                           
   147                           ; Clear objects allocated to COMRAM (2 bytes)
   148  001A6C  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   149  001A6E  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   150  001A70                     end_of_initialization:
   151                           	opt stack 0
   152  001A70                     __end_of__initialization:
   153                           	opt stack 0
   154  001A70  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  001A72  6EF8               	movwf	tblptru,c
   156  001A74  0100               	movlb	0
   157  001A76  EF4C  F003         	goto	_main	;jump to C main() function
   158                           tblptru	equ	0xFF8
   159                           postinc0	equ	0xFEE
   160                           wreg	equ	0xFE8
   161                           
   162                           	psect	bssCOMRAM
   163  00004F                     __pbssCOMRAM:
   164                           	opt stack 0
   165  00004F                     _MQ_Main_Willing_to_block:
   166                           	opt stack 0
   167  00004F                     	ds	1
   168  000050                     _USART_Status:
   169                           	opt stack 0
   170  000050                     	ds	1
   171                           tblptru	equ	0xFF8
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	bssBANK0
   176  000080                     __pbssBANK0:
   177                           	opt stack 0
   178  000080                     _ToMainLow_MQ:
   179                           	opt stack 0
   180  000080                     	ds	54
   181                           tblptru	equ	0xFF8
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	bssBANK1
   186  000100                     __pbssBANK1:
   187                           	opt stack 0
   188  000100                     _FromMainHigh_MQ:
   189                           	opt stack 0
   190  000100                     	ds	54
   191  000136                     _FromMainLow_MQ:
   192                           	opt stack 0
   193  000136                     	ds	54
   194  00016C                     _ToMainHigh_MQ:
   195                           	opt stack 0
   196  00016C                     	ds	54
   197                           tblptru	equ	0xFF8
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	cstackBANK1
   202  0001A2                     __pcstackBANK1:
   203                           	opt stack 0
   204  0001A2                     ToMainLow_recvmsg@msgtype:
   205                           	opt stack 0
   206  0001A2                     ToMainHigh_recvmsg@msgtype:
   207                           	opt stack 0
   208  0001A2                     timer1_lthread@tptr:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x0
   212  0001A2                     	ds	2
   213  0001A4                     ToMainLow_recvmsg@data:
   214                           	opt stack 0
   215  0001A4                     ToMainHigh_recvmsg@data:
   216                           	opt stack 0
   217  0001A4                     timer1_lthread@msgtype:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x2
   221  0001A4                     	ds	2
   222  0001A6                     timer1_lthread@length:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x4
   226  0001A6                     	ds	2
   227  0001A8                     timer1_lthread@msgbuffer:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x6
   231  0001A8                     	ds	2
   232  0001AA                     ??_timer1_lthread:
   233                           
   234                           ; 0 bytes @ 0x8
   235  0001AA                     	ds	1
   236  0001AB                     timer1_lthread@retval:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x9
   240  0001AB                     	ds	1
   241  0001AC                     ??_main:
   242                           
   243                           ; 0 bytes @ 0xA
   244  0001AC                     	ds	1
   245  0001AD                     main@to_send_buffer:
   246                           	opt stack 0
   247                           
   248                           ; 11 bytes @ 0xB
   249  0001AD                     	ds	11
   250  0001B8                     main@msgbuffer:
   251                           	opt stack 0
   252                           
   253                           ; 11 bytes @ 0x16
   254  0001B8                     	ds	11
   255  0001C3                     main@uthread_data:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x21
   259  0001C3                     	ds	2
   260  0001C5                     main@t0thread_data:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x23
   264  0001C5                     	ds	2
   265  0001C7                     main@last_reg_recvd:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x25
   269  0001C7                     	ds	1
   270  0001C8                     main@j:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x26
   274  0001C8                     	ds	2
   275  0001CA                     main@j_518:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x28
   279  0001CA                     	ds	2
   280  0001CC                     main@uc:
   281                           	opt stack 0
   282                           
   283                           ; 5 bytes @ 0x2A
   284  0001CC                     	ds	5
   285  0001D1                     main@t1thread_data:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x2F
   289  0001D1                     	ds	2
   290  0001D3                     main@data_points_count:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x31
   294  0001D3                     	ds	2
   295  0001D5                     main@msgtype:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x33
   299  0001D5                     	ds	1
   300  0001D6                     main@length:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x34
   304  0001D6                     	ds	1
   305  0001D7                     main@ic:
   306                           	opt stack 0
   307                           
   308                           ; 28 bytes @ 0x35
   309  0001D7                     	ds	28
   310                           tblptru	equ	0xFF8
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           
   314                           	psect	cstackBANK0
   315  0000B6                     __pcstackBANK0:
   316                           	opt stack 0
   317  0000B6                     timer0_int_handler@length:
   318                           	opt stack 0
   319  0000B6                     i2c_int_handler@error_buf:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x0
   323  0000B6                     	ds	2
   324  0000B8                     timer0_int_handler@msgtype:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x2
   328  0000B8                     	ds	1
   329  0000B9                     i2c_int_handler@data_written:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x3
   333  0000B9                     	ds	1
   334  0000BA                     i2c_int_handler@overrun_error:
   335                           	opt stack 0
   336  0000BA                     timer0_int_handler@val:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x4
   340  0000BA                     	ds	1
   341  0000BB                     i2c_int_handler@i2c_data:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x5
   345  0000BB                     	ds	1
   346  0000BC                     i2c_int_handler@msg_to_send:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x6
   350  0000BC                     	ds	1
   351  0000BD                     i2c_int_handler@msg_ready:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x7
   355  0000BD                     	ds	1
   356  0000BE                     i2c_int_handler@data_read:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x8
   360  0000BE                     	ds	1
   361  0000BF                     ??_InterruptHandlerHigh:
   362                           
   363                           ; 0 bytes @ 0x9
   364  0000BF                     	ds	14
   365  0000CD                     ?_in_high_int:
   366                           	opt stack 0
   367  0000CD                     ?___lwmod:
   368                           	opt stack 0
   369  0000CD                     i2c_configure_slave@addr:
   370                           	opt stack 0
   371  0000CD                     setDBG@b:
   372                           	opt stack 0
   373  0000CD                     resetDBG@b:
   374                           	opt stack 0
   375  0000CD                     OpenTimer0@config:
   376                           	opt stack 0
   377  0000CD                     OpenTimer1@config:
   378                           	opt stack 0
   379  0000CD                     Delay1KTCYx@unit:
   380                           	opt stack 0
   381  0000CD                     init_queue@qptr:
   382                           	opt stack 0
   383  0000CD                     check_msg@qptr:
   384                           	opt stack 0
   385  0000CD                     start_i2c_slave_reply@msg:
   386                           	opt stack 0
   387  0000CD                     init_i2c@ic:
   388                           	opt stack 0
   389  0000CD                     init_uart_recv@uc:
   390                           	opt stack 0
   391  0000CD                     timer0_lthread@tptr:
   392                           	opt stack 0
   393  0000CD                     init_timer1_lthread@tptr:
   394                           	opt stack 0
   395  0000CD                     uart_lthread@uptr:
   396                           	opt stack 0
   397  0000CD                     OpenUSART@spbrg:
   398                           	opt stack 0
   399  0000CD                     ___lwmod@dividend:
   400                           	opt stack 0
   401  0000CD                     memcpy@d1:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x17
   405  0000CD                     	ds	2
   406  0000CF                     ??_OpenUSART:
   407  0000CF                     ??_start_i2c_slave_reply:
   408  0000CF                     ??_init_queue:
   409  0000CF                     ??_check_msg:
   410  0000CF                     ?_in_low_int:
   411                           	opt stack 0
   412  0000CF                     timer0_lthread@msgtype:
   413                           	opt stack 0
   414  0000CF                     uart_lthread@msgtype:
   415                           	opt stack 0
   416  0000CF                     ___lwmod@divisor:
   417                           	opt stack 0
   418  0000CF                     memcpy@s1:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x19
   422  0000CF                     	ds	1
   423  0000D0                     init_queue@i:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x1A
   427  0000D0                     	ds	1
   428  0000D1                     ??_init_queues:
   429  0000D1                     ??___lwmod:
   430  0000D1                     ?_in_main:
   431                           	opt stack 0
   432  0000D1                     start_i2c_slave_reply@length:
   433                           	opt stack 0
   434  0000D1                     timer0_lthread@length:
   435                           	opt stack 0
   436  0000D1                     uart_lthread@length:
   437                           	opt stack 0
   438  0000D1                     memcpy@n:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x1B
   442  0000D1                     	ds	1
   443  0000D2                     OpenUSART@config:
   444                           	opt stack 0
   445  0000D2                     ___lwmod@counter:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x1C
   449  0000D2                     	ds	1
   450  0000D3                     ??_block_on_To_msgqueues:
   451  0000D3                     timer0_lthread@msgbuffer:
   452                           	opt stack 0
   453  0000D3                     uart_lthread@msgbuffer:
   454                           	opt stack 0
   455  0000D3                     memcpy@d:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1D
   459  0000D3                     	ds	2
   460  0000D5                     timer0_lthread@msgval:
   461                           	opt stack 0
   462  0000D5                     memcpy@s:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x1F
   466  0000D5                     	ds	2
   467  0000D7                     send_msg@qptr:
   468                           	opt stack 0
   469  0000D7                     recv_msg@qptr:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x21
   473  0000D7                     	ds	2
   474  0000D9                     send_msg@length:
   475                           	opt stack 0
   476  0000D9                     recv_msg@maxlength:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x23
   480  0000D9                     	ds	1
   481  0000DA                     send_msg@msgtype:
   482                           	opt stack 0
   483  0000DA                     recv_msg@msgtype:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x24
   487  0000DA                     	ds	1
   488  0000DB                     send_msg@data:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x25
   492  0000DB                     	ds	1
   493  0000DC                     recv_msg@data:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x26
   497  0000DC                     	ds	1
   498  0000DD                     ??_send_msg:
   499                           
   500                           ; 0 bytes @ 0x27
   501  0000DD                     	ds	1
   502  0000DE                     ??_recv_msg:
   503  0000DE                     send_msg@tlength:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x28
   507  0000DE                     	ds	2
   508  0000E0                     send_msg@slot:
   509                           	opt stack 0
   510  0000E0                     recv_msg@slot:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x2A
   514  0000E0                     	ds	1
   515  0000E1                     send_msg@qmsg:
   516                           	opt stack 0
   517  0000E1                     recv_msg@tlength:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x2B
   521  0000E1                     	ds	2
   522  0000E3                     FromMainHigh_sendmsg@msgtype:
   523                           	opt stack 0
   524  0000E3                     recv_msg@qmsg:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x2D
   528  0000E3                     	ds	1
   529  0000E4                     FromMainHigh_sendmsg@data:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x2E
   533  0000E4                     	ds	1
   534  0000E5                     ToMainLow_recvmsg@maxlength:
   535                           	opt stack 0
   536  0000E5                     ToMainHigh_recvmsg@maxlength:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x2F
   540  0000E5                     	ds	1
   541  0000E6                     FromMainHigh_sendmsg@length:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x30
   545  0000E6                     	ds	1
   546                           tblptru	equ	0xFF8
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           
   550                           	psect	cstackCOMRAM
   551  000001                     __pcstackCOMRAM:
   552                           	opt stack 0
   553  000001                     ?_ReadTimer1:
   554                           	opt stack 0
   555  000001                     ReadUSART@data:
   556                           	opt stack 0
   557  000001                     WriteTimer1@timer1:
   558                           	opt stack 0
   559  000001                     i1memcpy@d1:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x0
   563  000001                     	ds	2
   564  000003                     ReadTimer1@timer:
   565                           	opt stack 0
   566  000003                     WriteTimer1@timer:
   567                           	opt stack 0
   568  000003                     i1memcpy@s1:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x2
   572  000003                     	ds	2
   573  000005                     i1memcpy@n:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x4
   577  000005                     	ds	2
   578  000007                     i1memcpy@d:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x6
   582  000007                     	ds	2
   583  000009                     i1memcpy@s:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x8
   587  000009                     	ds	2
   588  00000B                     i1send_msg@qptr:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0xA
   592  00000B                     	ds	2
   593  00000D                     i1send_msg@length:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0xC
   597  00000D                     	ds	1
   598  00000E                     i1send_msg@msgtype:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0xD
   602  00000E                     	ds	1
   603  00000F                     i1send_msg@data:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0xE
   607  00000F                     	ds	2
   608  000011                     ??i1_send_msg:
   609                           
   610                           ; 0 bytes @ 0x10
   611  000011                     	ds	1
   612  000012                     i1send_msg@tlength:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x11
   616  000012                     	ds	2
   617  000014                     i1send_msg@slot:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x13
   621  000014                     	ds	1
   622  000015                     i1send_msg@qmsg:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x14
   626  000015                     	ds	2
   627  000017                     ToMainLow_sendmsg@msgtype:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x16
   631  000017                     	ds	1
   632  000018                     ToMainLow_sendmsg@data:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x17
   636  000018                     	ds	2
   637  00001A                     ToMainLow_sendmsg@length:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x19
   641  00001A                     	ds	1
   642  00001B                     ??_timer1_int_handler:
   643  00001B                     ??_uart_recv_int_handler:
   644                           
   645                           ; 0 bytes @ 0x1A
   646  00001B                     	ds	1
   647  00001C                     timer1_int_handler@result:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x1B
   651  00001C                     	ds	2
   652  00001E                     ??_InterruptHandlerLow:
   653                           
   654                           ; 0 bytes @ 0x1D
   655  00001E                     	ds	17
   656  00002F                     ?i2_in_high_int:
   657                           	opt stack 0
   658  00002F                     handle_start@data_read:
   659                           	opt stack 0
   660  00002F                     WriteTimer0@timer0:
   661                           	opt stack 0
   662  00002F                     i2check_msg@qptr:
   663                           	opt stack 0
   664  00002F                     i2memcpy@d1:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x2E
   668  00002F                     	ds	2
   669  000031                     ??i2_check_msg:
   670  000031                     ?i2_in_low_int:
   671                           	opt stack 0
   672  000031                     WriteTimer0@timer:
   673                           	opt stack 0
   674  000031                     i2memcpy@s1:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x30
   678  000031                     	ds	2
   679  000033                     i2memcpy@n:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x32
   683  000033                     	ds	2
   684  000035                     i2memcpy@d:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x34
   688  000035                     	ds	2
   689  000037                     i2memcpy@s:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x36
   693  000037                     	ds	2
   694  000039                     i2send_msg@qptr:
   695                           	opt stack 0
   696  000039                     i2recv_msg@qptr:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x38
   700  000039                     	ds	2
   701  00003B                     i2send_msg@length:
   702                           	opt stack 0
   703  00003B                     i2recv_msg@maxlength:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x3A
   707  00003B                     	ds	1
   708  00003C                     i2send_msg@msgtype:
   709                           	opt stack 0
   710  00003C                     i2recv_msg@msgtype:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x3B
   714  00003C                     	ds	1
   715  00003D                     i2send_msg@data:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x3C
   719  00003D                     	ds	1
   720  00003E                     i2recv_msg@data:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x3D
   724  00003E                     	ds	1
   725  00003F                     ??i2_send_msg:
   726                           
   727                           ; 0 bytes @ 0x3E
   728  00003F                     	ds	1
   729  000040                     ??i2_recv_msg:
   730  000040                     i2send_msg@tlength:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x3F
   734  000040                     	ds	2
   735  000042                     i2send_msg@slot:
   736                           	opt stack 0
   737  000042                     i2recv_msg@slot:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x41
   741  000042                     	ds	1
   742  000043                     i2send_msg@qmsg:
   743                           	opt stack 0
   744  000043                     i2recv_msg@tlength:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x42
   748  000043                     	ds	2
   749  000045                     ToMainHigh_sendmsg@msgtype:
   750                           	opt stack 0
   751  000045                     i2recv_msg@qmsg:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x44
   755  000045                     	ds	1
   756  000046                     ToMainHigh_sendmsg@data:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x45
   760  000046                     	ds	1
   761  000047                     FromMainHigh_recvmsg@msgtype:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x46
   765  000047                     	ds	1
   766  000048                     ToMainHigh_sendmsg@length:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x47
   770  000048                     	ds	1
   771  000049                     ??_i2c_int_handler:
   772  000049                     FromMainHigh_recvmsg@data:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x48
   776  000049                     	ds	2
   777  00004B                     FromMainHigh_recvmsg@maxlength:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x4A
   781  00004B                     	ds	1
   782  00004C                     ??_timer0_int_handler:
   783                           
   784                           ; 0 bytes @ 0x4B
   785  00004C                     	ds	1
   786                           tblptru	equ	0xFF8
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 186 in file "../src/main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  j               2   38[BANK1 ] int 
   800 ;;  j               2   40[BANK1 ] int 
   801 ;;  ic             28   53[BANK1 ] struct __i2c_comm
   802 ;;  msgbuffer      11   22[BANK1 ] unsigned char [11]
   803 ;;  to_send_buff   11   11[BANK1 ] unsigned char [11]
   804 ;;  uc              5   42[BANK1 ] struct __uart_comm
   805 ;;  data_points_    2   49[BANK1 ] int 
   806 ;;  t1thread_dat    2   47[BANK1 ] struct __timer1_thread_s
   807 ;;  t0thread_dat    2   35[BANK1 ] struct __timer0_thread_s
   808 ;;  uthread_data    2   33[BANK1 ] struct __uart_thread_str
   809 ;;  length          1   52[BANK1 ] char 
   810 ;;  msgtype         1   51[BANK1 ] unsigned char 
   811 ;;  last_reg_rec    1   37[BANK1 ] unsigned char 
   812 ;;  i               1    0        unsigned char 
   813 ;;  c               1    0        unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;		None               void
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0      70       0       0
   825 ;;      Temps:          0       0       1       0       0
   826 ;;      Totals:         0       0      71       0       0
   827 ;;Total ram usage:       71 bytes
   828 ;; Hardware stack levels required when called:   14
   829 ;; This function calls:
   830 ;;		_OpenTimer0
   831 ;;		_OpenTimer1
   832 ;;		_OpenUSART
   833 ;;		_ToMainHigh_recvmsg
   834 ;;		_ToMainLow_recvmsg
   835 ;;		_block_on_To_msgqueues
   836 ;;		_enable_interrupts
   837 ;;		_i2c_configure_slave
   838 ;;		_init_i2c
   839 ;;		_init_queues
   840 ;;		_init_timer1_lthread
   841 ;;		_init_uart_recv
   842 ;;		_resetDBG
   843 ;;		_setDBG
   844 ;;		_start_i2c_slave_reply
   845 ;;		_timer0_lthread
   846 ;;		_timer1_lthread
   847 ;;		_uart_lthread
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text0
   854  000698                     __ptext0:
   855                           	opt stack 0
   856  000698                     _main:
   857                           	opt stack 17
   858                           
   859                           ;main.c: 187: char c;
   860                           ;main.c: 188: signed char length;
   861                           ;main.c: 189: unsigned char msgtype;
   862                           ;main.c: 190: unsigned char last_reg_recvd;
   863                           ;main.c: 191: uart_comm uc;
   864                           ;main.c: 192: i2c_comm ic;
   865                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   866                           ;main.c: 194: unsigned char to_send_buffer[10+1];
   867                           ;main.c: 195: int data_points_count = 0;
   868                           
   869                           ;incstack = 0
   870  000698  0E00               	movlw	0
   871  00069A  0101               	movlb	1	; () banked
   872  00069C  0101               	movlb	1	; () banked
   873  00069E  6FD4               	movwf	(main@data_points_count+1)& (0+255),b
   874  0006A0  0E00               	movlw	0
   875  0006A2  0101               	movlb	1	; () banked
   876  0006A4  6FD3               	movwf	main@data_points_count& (0+255),b
   877                           
   878                           ;main.c: 196: unsigned char i;
   879                           ;main.c: 197: uart_thread_struct uthread_data;
   880                           ;main.c: 198: timer1_thread_struct t1thread_data;
   881                           ;main.c: 199: timer0_thread_struct t0thread_data;
   882                           ;main.c: 207: OSCCON = 0x82;
   883  0006A6  0E82               	movlw	130
   884  0006A8  6ED3               	movwf	4051,c	;volatile
   885                           
   886                           ; BSR set to: 1
   887                           ;main.c: 208: OSCTUNEbits.PLLEN = 0;
   888  0006AA  9C9B               	bcf	3995,6,c	;volatile
   889                           
   890                           ; BSR set to: 1
   891                           ;main.c: 226: init_uart_recv(&uc);
   892  0006AC  0101               	movlb	1	; () banked
   893  0006AE  0E01               	movlw	high main@uc
   894  0006B0  0100               	movlb	0	; () banked
   895  0006B2  0100               	movlb	0	; () banked
   896  0006B4  6FCE               	movwf	(init_uart_recv@uc+1)& (0+255),b
   897  0006B6  0101               	movlb	1	; () banked
   898  0006B8  0ECC               	movlw	low main@uc
   899  0006BA  0100               	movlb	0	; () banked
   900  0006BC  0100               	movlb	0	; () banked
   901  0006BE  6FCD               	movwf	init_uart_recv@uc& (0+255),b
   902  0006C0  EC75  F00D         	call	_init_uart_recv	;wreg free
   903                           
   904                           ;main.c: 229: init_i2c(&ic);
   905  0006C4  0101               	movlb	1	; () banked
   906  0006C6  0E01               	movlw	high main@ic
   907  0006C8  0100               	movlb	0	; () banked
   908  0006CA  0100               	movlb	0	; () banked
   909  0006CC  6FCE               	movwf	(init_i2c@ic+1)& (0+255),b
   910  0006CE  0101               	movlb	1	; () banked
   911  0006D0  0ED7               	movlw	low main@ic
   912  0006D2  0100               	movlb	0	; () banked
   913  0006D4  0100               	movlb	0	; () banked
   914  0006D6  6FCD               	movwf	init_i2c@ic& (0+255),b
   915  0006D8  EC88  F00A         	call	_init_i2c	;wreg free
   916                           
   917                           ;main.c: 232: init_timer1_lthread(&t1thread_data);
   918  0006DC  0101               	movlb	1	; () banked
   919  0006DE  0E01               	movlw	high main@t1thread_data
   920  0006E0  0100               	movlb	0	; () banked
   921  0006E2  0100               	movlb	0	; () banked
   922  0006E4  6FCE               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   923  0006E6  0101               	movlb	1	; () banked
   924  0006E8  0ED1               	movlw	low main@t1thread_data
   925  0006EA  0100               	movlb	0	; () banked
   926  0006EC  0100               	movlb	0	; () banked
   927  0006EE  6FCD               	movwf	init_timer1_lthread@tptr& (0+255),b
   928  0006F0  ECA7  F00D         	call	_init_timer1_lthread	;wreg free
   929                           
   930                           ;main.c: 235: init_queues();
   931  0006F4  EC51  F00A         	call	_init_queues	;wreg free
   932                           
   933                           ;main.c: 239: TRISB = 0x0;
   934  0006F8  0E00               	movlw	0
   935  0006FA  6E93               	movwf	3987,c	;volatile
   936                           
   937                           ;main.c: 240: LATB = 0x0;
   938  0006FC  0E00               	movlw	0
   939  0006FE  6E8A               	movwf	3978,c	;volatile
   940                           
   941                           ;main.c: 253: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   942  000700  0E96               	movlw	150
   943  000702  ECEC  F00C         	call	_OpenTimer0
   944                           
   945                           ;main.c: 262: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   946  000706  0EF5               	movlw	245
   947  000708  EC6B  F00C         	call	_OpenTimer1
   948                           
   949                           ;main.c: 269: IPR1bits.TMR1IP = 0;
   950  00070C  909F               	bcf	3999,0,c	;volatile
   951                           
   952                           ;main.c: 271: IPR1bits.RCIP = 0;
   953  00070E  9A9F               	bcf	3999,5,c	;volatile
   954                           
   955                           ;main.c: 273: IPR1bits.SSPIP = 1;
   956  000710  869F               	bsf	3999,3,c	;volatile
   957                           
   958                           ;main.c: 282: i2c_configure_slave(0x9E);
   959  000712  0E9E               	movlw	158
   960  000714  EC16  F00D         	call	_i2c_configure_slave
   961                           
   962                           ;main.c: 297: PIE1bits.SSPIE = 1;
   963  000718  869D               	bsf	3997,3,c	;volatile
   964                           
   965                           ;main.c: 308: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   966                           ;main.c: 309: 0b11111111 & 0b11101111, 0x19);
   967  00071A  0E00               	movlw	0
   968  00071C  0100               	movlb	0	; () banked
   969  00071E  0100               	movlb	0	; () banked
   970  000720  6FCE               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   971  000722  0E19               	movlw	25
   972  000724  0100               	movlb	0	; () banked
   973  000726  6FCD               	movwf	OpenUSART@spbrg& (0+255),b
   974  000728  0E6C               	movlw	108
   975  00072A  ECCD  F008         	call	_OpenUSART
   976                           
   977                           ;main.c: 315: enable_interrupts();
   978  00072E  ECDA  F00D         	call	_enable_interrupts	;wreg free
   979  000732                     l3033:
   980                           
   981                           ;main.c: 339: block_on_To_msgqueues();
   982  000732  EC9C  F009         	call	_block_on_To_msgqueues	;wreg free
   983                           
   984                           ;main.c: 346: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   985  000736  0101               	movlb	1	; () banked
   986  000738  0E01               	movlw	high main@msgtype
   987  00073A  0101               	movlb	1	; () banked
   988  00073C  0101               	movlb	1	; () banked
   989  00073E  6FA3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   990  000740  0101               	movlb	1	; () banked
   991  000742  0ED5               	movlw	low main@msgtype
   992  000744  0101               	movlb	1	; () banked
   993  000746  0101               	movlb	1	; () banked
   994  000748  6FA2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   995  00074A  0101               	movlb	1	; () banked
   996  00074C  0E01               	movlw	high main@msgbuffer
   997  00074E  0101               	movlb	1	; () banked
   998  000750  0101               	movlb	1	; () banked
   999  000752  6FA5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1000  000754  0101               	movlb	1	; () banked
  1001  000756  0EB8               	movlw	low main@msgbuffer
  1002  000758  0101               	movlb	1	; () banked
  1003  00075A  0101               	movlb	1	; () banked
  1004  00075C  6FA4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1005  00075E  0E0A               	movlw	10
  1006  000760  ECAB  F00B         	call	_ToMainHigh_recvmsg
  1007  000764  0101               	movlb	1	; () banked
  1008  000766  0101               	movlb	1	; () banked
  1009  000768  6FD6               	movwf	main@length& (0+255),b
  1010                           
  1011                           ; BSR set to: 1
  1012                           ;main.c: 347: if (length < 0) {
  1013  00076A  0101               	movlb	1	; () banked
  1014  00076C  0101               	movlb	1	; () banked
  1015  00076E  BFD6               	btfsc	main@length& (0+255),7,b
  1016  000770  D119               	goto	l3095
  1017  000772  D109               	goto	l3093
  1018  000774                     l3041:
  1019                           
  1020                           ; BSR set to: 1
  1021                           ;main.c: 355: {
  1022                           ;main.c: 356: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1023  000774  0101               	movlb	1	; () banked
  1024  000776  0E01               	movlw	high main@t0thread_data
  1025  000778  0100               	movlb	0	; () banked
  1026  00077A  0100               	movlb	0	; () banked
  1027  00077C  6FCE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1028  00077E  0101               	movlb	1	; () banked
  1029  000780  0EC5               	movlw	low main@t0thread_data
  1030  000782  0100               	movlb	0	; () banked
  1031  000784  0100               	movlb	0	; () banked
  1032  000786  6FCD               	movwf	timer0_lthread@tptr& (0+255),b
  1033  000788  0101               	movlb	1	; () banked
  1034  00078A  0100               	movlb	0	; () banked
  1035  00078C  C1D5  F0CF         	movff	main@msgtype,timer0_lthread@msgtype
  1036  000790  0100               	movlb	0	; () banked
  1037  000792  0100               	movlb	0	; () banked
  1038  000794  6BD0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1039  000796  0101               	movlb	1	; () banked
  1040  000798  0101               	movlb	1	; () banked
  1041  00079A  51D6               	movf	main@length& (0+255),w,b
  1042  00079C  0100               	movlb	0	; () banked
  1043  00079E  0100               	movlb	0	; () banked
  1044  0007A0  6FD1               	movwf	timer0_lthread@length& (0+255),b
  1045  0007A2  0100               	movlb	0	; () banked
  1046  0007A4  6BD2               	clrf	(timer0_lthread@length+1)& (0+255),b
  1047  0007A6  0100               	movlb	0	; () banked
  1048  0007A8  BFD1               	btfsc	timer0_lthread@length& (0+255),7,b
  1049  0007AA  07D2               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1050  0007AC  0101               	movlb	1	; () banked
  1051  0007AE  0E01               	movlw	high main@msgbuffer
  1052  0007B0  0100               	movlb	0	; () banked
  1053  0007B2  0100               	movlb	0	; () banked
  1054  0007B4  6FD4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1055  0007B6  0101               	movlb	1	; () banked
  1056  0007B8  0EB8               	movlw	low main@msgbuffer
  1057  0007BA  0100               	movlb	0	; () banked
  1058  0007BC  0100               	movlb	0	; () banked
  1059  0007BE  6FD3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1060  0007C0  EC9E  F00D         	call	_timer0_lthread	;wreg free
  1061                           
  1062                           ;main.c: 357: break;
  1063  0007C4  D0EF               	goto	l3095
  1064  0007C6                     l106:
  1065                           
  1066                           ;main.c: 360: case 41:
  1067                           ;main.c: 361: {
  1068                           ;main.c: 364: last_reg_recvd = msgbuffer[0];
  1069  0007C6  C1B8  F1C7         	movff	main@msgbuffer,main@last_reg_recvd
  1070                           
  1071                           ;main.c: 365: break;
  1072  0007CA  D0EC               	goto	l3095
  1073  0007CC                     l3043:
  1074                           
  1075                           ;main.c: 398: {
  1076                           ;main.c: 399: setDBG(DBG3);
  1077  0007CC  0E02               	movlw	2
  1078  0007CE  ECCC  F00B         	call	_setDBG
  1079                           
  1080                           ;main.c: 400: setDBG(DBG4);
  1081  0007D2  0E03               	movlw	3
  1082  0007D4  ECCC  F00B         	call	_setDBG
  1083                           
  1084                           ;main.c: 401: if(data_points_count == 0){
  1085  0007D8  0101               	movlb	1	; () banked
  1086  0007DA  0101               	movlb	1	; () banked
  1087  0007DC  51D4               	movf	(main@data_points_count+1)& (0+255),w,b
  1088  0007DE  11D3               	iorwf	main@data_points_count& (0+255),w,b
  1089  0007E0  A4D8               	btfss	status,2,c
  1090  0007E2  D00C               	goto	l3051
  1091                           
  1092                           ; BSR set to: 1
  1093                           ;main.c: 402: msgbuffer[0] = 0xff;
  1094  0007E4  0101               	movlb	1	; () banked
  1095  0007E6  0101               	movlb	1	; () banked
  1096  0007E8  69B8               	setf	main@msgbuffer& (0+255),b
  1097                           
  1098                           ; BSR set to: 1
  1099                           ;main.c: 403: length = 1;
  1100  0007EA  0101               	movlb	1	; () banked
  1101  0007EC  6FAC               	movwf	??_main& (0+255),b
  1102  0007EE  0E01               	movlw	1
  1103  0007F0  0101               	movlb	1	; () banked
  1104  0007F2  0101               	movlb	1	; () banked
  1105  0007F4  6FD6               	movwf	main@length& (0+255),b
  1106  0007F6  0101               	movlb	1	; () banked
  1107  0007F8  51AC               	movf	??_main& (0+255),w,b
  1108                           
  1109                           ;main.c: 404: }
  1110  0007FA  D042               	goto	l3061
  1111  0007FC                     l3051:
  1112                           
  1113                           ; BSR set to: 1
  1114                           ;main.c: 405: else{
  1115                           ;main.c: 406: for(int j = 0; j < data_points_count; j++){
  1116  0007FC  0E00               	movlw	0
  1117  0007FE  0101               	movlb	1	; () banked
  1118  000800  0101               	movlb	1	; () banked
  1119  000802  6FC9               	movwf	(main@j+1)& (0+255),b
  1120  000804  0E00               	movlw	0
  1121  000806  0101               	movlb	1	; () banked
  1122  000808  6FC8               	movwf	main@j& (0+255),b
  1123  00080A  D01E               	goto	l3057
  1124  00080C                     l3053:
  1125                           
  1126                           ; BSR set to: 1
  1127                           ;main.c: 407: msgbuffer[j] = to_send_buffer[j];
  1128  00080C  0101               	movlb	1	; () banked
  1129  00080E  0EAD               	movlw	low main@to_send_buffer
  1130  000810  0101               	movlb	1	; () banked
  1131  000812  0101               	movlb	1	; () banked
  1132  000814  25C8               	addwf	main@j& (0+255),w,b
  1133  000816  6ED9               	movwf	fsr2l,c
  1134  000818  0101               	movlb	1	; () banked
  1135  00081A  0E01               	movlw	high main@to_send_buffer
  1136  00081C  0101               	movlb	1	; () banked
  1137  00081E  0101               	movlb	1	; () banked
  1138  000820  21C9               	addwfc	(main@j+1)& (0+255),w,b
  1139  000822  6EDA               	movwf	fsr2h,c
  1140  000824  0101               	movlb	1	; () banked
  1141  000826  0EB8               	movlw	low main@msgbuffer
  1142  000828  0101               	movlb	1	; () banked
  1143  00082A  0101               	movlb	1	; () banked
  1144  00082C  25C8               	addwf	main@j& (0+255),w,b
  1145  00082E  6EE1               	movwf	fsr1l,c
  1146  000830  0101               	movlb	1	; () banked
  1147  000832  0E01               	movlw	high main@msgbuffer
  1148  000834  0101               	movlb	1	; () banked
  1149  000836  0101               	movlb	1	; () banked
  1150  000838  21C9               	addwfc	(main@j+1)& (0+255),w,b
  1151  00083A  6EE2               	movwf	fsr1h,c
  1152  00083C  CFDF FFE7          	movff	indf2,indf1
  1153                           
  1154                           ; BSR set to: 1
  1155  000840  0101               	movlb	1	; () banked
  1156  000842  0101               	movlb	1	; () banked
  1157  000844  4BC8               	infsnz	main@j& (0+255),f,b
  1158  000846  2BC9               	incf	(main@j+1)& (0+255),f,b
  1159  000848                     l3057:
  1160                           
  1161                           ; BSR set to: 1
  1162  000848  0101               	movlb	1	; () banked
  1163  00084A  0101               	movlb	1	; () banked
  1164  00084C  51C9               	movf	(main@j+1)& (0+255),w,b
  1165  00084E  0A80               	xorlw	128
  1166  000850  0101               	movlb	1	; () banked
  1167  000852  6FAC               	movwf	??_main& (0+255),b
  1168  000854  0101               	movlb	1	; () banked
  1169  000856  51D3               	movf	main@data_points_count& (0+255),w,b
  1170  000858  0101               	movlb	1	; () banked
  1171  00085A  0101               	movlb	1	; () banked
  1172  00085C  5DC8               	subwf	main@j& (0+255),w,b
  1173  00085E  0101               	movlb	1	; () banked
  1174  000860  0101               	movlb	1	; () banked
  1175  000862  51D4               	movf	(main@data_points_count+1)& (0+255),w,b
  1176  000864  0A80               	xorlw	128
  1177  000866  0101               	movlb	1	; () banked
  1178  000868  59AC               	subwfb	??_main& (0+255),w,b
  1179  00086A  A0D8               	btfss	status,0,c
  1180  00086C  D7CF               	goto	l3053
  1181                           
  1182                           ; BSR set to: 1
  1183                           ;main.c: 408: }
  1184                           ;main.c: 409: length = data_points_count;
  1185  00086E  C1D3  F1D6         	movff	main@data_points_count,main@length
  1186                           
  1187                           ; BSR set to: 1
  1188                           ;main.c: 410: data_points_count = 0;
  1189  000872  0E00               	movlw	0
  1190  000874  0101               	movlb	1	; () banked
  1191  000876  0101               	movlb	1	; () banked
  1192  000878  6FD4               	movwf	(main@data_points_count+1)& (0+255),b
  1193  00087A  0E00               	movlw	0
  1194  00087C  0101               	movlb	1	; () banked
  1195  00087E  6FD3               	movwf	main@data_points_count& (0+255),b
  1196  000880                     l3061:
  1197                           
  1198                           ; BSR set to: 1
  1199                           ;main.c: 411: }
  1200                           ;main.c: 412: resetDBG(DBG4);
  1201  000880  0E03               	movlw	3
  1202  000882  ECEC  F00B         	call	_resetDBG
  1203                           
  1204                           ;main.c: 413: break;
  1205  000886  D06C               	goto	l3087
  1206  000888                     l3063:
  1207                           
  1208                           ;main.c: 416: {
  1209                           ;main.c: 417: setDBG(DBG3);
  1210  000888  0E02               	movlw	2
  1211  00088A  ECCC  F00B         	call	_setDBG
  1212                           
  1213                           ;main.c: 418: setDBG(DBG5);
  1214  00088E  0E04               	movlw	4
  1215  000890  ECCC  F00B         	call	_setDBG
  1216                           
  1217                           ;main.c: 419: to_send_buffer[0] = 0x04;
  1218  000894  0101               	movlb	1	; () banked
  1219  000896  6FAC               	movwf	??_main& (0+255),b
  1220  000898  0E04               	movlw	4
  1221  00089A  0101               	movlb	1	; () banked
  1222  00089C  0101               	movlb	1	; () banked
  1223  00089E  6FAD               	movwf	main@to_send_buffer& (0+255),b
  1224  0008A0  0101               	movlb	1	; () banked
  1225  0008A2  51AC               	movf	??_main& (0+255),w,b
  1226                           
  1227                           ; BSR set to: 1
  1228                           ;main.c: 420: to_send_buffer[1] = 0x0d;
  1229  0008A4  0101               	movlb	1	; () banked
  1230  0008A6  6FAC               	movwf	??_main& (0+255),b
  1231  0008A8  0E0D               	movlw	13
  1232  0008AA  0101               	movlb	1	; () banked
  1233  0008AC  0101               	movlb	1	; () banked
  1234  0008AE  6FAE               	movwf	(main@to_send_buffer+1)& (0+255),b
  1235  0008B0  0101               	movlb	1	; () banked
  1236  0008B2  51AC               	movf	??_main& (0+255),w,b
  1237                           
  1238                           ; BSR set to: 1
  1239                           ;main.c: 421: data_points_count = 2;
  1240  0008B4  0E00               	movlw	0
  1241  0008B6  0101               	movlb	1	; () banked
  1242  0008B8  0101               	movlb	1	; () banked
  1243  0008BA  6FD4               	movwf	(main@data_points_count+1)& (0+255),b
  1244  0008BC  0E02               	movlw	2
  1245  0008BE  0101               	movlb	1	; () banked
  1246  0008C0  6FD3               	movwf	main@data_points_count& (0+255),b
  1247                           
  1248                           ; BSR set to: 1
  1249                           ;main.c: 422: for(int j = 0; j < data_points_count; j++){
  1250  0008C2  0E00               	movlw	0
  1251  0008C4  0101               	movlb	1	; () banked
  1252  0008C6  0101               	movlb	1	; () banked
  1253  0008C8  6FCB               	movwf	(main@j_518+1)& (0+255),b
  1254  0008CA  0E00               	movlw	0
  1255  0008CC  0101               	movlb	1	; () banked
  1256  0008CE  6FCA               	movwf	main@j_518& (0+255),b
  1257  0008D0  D01E               	goto	l3077
  1258  0008D2                     l3073:
  1259                           
  1260                           ; BSR set to: 1
  1261                           ;main.c: 423: msgbuffer[j] = to_send_buffer[j];
  1262  0008D2  0101               	movlb	1	; () banked
  1263  0008D4  0EAD               	movlw	low main@to_send_buffer
  1264  0008D6  0101               	movlb	1	; () banked
  1265  0008D8  0101               	movlb	1	; () banked
  1266  0008DA  25CA               	addwf	main@j_518& (0+255),w,b
  1267  0008DC  6ED9               	movwf	fsr2l,c
  1268  0008DE  0101               	movlb	1	; () banked
  1269  0008E0  0E01               	movlw	high main@to_send_buffer
  1270  0008E2  0101               	movlb	1	; () banked
  1271  0008E4  0101               	movlb	1	; () banked
  1272  0008E6  21CB               	addwfc	(main@j_518+1)& (0+255),w,b
  1273  0008E8  6EDA               	movwf	fsr2h,c
  1274  0008EA  0101               	movlb	1	; () banked
  1275  0008EC  0EB8               	movlw	low main@msgbuffer
  1276  0008EE  0101               	movlb	1	; () banked
  1277  0008F0  0101               	movlb	1	; () banked
  1278  0008F2  25CA               	addwf	main@j_518& (0+255),w,b
  1279  0008F4  6EE1               	movwf	fsr1l,c
  1280  0008F6  0101               	movlb	1	; () banked
  1281  0008F8  0E01               	movlw	high main@msgbuffer
  1282  0008FA  0101               	movlb	1	; () banked
  1283  0008FC  0101               	movlb	1	; () banked
  1284  0008FE  21CB               	addwfc	(main@j_518+1)& (0+255),w,b
  1285  000900  6EE2               	movwf	fsr1h,c
  1286  000902  CFDF FFE7          	movff	indf2,indf1
  1287                           
  1288                           ; BSR set to: 1
  1289  000906  0101               	movlb	1	; () banked
  1290  000908  0101               	movlb	1	; () banked
  1291  00090A  4BCA               	infsnz	main@j_518& (0+255),f,b
  1292  00090C  2BCB               	incf	(main@j_518+1)& (0+255),f,b
  1293  00090E                     l3077:
  1294                           
  1295                           ; BSR set to: 1
  1296  00090E  0101               	movlb	1	; () banked
  1297  000910  0101               	movlb	1	; () banked
  1298  000912  51CB               	movf	(main@j_518+1)& (0+255),w,b
  1299  000914  0A80               	xorlw	128
  1300  000916  0101               	movlb	1	; () banked
  1301  000918  6FAC               	movwf	??_main& (0+255),b
  1302  00091A  0101               	movlb	1	; () banked
  1303  00091C  51D3               	movf	main@data_points_count& (0+255),w,b
  1304  00091E  0101               	movlb	1	; () banked
  1305  000920  0101               	movlb	1	; () banked
  1306  000922  5DCA               	subwf	main@j_518& (0+255),w,b
  1307  000924  0101               	movlb	1	; () banked
  1308  000926  0101               	movlb	1	; () banked
  1309  000928  51D4               	movf	(main@data_points_count+1)& (0+255),w,b
  1310  00092A  0A80               	xorlw	128
  1311  00092C  0101               	movlb	1	; () banked
  1312  00092E  59AC               	subwfb	??_main& (0+255),w,b
  1313  000930  A0D8               	btfss	status,0,c
  1314  000932  D7CF               	goto	l3073
  1315                           
  1316                           ; BSR set to: 1
  1317                           ;main.c: 424: }
  1318                           ;main.c: 425: length = data_points_count;
  1319  000934  C1D3  F1D6         	movff	main@data_points_count,main@length
  1320                           
  1321                           ; BSR set to: 1
  1322                           ;main.c: 426: data_points_count = 0;
  1323  000938  0E00               	movlw	0
  1324  00093A  0101               	movlb	1	; () banked
  1325  00093C  0101               	movlb	1	; () banked
  1326  00093E  6FD4               	movwf	(main@data_points_count+1)& (0+255),b
  1327  000940  0E00               	movlw	0
  1328  000942  0101               	movlb	1	; () banked
  1329  000944  6FD3               	movwf	main@data_points_count& (0+255),b
  1330                           
  1331                           ; BSR set to: 1
  1332                           ;main.c: 427: resetDBG(DBG5);
  1333  000946  0E04               	movlw	4
  1334  000948  ECEC  F00B         	call	_resetDBG
  1335                           
  1336                           ;main.c: 428: break;
  1337  00094C  D009               	goto	l3087
  1338  00094E                     l3085:
  1339  00094E  0101               	movlb	1	; () banked
  1340  000950  0101               	movlb	1	; () banked
  1341  000952  51C7               	movf	main@last_reg_recvd& (0+255),w,b
  1342                           
  1343                           ; Switch size 1, requested type "space"
  1344                           ; Number of cases is 2, Range of values is 170 to 171
  1345                           ; switch strategies available:
  1346                           ; Name         Instructions Cycles
  1347                           ; simple_byte            7     4 (average)
  1348                           ;	Chosen strategy is simple_byte
  1349  000954  0AAA               	xorlw	170	; case 170
  1350  000956  B4D8               	btfsc	status,2,c
  1351  000958  D739               	goto	l3043
  1352  00095A  0A01               	xorlw	1	; case 171
  1353  00095C  B4D8               	btfsc	status,2,c
  1354  00095E  D794               	goto	l3063
  1355  000960                     l3087:
  1356                           
  1357                           ;main.c: 431: start_i2c_slave_reply(length, msgbuffer);
  1358  000960  0101               	movlb	1	; () banked
  1359  000962  0E01               	movlw	high main@msgbuffer
  1360  000964  0100               	movlb	0	; () banked
  1361  000966  0100               	movlb	0	; () banked
  1362  000968  6FCE               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1363  00096A  0101               	movlb	1	; () banked
  1364  00096C  0EB8               	movlw	low main@msgbuffer
  1365  00096E  0100               	movlb	0	; () banked
  1366  000970  0100               	movlb	0	; () banked
  1367  000972  6FCD               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1368  000974  0101               	movlb	1	; () banked
  1369  000976  0101               	movlb	1	; () banked
  1370  000978  51D6               	movf	main@length& (0+255),w,b
  1371  00097A  ECFF  F005         	call	_start_i2c_slave_reply
  1372                           
  1373                           ;main.c: 432: resetDBG(DBG3);
  1374  00097E  0E02               	movlw	2
  1375  000980  ECEC  F00B         	call	_resetDBG
  1376                           
  1377                           ;main.c: 433: break;
  1378  000984  D00F               	goto	l3095
  1379  000986                     l3093:
  1380  000986  0101               	movlb	1	; () banked
  1381  000988  0101               	movlb	1	; () banked
  1382  00098A  51D5               	movf	main@msgtype& (0+255),w,b
  1383                           
  1384                           ; Switch size 1, requested type "space"
  1385                           ; Number of cases is 4, Range of values is 10 to 42
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte           13     7 (average)
  1389                           ;	Chosen strategy is simple_byte
  1390  00098C  0A0A               	xorlw	10	; case 10
  1391  00098E  B4D8               	btfsc	status,2,c
  1392  000990  D6F1               	goto	l3041
  1393  000992  0A22               	xorlw	34	; case 40
  1394  000994  B4D8               	btfsc	status,2,c
  1395  000996  D717               	goto	l106
  1396  000998  0A01               	xorlw	1	; case 41
  1397  00099A  B4D8               	btfsc	status,2,c
  1398  00099C  D714               	goto	l106
  1399  00099E  0A03               	xorlw	3	; case 42
  1400  0009A0  B4D8               	btfsc	status,2,c
  1401  0009A2  D7D5               	goto	l3085
  1402  0009A4                     l3095:
  1403                           
  1404                           ;main.c: 441: }
  1405                           ;main.c: 444: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1406  0009A4  0101               	movlb	1	; () banked
  1407  0009A6  0E01               	movlw	high main@msgtype
  1408  0009A8  0101               	movlb	1	; () banked
  1409  0009AA  0101               	movlb	1	; () banked
  1410  0009AC  6FA3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1411  0009AE  0101               	movlb	1	; () banked
  1412  0009B0  0ED5               	movlw	low main@msgtype
  1413  0009B2  0101               	movlb	1	; () banked
  1414  0009B4  0101               	movlb	1	; () banked
  1415  0009B6  6FA2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1416  0009B8  0101               	movlb	1	; () banked
  1417  0009BA  0E01               	movlw	high main@msgbuffer
  1418  0009BC  0101               	movlb	1	; () banked
  1419  0009BE  0101               	movlb	1	; () banked
  1420  0009C0  6FA5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1421  0009C2  0101               	movlb	1	; () banked
  1422  0009C4  0EB8               	movlw	low main@msgbuffer
  1423  0009C6  0101               	movlb	1	; () banked
  1424  0009C8  0101               	movlb	1	; () banked
  1425  0009CA  6FA4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1426  0009CC  0E0A               	movlw	10
  1427  0009CE  EC8A  F00B         	call	_ToMainLow_recvmsg
  1428  0009D2  0101               	movlb	1	; () banked
  1429  0009D4  0101               	movlb	1	; () banked
  1430  0009D6  6FD6               	movwf	main@length& (0+255),b
  1431                           
  1432                           ; BSR set to: 1
  1433                           ;main.c: 445: if (length < 0) {
  1434  0009D8  0101               	movlb	1	; () banked
  1435  0009DA  0101               	movlb	1	; () banked
  1436  0009DC  BFD6               	btfsc	main@length& (0+255),7,b
  1437  0009DE  D6A9               	goto	l3033
  1438  0009E0  D063               	goto	l3111
  1439  0009E2                     l3101:
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;main.c: 453: {
  1443                           ;main.c: 454: if(data_points_count <= 10+1){
  1444  0009E2  0101               	movlb	1	; () banked
  1445  0009E4  0101               	movlb	1	; () banked
  1446  0009E6  51D4               	movf	(main@data_points_count+1)& (0+255),w,b
  1447  0009E8  0A80               	xorlw	128
  1448  0009EA  6EF3               	movwf	prodl,c
  1449  0009EC  0E80               	movlw	128
  1450  0009EE  5CF3               	subwf	prodl,w,c
  1451  0009F0  0E0C               	movlw	12
  1452  0009F2  B4D8               	btfsc	status,2,c
  1453  0009F4  5DD3               	subwf	main@data_points_count& (0+255),w,b
  1454  0009F6  B0D8               	btfsc	status,0,c
  1455  0009F8  D69C               	goto	l3033
  1456                           
  1457                           ; BSR set to: 1
  1458                           ;main.c: 456: data_points_count++;
  1459  0009FA  0101               	movlb	1	; () banked
  1460  0009FC  0101               	movlb	1	; () banked
  1461  0009FE  4BD3               	infsnz	main@data_points_count& (0+255),f,b
  1462  000A00  2BD4               	incf	(main@data_points_count+1)& (0+255),f,b
  1463  000A02  D697               	goto	l3033
  1464  000A04                     l3105:
  1465                           
  1466                           ; BSR set to: 1
  1467                           ;main.c: 461: {
  1468                           ;main.c: 462: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1469  000A04  0101               	movlb	1	; () banked
  1470  000A06  0E01               	movlw	high main@t1thread_data
  1471  000A08  0101               	movlb	1	; () banked
  1472  000A0A  0101               	movlb	1	; () banked
  1473  000A0C  6FA3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1474  000A0E  0101               	movlb	1	; () banked
  1475  000A10  0ED1               	movlw	low main@t1thread_data
  1476  000A12  0101               	movlb	1	; () banked
  1477  000A14  0101               	movlb	1	; () banked
  1478  000A16  6FA2               	movwf	timer1_lthread@tptr& (0+255),b
  1479  000A18  0101               	movlb	1	; () banked
  1480  000A1A  0101               	movlb	1	; () banked
  1481  000A1C  C1D5  F1A4         	movff	main@msgtype,timer1_lthread@msgtype
  1482  000A20  0101               	movlb	1	; () banked
  1483  000A22  0101               	movlb	1	; () banked
  1484  000A24  6BA5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1485  000A26  0101               	movlb	1	; () banked
  1486  000A28  0101               	movlb	1	; () banked
  1487  000A2A  51D6               	movf	main@length& (0+255),w,b
  1488  000A2C  0101               	movlb	1	; () banked
  1489  000A2E  0101               	movlb	1	; () banked
  1490  000A30  6FA6               	movwf	timer1_lthread@length& (0+255),b
  1491  000A32  0101               	movlb	1	; () banked
  1492  000A34  6BA7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1493  000A36  0101               	movlb	1	; () banked
  1494  000A38  BFA6               	btfsc	timer1_lthread@length& (0+255),7,b
  1495  000A3A  07A7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1496  000A3C  0101               	movlb	1	; () banked
  1497  000A3E  0E01               	movlw	high main@msgbuffer
  1498  000A40  0101               	movlb	1	; () banked
  1499  000A42  0101               	movlb	1	; () banked
  1500  000A44  6FA9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1501  000A46  0101               	movlb	1	; () banked
  1502  000A48  0EB8               	movlw	low main@msgbuffer
  1503  000A4A  0101               	movlb	1	; () banked
  1504  000A4C  0101               	movlb	1	; () banked
  1505  000A4E  6FA8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1506  000A50  EC18  F00A         	call	_timer1_lthread	;wreg free
  1507                           
  1508                           ;main.c: 463: break;
  1509  000A54  D66E               	goto	l3033
  1510  000A56                     l3107:
  1511                           
  1512                           ;main.c: 466: case 31:
  1513                           ;main.c: 467: {
  1514                           ;main.c: 468: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1515  000A56  0101               	movlb	1	; () banked
  1516  000A58  0E01               	movlw	high main@uthread_data
  1517  000A5A  0100               	movlb	0	; () banked
  1518  000A5C  0100               	movlb	0	; () banked
  1519  000A5E  6FCE               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1520  000A60  0101               	movlb	1	; () banked
  1521  000A62  0EC3               	movlw	low main@uthread_data
  1522  000A64  0100               	movlb	0	; () banked
  1523  000A66  0100               	movlb	0	; () banked
  1524  000A68  6FCD               	movwf	uart_lthread@uptr& (0+255),b
  1525  000A6A  0101               	movlb	1	; () banked
  1526  000A6C  0100               	movlb	0	; () banked
  1527  000A6E  C1D5  F0CF         	movff	main@msgtype,uart_lthread@msgtype
  1528  000A72  0100               	movlb	0	; () banked
  1529  000A74  0100               	movlb	0	; () banked
  1530  000A76  6BD0               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1531  000A78  0101               	movlb	1	; () banked
  1532  000A7A  0101               	movlb	1	; () banked
  1533  000A7C  51D6               	movf	main@length& (0+255),w,b
  1534  000A7E  0100               	movlb	0	; () banked
  1535  000A80  0100               	movlb	0	; () banked
  1536  000A82  6FD1               	movwf	uart_lthread@length& (0+255),b
  1537  000A84  0100               	movlb	0	; () banked
  1538  000A86  6BD2               	clrf	(uart_lthread@length+1)& (0+255),b
  1539  000A88  0100               	movlb	0	; () banked
  1540  000A8A  BFD1               	btfsc	uart_lthread@length& (0+255),7,b
  1541  000A8C  07D2               	decf	(uart_lthread@length+1)& (0+255),f,b
  1542  000A8E  0101               	movlb	1	; () banked
  1543  000A90  0E01               	movlw	high main@msgbuffer
  1544  000A92  0100               	movlb	0	; () banked
  1545  000A94  0100               	movlb	0	; () banked
  1546  000A96  6FD4               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1547  000A98  0101               	movlb	1	; () banked
  1548  000A9A  0EB8               	movlw	low main@msgbuffer
  1549  000A9C  0100               	movlb	0	; () banked
  1550  000A9E  0100               	movlb	0	; () banked
  1551  000AA0  6FD3               	movwf	uart_lthread@msgbuffer& (0+255),b
  1552  000AA2  EC4C  F00C         	call	_uart_lthread	;wreg free
  1553                           
  1554                           ;main.c: 469: break;
  1555  000AA6  D645               	goto	l3033
  1556  000AA8                     l3111:
  1557  000AA8  0101               	movlb	1	; () banked
  1558  000AAA  0101               	movlb	1	; () banked
  1559  000AAC  51D5               	movf	main@msgtype& (0+255),w,b
  1560                           
  1561                           ; Switch size 1, requested type "space"
  1562                           ; Number of cases is 4, Range of values is 11 to 50
  1563                           ; switch strategies available:
  1564                           ; Name         Instructions Cycles
  1565                           ; simple_byte           13     7 (average)
  1566                           ;	Chosen strategy is simple_byte
  1567  000AAE  0A0B               	xorlw	11	; case 11
  1568  000AB0  B4D8               	btfsc	status,2,c
  1569  000AB2  D7A8               	goto	l3105
  1570  000AB4  0A15               	xorlw	21	; case 30
  1571  000AB6  B4D8               	btfsc	status,2,c
  1572  000AB8  D7CE               	goto	l3107
  1573  000ABA  0A01               	xorlw	1	; case 31
  1574  000ABC  B4D8               	btfsc	status,2,c
  1575  000ABE  D7CB               	goto	l3107
  1576  000AC0  0A2D               	xorlw	45	; case 50
  1577  000AC2  B4D8               	btfsc	status,2,c
  1578  000AC4  D78E               	goto	l3101
  1579  000AC6  D635               	goto	l3033
  1580  000AC8                     __end_of_main:
  1581                           	opt stack 0
  1582                           tblptru	equ	0xFF8
  1583                           prodl	equ	0xFF3
  1584                           postinc0	equ	0xFEE
  1585                           wreg	equ	0xFE8
  1586                           indf1	equ	0xFE7
  1587                           fsr1h	equ	0xFE2
  1588                           fsr1l	equ	0xFE1
  1589                           indf2	equ	0xFDF
  1590                           fsr2h	equ	0xFDA
  1591                           fsr2l	equ	0xFD9
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function _uart_lthread *****************
  1595 ;; Defined at:
  1596 ;;		line 9 in file "../src/uart_thread.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  uptr            2   23[BANK0 ] PTR struct __uart_thread
  1599 ;;		 -> main@uthread_data(2), 
  1600 ;;  msgtype         2   25[BANK0 ] int 
  1601 ;;  length          2   27[BANK0 ] int 
  1602 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  1603 ;;		 -> main@msgbuffer(11), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  2   23[BANK0 ] int 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1615 ;;      Params:         0       8       0       0       0
  1616 ;;      Locals:         0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0
  1618 ;;      Totals:         0       8       0       0       0
  1619 ;;Total ram usage:        8 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:   10
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text1
  1630  001898                     __ptext1:
  1631                           	opt stack 0
  1632  001898                     _uart_lthread:
  1633                           	opt stack 20
  1634                           
  1635                           ;uart_thread.c: 10: if (msgtype == 30) {
  1636                           
  1637                           ; BSR set to: 1
  1638                           ;incstack = 0
  1639  001898  0100               	movlb	0	; () banked
  1640  00189A  0100               	movlb	0	; () banked
  1641  00189C  51CF               	movf	uart_lthread@msgtype& (0+255),w,b
  1642  00189E  0A1E               	xorlw	30
  1643  0018A0  11D0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1644  0018A2  B4D8               	btfsc	status,2,c
  1645  0018A4  0012               	return	
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1649                           
  1650                           ; BSR set to: 0
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;uart_thread.c: 11: }
  1654  0018A6  0100               	movlb	0	; () banked
  1655  0018A8  0100               	movlb	0	; () banked
  1656  0018AA  51CF               	movf	uart_lthread@msgtype& (0+255),w,b
  1657  0018AC  0A1F               	xorlw	31
  1658  0018AE  11D0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1659  0018B0  A4D8               	btfss	status,2,c
  1660  0018B2  0012               	return	
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1664  0018B4  0100               	movlb	0	; () banked
  1665  0018B6  0100               	movlb	0	; () banked
  1666  0018B8  51D1               	movf	uart_lthread@length& (0+255),w,b
  1667  0018BA  0100               	movlb	0	; () banked
  1668  0018BC  0100               	movlb	0	; () banked
  1669  0018BE  25D3               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1670  0018C0  6ED9               	movwf	fsr2l,c
  1671  0018C2  0100               	movlb	0	; () banked
  1672  0018C4  0100               	movlb	0	; () banked
  1673  0018C6  51D2               	movf	(uart_lthread@length+1)& (0+255),w,b
  1674  0018C8  0100               	movlb	0	; () banked
  1675  0018CA  0100               	movlb	0	; () banked
  1676  0018CC  21D4               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1677  0018CE  6EDA               	movwf	fsr2h,c
  1678  0018D0  0E00               	movlw	0
  1679  0018D2  6EDF               	movwf	indf2,c
  1680  0018D4  0012               	return	
  1681  0018D6                     __end_of_uart_lthread:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           prodl	equ	0xFF3
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           indf1	equ	0xFE7
  1688                           fsr1h	equ	0xFE2
  1689                           fsr1l	equ	0xFE1
  1690                           indf2	equ	0xFDF
  1691                           fsr2h	equ	0xFDA
  1692                           fsr2l	equ	0xFD9
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function _timer1_lthread *****************
  1696 ;; Defined at:
  1697 ;;		line 14 in file "../src/timer1_thread.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  1700 ;;		 -> main@t1thread_data(2), 
  1701 ;;  msgtype         2    2[BANK1 ] int 
  1702 ;;  length          2    4[BANK1 ] int 
  1703 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1704 ;;		 -> main@msgbuffer(11), 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  retval          1    9[BANK1 ] char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  2    0[BANK1 ] int 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1716 ;;      Params:         0       0       8       0       0
  1717 ;;      Locals:         0       0       1       0       0
  1718 ;;      Temps:          0       0       1       0       0
  1719 ;;      Totals:         0       0      10       0       0
  1720 ;;Total ram usage:       10 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:   13
  1723 ;; This function calls:
  1724 ;;		_FromMainHigh_sendmsg
  1725 ;;		___lwmod
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text2
  1732  001430                     __ptext2:
  1733                           	opt stack 0
  1734  001430                     _timer1_lthread:
  1735                           	opt stack 17
  1736                           
  1737                           ;timer1_thread.c: 15: signed char retval;
  1738                           ;timer1_thread.c: 17: tptr->msgcount++;
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;incstack = 0
  1742  001430  C1A2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1743  001434  C1A3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1744  001438  2ADE               	incf	postinc2,f,c
  1745  00143A  0E00               	movlw	0
  1746  00143C  22DD               	addwfc	postdec2,f,c
  1747                           
  1748                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1749  00143E  C1A2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1750  001442  C1A3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1751  001446  0100               	movlb	0	; () banked
  1752  001448  CFDE F0CD          	movff	postinc2,___lwmod@dividend
  1753  00144C  0100               	movlb	0	; () banked
  1754  00144E  CFDD F0CE          	movff	postdec2,___lwmod@dividend+1
  1755  001452  0E00               	movlw	0
  1756  001454  0100               	movlb	0	; () banked
  1757  001456  0100               	movlb	0	; () banked
  1758  001458  6FD0               	movwf	(___lwmod@divisor+1)& (0+255),b
  1759  00145A  0E0A               	movlw	10
  1760  00145C  0100               	movlb	0	; () banked
  1761  00145E  6FCF               	movwf	___lwmod@divisor& (0+255),b
  1762  001460  EC16  F009         	call	___lwmod	;wreg free
  1763  001464  0100               	movlb	0	; () banked
  1764  001466  0100               	movlb	0	; () banked
  1765  001468  51CD               	movf	?___lwmod& (0+255),w,b
  1766  00146A  0A09               	xorlw	9
  1767  00146C  0100               	movlb	0	; () banked
  1768  00146E  11CE               	iorwf	(?___lwmod+1)& (0+255),w,b
  1769  001470  A4D8               	btfss	status,2,c
  1770  001472  0012               	return	
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1774  001474  0101               	movlb	1	; () banked
  1775  001476  6FAA               	movwf	??_timer1_lthread& (0+255),b
  1776  001478  0E14               	movlw	20
  1777  00147A  0100               	movlb	0	; () banked
  1778  00147C  0100               	movlb	0	; () banked
  1779  00147E  6FE3               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1780  001480  0101               	movlb	1	; () banked
  1781  001482  51AA               	movf	??_timer1_lthread& (0+255),w,b
  1782  001484  0101               	movlb	1	; () banked
  1783  001486  0100               	movlb	0	; () banked
  1784  001488  C1A3  F0E5         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1785  00148C  0101               	movlb	1	; () banked
  1786  00148E  0100               	movlb	0	; () banked
  1787  001490  C1A2  F0E4         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1788  001494  0E02               	movlw	2
  1789  001496  EC87  F00C         	call	_FromMainHigh_sendmsg
  1790  00149A  0101               	movlb	1	; () banked
  1791  00149C  0101               	movlb	1	; () banked
  1792  00149E  6FAB               	movwf	timer1_lthread@retval& (0+255),b
  1793  0014A0  0012               	return	
  1794  0014A2                     __end_of_timer1_lthread:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           prodl	equ	0xFF3
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           indf1	equ	0xFE7
  1801                           fsr1h	equ	0xFE2
  1802                           fsr1l	equ	0xFE1
  1803                           indf2	equ	0xFDF
  1804                           postinc2	equ	0xFDE
  1805                           postdec2	equ	0xFDD
  1806                           fsr2h	equ	0xFDA
  1807                           fsr2l	equ	0xFD9
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function ___lwmod *****************
  1811 ;; Defined at:
  1812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  dividend        2   23[BANK0 ] unsigned int 
  1815 ;;  divisor         2   25[BANK0 ] unsigned int 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  counter         1   28[BANK0 ] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2   23[BANK0 ] unsigned int 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1827 ;;      Params:         0       4       0       0       0
  1828 ;;      Locals:         0       1       0       0       0
  1829 ;;      Temps:          0       1       0       0       0
  1830 ;;      Totals:         0       6       0       0       0
  1831 ;;Total ram usage:        6 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:   10
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_timer1_lthread
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text3
  1842  00122C                     __ptext3:
  1843                           	opt stack 0
  1844  00122C                     ___lwmod:
  1845                           	opt stack 19
  1846                           
  1847                           ;incstack = 0
  1848  00122C  0100               	movlb	0	; () banked
  1849  00122E  0100               	movlb	0	; () banked
  1850  001230  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1851  001232  11CF               	iorwf	___lwmod@divisor& (0+255),w,b
  1852  001234  B4D8               	btfsc	status,2,c
  1853  001236  D03A               	goto	l1039
  1854                           
  1855                           ; BSR set to: 0
  1856  001238  0100               	movlb	0	; () banked
  1857  00123A  6FD1               	movwf	??___lwmod& (0+255),b
  1858  00123C  0E01               	movlw	1
  1859  00123E  0100               	movlb	0	; () banked
  1860  001240  0100               	movlb	0	; () banked
  1861  001242  6FD2               	movwf	___lwmod@counter& (0+255),b
  1862  001244  0100               	movlb	0	; () banked
  1863  001246  51D1               	movf	??___lwmod& (0+255),w,b
  1864  001248  D009               	goto	l3213
  1865  00124A                     l3211:
  1866                           
  1867                           ; BSR set to: 0
  1868  00124A  0100               	movlb	0	; () banked
  1869  00124C  0100               	movlb	0	; () banked
  1870  00124E  0100               	movlb	0	; () banked
  1871  001250  90D8               	bcf	status,0,c
  1872  001252  37CF               	rlcf	___lwmod@divisor& (0+255),f,b
  1873  001254  37D0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1874  001256  0100               	movlb	0	; () banked
  1875  001258  0100               	movlb	0	; () banked
  1876  00125A  2BD2               	incf	___lwmod@counter& (0+255),f,b
  1877  00125C                     l3213:
  1878                           
  1879                           ; BSR set to: 0
  1880  00125C  0100               	movlb	0	; () banked
  1881  00125E  0100               	movlb	0	; () banked
  1882  001260  AFD0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1883  001262  D7F3               	goto	l3211
  1884  001264                     l3215:
  1885                           
  1886                           ; BSR set to: 0
  1887  001264  0100               	movlb	0	; () banked
  1888  001266  0100               	movlb	0	; () banked
  1889  001268  51CF               	movf	___lwmod@divisor& (0+255),w,b
  1890  00126A  0100               	movlb	0	; () banked
  1891  00126C  0100               	movlb	0	; () banked
  1892  00126E  5DCD               	subwf	___lwmod@dividend& (0+255),w,b
  1893  001270  0100               	movlb	0	; () banked
  1894  001272  0100               	movlb	0	; () banked
  1895  001274  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1896  001276  0100               	movlb	0	; () banked
  1897  001278  0100               	movlb	0	; () banked
  1898  00127A  59CE               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1899  00127C  A0D8               	btfss	status,0,c
  1900  00127E  D00C               	goto	l3219
  1901                           
  1902                           ; BSR set to: 0
  1903  001280  0100               	movlb	0	; () banked
  1904  001282  0100               	movlb	0	; () banked
  1905  001284  51CF               	movf	___lwmod@divisor& (0+255),w,b
  1906  001286  0100               	movlb	0	; () banked
  1907  001288  0100               	movlb	0	; () banked
  1908  00128A  5FCD               	subwf	___lwmod@dividend& (0+255),f,b
  1909  00128C  0100               	movlb	0	; () banked
  1910  00128E  0100               	movlb	0	; () banked
  1911  001290  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1912  001292  0100               	movlb	0	; () banked
  1913  001294  0100               	movlb	0	; () banked
  1914  001296  5BCE               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1915  001298                     l3219:
  1916                           
  1917                           ; BSR set to: 0
  1918  001298  0100               	movlb	0	; () banked
  1919  00129A  0100               	movlb	0	; () banked
  1920  00129C  0100               	movlb	0	; () banked
  1921  00129E  90D8               	bcf	status,0,c
  1922  0012A0  33D0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1923  0012A2  33CF               	rrcf	___lwmod@divisor& (0+255),f,b
  1924                           
  1925                           ; BSR set to: 0
  1926  0012A4  0100               	movlb	0	; () banked
  1927  0012A6  0100               	movlb	0	; () banked
  1928  0012A8  2FD2               	decfsz	___lwmod@counter& (0+255),f,b
  1929  0012AA  D7DC               	goto	l3215
  1930  0012AC                     l1039:
  1931                           
  1932                           ; BSR set to: 0
  1933  0012AC  C0CD  F0CD         	movff	___lwmod@dividend,?___lwmod
  1934  0012B0  C0CE  F0CE         	movff	___lwmod@dividend+1,?___lwmod+1
  1935                           
  1936                           ; BSR set to: 0
  1937  0012B4  0012               	return	
  1938  0012B6                     __end_of___lwmod:
  1939                           	opt stack 0
  1940                           tblptru	equ	0xFF8
  1941                           prodl	equ	0xFF3
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           indf1	equ	0xFE7
  1945                           fsr1h	equ	0xFE2
  1946                           fsr1l	equ	0xFE1
  1947                           indf2	equ	0xFDF
  1948                           postinc2	equ	0xFDE
  1949                           postdec2	equ	0xFDD
  1950                           fsr2h	equ	0xFDA
  1951                           fsr2l	equ	0xFD9
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _FromMainHigh_sendmsg *****************
  1955 ;; Defined at:
  1956 ;;		line 174 in file "../src/messages.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  length          1    wreg     unsigned char 
  1959 ;;  msgtype         1   45[BANK0 ] unsigned char 
  1960 ;;  data            2   46[BANK0 ] PTR void 
  1961 ;;		 -> main@t1thread_data(2), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  length          1   48[BANK0 ] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      char 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1973 ;;      Params:         0       3       0       0       0
  1974 ;;      Locals:         0       1       0       0       0
  1975 ;;      Temps:          0       0       0       0       0
  1976 ;;      Totals:         0       4       0       0       0
  1977 ;;Total ram usage:        4 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:   12
  1980 ;; This function calls:
  1981 ;;		_send_msg
  1982 ;; This function is called by:
  1983 ;;		_timer1_lthread
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text4
  1988  00190E                     __ptext4:
  1989                           	opt stack 0
  1990  00190E                     _FromMainHigh_sendmsg:
  1991                           	opt stack 17
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;incstack = 0
  1995                           ;FromMainHigh_sendmsg@length stored from wreg
  1996  00190E  CFE8 F0E6          	movff	wreg,FromMainHigh_sendmsg@length
  1997                           
  1998                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1999  001912  0101               	movlb	1	; () banked
  2000  001914  0E01               	movlw	high _FromMainHigh_MQ
  2001  001916  0100               	movlb	0	; () banked
  2002  001918  0100               	movlb	0	; () banked
  2003  00191A  6FD8               	movwf	(send_msg@qptr+1)& (0+255),b
  2004  00191C  0101               	movlb	1	; () banked
  2005  00191E  0E00               	movlw	low _FromMainHigh_MQ
  2006  001920  0100               	movlb	0	; () banked
  2007  001922  0100               	movlb	0	; () banked
  2008  001924  6FD7               	movwf	send_msg@qptr& (0+255),b
  2009  001926  C0E6  F0D9         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2010  00192A  C0E3  F0DA         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2011  00192E  0100               	movlb	0	; () banked
  2012  001930  0100               	movlb	0	; () banked
  2013  001932  C0E5  F0DC         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2014  001936  0100               	movlb	0	; () banked
  2015  001938  0100               	movlb	0	; () banked
  2016  00193A  C0E4  F0DB         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2017  00193E  EC86  F006         	call	_send_msg	;wreg free
  2018  001942  0012               	return	
  2019  001944                     __end_of_FromMainHigh_sendmsg:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           prodl	equ	0xFF3
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           indf1	equ	0xFE7
  2026                           fsr1h	equ	0xFE2
  2027                           fsr1l	equ	0xFE1
  2028                           indf2	equ	0xFDF
  2029                           postinc2	equ	0xFDE
  2030                           postdec2	equ	0xFDD
  2031                           fsr2h	equ	0xFDA
  2032                           fsr2l	equ	0xFD9
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function _send_msg *****************
  2036 ;; Defined at:
  2037 ;;		line 24 in file "../src/messages.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  2040 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2041 ;;  length          1   35[BANK0 ] unsigned char 
  2042 ;;  msgtype         1   36[BANK0 ] unsigned char 
  2043 ;;  data            2   37[BANK0 ] PTR void 
  2044 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  2045 ;;		 -> main@ic(28), main@uc(5), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  qmsg            2   43[BANK0 ] PTR struct __msg
  2048 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2049 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2050 ;;  tlength         2   40[BANK0 ] unsigned int 
  2051 ;;  slot            1   42[BANK0 ] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      char 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2061 ;;      Params:         0       6       0       0       0
  2062 ;;      Locals:         0       5       0       0       0
  2063 ;;      Temps:          0       1       0       0       0
  2064 ;;      Totals:         0      12       0       0       0
  2065 ;;Total ram usage:       12 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:   11
  2068 ;; This function calls:
  2069 ;;		_memcpy
  2070 ;; This function is called by:
  2071 ;;		_FromMainHigh_sendmsg
  2072 ;;		_FromMainLow_sendmsg
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text5
  2077  000D0C                     __ptext5:
  2078                           	opt stack 0
  2079  000D0C                     _send_msg:
  2080                           	opt stack 17
  2081                           
  2082                           ;messages.c: 25: unsigned char slot;
  2083                           ;messages.c: 27: msg *qmsg;
  2084                           ;messages.c: 28: size_t tlength = length;
  2085                           
  2086                           ;incstack = 0
  2087  000D0C  0100               	movlb	0	; () banked
  2088  000D0E  0100               	movlb	0	; () banked
  2089  000D10  C0D9  F0DE         	movff	send_msg@length,send_msg@tlength
  2090  000D14  0100               	movlb	0	; () banked
  2091  000D16  0100               	movlb	0	; () banked
  2092  000D18  6BDF               	clrf	(send_msg@tlength+1)& (0+255),b
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2096  000D1A  0100               	movlb	0	; () banked
  2097  000D1C  EE20 F034          	lfsr	2,52
  2098  000D20  0100               	movlb	0	; () banked
  2099  000D22  51D7               	movf	send_msg@qptr& (0+255),w,b
  2100  000D24  26D9               	addwf	fsr2l,f,c
  2101  000D26  0100               	movlb	0	; () banked
  2102  000D28  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2103  000D2A  22DA               	addwfc	fsr2h,f,c
  2104  000D2C  50DF               	movf	indf2,w,c
  2105  000D2E  0100               	movlb	0	; () banked
  2106  000D30  0100               	movlb	0	; () banked
  2107  000D32  6FE0               	movwf	send_msg@slot& (0+255),b
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2111  000D34  0100               	movlb	0	; () banked
  2112  000D36  0100               	movlb	0	; () banked
  2113  000D38  51E0               	movf	send_msg@slot& (0+255),w,b
  2114  000D3A  0D0D               	mullw	13
  2115  000D3C  50F3               	movf	prodl,w,c
  2116  000D3E  0100               	movlb	0	; () banked
  2117  000D40  0100               	movlb	0	; () banked
  2118  000D42  25D7               	addwf	send_msg@qptr& (0+255),w,b
  2119  000D44  0100               	movlb	0	; () banked
  2120  000D46  0100               	movlb	0	; () banked
  2121  000D48  6FE1               	movwf	send_msg@qmsg& (0+255),b
  2122  000D4A  50F4               	movf	prodh,w,c
  2123  000D4C  0100               	movlb	0	; () banked
  2124  000D4E  0100               	movlb	0	; () banked
  2125  000D50  21D8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2126  000D52  0100               	movlb	0	; () banked
  2127  000D54  6FE2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;messages.c: 41: if (qmsg->full != 0) {
  2131  000D56  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  2132  000D5A  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2133  000D5E  50DF               	movf	indf2,w,c
  2134  000D60  B4D8               	btfsc	status,2,c
  2135  000D62  D002               	goto	l3141
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;messages.c: 42: return (-1);
  2139  000D64  0EFF               	movlw	255
  2140  000D66  0012               	return	
  2141  000D68                     l3141:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;messages.c: 43: }
  2145                           ;messages.c: 46: qmsg->length = length;
  2146  000D68  0100               	movlb	0	; () banked
  2147  000D6A  EE20 F001          	lfsr	2,1
  2148  000D6E  0100               	movlb	0	; () banked
  2149  000D70  51E1               	movf	send_msg@qmsg& (0+255),w,b
  2150  000D72  26D9               	addwf	fsr2l,f,c
  2151  000D74  0100               	movlb	0	; () banked
  2152  000D76  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2153  000D78  22DA               	addwfc	fsr2h,f,c
  2154  000D7A  0100               	movlb	0	; () banked
  2155  000D7C  C0D9  FFDF         	movff	send_msg@length,indf2
  2156                           
  2157                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2158  000D80  0100               	movlb	0	; () banked
  2159  000D82  EE20 F002          	lfsr	2,2
  2160  000D86  0100               	movlb	0	; () banked
  2161  000D88  51E1               	movf	send_msg@qmsg& (0+255),w,b
  2162  000D8A  26D9               	addwf	fsr2l,f,c
  2163  000D8C  0100               	movlb	0	; () banked
  2164  000D8E  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2165  000D90  22DA               	addwfc	fsr2h,f,c
  2166  000D92  0100               	movlb	0	; () banked
  2167  000D94  C0DA  FFDF         	movff	send_msg@msgtype,indf2
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2171  000D98  0E03               	movlw	3
  2172  000D9A  0100               	movlb	0	; () banked
  2173  000D9C  0100               	movlb	0	; () banked
  2174  000D9E  25E1               	addwf	send_msg@qmsg& (0+255),w,b
  2175  000DA0  0100               	movlb	0	; () banked
  2176  000DA2  0100               	movlb	0	; () banked
  2177  000DA4  6FCD               	movwf	memcpy@d1& (0+255),b
  2178  000DA6  0E00               	movlw	0
  2179  000DA8  0100               	movlb	0	; () banked
  2180  000DAA  0100               	movlb	0	; () banked
  2181  000DAC  21E2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2182  000DAE  0100               	movlb	0	; () banked
  2183  000DB0  6FCE               	movwf	(memcpy@d1+1)& (0+255),b
  2184  000DB2  0100               	movlb	0	; () banked
  2185  000DB4  0100               	movlb	0	; () banked
  2186  000DB6  C0DC  F0D0         	movff	send_msg@data+1,memcpy@s1+1
  2187  000DBA  0100               	movlb	0	; () banked
  2188  000DBC  0100               	movlb	0	; () banked
  2189  000DBE  C0DB  F0CF         	movff	send_msg@data,memcpy@s1
  2190  000DC2  C0DE  F0D1         	movff	send_msg@tlength,memcpy@n
  2191  000DC6  C0DF  F0D2         	movff	send_msg@tlength+1,memcpy@n+1
  2192  000DCA  ECEF  F00A         	call	_memcpy	;wreg free
  2193                           
  2194                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2195  000DCE  0100               	movlb	0	; () banked
  2196  000DD0  EE20 F034          	lfsr	2,52
  2197  000DD4  0100               	movlb	0	; () banked
  2198  000DD6  51D7               	movf	send_msg@qptr& (0+255),w,b
  2199  000DD8  26D9               	addwf	fsr2l,f,c
  2200  000DDA  0100               	movlb	0	; () banked
  2201  000DDC  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2202  000DDE  22DA               	addwfc	fsr2h,f,c
  2203  000DE0  0100               	movlb	0	; () banked
  2204  000DE2  EE10 F034          	lfsr	1,52
  2205  000DE6  0100               	movlb	0	; () banked
  2206  000DE8  51D7               	movf	send_msg@qptr& (0+255),w,b
  2207  000DEA  26E1               	addwf	fsr1l,f,c
  2208  000DEC  0100               	movlb	0	; () banked
  2209  000DEE  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2210  000DF0  22E2               	addwfc	fsr1h,f,c
  2211  000DF2  50E7               	movf	indf1,w,c
  2212  000DF4  0100               	movlb	0	; () banked
  2213  000DF6  6FDD               	movwf	??_send_msg& (0+255),b
  2214  000DF8  0100               	movlb	0	; () banked
  2215  000DFA  29DD               	incf	??_send_msg& (0+255),w,b
  2216  000DFC  0B03               	andlw	3
  2217  000DFE  6EDF               	movwf	indf2,c
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;messages.c: 59: qmsg->full = 1;
  2221  000E00  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  2222  000E04  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2223  000E08  0E01               	movlw	1
  2224  000E0A  6EDF               	movwf	indf2,c
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;messages.c: 60: return (1);
  2228  000E0C  0E01               	movlw	1
  2229  000E0E  0012               	return	
  2230  000E10                     __end_of_send_msg:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           indf1	equ	0xFE7
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           indf2	equ	0xFDF
  2241                           postinc2	equ	0xFDE
  2242                           postdec2	equ	0xFDD
  2243                           fsr2h	equ	0xFDA
  2244                           fsr2l	equ	0xFD9
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _timer0_lthread *****************
  2248 ;; Defined at:
  2249 ;;		line 9 in file "../src/timer0_thread.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  tptr            2   23[BANK0 ] PTR struct __timer0_thre
  2252 ;;		 -> main@t0thread_data(2), 
  2253 ;;  msgtype         2   25[BANK0 ] int 
  2254 ;;  length          2   27[BANK0 ] int 
  2255 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  2256 ;;		 -> main@msgbuffer(11), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  msgval          2   31[BANK0 ] PTR unsigned int 
  2259 ;;		 -> main@msgbuffer(11), 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2   23[BANK0 ] int 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2269 ;;      Params:         0       8       0       0       0
  2270 ;;      Locals:         0       2       0       0       0
  2271 ;;      Temps:          0       0       0       0       0
  2272 ;;      Totals:         0      10       0       0       0
  2273 ;;Total ram usage:       10 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:   10
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text6
  2284  001B3C                     __ptext6:
  2285                           	opt stack 0
  2286  001B3C                     _timer0_lthread:
  2287                           	opt stack 20
  2288                           
  2289                           ;timer0_thread.c: 10: unsigned int *msgval;
  2290                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;incstack = 0
  2294  001B3C  0100               	movlb	0	; () banked
  2295  001B3E  0100               	movlb	0	; () banked
  2296  001B40  C0D4  F0D6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2297  001B44  0100               	movlb	0	; () banked
  2298  001B46  0100               	movlb	0	; () banked
  2299  001B48  C0D3  F0D5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2300                           
  2301                           ; BSR set to: 0
  2302  001B4C  0012               	return	
  2303  001B4E                     __end_of_timer0_lthread:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           prodh	equ	0xFF4
  2307                           prodl	equ	0xFF3
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           indf1	equ	0xFE7
  2311                           fsr1h	equ	0xFE2
  2312                           fsr1l	equ	0xFE1
  2313                           indf2	equ	0xFDF
  2314                           postinc2	equ	0xFDE
  2315                           postdec2	equ	0xFDD
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _start_i2c_slave_reply *****************
  2321 ;; Defined at:
  2322 ;;		line 53 in file "../src/my_i2c.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  length          1    wreg     unsigned char 
  2325 ;;  msg             2   23[BANK0 ] PTR unsigned char 
  2326 ;;		 -> main@msgbuffer(11), 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  length          1   27[BANK0 ] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;		None               void
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2338 ;;      Params:         0       2       0       0       0
  2339 ;;      Locals:         0       1       0       0       0
  2340 ;;      Temps:          0       2       0       0       0
  2341 ;;      Totals:         0       5       0       0       0
  2342 ;;Total ram usage:        5 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:   10
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text7
  2353  000BFE                     __ptext7:
  2354                           	opt stack 0
  2355  000BFE                     _start_i2c_slave_reply:
  2356                           	opt stack 20
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;incstack = 0
  2360                           ;start_i2c_slave_reply@length stored from wreg
  2361  000BFE  CFE8 F0D1          	movff	wreg,start_i2c_slave_reply@length
  2362                           
  2363                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2364  000C02  0100               	movlb	0	; () banked
  2365  000C04  EE20 F019          	lfsr	2,25
  2366  000C08  0100               	movlb	0	; () banked
  2367  000C0A  51E7               	movf	_ic_ptr& (0+255),w,b
  2368  000C0C  26D9               	addwf	fsr2l,f,c
  2369  000C0E  0100               	movlb	0	; () banked
  2370  000C10  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2371  000C12  22DA               	addwfc	fsr2h,f,c
  2372  000C14  0E00               	movlw	0
  2373  000C16  6EDF               	movwf	indf2,c
  2374  000C18  D042               	goto	l2645
  2375  000C1A                     l2641:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2379  000C1A  0100               	movlb	0	; () banked
  2380  000C1C  EE20 F019          	lfsr	2,25
  2381  000C20  0100               	movlb	0	; () banked
  2382  000C22  51E7               	movf	_ic_ptr& (0+255),w,b
  2383  000C24  26D9               	addwf	fsr2l,f,c
  2384  000C26  0100               	movlb	0	; () banked
  2385  000C28  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2386  000C2A  22DA               	addwfc	fsr2h,f,c
  2387  000C2C  50DF               	movf	indf2,w,c
  2388  000C2E  0100               	movlb	0	; () banked
  2389  000C30  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2390  000C32  0100               	movlb	0	; () banked
  2391  000C34  51CF               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2392  000C36  0D01               	mullw	1
  2393  000C38  50F3               	movf	prodl,w,c
  2394  000C3A  0100               	movlb	0	; () banked
  2395  000C3C  0100               	movlb	0	; () banked
  2396  000C3E  25CD               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2397  000C40  6ED9               	movwf	fsr2l,c
  2398  000C42  50F4               	movf	prodh,w,c
  2399  000C44  0100               	movlb	0	; () banked
  2400  000C46  0100               	movlb	0	; () banked
  2401  000C48  21CE               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2402  000C4A  6EDA               	movwf	fsr2h,c
  2403  000C4C  0100               	movlb	0	; () banked
  2404  000C4E  EE10 F019          	lfsr	1,25
  2405  000C52  0100               	movlb	0	; () banked
  2406  000C54  51E7               	movf	_ic_ptr& (0+255),w,b
  2407  000C56  26E1               	addwf	fsr1l,f,c
  2408  000C58  0100               	movlb	0	; () banked
  2409  000C5A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2410  000C5C  22E2               	addwfc	fsr1h,f,c
  2411  000C5E  50E7               	movf	indf1,w,c
  2412  000C60  0100               	movlb	0	; () banked
  2413  000C62  6FD0               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2414  000C64  0100               	movlb	0	; () banked
  2415  000C66  51D0               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2416  000C68  0D01               	mullw	1
  2417  000C6A  0E0F               	movlw	15
  2418  000C6C  26F3               	addwf	prodl,f,c
  2419  000C6E  0E00               	movlw	0
  2420  000C70  22F4               	addwfc	prodh,f,c
  2421  000C72  50F3               	movf	prodl,w,c
  2422  000C74  0100               	movlb	0	; () banked
  2423  000C76  0100               	movlb	0	; () banked
  2424  000C78  25E7               	addwf	_ic_ptr& (0+255),w,b
  2425  000C7A  6EE1               	movwf	fsr1l,c
  2426  000C7C  50F4               	movf	prodh,w,c
  2427  000C7E  0100               	movlb	0	; () banked
  2428  000C80  0100               	movlb	0	; () banked
  2429  000C82  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2430  000C84  6EE2               	movwf	fsr1h,c
  2431  000C86  CFDF FFE7          	movff	indf2,indf1
  2432                           
  2433                           ; BSR set to: 0
  2434  000C8A  0100               	movlb	0	; () banked
  2435  000C8C  EE20 F019          	lfsr	2,25
  2436  000C90  0100               	movlb	0	; () banked
  2437  000C92  51E7               	movf	_ic_ptr& (0+255),w,b
  2438  000C94  26D9               	addwf	fsr2l,f,c
  2439  000C96  0100               	movlb	0	; () banked
  2440  000C98  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2441  000C9A  22DA               	addwfc	fsr2h,f,c
  2442  000C9C  2ADF               	incf	indf2,f,c
  2443  000C9E                     l2645:
  2444                           
  2445                           ; BSR set to: 0
  2446  000C9E  0100               	movlb	0	; () banked
  2447  000CA0  EE20 F019          	lfsr	2,25
  2448  000CA4  0100               	movlb	0	; () banked
  2449  000CA6  51E7               	movf	_ic_ptr& (0+255),w,b
  2450  000CA8  26D9               	addwf	fsr2l,f,c
  2451  000CAA  0100               	movlb	0	; () banked
  2452  000CAC  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2453  000CAE  22DA               	addwfc	fsr2h,f,c
  2454  000CB0  50DF               	movf	indf2,w,c
  2455  000CB2  0100               	movlb	0	; () banked
  2456  000CB4  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2457  000CB6  0100               	movlb	0	; () banked
  2458  000CB8  0100               	movlb	0	; () banked
  2459  000CBA  51D1               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2460  000CBC  0100               	movlb	0	; () banked
  2461  000CBE  5DCF               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2462  000CC0  A0D8               	btfss	status,0,c
  2463  000CC2  D7AB               	goto	l2641
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;my_i2c.c: 57: }
  2467                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2468                           
  2469                           ; BSR set to: 0
  2470  000CC4  0100               	movlb	0	; () banked
  2471  000CC6  EE20 F019          	lfsr	2,25
  2472  000CCA  0100               	movlb	0	; () banked
  2473  000CCC  51E7               	movf	_ic_ptr& (0+255),w,b
  2474  000CCE  26D9               	addwf	fsr2l,f,c
  2475  000CD0  0100               	movlb	0	; () banked
  2476  000CD2  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2477  000CD4  22DA               	addwfc	fsr2h,f,c
  2478  000CD6  0100               	movlb	0	; () banked
  2479  000CD8  C0D1  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2480                           
  2481                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2482  000CDC  0100               	movlb	0	; () banked
  2483  000CDE  EE20 F01A          	lfsr	2,26
  2484  000CE2  0100               	movlb	0	; () banked
  2485  000CE4  51E7               	movf	_ic_ptr& (0+255),w,b
  2486  000CE6  26D9               	addwf	fsr2l,f,c
  2487  000CE8  0100               	movlb	0	; () banked
  2488  000CEA  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2489  000CEC  22DA               	addwfc	fsr2h,f,c
  2490  000CEE  0E01               	movlw	1
  2491  000CF0  6EDF               	movwf	indf2,c
  2492                           
  2493                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2494  000CF2  0100               	movlb	0	; () banked
  2495  000CF4  EE20 F00F          	lfsr	2,15
  2496  000CF8  0100               	movlb	0	; () banked
  2497  000CFA  51E7               	movf	_ic_ptr& (0+255),w,b
  2498  000CFC  26D9               	addwf	fsr2l,f,c
  2499  000CFE  0100               	movlb	0	; () banked
  2500  000D00  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2501  000D02  22DA               	addwfc	fsr2h,f,c
  2502  000D04  50DF               	movf	indf2,w,c
  2503  000D06  6EC9               	movwf	4041,c	;volatile
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2507  000D08  88C6               	bsf	4038,4,c	;volatile
  2508                           
  2509                           ; BSR set to: 0
  2510  000D0A  0012               	return	
  2511  000D0C                     __end_of_start_i2c_slave_reply:
  2512                           	opt stack 0
  2513                           tblptru	equ	0xFF8
  2514                           prodh	equ	0xFF4
  2515                           prodl	equ	0xFF3
  2516                           postinc0	equ	0xFEE
  2517                           wreg	equ	0xFE8
  2518                           indf1	equ	0xFE7
  2519                           fsr1h	equ	0xFE2
  2520                           fsr1l	equ	0xFE1
  2521                           indf2	equ	0xFDF
  2522                           postinc2	equ	0xFDE
  2523                           postdec2	equ	0xFDD
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _setDBG *****************
  2529 ;; Defined at:
  2530 ;;		line 4 in file "../src/debug.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  b               1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  b               1   23[BANK0 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2544 ;;      Params:         0       0       0       0       0
  2545 ;;      Locals:         0       1       0       0       0
  2546 ;;      Temps:          0       0       0       0       0
  2547 ;;      Totals:         0       1       0       0       0
  2548 ;;Total ram usage:        1 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:   10
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text8
  2559  001798                     __ptext8:
  2560                           	opt stack 0
  2561  001798                     _setDBG:
  2562                           	opt stack 20
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;incstack = 0
  2566                           ;setDBG@b stored from wreg
  2567  001798  CFE8 F0CD          	movff	wreg,setDBG@b
  2568                           
  2569                           ;debug.c: 5: switch(b) {
  2570  00179C  D00A               	goto	l2631
  2571  00179E                     l384:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;debug.c: 7: LATBbits.LATB0 = 1;
  2575  00179E  808A               	bsf	3978,0,c	;volatile
  2576                           
  2577                           ;debug.c: 8: break;
  2578  0017A0  0012               	return	
  2579  0017A2                     l386:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;debug.c: 10: LATBbits.LATB1 = 1;
  2583  0017A2  828A               	bsf	3978,1,c	;volatile
  2584                           
  2585                           ;debug.c: 11: break;
  2586  0017A4  0012               	return	
  2587  0017A6                     l387:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;debug.c: 13: LATBbits.LATB2 = 1;
  2591  0017A6  848A               	bsf	3978,2,c	;volatile
  2592                           
  2593                           ;debug.c: 14: break;
  2594  0017A8  0012               	return	
  2595  0017AA                     l388:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;debug.c: 16: LATBbits.LATB3 = 1;
  2599  0017AA  868A               	bsf	3978,3,c	;volatile
  2600                           
  2601                           ;debug.c: 17: break;
  2602  0017AC  0012               	return	
  2603  0017AE                     l389:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;debug.c: 19: LATBbits.LATB4 = 1;
  2607  0017AE  888A               	bsf	3978,4,c	;volatile
  2608                           
  2609                           ;debug.c: 20: break;
  2610  0017B0  0012               	return	
  2611  0017B2                     l2631:
  2612  0017B2  0100               	movlb	0	; () banked
  2613  0017B4  0100               	movlb	0	; () banked
  2614  0017B6  51CD               	movf	setDBG@b& (0+255),w,b
  2615                           
  2616                           ; Switch size 1, requested type "space"
  2617                           ; Number of cases is 5, Range of values is 0 to 4
  2618                           ; switch strategies available:
  2619                           ; Name         Instructions Cycles
  2620                           ; simple_byte           16     9 (average)
  2621                           ;	Chosen strategy is simple_byte
  2622  0017B8  0A00               	xorlw	0	; case 0
  2623  0017BA  B4D8               	btfsc	status,2,c
  2624  0017BC  D7F0               	goto	l384
  2625  0017BE  0A01               	xorlw	1	; case 1
  2626  0017C0  B4D8               	btfsc	status,2,c
  2627  0017C2  D7EF               	goto	l386
  2628  0017C4  0A03               	xorlw	3	; case 2
  2629  0017C6  B4D8               	btfsc	status,2,c
  2630  0017C8  D7EE               	goto	l387
  2631  0017CA  0A01               	xorlw	1	; case 3
  2632  0017CC  B4D8               	btfsc	status,2,c
  2633  0017CE  D7ED               	goto	l388
  2634  0017D0  0A07               	xorlw	7	; case 4
  2635  0017D2  A4D8               	btfss	status,2,c
  2636  0017D4  0012               	return	
  2637  0017D6  D7EB               	goto	l389
  2638  0017D8                     __end_of_setDBG:
  2639                           	opt stack 0
  2640                           tblptru	equ	0xFF8
  2641                           prodh	equ	0xFF4
  2642                           prodl	equ	0xFF3
  2643                           postinc0	equ	0xFEE
  2644                           wreg	equ	0xFE8
  2645                           indf1	equ	0xFE7
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           postdec2	equ	0xFDD
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _resetDBG *****************
  2656 ;; Defined at:
  2657 ;;		line 26 in file "../src/debug.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  b               1    wreg     unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  b               1   23[BANK0 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2671 ;;      Params:         0       0       0       0       0
  2672 ;;      Locals:         0       1       0       0       0
  2673 ;;      Temps:          0       0       0       0       0
  2674 ;;      Totals:         0       1       0       0       0
  2675 ;;Total ram usage:        1 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:   10
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text9
  2686  0017D8                     __ptext9:
  2687                           	opt stack 0
  2688  0017D8                     _resetDBG:
  2689                           	opt stack 20
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;incstack = 0
  2693                           ;resetDBG@b stored from wreg
  2694  0017D8  CFE8 F0CD          	movff	wreg,resetDBG@b
  2695                           
  2696                           ;debug.c: 27: switch(b) {
  2697  0017DC  D00A               	goto	l2637
  2698  0017DE                     l395:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;debug.c: 29: LATBbits.LATB0 = 0;
  2702  0017DE  908A               	bcf	3978,0,c	;volatile
  2703                           
  2704                           ;debug.c: 30: break;
  2705  0017E0  0012               	return	
  2706  0017E2                     l397:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;debug.c: 32: LATBbits.LATB1 = 0;
  2710  0017E2  928A               	bcf	3978,1,c	;volatile
  2711                           
  2712                           ;debug.c: 33: break;
  2713  0017E4  0012               	return	
  2714  0017E6                     l398:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;debug.c: 35: LATBbits.LATB2 = 0;
  2718  0017E6  948A               	bcf	3978,2,c	;volatile
  2719                           
  2720                           ;debug.c: 36: break;
  2721  0017E8  0012               	return	
  2722  0017EA                     l399:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;debug.c: 38: LATBbits.LATB3 = 0;
  2726  0017EA  968A               	bcf	3978,3,c	;volatile
  2727                           
  2728                           ;debug.c: 39: break;
  2729  0017EC  0012               	return	
  2730  0017EE                     l400:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;debug.c: 41: LATBbits.LATB4 = 0;
  2734  0017EE  988A               	bcf	3978,4,c	;volatile
  2735                           
  2736                           ;debug.c: 42: break;
  2737  0017F0  0012               	return	
  2738  0017F2                     l2637:
  2739  0017F2  0100               	movlb	0	; () banked
  2740  0017F4  0100               	movlb	0	; () banked
  2741  0017F6  51CD               	movf	resetDBG@b& (0+255),w,b
  2742                           
  2743                           ; Switch size 1, requested type "space"
  2744                           ; Number of cases is 5, Range of values is 0 to 4
  2745                           ; switch strategies available:
  2746                           ; Name         Instructions Cycles
  2747                           ; simple_byte           16     9 (average)
  2748                           ;	Chosen strategy is simple_byte
  2749  0017F8  0A00               	xorlw	0	; case 0
  2750  0017FA  B4D8               	btfsc	status,2,c
  2751  0017FC  D7F0               	goto	l395
  2752  0017FE  0A01               	xorlw	1	; case 1
  2753  001800  B4D8               	btfsc	status,2,c
  2754  001802  D7EF               	goto	l397
  2755  001804  0A03               	xorlw	3	; case 2
  2756  001806  B4D8               	btfsc	status,2,c
  2757  001808  D7EE               	goto	l398
  2758  00180A  0A01               	xorlw	1	; case 3
  2759  00180C  B4D8               	btfsc	status,2,c
  2760  00180E  D7ED               	goto	l399
  2761  001810  0A07               	xorlw	7	; case 4
  2762  001812  A4D8               	btfss	status,2,c
  2763  001814  0012               	return	
  2764  001816  D7EB               	goto	l400
  2765  001818                     __end_of_resetDBG:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           postinc0	equ	0xFEE
  2771                           wreg	equ	0xFE8
  2772                           indf1	equ	0xFE7
  2773                           fsr1h	equ	0xFE2
  2774                           fsr1l	equ	0xFE1
  2775                           indf2	equ	0xFDF
  2776                           postinc2	equ	0xFDE
  2777                           postdec2	equ	0xFDD
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function _init_uart_recv *****************
  2783 ;; Defined at:
  2784 ;;		line 49 in file "../src/my_uart.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  uc              2   23[BANK0 ] PTR struct __uart_comm
  2787 ;;		 -> main@uc(5), 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2799 ;;      Params:         0       2       0       0       0
  2800 ;;      Locals:         0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0
  2802 ;;      Totals:         0       2       0       0       0
  2803 ;;Total ram usage:        2 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:   10
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text10
  2814  001AEA                     __ptext10:
  2815                           	opt stack 0
  2816  001AEA                     _init_uart_recv:
  2817                           	opt stack 20
  2818                           
  2819                           ;my_uart.c: 50: uc_ptr = uc;
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;incstack = 0
  2823  001AEA  0100               	movlb	0	; () banked
  2824  001AEC  C0CE  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2825  001AF0  0100               	movlb	0	; () banked
  2826  001AF2  C0CD  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2830  001AF6  EE20 F004          	lfsr	2,4
  2831  001AFA  504D               	movf	_uc_ptr,w,c
  2832  001AFC  26D9               	addwf	fsr2l,f,c
  2833  001AFE  504E               	movf	_uc_ptr+1,w,c
  2834  001B00  22DA               	addwfc	fsr2h,f,c
  2835  001B02  0E00               	movlw	0
  2836  001B04  6EDF               	movwf	indf2,c
  2837                           
  2838                           ; BSR set to: 0
  2839  001B06  0012               	return	
  2840  001B08                     __end_of_init_uart_recv:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           prodh	equ	0xFF4
  2844                           prodl	equ	0xFF3
  2845                           postinc0	equ	0xFEE
  2846                           wreg	equ	0xFE8
  2847                           indf1	equ	0xFE7
  2848                           fsr1h	equ	0xFE2
  2849                           fsr1l	equ	0xFE1
  2850                           indf2	equ	0xFDF
  2851                           postinc2	equ	0xFDE
  2852                           postdec2	equ	0xFDD
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function _init_timer1_lthread *****************
  2858 ;; Defined at:
  2859 ;;		line 6 in file "../src/timer1_thread.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  tptr            2   23[BANK0 ] PTR struct __timer1_thre
  2862 ;;		 -> main@t1thread_data(2), 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;		None               void
  2867 ;; Registers used:
  2868 ;;		wreg, fsr2l, fsr2h
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2874 ;;      Params:         0       2       0       0       0
  2875 ;;      Locals:         0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0
  2877 ;;      Totals:         0       2       0       0       0
  2878 ;;Total ram usage:        2 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:   10
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text11
  2889  001B4E                     __ptext11:
  2890                           	opt stack 0
  2891  001B4E                     _init_timer1_lthread:
  2892                           	opt stack 20
  2893                           
  2894                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;incstack = 0
  2898  001B4E  C0CD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2899  001B52  C0CE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2900  001B56  0E00               	movlw	0
  2901  001B58  6EDE               	movwf	postinc2,c
  2902  001B5A  0E00               	movlw	0
  2903  001B5C  6EDD               	movwf	postdec2,c
  2904  001B5E  0012               	return	
  2905  001B60                     __end_of_init_timer1_lthread:
  2906                           	opt stack 0
  2907                           tblptru	equ	0xFF8
  2908                           prodh	equ	0xFF4
  2909                           prodl	equ	0xFF3
  2910                           postinc0	equ	0xFEE
  2911                           wreg	equ	0xFE8
  2912                           indf1	equ	0xFE7
  2913                           fsr1h	equ	0xFE2
  2914                           fsr1l	equ	0xFE1
  2915                           indf2	equ	0xFDF
  2916                           postinc2	equ	0xFDE
  2917                           postdec2	equ	0xFDD
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _init_queues *****************
  2923 ;; Defined at:
  2924 ;;		line 194 in file "../src/messages.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;		None               void
  2931 ;; Registers used:
  2932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2938 ;;      Params:         0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0
  2940 ;;      Temps:          0       1       0       0       0
  2941 ;;      Totals:         0       1       0       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:   11
  2945 ;; This function calls:
  2946 ;;		_init_queue
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text12
  2953  0014A2                     __ptext12:
  2954                           	opt stack 0
  2955  0014A2                     _init_queues:
  2956                           	opt stack 19
  2957                           
  2958                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2959                           
  2960                           ;incstack = 0
  2961  0014A2  0100               	movlb	0	; () banked
  2962  0014A4  6FD1               	movwf	??_init_queues& (0+255),b
  2963  0014A6  0E00               	movlw	0
  2964  0014A8  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2965  0014AA  0100               	movlb	0	; () banked
  2966  0014AC  51D1               	movf	??_init_queues& (0+255),w,b
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2970  0014AE  0100               	movlb	0	; () banked
  2971  0014B0  0E00               	movlw	high _ToMainLow_MQ
  2972  0014B2  0100               	movlb	0	; () banked
  2973  0014B4  0100               	movlb	0	; () banked
  2974  0014B6  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2975  0014B8  0100               	movlb	0	; () banked
  2976  0014BA  0E80               	movlw	low _ToMainLow_MQ
  2977  0014BC  0100               	movlb	0	; () banked
  2978  0014BE  0100               	movlb	0	; () banked
  2979  0014C0  6FCD               	movwf	init_queue@qptr& (0+255),b
  2980  0014C2  ECDB  F009         	call	_init_queue	;wreg free
  2981                           
  2982                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2983  0014C6  0101               	movlb	1	; () banked
  2984  0014C8  0E01               	movlw	high _ToMainHigh_MQ
  2985  0014CA  0100               	movlb	0	; () banked
  2986  0014CC  0100               	movlb	0	; () banked
  2987  0014CE  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2988  0014D0  0101               	movlb	1	; () banked
  2989  0014D2  0E6C               	movlw	low _ToMainHigh_MQ
  2990  0014D4  0100               	movlb	0	; () banked
  2991  0014D6  0100               	movlb	0	; () banked
  2992  0014D8  6FCD               	movwf	init_queue@qptr& (0+255),b
  2993  0014DA  ECDB  F009         	call	_init_queue	;wreg free
  2994                           
  2995                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2996  0014DE  0101               	movlb	1	; () banked
  2997  0014E0  0E01               	movlw	high _FromMainLow_MQ
  2998  0014E2  0100               	movlb	0	; () banked
  2999  0014E4  0100               	movlb	0	; () banked
  3000  0014E6  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  3001  0014E8  0101               	movlb	1	; () banked
  3002  0014EA  0E36               	movlw	low _FromMainLow_MQ
  3003  0014EC  0100               	movlb	0	; () banked
  3004  0014EE  0100               	movlb	0	; () banked
  3005  0014F0  6FCD               	movwf	init_queue@qptr& (0+255),b
  3006  0014F2  ECDB  F009         	call	_init_queue	;wreg free
  3007                           
  3008                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3009  0014F6  0101               	movlb	1	; () banked
  3010  0014F8  0E01               	movlw	high _FromMainHigh_MQ
  3011  0014FA  0100               	movlb	0	; () banked
  3012  0014FC  0100               	movlb	0	; () banked
  3013  0014FE  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  3014  001500  0101               	movlb	1	; () banked
  3015  001502  0E00               	movlw	low _FromMainHigh_MQ
  3016  001504  0100               	movlb	0	; () banked
  3017  001506  0100               	movlb	0	; () banked
  3018  001508  6FCD               	movwf	init_queue@qptr& (0+255),b
  3019  00150A  ECDB  F009         	call	_init_queue	;wreg free
  3020  00150E  0012               	return	
  3021  001510                     __end_of_init_queues:
  3022                           	opt stack 0
  3023                           tblptru	equ	0xFF8
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           postinc0	equ	0xFEE
  3027                           wreg	equ	0xFE8
  3028                           indf1	equ	0xFE7
  3029                           fsr1h	equ	0xFE2
  3030                           fsr1l	equ	0xFE1
  3031                           indf2	equ	0xFDF
  3032                           postinc2	equ	0xFDE
  3033                           postdec2	equ	0xFDD
  3034                           fsr2h	equ	0xFDA
  3035                           fsr2l	equ	0xFD9
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _init_queue *****************
  3039 ;; Defined at:
  3040 ;;		line 14 in file "../src/messages.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3043 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  i               1   26[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3055 ;;      Params:         0       2       0       0       0
  3056 ;;      Locals:         0       1       0       0       0
  3057 ;;      Temps:          0       1       0       0       0
  3058 ;;      Totals:         0       4       0       0       0
  3059 ;;Total ram usage:        4 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:   10
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_init_queues
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text13
  3070  0013B6                     __ptext13:
  3071                           	opt stack 0
  3072  0013B6                     _init_queue:
  3073                           	opt stack 19
  3074                           
  3075                           ;messages.c: 15: unsigned char i;
  3076                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3077                           
  3078                           ;incstack = 0
  3079  0013B6  0100               	movlb	0	; () banked
  3080  0013B8  EE20 F034          	lfsr	2,52
  3081  0013BC  0100               	movlb	0	; () banked
  3082  0013BE  51CD               	movf	init_queue@qptr& (0+255),w,b
  3083  0013C0  26D9               	addwf	fsr2l,f,c
  3084  0013C2  0100               	movlb	0	; () banked
  3085  0013C4  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3086  0013C6  22DA               	addwfc	fsr2h,f,c
  3087  0013C8  0E00               	movlw	0
  3088  0013CA  6EDF               	movwf	indf2,c
  3089                           
  3090                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3091  0013CC  0100               	movlb	0	; () banked
  3092  0013CE  EE20 F035          	lfsr	2,53
  3093  0013D2  0100               	movlb	0	; () banked
  3094  0013D4  51CD               	movf	init_queue@qptr& (0+255),w,b
  3095  0013D6  26D9               	addwf	fsr2l,f,c
  3096  0013D8  0100               	movlb	0	; () banked
  3097  0013DA  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3098  0013DC  22DA               	addwfc	fsr2h,f,c
  3099  0013DE  0E00               	movlw	0
  3100  0013E0  6EDF               	movwf	indf2,c
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3104  0013E2  0100               	movlb	0	; () banked
  3105  0013E4  6FCF               	movwf	??_init_queue& (0+255),b
  3106  0013E6  0E00               	movlw	0
  3107  0013E8  0100               	movlb	0	; () banked
  3108  0013EA  0100               	movlb	0	; () banked
  3109  0013EC  6FD0               	movwf	init_queue@i& (0+255),b
  3110  0013EE  0100               	movlb	0	; () banked
  3111  0013F0  51CF               	movf	??_init_queue& (0+255),w,b
  3112                           
  3113                           ; BSR set to: 0
  3114  0013F2  0E03               	movlw	3
  3115  0013F4  0100               	movlb	0	; () banked
  3116  0013F6  0100               	movlb	0	; () banked
  3117  0013F8  65D0               	cpfsgt	init_queue@i& (0+255),b
  3118  0013FA  D001               	goto	l2679
  3119  0013FC  0012               	return	
  3120  0013FE                     l2679:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;messages.c: 20: qptr->queue[i].full = 0;
  3124  0013FE  0100               	movlb	0	; () banked
  3125  001400  0100               	movlb	0	; () banked
  3126  001402  51D0               	movf	init_queue@i& (0+255),w,b
  3127  001404  0D0D               	mullw	13
  3128  001406  50F3               	movf	prodl,w,c
  3129  001408  0100               	movlb	0	; () banked
  3130  00140A  0100               	movlb	0	; () banked
  3131  00140C  25CD               	addwf	init_queue@qptr& (0+255),w,b
  3132  00140E  6ED9               	movwf	fsr2l,c
  3133  001410  50F4               	movf	prodh,w,c
  3134  001412  0100               	movlb	0	; () banked
  3135  001414  0100               	movlb	0	; () banked
  3136  001416  21CE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3137  001418  6EDA               	movwf	fsr2h,c
  3138  00141A  0E00               	movlw	0
  3139  00141C  6EDF               	movwf	indf2,c
  3140                           
  3141                           ; BSR set to: 0
  3142  00141E  0100               	movlb	0	; () banked
  3143  001420  0100               	movlb	0	; () banked
  3144  001422  2BD0               	incf	init_queue@i& (0+255),f,b
  3145                           
  3146                           ; BSR set to: 0
  3147  001424  0E03               	movlw	3
  3148  001426  0100               	movlb	0	; () banked
  3149  001428  0100               	movlb	0	; () banked
  3150  00142A  65D0               	cpfsgt	init_queue@i& (0+255),b
  3151  00142C  D7E8               	goto	l2679
  3152  00142E  0012               	return	
  3153  001430                     __end_of_init_queue:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           indf1	equ	0xFE7
  3161                           fsr1h	equ	0xFE2
  3162                           fsr1l	equ	0xFE1
  3163                           indf2	equ	0xFDF
  3164                           postinc2	equ	0xFDE
  3165                           postdec2	equ	0xFDD
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _init_i2c *****************
  3171 ;; Defined at:
  3172 ;;		line 268 in file "../src/my_i2c.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  ic              2   23[BANK0 ] PTR struct __i2c_comm
  3175 ;;		 -> main@ic(28), 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;		None               void
  3180 ;; Registers used:
  3181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3187 ;;      Params:         0       2       0       0       0
  3188 ;;      Locals:         0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0
  3190 ;;      Totals:         0       2       0       0       0
  3191 ;;Total ram usage:        2 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:   10
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text14
  3202  001510                     __ptext14:
  3203                           	opt stack 0
  3204  001510                     _init_i2c:
  3205                           	opt stack 20
  3206                           
  3207                           ;my_i2c.c: 269: ic_ptr = ic;
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;incstack = 0
  3211  001510  0100               	movlb	0	; () banked
  3212  001512  0100               	movlb	0	; () banked
  3213  001514  C0CE  F0E8         	movff	init_i2c@ic+1,_ic_ptr+1
  3214  001518  0100               	movlb	0	; () banked
  3215  00151A  0100               	movlb	0	; () banked
  3216  00151C  C0CD  F0E7         	movff	init_i2c@ic,_ic_ptr
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3220  001520  0100               	movlb	0	; () banked
  3221  001522  EE20 F00A          	lfsr	2,10
  3222  001526  0100               	movlb	0	; () banked
  3223  001528  51E7               	movf	_ic_ptr& (0+255),w,b
  3224  00152A  26D9               	addwf	fsr2l,f,c
  3225  00152C  0100               	movlb	0	; () banked
  3226  00152E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  3227  001530  22DA               	addwfc	fsr2h,f,c
  3228  001532  0E00               	movlw	0
  3229  001534  6EDF               	movwf	indf2,c
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3233  001536  0100               	movlb	0	; () banked
  3234  001538  EE20 F00B          	lfsr	2,11
  3235  00153C  0100               	movlb	0	; () banked
  3236  00153E  51E7               	movf	_ic_ptr& (0+255),w,b
  3237  001540  26D9               	addwf	fsr2l,f,c
  3238  001542  0100               	movlb	0	; () banked
  3239  001544  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  3240  001546  22DA               	addwfc	fsr2h,f,c
  3241  001548  0E00               	movlw	0
  3242  00154A  6EDF               	movwf	indf2,c
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3246  00154C  0100               	movlb	0	; () banked
  3247  00154E  EE20 F00C          	lfsr	2,12
  3248  001552  0100               	movlb	0	; () banked
  3249  001554  51E7               	movf	_ic_ptr& (0+255),w,b
  3250  001556  26D9               	addwf	fsr2l,f,c
  3251  001558  0100               	movlb	0	; () banked
  3252  00155A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  3253  00155C  22DA               	addwfc	fsr2h,f,c
  3254  00155E  0E05               	movlw	5
  3255  001560  6EDF               	movwf	indf2,c
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3259  001562  0100               	movlb	0	; () banked
  3260  001564  EE20 F00E          	lfsr	2,14
  3261  001568  0100               	movlb	0	; () banked
  3262  00156A  51E7               	movf	_ic_ptr& (0+255),w,b
  3263  00156C  26D9               	addwf	fsr2l,f,c
  3264  00156E  0100               	movlb	0	; () banked
  3265  001570  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  3266  001572  22DA               	addwfc	fsr2h,f,c
  3267  001574  0E00               	movlw	0
  3268  001576  6EDF               	movwf	indf2,c
  3269                           
  3270                           ; BSR set to: 0
  3271  001578  0012               	return	
  3272  00157A                     __end_of_init_i2c:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           indf1	equ	0xFE7
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           indf2	equ	0xFDF
  3283                           postinc2	equ	0xFDE
  3284                           postdec2	equ	0xFDD
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _i2c_configure_slave *****************
  3290 ;; Defined at:
  3291 ;;		line 279 in file "../src/my_i2c.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  addr            1    wreg     unsigned char 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  addr            1   23[BANK0 ] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3305 ;;      Params:         0       0       0       0       0
  3306 ;;      Locals:         0       1       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         0       1       0       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:   10
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text15
  3320  001A2C                     __ptext15:
  3321                           	opt stack 0
  3322  001A2C                     _i2c_configure_slave:
  3323                           	opt stack 20
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;incstack = 0
  3327                           ;i2c_configure_slave@addr stored from wreg
  3328  001A2C  CFE8 F0CD          	movff	wreg,i2c_configure_slave@addr
  3329                           
  3330                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3331  001A30  8694               	bsf	3988,3,c	;volatile
  3332                           
  3333                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3334  001A32  8894               	bsf	3988,4,c	;volatile
  3335                           
  3336                           ;my_i2c.c: 297: SSPADD = addr;
  3337  001A34  C0CD  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3338                           
  3339                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3340  001A38  0E00               	movlw	0
  3341  001A3A  6EC7               	movwf	4039,c	;volatile
  3342                           
  3343                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3344  001A3C  0E00               	movlw	0
  3345  001A3E  6EC6               	movwf	4038,c	;volatile
  3346                           
  3347                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3348  001A40  0E00               	movlw	0
  3349  001A42  6EC5               	movwf	4037,c	;volatile
  3350                           
  3351                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3352  001A44  0E0E               	movlw	14
  3353  001A46  12C6               	iorwf	4038,f,c	;volatile
  3354                           
  3355                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3356  001A48  8EC7               	bsf	4039,7,c	;volatile
  3357                           
  3358                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3359  001A4A  8694               	bsf	3988,3,c	;volatile
  3360                           
  3361                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3362  001A4C  8894               	bsf	3988,4,c	;volatile
  3363                           
  3364                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3365  001A4E  80C5               	bsf	4037,0,c	;volatile
  3366                           
  3367                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3368  001A50  8AC6               	bsf	4038,5,c	;volatile
  3369  001A52  0012               	return	
  3370  001A54                     __end_of_i2c_configure_slave:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           prodh	equ	0xFF4
  3374                           prodl	equ	0xFF3
  3375                           postinc0	equ	0xFEE
  3376                           wreg	equ	0xFE8
  3377                           indf1	equ	0xFE7
  3378                           fsr1h	equ	0xFE2
  3379                           fsr1l	equ	0xFE1
  3380                           indf2	equ	0xFDF
  3381                           postinc2	equ	0xFDE
  3382                           postdec2	equ	0xFDD
  3383                           fsr2h	equ	0xFDA
  3384                           fsr2l	equ	0xFD9
  3385                           status	equ	0xFD8
  3386                           
  3387 ;; *************** function _enable_interrupts *****************
  3388 ;; Defined at:
  3389 ;;		line 14 in file "../src/interrupts.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;		None               void
  3396 ;; Registers used:
  3397 ;;		None
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0
  3406 ;;      Totals:         0       0       0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:   10
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text16
  3418  001BB4                     __ptext16:
  3419                           	opt stack 0
  3420  001BB4                     _enable_interrupts:
  3421                           	opt stack 20
  3422                           
  3423                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3424                           
  3425                           ;incstack = 0
  3426  001BB4  8ED0               	bsf	4048,7,c	;volatile
  3427                           
  3428                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3429  001BB6  8EF2               	bsf	intcon,7,c	;volatile
  3430                           
  3431                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3432  001BB8  8CF2               	bsf	intcon,6,c	;volatile
  3433  001BBA  0012               	return	
  3434  001BBC                     __end_of_enable_interrupts:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           prodh	equ	0xFF4
  3438                           prodl	equ	0xFF3
  3439                           intcon	equ	0xFF2
  3440                           postinc0	equ	0xFEE
  3441                           wreg	equ	0xFE8
  3442                           indf1	equ	0xFE7
  3443                           fsr1h	equ	0xFE2
  3444                           fsr1l	equ	0xFE1
  3445                           indf2	equ	0xFDF
  3446                           postinc2	equ	0xFDE
  3447                           postdec2	equ	0xFDD
  3448                           fsr2h	equ	0xFDA
  3449                           fsr2l	equ	0xFD9
  3450                           status	equ	0xFD8
  3451                           
  3452 ;; *************** function _block_on_To_msgqueues *****************
  3453 ;; Defined at:
  3454 ;;		line 258 in file "../src/messages.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;		None               void
  3461 ;; Registers used:
  3462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3468 ;;      Params:         0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0
  3470 ;;      Temps:          0       1       0       0       0
  3471 ;;      Totals:         0       1       0       0       0
  3472 ;;Total ram usage:        1 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:   13
  3475 ;; This function calls:
  3476 ;;		_Delay1KTCYx
  3477 ;;		_check_msg
  3478 ;;		_in_main
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text17
  3485  001338                     __ptext17:
  3486                           	opt stack 0
  3487  001338                     _block_on_To_msgqueues:
  3488                           	opt stack 17
  3489                           
  3490                           ;messages.c: 259: if (!in_main()) {
  3491                           
  3492                           ;incstack = 0
  3493  001338  EC68  F00B         	call	_in_main	;wreg free
  3494  00133C  0100               	movlb	0	; () banked
  3495  00133E  0100               	movlb	0	; () banked
  3496  001340  51D2               	movf	(?_in_main+1)& (0+255),w,b
  3497  001342  0100               	movlb	0	; () banked
  3498  001344  11D1               	iorwf	?_in_main& (0+255),w,b
  3499  001346  B4D8               	btfsc	status,2,c
  3500  001348  0012               	return	
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;messages.c: 261: }
  3504                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3505                           
  3506                           ; BSR set to: 0
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;messages.c: 260: return;
  3510  00134A  0100               	movlb	0	; () banked
  3511  00134C  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3512  00134E  0E01               	movlw	1
  3513  001350  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3514  001352  0100               	movlb	0	; () banked
  3515  001354  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3516  001356                     l2607:
  3517                           
  3518                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3519  001356  0101               	movlb	1	; () banked
  3520  001358  0E01               	movlw	high _ToMainHigh_MQ
  3521  00135A  0100               	movlb	0	; () banked
  3522  00135C  0100               	movlb	0	; () banked
  3523  00135E  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  3524  001360  0101               	movlb	1	; () banked
  3525  001362  0E6C               	movlw	low _ToMainHigh_MQ
  3526  001364  0100               	movlb	0	; () banked
  3527  001366  0100               	movlb	0	; () banked
  3528  001368  6FCD               	movwf	check_msg@qptr& (0+255),b
  3529  00136A  ECA2  F00C         	call	_check_msg	;wreg free
  3530  00136E  0900               	iorlw	0
  3531  001370  B4D8               	btfsc	status,2,c
  3532  001372  D007               	goto	l2613
  3533                           
  3534                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3535  001374  0100               	movlb	0	; () banked
  3536  001376  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3537  001378  0E00               	movlw	0
  3538  00137A  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3539  00137C  0100               	movlb	0	; () banked
  3540  00137E  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3541  001380  0012               	return	
  3542  001382                     l2613:
  3543                           
  3544                           ;messages.c: 271: }
  3545                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3546  001382  0100               	movlb	0	; () banked
  3547  001384  0E00               	movlw	high _ToMainLow_MQ
  3548  001386  0100               	movlb	0	; () banked
  3549  001388  0100               	movlb	0	; () banked
  3550  00138A  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  3551  00138C  0100               	movlb	0	; () banked
  3552  00138E  0E80               	movlw	low _ToMainLow_MQ
  3553  001390  0100               	movlb	0	; () banked
  3554  001392  0100               	movlb	0	; () banked
  3555  001394  6FCD               	movwf	check_msg@qptr& (0+255),b
  3556  001396  ECA2  F00C         	call	_check_msg	;wreg free
  3557  00139A  0900               	iorlw	0
  3558  00139C  B4D8               	btfsc	status,2,c
  3559  00139E  D007               	goto	l2619
  3560                           
  3561                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3562  0013A0  0100               	movlb	0	; () banked
  3563  0013A2  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3564  0013A4  0E00               	movlw	0
  3565  0013A6  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3566  0013A8  0100               	movlb	0	; () banked
  3567  0013AA  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3568  0013AC  0012               	return	
  3569  0013AE                     l2619:
  3570                           
  3571                           ;messages.c: 278: }
  3572                           ;messages.c: 279: Delay1KTCYx(10);
  3573  0013AE  0E0A               	movlw	10
  3574  0013B0  EC93  F00D         	call	_Delay1KTCYx
  3575  0013B4  D7D0               	goto	l2607
  3576  0013B6                     __end_of_block_on_To_msgqueues:
  3577                           	opt stack 0
  3578                           tblptru	equ	0xFF8
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           postinc0	equ	0xFEE
  3583                           wreg	equ	0xFE8
  3584                           indf1	equ	0xFE7
  3585                           fsr1h	equ	0xFE2
  3586                           fsr1l	equ	0xFE1
  3587                           indf2	equ	0xFDF
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _in_main *****************
  3595 ;; Defined at:
  3596 ;;		line 40 in file "../src/interrupts.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2   27[BANK0 ] int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3610 ;;      Params:         0       2       0       0       0
  3611 ;;      Locals:         0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0
  3613 ;;      Totals:         0       2       0       0       0
  3614 ;;Total ram usage:        2 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:   12
  3617 ;; This function calls:
  3618 ;;		_in_high_int
  3619 ;;		_in_low_int
  3620 ;; This function is called by:
  3621 ;;		_block_on_To_msgqueues
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text18
  3626  0016D0                     __ptext18:
  3627                           	opt stack 0
  3628  0016D0                     _in_main:
  3629                           	opt stack 17
  3630                           
  3631                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3632                           
  3633                           ;incstack = 0
  3634  0016D0  EC45  F00B         	call	_in_low_int	;wreg free
  3635  0016D4  0100               	movlb	0	; () banked
  3636  0016D6  0100               	movlb	0	; () banked
  3637  0016D8  51D0               	movf	(?_in_low_int+1)& (0+255),w,b
  3638  0016DA  0100               	movlb	0	; () banked
  3639  0016DC  11CF               	iorwf	?_in_low_int& (0+255),w,b
  3640  0016DE  A4D8               	btfss	status,2,c
  3641  0016E0  D011               	goto	l2175
  3642                           
  3643                           ; BSR set to: 0
  3644  0016E2  ECB0  F00D         	call	_in_high_int	;wreg free
  3645  0016E6  0100               	movlb	0	; () banked
  3646  0016E8  0100               	movlb	0	; () banked
  3647  0016EA  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3648  0016EC  0100               	movlb	0	; () banked
  3649  0016EE  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3650  0016F0  A4D8               	btfss	status,2,c
  3651  0016F2  D008               	goto	l2175
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;interrupts.c: 42: return (1);
  3655  0016F4  0E00               	movlw	0
  3656  0016F6  0100               	movlb	0	; () banked
  3657  0016F8  0100               	movlb	0	; () banked
  3658  0016FA  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3659  0016FC  0E01               	movlw	1
  3660  0016FE  0100               	movlb	0	; () banked
  3661  001700  6FD1               	movwf	?_in_main& (0+255),b
  3662  001702  0012               	return	
  3663  001704                     l2175:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;interrupts.c: 44: return (0);
  3667  001704  0E00               	movlw	0
  3668  001706  0100               	movlb	0	; () banked
  3669  001708  0100               	movlb	0	; () banked
  3670  00170A  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3671  00170C  0E00               	movlw	0
  3672  00170E  0100               	movlb	0	; () banked
  3673  001710  6FD1               	movwf	?_in_main& (0+255),b
  3674  001712  0012               	return	
  3675  001714                     __end_of_in_main:
  3676                           	opt stack 0
  3677                           tblptru	equ	0xFF8
  3678                           prodh	equ	0xFF4
  3679                           prodl	equ	0xFF3
  3680                           intcon	equ	0xFF2
  3681                           postinc0	equ	0xFEE
  3682                           wreg	equ	0xFE8
  3683                           indf1	equ	0xFE7
  3684                           fsr1h	equ	0xFE2
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           postdec2	equ	0xFDD
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _in_low_int *****************
  3694 ;; Defined at:
  3695 ;;		line 30 in file "../src/interrupts.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2   25[BANK0 ] int 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3709 ;;      Params:         0       2       0       0       0
  3710 ;;      Locals:         0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0
  3712 ;;      Totals:         0       2       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:   11
  3716 ;; This function calls:
  3717 ;;		_in_high_int
  3718 ;; This function is called by:
  3719 ;;		_in_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text19
  3724  00168A                     __ptext19:
  3725                           	opt stack 0
  3726  00168A                     _in_low_int:
  3727                           	opt stack 17
  3728                           
  3729                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;incstack = 0
  3733  00168A  ACF2               	btfss	intcon,6,c	;volatile
  3734  00168C  D008               	goto	l2153
  3735                           
  3736                           ;interrupts.c: 32: return (0);
  3737  00168E  0E00               	movlw	0
  3738  001690  0100               	movlb	0	; () banked
  3739  001692  0100               	movlb	0	; () banked
  3740  001694  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3741  001696  0E00               	movlw	0
  3742  001698  0100               	movlb	0	; () banked
  3743  00169A  6FCF               	movwf	?_in_low_int& (0+255),b
  3744  00169C  0012               	return	
  3745  00169E                     l2153:
  3746  00169E  ECB0  F00D         	call	_in_high_int	;wreg free
  3747  0016A2  0100               	movlb	0	; () banked
  3748  0016A4  0100               	movlb	0	; () banked
  3749  0016A6  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3750  0016A8  0100               	movlb	0	; () banked
  3751  0016AA  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3752  0016AC  B4D8               	btfsc	status,2,c
  3753  0016AE  D008               	goto	l2161
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;interrupts.c: 34: return (0);
  3757  0016B0  0E00               	movlw	0
  3758  0016B2  0100               	movlb	0	; () banked
  3759  0016B4  0100               	movlb	0	; () banked
  3760  0016B6  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3761  0016B8  0E00               	movlw	0
  3762  0016BA  0100               	movlb	0	; () banked
  3763  0016BC  6FCF               	movwf	?_in_low_int& (0+255),b
  3764  0016BE  0012               	return	
  3765  0016C0                     l2161:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;interrupts.c: 36: return (1);
  3769  0016C0  0E00               	movlw	0
  3770  0016C2  0100               	movlb	0	; () banked
  3771  0016C4  0100               	movlb	0	; () banked
  3772  0016C6  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3773  0016C8  0E01               	movlw	1
  3774  0016CA  0100               	movlb	0	; () banked
  3775  0016CC  6FCF               	movwf	?_in_low_int& (0+255),b
  3776  0016CE  0012               	return	
  3777  0016D0                     __end_of_in_low_int:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           indf1	equ	0xFE7
  3786                           fsr1h	equ	0xFE2
  3787                           fsr1l	equ	0xFE1
  3788                           indf2	equ	0xFDF
  3789                           postinc2	equ	0xFDE
  3790                           postdec2	equ	0xFDD
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function _in_high_int *****************
  3796 ;; Defined at:
  3797 ;;		line 22 in file "../src/interrupts.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2   23[BANK0 ] int 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3811 ;;      Params:         0       2       0       0       0
  3812 ;;      Locals:         0       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0
  3814 ;;      Totals:         0       2       0       0       0
  3815 ;;Total ram usage:        2 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:   10
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_in_low_int
  3822 ;;		_in_main
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text20
  3827  001B60                     __ptext20:
  3828                           	opt stack 0
  3829  001B60                     _in_high_int:
  3830                           	opt stack 17
  3831                           
  3832                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;incstack = 0
  3836  001B60  0E00               	movlw	0
  3837  001B62  AEF2               	btfss	intcon,7,c	;volatile
  3838  001B64  0E01               	movlw	1
  3839  001B66  0100               	movlb	0	; () banked
  3840  001B68  0100               	movlb	0	; () banked
  3841  001B6A  6FCD               	movwf	?_in_high_int& (0+255),b
  3842  001B6C  0100               	movlb	0	; () banked
  3843  001B6E  6BCE               	clrf	(?_in_high_int+1)& (0+255),b
  3844  001B70  0012               	return	
  3845  001B72                     __end_of_in_high_int:
  3846                           	opt stack 0
  3847                           tblptru	equ	0xFF8
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           postinc0	equ	0xFEE
  3852                           wreg	equ	0xFE8
  3853                           indf1	equ	0xFE7
  3854                           fsr1h	equ	0xFE2
  3855                           fsr1l	equ	0xFE1
  3856                           indf2	equ	0xFDF
  3857                           postinc2	equ	0xFDE
  3858                           postdec2	equ	0xFDD
  3859                           fsr2h	equ	0xFDA
  3860                           fsr2l	equ	0xFD9
  3861                           status	equ	0xFD8
  3862                           
  3863 ;; *************** function _check_msg *****************
  3864 ;; Defined at:
  3865 ;;		line 222 in file "../src/messages.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3868 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      unsigned char 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3880 ;;      Params:         0       2       0       0       0
  3881 ;;      Locals:         0       0       0       0       0
  3882 ;;      Temps:          0       1       0       0       0
  3883 ;;      Totals:         0       3       0       0       0
  3884 ;;Total ram usage:        3 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:   10
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_block_on_To_msgqueues
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text21
  3895  001944                     __ptext21:
  3896                           	opt stack 0
  3897  001944                     _check_msg:
  3898                           	opt stack 19
  3899                           
  3900                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;incstack = 0
  3904  001944  0100               	movlb	0	; () banked
  3905  001946  EE20 F035          	lfsr	2,53
  3906  00194A  0100               	movlb	0	; () banked
  3907  00194C  51CD               	movf	check_msg@qptr& (0+255),w,b
  3908  00194E  26D9               	addwf	fsr2l,f,c
  3909  001950  0100               	movlb	0	; () banked
  3910  001952  51CE               	movf	(check_msg@qptr+1)& (0+255),w,b
  3911  001954  22DA               	addwfc	fsr2h,f,c
  3912  001956  50DF               	movf	indf2,w,c
  3913  001958  0100               	movlb	0	; () banked
  3914  00195A  6FCF               	movwf	??_check_msg& (0+255),b
  3915  00195C  0100               	movlb	0	; () banked
  3916  00195E  51CF               	movf	??_check_msg& (0+255),w,b
  3917  001960  0D0D               	mullw	13
  3918  001962  50F3               	movf	prodl,w,c
  3919  001964  0100               	movlb	0	; () banked
  3920  001966  0100               	movlb	0	; () banked
  3921  001968  25CD               	addwf	check_msg@qptr& (0+255),w,b
  3922  00196A  6ED9               	movwf	fsr2l,c
  3923  00196C  50F4               	movf	prodh,w,c
  3924  00196E  0100               	movlb	0	; () banked
  3925  001970  0100               	movlb	0	; () banked
  3926  001972  21CE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3927  001974  6EDA               	movwf	fsr2h,c
  3928  001976  50DF               	movf	indf2,w,c
  3929  001978  0012               	return	
  3930  00197A                     __end_of_check_msg:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           indf1	equ	0xFE7
  3939                           fsr1h	equ	0xFE2
  3940                           fsr1l	equ	0xFE1
  3941                           indf2	equ	0xFDF
  3942                           postinc2	equ	0xFDE
  3943                           postdec2	equ	0xFDD
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _Delay1KTCYx *****************
  3949 ;; Defined at:
  3950 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  unit            1    wreg     unsigned char 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  unit            1   23[BANK0 ] unsigned char 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		wreg
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3964 ;;      Params:         0       0       0       0       0
  3965 ;;      Locals:         0       1       0       0       0
  3966 ;;      Temps:          0       0       0       0       0
  3967 ;;      Totals:         0       1       0       0       0
  3968 ;;Total ram usage:        1 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:   10
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_block_on_To_msgqueues
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text22
  3979  001B26                     __ptext22:
  3980                           	opt stack 0
  3981  001B26                     _Delay1KTCYx:
  3982                           	opt stack 19
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;incstack = 0
  3986                           ;Delay1KTCYx@unit stored from wreg
  3987  001B26  CFE8 F0CD          	movff	wreg,Delay1KTCYx@unit
  3988  001B2A                     l727:
  3989  001B2A  0EFA               	movlw	250
  3990  001B2C                     u2147:
  3991  001B2C  F000               	nop	
  3992  001B2E  2EE8               	decfsz	wreg,f,c
  3993  001B30  D7FD               	goto	u2147
  3994  001B32  0100               	movlb	0	; () banked
  3995  001B34  0100               	movlb	0	; () banked
  3996  001B36  2FCD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3997  001B38  D7F8               	goto	l727
  3998  001B3A  0012               	return	
  3999  001B3C                     __end_of_Delay1KTCYx:
  4000                           	opt stack 0
  4001                           tblptru	equ	0xFF8
  4002                           prodh	equ	0xFF4
  4003                           prodl	equ	0xFF3
  4004                           intcon	equ	0xFF2
  4005                           postinc0	equ	0xFEE
  4006                           wreg	equ	0xFE8
  4007                           indf1	equ	0xFE7
  4008                           fsr1h	equ	0xFE2
  4009                           fsr1l	equ	0xFE1
  4010                           indf2	equ	0xFDF
  4011                           postinc2	equ	0xFDE
  4012                           postdec2	equ	0xFDD
  4013                           fsr2h	equ	0xFDA
  4014                           fsr2l	equ	0xFD9
  4015                           status	equ	0xFD8
  4016                           
  4017 ;; *************** function _ToMainLow_recvmsg *****************
  4018 ;; Defined at:
  4019 ;;		line 112 in file "../src/messages.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  maxlength       1    wreg     unsigned char 
  4022 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4023 ;;		 -> main@msgtype(1), 
  4024 ;;  data            2    2[BANK1 ] PTR void 
  4025 ;;		 -> main@msgbuffer(11), 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  maxlength       1   47[BANK0 ] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      char 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4037 ;;      Params:         0       0       4       0       0
  4038 ;;      Locals:         0       1       0       0       0
  4039 ;;      Temps:          0       0       0       0       0
  4040 ;;      Totals:         0       1       4       0       0
  4041 ;;Total ram usage:        5 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:   12
  4044 ;; This function calls:
  4045 ;;		_recv_msg
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text23
  4052  001714                     __ptext23:
  4053                           	opt stack 0
  4054  001714                     _ToMainLow_recvmsg:
  4055                           	opt stack 18
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;incstack = 0
  4059                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4060  001714  CFE8 F0E5          	movff	wreg,ToMainLow_recvmsg@maxlength
  4061                           
  4062                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4063  001718  0100               	movlb	0	; () banked
  4064  00171A  0E00               	movlw	high _ToMainLow_MQ
  4065  00171C  0100               	movlb	0	; () banked
  4066  00171E  0100               	movlb	0	; () banked
  4067  001720  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4068  001722  0100               	movlb	0	; () banked
  4069  001724  0E80               	movlw	low _ToMainLow_MQ
  4070  001726  0100               	movlb	0	; () banked
  4071  001728  0100               	movlb	0	; () banked
  4072  00172A  6FD7               	movwf	recv_msg@qptr& (0+255),b
  4073  00172C  C0E5  F0D9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4074  001730  0101               	movlb	1	; () banked
  4075  001732  0100               	movlb	0	; () banked
  4076  001734  C1A3  F0DB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4077  001738  0101               	movlb	1	; () banked
  4078  00173A  0100               	movlb	0	; () banked
  4079  00173C  C1A2  F0DA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4080  001740  0101               	movlb	1	; () banked
  4081  001742  0100               	movlb	0	; () banked
  4082  001744  C1A5  F0DD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4083  001748  0101               	movlb	1	; () banked
  4084  00174A  0100               	movlb	0	; () banked
  4085  00174C  C1A4  F0DC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4086  001750  EC64  F005         	call	_recv_msg	;wreg free
  4087  001754  0012               	return	
  4088  001756                     __end_of_ToMainLow_recvmsg:
  4089                           	opt stack 0
  4090                           tblptru	equ	0xFF8
  4091                           prodh	equ	0xFF4
  4092                           prodl	equ	0xFF3
  4093                           intcon	equ	0xFF2
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           indf1	equ	0xFE7
  4097                           fsr1h	equ	0xFE2
  4098                           fsr1l	equ	0xFE1
  4099                           indf2	equ	0xFDF
  4100                           postinc2	equ	0xFDE
  4101                           postdec2	equ	0xFDD
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8
  4105                           
  4106 ;; *************** function _ToMainHigh_recvmsg *****************
  4107 ;; Defined at:
  4108 ;;		line 135 in file "../src/messages.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  maxlength       1    wreg     unsigned char 
  4111 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4112 ;;		 -> main@msgtype(1), 
  4113 ;;  data            2    2[BANK1 ] PTR void 
  4114 ;;		 -> main@msgbuffer(11), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  maxlength       1   47[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      char 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4126 ;;      Params:         0       0       4       0       0
  4127 ;;      Locals:         0       1       0       0       0
  4128 ;;      Temps:          0       0       0       0       0
  4129 ;;      Totals:         0       1       4       0       0
  4130 ;;Total ram usage:        5 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:   12
  4133 ;; This function calls:
  4134 ;;		_recv_msg
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text24
  4141  001756                     __ptext24:
  4142                           	opt stack 0
  4143  001756                     _ToMainHigh_recvmsg:
  4144                           	opt stack 18
  4145                           
  4146                           ;incstack = 0
  4147                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4148  001756  CFE8 F0E5          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4149                           
  4150                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4151  00175A  0101               	movlb	1	; () banked
  4152  00175C  0E01               	movlw	high _ToMainHigh_MQ
  4153  00175E  0100               	movlb	0	; () banked
  4154  001760  0100               	movlb	0	; () banked
  4155  001762  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4156  001764  0101               	movlb	1	; () banked
  4157  001766  0E6C               	movlw	low _ToMainHigh_MQ
  4158  001768  0100               	movlb	0	; () banked
  4159  00176A  0100               	movlb	0	; () banked
  4160  00176C  6FD7               	movwf	recv_msg@qptr& (0+255),b
  4161  00176E  C0E5  F0D9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4162  001772  0101               	movlb	1	; () banked
  4163  001774  0100               	movlb	0	; () banked
  4164  001776  C1A3  F0DB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4165  00177A  0101               	movlb	1	; () banked
  4166  00177C  0100               	movlb	0	; () banked
  4167  00177E  C1A2  F0DA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4168  001782  0101               	movlb	1	; () banked
  4169  001784  0100               	movlb	0	; () banked
  4170  001786  C1A5  F0DD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4171  00178A  0101               	movlb	1	; () banked
  4172  00178C  0100               	movlb	0	; () banked
  4173  00178E  C1A4  F0DC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4174  001792  EC64  F005         	call	_recv_msg	;wreg free
  4175  001796  0012               	return	
  4176  001798                     __end_of_ToMainHigh_recvmsg:
  4177                           	opt stack 0
  4178                           tblptru	equ	0xFF8
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           indf1	equ	0xFE7
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           postinc2	equ	0xFDE
  4189                           postdec2	equ	0xFDD
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _recv_msg *****************
  4195 ;; Defined at:
  4196 ;;		line 63 in file "../src/messages.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  4199 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4200 ;;  maxlength       1   35[BANK0 ] unsigned char 
  4201 ;;  msgtype         2   36[BANK0 ] PTR unsigned char 
  4202 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4203 ;;  data            2   38[BANK0 ] PTR void 
  4204 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  4207 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4208 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4209 ;;  tlength         2   43[BANK0 ] unsigned int 
  4210 ;;  slot            1   42[BANK0 ] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      char 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4220 ;;      Params:         0       7       0       0       0
  4221 ;;      Locals:         0       5       0       0       0
  4222 ;;      Temps:          0       2       0       0       0
  4223 ;;      Totals:         0      14       0       0       0
  4224 ;;Total ram usage:       14 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:   11
  4227 ;; This function calls:
  4228 ;;		_memcpy
  4229 ;; This function is called by:
  4230 ;;		_ToMainLow_recvmsg
  4231 ;;		_ToMainHigh_recvmsg
  4232 ;;		_FromMainLow_recvmsg
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text25
  4237  000AC8                     __ptext25:
  4238                           	opt stack 0
  4239  000AC8                     _recv_msg:
  4240                           	opt stack 18
  4241                           
  4242                           ;messages.c: 64: unsigned char slot;
  4243                           ;messages.c: 68: msg *qmsg;
  4244                           ;messages.c: 69: size_t tlength;
  4245                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4246                           
  4247                           ;incstack = 0
  4248  000AC8  0100               	movlb	0	; () banked
  4249  000ACA  EE20 F035          	lfsr	2,53
  4250  000ACE  0100               	movlb	0	; () banked
  4251  000AD0  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4252  000AD2  26D9               	addwf	fsr2l,f,c
  4253  000AD4  0100               	movlb	0	; () banked
  4254  000AD6  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4255  000AD8  22DA               	addwfc	fsr2h,f,c
  4256  000ADA  50DF               	movf	indf2,w,c
  4257  000ADC  0100               	movlb	0	; () banked
  4258  000ADE  0100               	movlb	0	; () banked
  4259  000AE0  6FE0               	movwf	recv_msg@slot& (0+255),b
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4263  000AE2  0100               	movlb	0	; () banked
  4264  000AE4  0100               	movlb	0	; () banked
  4265  000AE6  51E0               	movf	recv_msg@slot& (0+255),w,b
  4266  000AE8  0D0D               	mullw	13
  4267  000AEA  50F3               	movf	prodl,w,c
  4268  000AEC  0100               	movlb	0	; () banked
  4269  000AEE  0100               	movlb	0	; () banked
  4270  000AF0  25D7               	addwf	recv_msg@qptr& (0+255),w,b
  4271  000AF2  0100               	movlb	0	; () banked
  4272  000AF4  0100               	movlb	0	; () banked
  4273  000AF6  6FE3               	movwf	recv_msg@qmsg& (0+255),b
  4274  000AF8  50F4               	movf	prodh,w,c
  4275  000AFA  0100               	movlb	0	; () banked
  4276  000AFC  0100               	movlb	0	; () banked
  4277  000AFE  21D8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4278  000B00  0100               	movlb	0	; () banked
  4279  000B02  6FE4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;messages.c: 74: if (qmsg->full == 1) {
  4283  000B04  0E01               	movlw	1
  4284  000B06  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4285  000B0A  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4286  000B0E  62DF               	cpfseq	indf2,c
  4287  000B10  D074               	goto	l3191
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4291  000B12  0100               	movlb	0	; () banked
  4292  000B14  EE20 F001          	lfsr	2,1
  4293  000B18  0100               	movlb	0	; () banked
  4294  000B1A  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4295  000B1C  26D9               	addwf	fsr2l,f,c
  4296  000B1E  0100               	movlb	0	; () banked
  4297  000B20  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4298  000B22  22DA               	addwfc	fsr2h,f,c
  4299  000B24  50DF               	movf	indf2,w,c
  4300  000B26  0100               	movlb	0	; () banked
  4301  000B28  0100               	movlb	0	; () banked
  4302  000B2A  5DD9               	subwf	recv_msg@maxlength& (0+255),w,b
  4303  000B2C  B0D8               	btfsc	status,0,c
  4304  000B2E  D002               	goto	l3175
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;messages.c: 77: return (-3);
  4308  000B30  0EFD               	movlw	253
  4309  000B32  0012               	return	
  4310  000B34                     l3175:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;messages.c: 78: }
  4314                           ;messages.c: 80: tlength = qmsg->length;
  4315  000B34  0100               	movlb	0	; () banked
  4316  000B36  EE20 F001          	lfsr	2,1
  4317  000B3A  0100               	movlb	0	; () banked
  4318  000B3C  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4319  000B3E  26D9               	addwf	fsr2l,f,c
  4320  000B40  0100               	movlb	0	; () banked
  4321  000B42  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4322  000B44  22DA               	addwfc	fsr2h,f,c
  4323  000B46  50DF               	movf	indf2,w,c
  4324  000B48  0100               	movlb	0	; () banked
  4325  000B4A  6FDE               	movwf	??_recv_msg& (0+255),b
  4326  000B4C  0100               	movlb	0	; () banked
  4327  000B4E  51DE               	movf	??_recv_msg& (0+255),w,b
  4328  000B50  0100               	movlb	0	; () banked
  4329  000B52  0100               	movlb	0	; () banked
  4330  000B54  6FE1               	movwf	recv_msg@tlength& (0+255),b
  4331  000B56  0100               	movlb	0	; () banked
  4332  000B58  6BE2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4336  000B5A  0100               	movlb	0	; () banked
  4337  000B5C  0100               	movlb	0	; () banked
  4338  000B5E  C0DD  F0CE         	movff	recv_msg@data+1,memcpy@d1+1
  4339  000B62  0100               	movlb	0	; () banked
  4340  000B64  0100               	movlb	0	; () banked
  4341  000B66  C0DC  F0CD         	movff	recv_msg@data,memcpy@d1
  4342  000B6A  0E03               	movlw	3
  4343  000B6C  0100               	movlb	0	; () banked
  4344  000B6E  0100               	movlb	0	; () banked
  4345  000B70  25E3               	addwf	recv_msg@qmsg& (0+255),w,b
  4346  000B72  0100               	movlb	0	; () banked
  4347  000B74  6FDE               	movwf	??_recv_msg& (0+255),b
  4348  000B76  0E00               	movlw	0
  4349  000B78  0100               	movlb	0	; () banked
  4350  000B7A  0100               	movlb	0	; () banked
  4351  000B7C  21E4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4352  000B7E  0100               	movlb	0	; () banked
  4353  000B80  6FDF               	movwf	(??_recv_msg+1)& (0+255),b
  4354  000B82  C0DE  F0CF         	movff	??_recv_msg,memcpy@s1
  4355  000B86  C0DF  F0D0         	movff	??_recv_msg+1,memcpy@s1+1
  4356  000B8A  C0E1  F0D1         	movff	recv_msg@tlength,memcpy@n
  4357  000B8E  C0E2  F0D2         	movff	recv_msg@tlength+1,memcpy@n+1
  4358  000B92  ECEF  F00A         	call	_memcpy	;wreg free
  4359                           
  4360                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4361  000B96  0100               	movlb	0	; () banked
  4362  000B98  EE20 F035          	lfsr	2,53
  4363  000B9C  0100               	movlb	0	; () banked
  4364  000B9E  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4365  000BA0  26D9               	addwf	fsr2l,f,c
  4366  000BA2  0100               	movlb	0	; () banked
  4367  000BA4  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4368  000BA6  22DA               	addwfc	fsr2h,f,c
  4369  000BA8  0100               	movlb	0	; () banked
  4370  000BAA  EE10 F035          	lfsr	1,53
  4371  000BAE  0100               	movlb	0	; () banked
  4372  000BB0  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4373  000BB2  26E1               	addwf	fsr1l,f,c
  4374  000BB4  0100               	movlb	0	; () banked
  4375  000BB6  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4376  000BB8  22E2               	addwfc	fsr1h,f,c
  4377  000BBA  50E7               	movf	indf1,w,c
  4378  000BBC  0100               	movlb	0	; () banked
  4379  000BBE  6FDE               	movwf	??_recv_msg& (0+255),b
  4380  000BC0  0100               	movlb	0	; () banked
  4381  000BC2  29DE               	incf	??_recv_msg& (0+255),w,b
  4382  000BC4  0B03               	andlw	3
  4383  000BC6  6EDF               	movwf	indf2,c
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4387  000BC8  0100               	movlb	0	; () banked
  4388  000BCA  EE20 F002          	lfsr	2,2
  4389  000BCE  0100               	movlb	0	; () banked
  4390  000BD0  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4391  000BD2  26D9               	addwf	fsr2l,f,c
  4392  000BD4  0100               	movlb	0	; () banked
  4393  000BD6  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4394  000BD8  22DA               	addwfc	fsr2h,f,c
  4395  000BDA  C0DA  FFE1         	movff	recv_msg@msgtype,fsr1l
  4396  000BDE  C0DB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4397  000BE2  CFDF FFE7          	movff	indf2,indf1
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;messages.c: 91: qmsg->full = 0;
  4401  000BE6  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4402  000BEA  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4403  000BEE  0E00               	movlw	0
  4404  000BF0  6EDF               	movwf	indf2,c
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;messages.c: 92: return (tlength);
  4408  000BF2  0100               	movlb	0	; () banked
  4409  000BF4  0100               	movlb	0	; () banked
  4410  000BF6  51E1               	movf	recv_msg@tlength& (0+255),w,b
  4411  000BF8  0012               	return	
  4412  000BFA                     l3191:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;messages.c: 94: return (-4);
  4416  000BFA  0EFC               	movlw	252
  4417  000BFC  0012               	return	
  4418  000BFE                     __end_of_recv_msg:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           prodh	equ	0xFF4
  4422                           prodl	equ	0xFF3
  4423                           intcon	equ	0xFF2
  4424                           postinc0	equ	0xFEE
  4425                           wreg	equ	0xFE8
  4426                           indf1	equ	0xFE7
  4427                           fsr1h	equ	0xFE2
  4428                           fsr1l	equ	0xFE1
  4429                           indf2	equ	0xFDF
  4430                           postinc2	equ	0xFDE
  4431                           postdec2	equ	0xFDD
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _memcpy *****************
  4437 ;; Defined at:
  4438 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  d1              2   23[BANK0 ] PTR void 
  4441 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4442 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4443 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4444 ;;  s1              2   25[BANK0 ] PTR const void 
  4445 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4446 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4447 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4448 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4449 ;;		 -> main@ic(28), main@uc(5), 
  4450 ;;  n               2   27[BANK0 ] unsigned int 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  s               2   31[BANK0 ] PTR const unsigned char 
  4453 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4454 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4455 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4456 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4457 ;;		 -> main@ic(28), main@uc(5), 
  4458 ;;  d               2   29[BANK0 ] PTR unsigned char 
  4459 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4460 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4461 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  2   23[BANK0 ] PTR void 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4471 ;;      Params:         0       6       0       0       0
  4472 ;;      Locals:         0       4       0       0       0
  4473 ;;      Temps:          0       0       0       0       0
  4474 ;;      Totals:         0      10       0       0       0
  4475 ;;Total ram usage:       10 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:   10
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_send_msg
  4482 ;;		_recv_msg
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text26
  4487  0015DE                     __ptext26:
  4488                           	opt stack 0
  4489  0015DE                     _memcpy:
  4490                           	opt stack 17
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;incstack = 0
  4494  0015DE  0100               	movlb	0	; () banked
  4495  0015E0  0100               	movlb	0	; () banked
  4496  0015E2  C0D0  F0D6         	movff	memcpy@s1+1,memcpy@s+1
  4497  0015E6  0100               	movlb	0	; () banked
  4498  0015E8  0100               	movlb	0	; () banked
  4499  0015EA  C0CF  F0D5         	movff	memcpy@s1,memcpy@s
  4500  0015EE  0100               	movlb	0	; () banked
  4501  0015F0  0100               	movlb	0	; () banked
  4502  0015F2  C0CE  F0D4         	movff	memcpy@d1+1,memcpy@d+1
  4503  0015F6  0100               	movlb	0	; () banked
  4504  0015F8  0100               	movlb	0	; () banked
  4505  0015FA  C0CD  F0D3         	movff	memcpy@d1,memcpy@d
  4506  0015FE  D012               	goto	l3161
  4507  001600                     l3155:
  4508                           
  4509                           ; BSR set to: 0
  4510  001600  C0D5  FFD9         	movff	memcpy@s,fsr2l
  4511  001604  C0D6  FFDA         	movff	memcpy@s+1,fsr2h
  4512  001608  C0D3  FFE1         	movff	memcpy@d,fsr1l
  4513  00160C  C0D4  FFE2         	movff	memcpy@d+1,fsr1h
  4514  001610  CFDF FFE7          	movff	indf2,indf1
  4515                           
  4516                           ; BSR set to: 0
  4517  001614  0100               	movlb	0	; () banked
  4518  001616  0100               	movlb	0	; () banked
  4519  001618  4BD5               	infsnz	memcpy@s& (0+255),f,b
  4520  00161A  2BD6               	incf	(memcpy@s+1)& (0+255),f,b
  4521                           
  4522                           ; BSR set to: 0
  4523  00161C  0100               	movlb	0	; () banked
  4524  00161E  0100               	movlb	0	; () banked
  4525  001620  4BD3               	infsnz	memcpy@d& (0+255),f,b
  4526  001622  2BD4               	incf	(memcpy@d+1)& (0+255),f,b
  4527  001624                     l3161:
  4528                           
  4529                           ; BSR set to: 0
  4530  001624  0100               	movlb	0	; () banked
  4531  001626  0100               	movlb	0	; () banked
  4532  001628  07D1               	decf	memcpy@n& (0+255),f,b
  4533  00162A  A0D8               	btfss	status,0,c
  4534  00162C  07D2               	decf	(memcpy@n+1)& (0+255),f,b
  4535  00162E  0100               	movlb	0	; () banked
  4536  001630  29D1               	incf	memcpy@n& (0+255),w,b
  4537  001632  B4D8               	btfsc	status,2,c
  4538  001634  29D2               	incf	(memcpy@n+1)& (0+255),w,b
  4539  001636  B4D8               	btfsc	status,2,c
  4540                           
  4541                           ; BSR set to: 0
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;	Return value of _memcpy is never used
  4545  001638  0012               	return	
  4546  00163A  D7E2               	goto	l3155
  4547  00163C                     __end_of_memcpy:
  4548                           	opt stack 0
  4549                           tblptru	equ	0xFF8
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           postinc0	equ	0xFEE
  4554                           wreg	equ	0xFE8
  4555                           indf1	equ	0xFE7
  4556                           fsr1h	equ	0xFE2
  4557                           fsr1l	equ	0xFE1
  4558                           indf2	equ	0xFDF
  4559                           postinc2	equ	0xFDE
  4560                           postdec2	equ	0xFDD
  4561                           fsr2h	equ	0xFDA
  4562                           fsr2l	equ	0xFD9
  4563                           status	equ	0xFD8
  4564                           
  4565 ;; *************** function _OpenUSART *****************
  4566 ;; Defined at:
  4567 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  config          1    wreg     unsigned char 
  4570 ;;  spbrg           2   23[BANK0 ] unsigned int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  config          1   28[BANK0 ] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;		None               void
  4575 ;; Registers used:
  4576 ;;		wreg, status,2
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4582 ;;      Params:         0       2       0       0       0
  4583 ;;      Locals:         0       1       0       0       0
  4584 ;;      Temps:          0       3       0       0       0
  4585 ;;      Totals:         0       6       0       0       0
  4586 ;;Total ram usage:        6 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:   10
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_main
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text27
  4597  00119A                     __ptext27:
  4598                           	opt stack 0
  4599  00119A                     _OpenUSART:
  4600                           	opt stack 20
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;incstack = 0
  4604                           ;OpenUSART@config stored from wreg
  4605  00119A  CFE8 F0D2          	movff	wreg,OpenUSART@config
  4606  00119E  0E00               	movlw	0
  4607  0011A0  6EAC               	movwf	4012,c	;volatile
  4608  0011A2  0E00               	movlw	0
  4609  0011A4  6EAB               	movwf	4011,c	;volatile
  4610  0011A6  0100               	movlb	0	; () banked
  4611  0011A8  0100               	movlb	0	; () banked
  4612  0011AA  B1D2               	btfsc	OpenUSART@config& (0+255),0,b
  4613                           
  4614                           ; BSR set to: 0
  4615  0011AC  88AC               	bsf	4012,4,c	;volatile
  4616                           
  4617                           ; BSR set to: 0
  4618                           
  4619                           ; BSR set to: 0
  4620  0011AE  0100               	movlb	0	; () banked
  4621  0011B0  0100               	movlb	0	; () banked
  4622  0011B2  A3D2               	btfss	OpenUSART@config& (0+255),1,b
  4623  0011B4  D002               	goto	l2561
  4624                           
  4625                           ; BSR set to: 0
  4626  0011B6  8CAC               	bsf	4012,6,c	;volatile
  4627  0011B8  8CAB               	bsf	4011,6,c	;volatile
  4628  0011BA                     l2561:
  4629                           
  4630                           ; BSR set to: 0
  4631  0011BA  0100               	movlb	0	; () banked
  4632  0011BC  0100               	movlb	0	; () banked
  4633  0011BE  B5D2               	btfsc	OpenUSART@config& (0+255),2,b
  4634                           
  4635                           ; BSR set to: 0
  4636  0011C0  8EAC               	bsf	4012,7,c	;volatile
  4637                           
  4638                           ; BSR set to: 0
  4639                           
  4640                           ; BSR set to: 0
  4641  0011C2  0100               	movlb	0	; () banked
  4642  0011C4  0100               	movlb	0	; () banked
  4643  0011C6  A7D2               	btfss	OpenUSART@config& (0+255),3,b
  4644  0011C8  D002               	goto	l494
  4645                           
  4646                           ; BSR set to: 0
  4647  0011CA  88AB               	bsf	4011,4,c	;volatile
  4648  0011CC  D001               	goto	l2569
  4649  0011CE                     l494:
  4650                           
  4651                           ; BSR set to: 0
  4652  0011CE  8AAB               	bsf	4011,5,c	;volatile
  4653  0011D0                     l2569:
  4654                           
  4655                           ; BSR set to: 0
  4656  0011D0  0100               	movlb	0	; () banked
  4657  0011D2  0100               	movlb	0	; () banked
  4658  0011D4  B9D2               	btfsc	OpenUSART@config& (0+255),4,b
  4659                           
  4660                           ; BSR set to: 0
  4661  0011D6  84AC               	bsf	4012,2,c	;volatile
  4662                           
  4663                           ; BSR set to: 0
  4664  0011D8  989E               	bcf	3998,4,c	;volatile
  4665                           
  4666                           ; BSR set to: 0
  4667  0011DA  0100               	movlb	0	; () banked
  4668  0011DC  0100               	movlb	0	; () banked
  4669  0011DE  BBD2               	btfsc	OpenUSART@config& (0+255),5,b
  4670                           
  4671                           ; BSR set to: 0
  4672  0011E0  86AB               	bsf	4011,3,c	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           
  4676                           ; BSR set to: 0
  4677  0011E2  0100               	movlb	0	; () banked
  4678  0011E4  0100               	movlb	0	; () banked
  4679  0011E6  ADD2               	btfss	OpenUSART@config& (0+255),6,b
  4680  0011E8  D002               	goto	l498
  4681                           
  4682                           ; BSR set to: 0
  4683  0011EA  8A9D               	bsf	3997,5,c	;volatile
  4684  0011EC  D001               	goto	l499
  4685  0011EE                     l498:
  4686                           
  4687                           ; BSR set to: 0
  4688  0011EE  9A9D               	bcf	3997,5,c	;volatile
  4689  0011F0                     l499:
  4690                           
  4691                           ; BSR set to: 0
  4692  0011F0  9A9E               	bcf	3998,5,c	;volatile
  4693                           
  4694                           ; BSR set to: 0
  4695  0011F2  0100               	movlb	0	; () banked
  4696  0011F4  0100               	movlb	0	; () banked
  4697  0011F6  AFD2               	btfss	OpenUSART@config& (0+255),7,b
  4698  0011F8  D002               	goto	l500
  4699                           
  4700                           ; BSR set to: 0
  4701  0011FA  889D               	bsf	3997,4,c	;volatile
  4702  0011FC  D001               	goto	l501
  4703  0011FE                     l500:
  4704                           
  4705                           ; BSR set to: 0
  4706  0011FE  989D               	bcf	3997,4,c	;volatile
  4707  001200                     l501:
  4708                           
  4709                           ; BSR set to: 0
  4710  001200  C0CD  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4711                           
  4712                           ; BSR set to: 0
  4713  001204  0100               	movlb	0	; () banked
  4714  001206  C0CE  F0CF         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4715  00120A  C0CF  F0D0         	movff	??_OpenUSART,??_OpenUSART+1
  4716  00120E  0100               	movlb	0	; () banked
  4717  001210  6BD1               	clrf	(??_OpenUSART+2)& (0+255),b
  4718  001212  0100               	movlb	0	; () banked
  4719  001214  51D0               	movf	(??_OpenUSART+1)& (0+255),w,b
  4720  001216  6EB0               	movwf	4016,c	;volatile
  4721                           
  4722                           ; BSR set to: 0
  4723  001218  8AAC               	bsf	4012,5,c	;volatile
  4724                           
  4725                           ; BSR set to: 0
  4726  00121A  8EAB               	bsf	4011,7,c	;volatile
  4727                           
  4728                           ; BSR set to: 0
  4729  00121C  9C94               	bcf	3988,6,c	;volatile
  4730                           
  4731                           ; BSR set to: 0
  4732  00121E  8E94               	bsf	3988,7,c	;volatile
  4733                           
  4734                           ; BSR set to: 0
  4735  001220  A8AC               	btfss	4012,4,c	;volatile
  4736  001222  0012               	return	
  4737                           
  4738                           ; BSR set to: 0
  4739  001224  BEAC               	btfsc	4012,7,c	;volatile
  4740  001226  0012               	return	
  4741                           
  4742                           ; BSR set to: 0
  4743  001228  8C94               	bsf	3988,6,c	;volatile
  4744  00122A  0012               	return	
  4745  00122C                     __end_of_OpenUSART:
  4746                           	opt stack 0
  4747                           tblptru	equ	0xFF8
  4748                           prodh	equ	0xFF4
  4749                           prodl	equ	0xFF3
  4750                           intcon	equ	0xFF2
  4751                           postinc0	equ	0xFEE
  4752                           wreg	equ	0xFE8
  4753                           indf1	equ	0xFE7
  4754                           fsr1h	equ	0xFE2
  4755                           fsr1l	equ	0xFE1
  4756                           indf2	equ	0xFDF
  4757                           postinc2	equ	0xFDE
  4758                           postdec2	equ	0xFDD
  4759                           fsr2h	equ	0xFDA
  4760                           fsr2l	equ	0xFD9
  4761                           status	equ	0xFD8
  4762                           
  4763 ;; *************** function _OpenTimer1 *****************
  4764 ;; Defined at:
  4765 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  config          1    wreg     unsigned char 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  config          1   23[BANK0 ] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;		None               void
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4779 ;;      Params:         0       0       0       0       0
  4780 ;;      Locals:         0       1       0       0       0
  4781 ;;      Temps:          0       0       0       0       0
  4782 ;;      Totals:         0       1       0       0       0
  4783 ;;Total ram usage:        1 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:   10
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text28
  4794  0018D6                     __ptext28:
  4795                           	opt stack 0
  4796  0018D6                     _OpenTimer1:
  4797                           	opt stack 20
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;incstack = 0
  4801                           ;OpenTimer1@config stored from wreg
  4802  0018D6  CFE8 F0CD          	movff	wreg,OpenTimer1@config
  4803  0018DA  0100               	movlb	0	; () banked
  4804  0018DC  0100               	movlb	0	; () banked
  4805  0018DE  51CD               	movf	OpenTimer1@config& (0+255),w,b
  4806  0018E0  0B7E               	andlw	126
  4807  0018E2  6ECD               	movwf	4045,c	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810  0018E4  0100               	movlb	0	; () banked
  4811  0018E6  0100               	movlb	0	; () banked
  4812  0018E8  ADCD               	btfss	OpenTimer1@config& (0+255),6,b
  4813  0018EA  D002               	goto	l450
  4814                           
  4815                           ; BSR set to: 0
  4816  0018EC  8ECD               	bsf	4045,7,c	;volatile
  4817  0018EE  D001               	goto	l2521
  4818  0018F0                     l450:
  4819                           
  4820                           ; BSR set to: 0
  4821  0018F0  9ECD               	bcf	4045,7,c	;volatile
  4822  0018F2                     l2521:
  4823                           
  4824                           ; BSR set to: 0
  4825  0018F2  0E00               	movlw	0
  4826  0018F4  6ECF               	movwf	4047,c	;volatile
  4827  0018F6  0E00               	movlw	0
  4828  0018F8  6ECE               	movwf	4046,c	;volatile
  4829                           
  4830                           ; BSR set to: 0
  4831  0018FA  909E               	bcf	3998,0,c	;volatile
  4832                           
  4833                           ; BSR set to: 0
  4834  0018FC  0100               	movlb	0	; () banked
  4835  0018FE  0100               	movlb	0	; () banked
  4836  001900  AFCD               	btfss	OpenTimer1@config& (0+255),7,b
  4837  001902  D002               	goto	l452
  4838                           
  4839                           ; BSR set to: 0
  4840  001904  809D               	bsf	3997,0,c	;volatile
  4841  001906  D001               	goto	l453
  4842  001908                     l452:
  4843                           
  4844                           ; BSR set to: 0
  4845  001908  909D               	bcf	3997,0,c	;volatile
  4846  00190A                     l453:
  4847                           
  4848                           ; BSR set to: 0
  4849  00190A  80CD               	bsf	4045,0,c	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852  00190C  0012               	return	
  4853  00190E                     __end_of_OpenTimer1:
  4854                           	opt stack 0
  4855                           tblptru	equ	0xFF8
  4856                           prodh	equ	0xFF4
  4857                           prodl	equ	0xFF3
  4858                           intcon	equ	0xFF2
  4859                           postinc0	equ	0xFEE
  4860                           wreg	equ	0xFE8
  4861                           indf1	equ	0xFE7
  4862                           fsr1h	equ	0xFE2
  4863                           fsr1l	equ	0xFE1
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           postdec2	equ	0xFDD
  4867                           fsr2h	equ	0xFDA
  4868                           fsr2l	equ	0xFD9
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _OpenTimer0 *****************
  4872 ;; Defined at:
  4873 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  config          1    wreg     unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  config          1   23[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4887 ;;      Params:         0       0       0       0       0
  4888 ;;      Locals:         0       1       0       0       0
  4889 ;;      Temps:          0       0       0       0       0
  4890 ;;      Totals:         0       1       0       0       0
  4891 ;;Total ram usage:        1 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:   10
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_main
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text29
  4902  0019D8                     __ptext29:
  4903                           	opt stack 0
  4904  0019D8                     _OpenTimer0:
  4905                           	opt stack 20
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;incstack = 0
  4909                           ;OpenTimer0@config stored from wreg
  4910  0019D8  CFE8 F0CD          	movff	wreg,OpenTimer0@config
  4911  0019DC  0100               	movlb	0	; () banked
  4912  0019DE  0100               	movlb	0	; () banked
  4913  0019E0  51CD               	movf	OpenTimer0@config& (0+255),w,b
  4914  0019E2  0B7F               	andlw	127
  4915  0019E4  6ED5               	movwf	4053,c	;volatile
  4916                           
  4917                           ; BSR set to: 0
  4918  0019E6  0E00               	movlw	0
  4919  0019E8  6ED7               	movwf	4055,c	;volatile
  4920                           
  4921                           ; BSR set to: 0
  4922  0019EA  0E00               	movlw	0
  4923  0019EC  6ED6               	movwf	4054,c	;volatile
  4924                           
  4925                           ; BSR set to: 0
  4926  0019EE  94F2               	bcf	intcon,2,c	;volatile
  4927                           
  4928                           ; BSR set to: 0
  4929  0019F0  0100               	movlb	0	; () banked
  4930  0019F2  0100               	movlb	0	; () banked
  4931  0019F4  AFCD               	btfss	OpenTimer0@config& (0+255),7,b
  4932  0019F6  D002               	goto	l426
  4933                           
  4934                           ; BSR set to: 0
  4935  0019F8  8AF2               	bsf	intcon,5,c	;volatile
  4936  0019FA  D001               	goto	l427
  4937  0019FC                     l426:
  4938                           
  4939                           ; BSR set to: 0
  4940  0019FC  9AF2               	bcf	intcon,5,c	;volatile
  4941  0019FE                     l427:
  4942                           
  4943                           ; BSR set to: 0
  4944  0019FE  8ED5               	bsf	4053,7,c	;volatile
  4945                           
  4946                           ; BSR set to: 0
  4947  001A00  0012               	return	
  4948  001A02                     __end_of_OpenTimer0:
  4949                           	opt stack 0
  4950                           tblptru	equ	0xFF8
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           intcon	equ	0xFF2
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           indf1	equ	0xFE7
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           indf2	equ	0xFDF
  4960                           postinc2	equ	0xFDE
  4961                           postdec2	equ	0xFDD
  4962                           fsr2h	equ	0xFDA
  4963                           fsr2l	equ	0xFD9
  4964                           status	equ	0xFD8
  4965                           
  4966 ;; *************** function _InterruptHandlerLow *****************
  4967 ;; Defined at:
  4968 ;;		line 122 in file "../src/interrupts.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;		None               void
  4975 ;; Registers used:
  4976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4982 ;;      Params:         0       0       0       0       0
  4983 ;;      Locals:         0       0       0       0       0
  4984 ;;      Temps:         17       0       0       0       0
  4985 ;;      Totals:        17       0       0       0       0
  4986 ;;Total ram usage:       17 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    9
  4989 ;; This function calls:
  4990 ;;		_timer1_int_handler
  4991 ;;		_uart_recv_int_handler
  4992 ;; This function is called by:
  4993 ;;		Interrupt level 1
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	intcodelo
  4998  000018                     __pintcodelo:
  4999                           	opt stack 0
  5000  000018                     _InterruptHandlerLow:
  5001                           	opt stack 17
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;incstack = 0
  5005  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  5006  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  5007  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  5008  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  5009  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  5010  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  5011  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  5012  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  5013  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  5014  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  5015  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  5016  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  5017  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  5018  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  5019  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  5020  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5021  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5022                           
  5023                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5024  00005C  A09E               	btfss	3998,0,c	;volatile
  5025  00005E  D003               	goto	i1l2991
  5026                           
  5027                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5028  000060  909E               	bcf	3998,0,c	;volatile
  5029                           
  5030                           ;interrupts.c: 126: timer1_int_handler();
  5031  000062  ECBD  F00C         	call	_timer1_int_handler	;wreg free
  5032  000066                     i1l2991:
  5033                           
  5034                           ;interrupts.c: 127: }
  5035                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5036  000066  AA9E               	btfss	3998,5,c	;volatile
  5037  000068  D003               	goto	i1l47
  5038                           
  5039                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5040  00006A  9A9E               	bcf	3998,5,c	;volatile
  5041                           
  5042                           ;interrupts.c: 132: uart_recv_int_handler();
  5043  00006C  EC7F  F008         	call	_uart_recv_int_handler	;wreg free
  5044  000070                     i1l47:
  5045  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5046  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5047  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5048  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5049  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5050  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5051  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5052  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5053  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5054  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5055  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5056  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5057  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5058  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5059  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5060  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5061  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5062  0000B4  0010               	retfie	
  5063  0000B6                     __end_of_InterruptHandlerLow:
  5064                           	opt stack 0
  5065                           pclatu	equ	0xFFB
  5066                           pclath	equ	0xFFA
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           prodh	equ	0xFF4
  5072                           prodl	equ	0xFF3
  5073                           intcon	equ	0xFF2
  5074                           postinc0	equ	0xFEE
  5075                           fsr0h	equ	0xFEA
  5076                           fsr0l	equ	0xFE9
  5077                           wreg	equ	0xFE8
  5078                           indf1	equ	0xFE7
  5079                           fsr1h	equ	0xFE2
  5080                           fsr1l	equ	0xFE1
  5081                           bsr	equ	0xFE0
  5082                           indf2	equ	0xFDF
  5083                           postinc2	equ	0xFDE
  5084                           postdec2	equ	0xFDD
  5085                           fsr2h	equ	0xFDA
  5086                           fsr2l	equ	0xFD9
  5087                           status	equ	0xFD8
  5088                           
  5089 ;; *************** function _uart_recv_int_handler *****************
  5090 ;; Defined at:
  5091 ;;		line 11 in file "../src/my_uart.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;		None               void
  5098 ;; Registers used:
  5099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5105 ;;      Params:         0       0       0       0       0
  5106 ;;      Locals:         0       0       0       0       0
  5107 ;;      Temps:          1       0       0       0       0
  5108 ;;      Totals:         1       0       0       0       0
  5109 ;;Total ram usage:        1 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    8
  5112 ;; This function calls:
  5113 ;;		_ReadUSART
  5114 ;;		_ToMainLow_sendmsg
  5115 ;; This function is called by:
  5116 ;;		_InterruptHandlerLow
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text31
  5121  0010FE                     __ptext31:
  5122                           	opt stack 0
  5123  0010FE                     _uart_recv_int_handler:
  5124                           	opt stack 17
  5125                           
  5126                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5127                           
  5128                           ;incstack = 0
  5129  0010FE  AA9E               	btfss	3998,5,c	;volatile
  5130  001100  D03C               	goto	i1l2979
  5131                           
  5132                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5133  001102  EE20 F004          	lfsr	2,4
  5134  001106  504D               	movf	_uc_ptr,w,c
  5135  001108  26D9               	addwf	fsr2l,f,c
  5136  00110A  504E               	movf	_uc_ptr+1,w,c
  5137  00110C  22DA               	addwfc	fsr2h,f,c
  5138  00110E  50DF               	movf	indf2,w,c
  5139  001110  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5140  001112  501B               	movf	??_uart_recv_int_handler,w,c
  5141  001114  0D01               	mullw	1
  5142  001116  50F3               	movf	prodl,w,c
  5143  001118  244D               	addwf	_uc_ptr,w,c
  5144  00111A  6ED9               	movwf	fsr2l,c
  5145  00111C  50F4               	movf	prodh,w,c
  5146  00111E  204E               	addwfc	_uc_ptr+1,w,c
  5147  001120  6EDA               	movwf	fsr2h,c
  5148  001122  EC84  F00D         	call	_ReadUSART	;wreg free
  5149  001126  6EDF               	movwf	indf2,c
  5150                           
  5151                           ;my_uart.c: 25: uc_ptr->buflen++;
  5152  001128  EE20 F004          	lfsr	2,4
  5153  00112C  504D               	movf	_uc_ptr,w,c
  5154  00112E  26D9               	addwf	fsr2l,f,c
  5155  001130  504E               	movf	_uc_ptr+1,w,c
  5156  001132  22DA               	addwfc	fsr2h,f,c
  5157  001134  2ADF               	incf	indf2,f,c
  5158                           
  5159                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5160  001136  EE20 F004          	lfsr	2,4
  5161  00113A  504D               	movf	_uc_ptr,w,c
  5162  00113C  26D9               	addwf	fsr2l,f,c
  5163  00113E  504E               	movf	_uc_ptr+1,w,c
  5164  001140  22DA               	addwfc	fsr2h,f,c
  5165  001142  0E04               	movlw	4
  5166  001144  62DF               	cpfseq	indf2,c
  5167  001146  D019               	goto	i1l2979
  5168                           
  5169                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5170  001148  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5171  00114A  0E1F               	movlw	31
  5172  00114C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5173  00114E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5174  001150  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5175  001154  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5176  001158  EE20 F004          	lfsr	2,4
  5177  00115C  504D               	movf	_uc_ptr,w,c
  5178  00115E  26D9               	addwf	fsr2l,f,c
  5179  001160  504E               	movf	_uc_ptr+1,w,c
  5180  001162  22DA               	addwfc	fsr2h,f,c
  5181  001164  50DF               	movf	indf2,w,c
  5182  001166  EC3D  F00D         	call	_ToMainLow_sendmsg
  5183                           
  5184                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5185  00116A  EE20 F004          	lfsr	2,4
  5186  00116E  504D               	movf	_uc_ptr,w,c
  5187  001170  26D9               	addwf	fsr2l,f,c
  5188  001172  504E               	movf	_uc_ptr+1,w,c
  5189  001174  22DA               	addwfc	fsr2h,f,c
  5190  001176  0E00               	movlw	0
  5191  001178  6EDF               	movwf	indf2,c
  5192  00117A                     i1l2979:
  5193                           
  5194                           ;my_uart.c: 30: }
  5195                           ;my_uart.c: 31: }
  5196                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5197  00117A  A650               	btfss	_USART_Status,3,c
  5198  00117C  0012               	return	
  5199                           
  5200                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5201  00117E  98AB               	bcf	4011,4,c	;volatile
  5202                           
  5203                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5204  001180  88AB               	bsf	4011,4,c	;volatile
  5205                           
  5206                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5207  001182  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5208  001184  0E1E               	movlw	30
  5209  001186  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5210  001188  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5211  00118A  0E00               	movlw	0
  5212  00118C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5213  00118E  0E00               	movlw	0
  5214  001190  6E18               	movwf	ToMainLow_sendmsg@data,c
  5215  001192  0E00               	movlw	0
  5216  001194  EC3D  F00D         	call	_ToMainLow_sendmsg
  5217  001198  0012               	return	
  5218  00119A                     __end_of_uart_recv_int_handler:
  5219                           	opt stack 0
  5220                           pclatu	equ	0xFFB
  5221                           pclath	equ	0xFFA
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           prodh	equ	0xFF4
  5227                           prodl	equ	0xFF3
  5228                           intcon	equ	0xFF2
  5229                           postinc0	equ	0xFEE
  5230                           fsr0h	equ	0xFEA
  5231                           fsr0l	equ	0xFE9
  5232                           wreg	equ	0xFE8
  5233                           indf1	equ	0xFE7
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           bsr	equ	0xFE0
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function _ReadUSART *****************
  5245 ;; Defined at:
  5246 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  data            1    0[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      unsigned char 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5260 ;;      Params:         0       0       0       0       0
  5261 ;;      Locals:         1       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0
  5263 ;;      Totals:         1       0       0       0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    5
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_uart_recv_int_handler
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text32
  5275  001B08                     __ptext32:
  5276                           	opt stack 0
  5277  001B08                     _ReadUSART:
  5278                           	opt stack 19
  5279                           
  5280                           ;incstack = 0
  5281  001B08  0EF2               	movlw	242
  5282  001B0A  1650               	andwf	_USART_Status,f,c
  5283  001B0C  ACAB               	btfss	4011,6,c	;volatile
  5284  001B0E  D003               	goto	i1l512
  5285  001B10  9050               	bcf	_USART_Status,0,c
  5286  001B12  B0AB               	btfsc	4011,0,c	;volatile
  5287  001B14  8050               	bsf	_USART_Status,0,c
  5288  001B16                     i1l512:
  5289  001B16  B4AB               	btfsc	4011,2,c	;volatile
  5290  001B18  8450               	bsf	_USART_Status,2,c
  5291  001B1A  B2AB               	btfsc	4011,1,c	;volatile
  5292  001B1C  8650               	bsf	_USART_Status,3,c
  5293  001B1E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5294  001B22  5001               	movf	ReadUSART@data,w,c
  5295  001B24  0012               	return	
  5296  001B26                     __end_of_ReadUSART:
  5297                           	opt stack 0
  5298                           pclatu	equ	0xFFB
  5299                           pclath	equ	0xFFA
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           prodh	equ	0xFF4
  5305                           prodl	equ	0xFF3
  5306                           intcon	equ	0xFF2
  5307                           postinc0	equ	0xFEE
  5308                           fsr0h	equ	0xFEA
  5309                           fsr0l	equ	0xFE9
  5310                           wreg	equ	0xFE8
  5311                           indf1	equ	0xFE7
  5312                           fsr1h	equ	0xFE2
  5313                           fsr1l	equ	0xFE1
  5314                           bsr	equ	0xFE0
  5315                           indf2	equ	0xFDF
  5316                           postinc2	equ	0xFDE
  5317                           postdec2	equ	0xFDD
  5318                           fsr2h	equ	0xFDA
  5319                           fsr2l	equ	0xFD9
  5320                           status	equ	0xFD8
  5321                           
  5322 ;; *************** function _timer1_int_handler *****************
  5323 ;; Defined at:
  5324 ;;		line 36 in file "../src/user_interrupts.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  result          2   27[COMRAM] unsigned int 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;		None               void
  5331 ;; Registers used:
  5332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5338 ;;      Params:         0       0       0       0       0
  5339 ;;      Locals:         2       0       0       0       0
  5340 ;;      Temps:          1       0       0       0       0
  5341 ;;      Totals:         3       0       0       0       0
  5342 ;;Total ram usage:        3 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    8
  5345 ;; This function calls:
  5346 ;;		_ReadTimer1
  5347 ;;		_ToMainLow_sendmsg
  5348 ;;		_WriteTimer1
  5349 ;; This function is called by:
  5350 ;;		_InterruptHandlerLow
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text33
  5355  00197A                     __ptext33:
  5356                           	opt stack 0
  5357  00197A                     _timer1_int_handler:
  5358                           	opt stack 17
  5359                           
  5360                           ;user_interrupts.c: 37: unsigned int result;
  5361                           ;user_interrupts.c: 44: result = ReadTimer1();
  5362                           
  5363                           ;incstack = 0
  5364  00197A  ECC2  F00D         	call	_ReadTimer1	;wreg free
  5365  00197E  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5366  001982  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5367                           
  5368                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5369  001986  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5370  001988  0E0B               	movlw	11
  5371  00198A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5372  00198C  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5373  00198E  0E00               	movlw	0
  5374  001990  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5375  001992  0E00               	movlw	0
  5376  001994  6E18               	movwf	ToMainLow_sendmsg@data,c
  5377  001996  0E00               	movlw	0
  5378  001998  EC3D  F00D         	call	_ToMainLow_sendmsg
  5379                           
  5380                           ;user_interrupts.c: 48: WriteTimer1(0);
  5381  00199C  0E00               	movlw	0
  5382  00199E  6E02               	movwf	WriteTimer1@timer1+1,c
  5383  0019A0  0E00               	movlw	0
  5384  0019A2  6E01               	movwf	WriteTimer1@timer1,c
  5385  0019A4  ECB9  F00D         	call	_WriteTimer1	;wreg free
  5386  0019A8  0012               	return	
  5387  0019AA                     __end_of_timer1_int_handler:
  5388                           	opt stack 0
  5389                           pclatu	equ	0xFFB
  5390                           pclath	equ	0xFFA
  5391                           tblptru	equ	0xFF8
  5392                           tblptrh	equ	0xFF7
  5393                           tblptrl	equ	0xFF6
  5394                           tablat	equ	0xFF5
  5395                           prodh	equ	0xFF4
  5396                           prodl	equ	0xFF3
  5397                           intcon	equ	0xFF2
  5398                           postinc0	equ	0xFEE
  5399                           fsr0h	equ	0xFEA
  5400                           fsr0l	equ	0xFE9
  5401                           wreg	equ	0xFE8
  5402                           indf1	equ	0xFE7
  5403                           fsr1h	equ	0xFE2
  5404                           fsr1l	equ	0xFE1
  5405                           bsr	equ	0xFE0
  5406                           indf2	equ	0xFDF
  5407                           postinc2	equ	0xFDE
  5408                           postdec2	equ	0xFDD
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function _WriteTimer1 *****************
  5414 ;; Defined at:
  5415 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  timer1          2    0[COMRAM] unsigned int 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  timer           2    2[COMRAM] struct Timers
  5420 ;; Return value:  Size  Location     Type
  5421 ;;		None               void
  5422 ;; Registers used:
  5423 ;;		None
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5429 ;;      Params:         2       0       0       0       0
  5430 ;;      Locals:         2       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0
  5432 ;;      Totals:         4       0       0       0       0
  5433 ;;Total ram usage:        4 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    5
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_timer1_int_handler
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           	psect	text34
  5444  001B72                     __ptext34:
  5445                           	opt stack 0
  5446  001B72                     _WriteTimer1:
  5447                           	opt stack 19
  5448                           
  5449                           ;incstack = 0
  5450  001B72  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5451  001B76  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5452  001B7A  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5453  001B7E  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5454  001B82  0012               	return	
  5455  001B84                     __end_of_WriteTimer1:
  5456                           	opt stack 0
  5457                           pclatu	equ	0xFFB
  5458                           pclath	equ	0xFFA
  5459                           tblptru	equ	0xFF8
  5460                           tblptrh	equ	0xFF7
  5461                           tblptrl	equ	0xFF6
  5462                           tablat	equ	0xFF5
  5463                           prodh	equ	0xFF4
  5464                           prodl	equ	0xFF3
  5465                           intcon	equ	0xFF2
  5466                           postinc0	equ	0xFEE
  5467                           fsr0h	equ	0xFEA
  5468                           fsr0l	equ	0xFE9
  5469                           wreg	equ	0xFE8
  5470                           indf1	equ	0xFE7
  5471                           fsr1h	equ	0xFE2
  5472                           fsr1l	equ	0xFE1
  5473                           bsr	equ	0xFE0
  5474                           indf2	equ	0xFDF
  5475                           postinc2	equ	0xFDE
  5476                           postdec2	equ	0xFDD
  5477                           fsr2h	equ	0xFDA
  5478                           fsr2l	equ	0xFD9
  5479                           status	equ	0xFD8
  5480                           
  5481 ;; *************** function _ToMainLow_sendmsg *****************
  5482 ;; Defined at:
  5483 ;;		line 103 in file "../src/messages.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  length          1    wreg     unsigned char 
  5486 ;;  msgtype         1   22[COMRAM] unsigned char 
  5487 ;;  data            2   23[COMRAM] PTR void 
  5488 ;;		 -> NULL(0), main@uc(5), 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  length          1   25[COMRAM] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      char 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5500 ;;      Params:         3       0       0       0       0
  5501 ;;      Locals:         1       0       0       0       0
  5502 ;;      Temps:          0       0       0       0       0
  5503 ;;      Totals:         4       0       0       0       0
  5504 ;;Total ram usage:        4 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    7
  5507 ;; This function calls:
  5508 ;;		i1_send_msg
  5509 ;; This function is called by:
  5510 ;;		_uart_recv_int_handler
  5511 ;;		_timer1_int_handler
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text35
  5516  001A7A                     __ptext35:
  5517                           	opt stack 0
  5518  001A7A                     _ToMainLow_sendmsg:
  5519                           	opt stack 17
  5520                           
  5521                           ;incstack = 0
  5522                           ;ToMainLow_sendmsg@length stored from wreg
  5523  001A7A  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5524                           
  5525                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5526                           ;	Return value of _ToMainLow_sendmsg is never used
  5527  001A7E  0100               	movlb	0	; () banked
  5528  001A80  0E00               	movlw	high _ToMainLow_MQ
  5529  001A82  6E0C               	movwf	i1send_msg@qptr+1,c
  5530  001A84  0100               	movlb	0	; () banked
  5531  001A86  0E80               	movlw	low _ToMainLow_MQ
  5532  001A88  6E0B               	movwf	i1send_msg@qptr,c
  5533  001A8A  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5534  001A8E  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5535  001A92  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5536  001A96  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5537  001A9A  ECD5  F007         	call	i1_send_msg	;wreg free
  5538  001A9E  0012               	return	
  5539  001AA0                     __end_of_ToMainLow_sendmsg:
  5540                           	opt stack 0
  5541                           pclatu	equ	0xFFB
  5542                           pclath	equ	0xFFA
  5543                           tblptru	equ	0xFF8
  5544                           tblptrh	equ	0xFF7
  5545                           tblptrl	equ	0xFF6
  5546                           tablat	equ	0xFF5
  5547                           prodh	equ	0xFF4
  5548                           prodl	equ	0xFF3
  5549                           intcon	equ	0xFF2
  5550                           postinc0	equ	0xFEE
  5551                           fsr0h	equ	0xFEA
  5552                           fsr0l	equ	0xFE9
  5553                           wreg	equ	0xFE8
  5554                           indf1	equ	0xFE7
  5555                           fsr1h	equ	0xFE2
  5556                           fsr1l	equ	0xFE1
  5557                           bsr	equ	0xFE0
  5558                           indf2	equ	0xFDF
  5559                           postinc2	equ	0xFDE
  5560                           postdec2	equ	0xFDD
  5561                           fsr2h	equ	0xFDA
  5562                           fsr2l	equ	0xFD9
  5563                           status	equ	0xFD8
  5564                           
  5565 ;; *************** function i1_send_msg *****************
  5566 ;; Defined at:
  5567 ;;		line 24 in file "../src/messages.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5570 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5571 ;;  length          1   12[COMRAM] unsigned char 
  5572 ;;  msgtype         1   13[COMRAM] unsigned char 
  5573 ;;  data            2   14[COMRAM] PTR void 
  5574 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  5575 ;;		 -> main@ic(28), main@uc(5), 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5578 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5579 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5580 ;;  send_msg        2   17[COMRAM] unsigned int 
  5581 ;;  send_msg        1   19[COMRAM] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      char 
  5584 ;; Registers used:
  5585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5591 ;;      Params:         6       0       0       0       0
  5592 ;;      Locals:         5       0       0       0       0
  5593 ;;      Temps:          1       0       0       0       0
  5594 ;;      Totals:        12       0       0       0       0
  5595 ;;Total ram usage:       12 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    6
  5598 ;; This function calls:
  5599 ;;		i1_memcpy
  5600 ;; This function is called by:
  5601 ;;		_ToMainLow_sendmsg
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text36
  5606  000FAA                     __ptext36:
  5607                           	opt stack 0
  5608  000FAA                     i1_send_msg:
  5609                           	opt stack 17
  5610                           
  5611                           ;messages.c: 25: unsigned char slot;
  5612                           ;messages.c: 27: msg *qmsg;
  5613                           ;messages.c: 28: size_t tlength = length;
  5614                           
  5615                           ;incstack = 0
  5616  000FAA  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5617  000FAE  6A13               	clrf	i1send_msg@tlength+1,c
  5618                           
  5619                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5620  000FB0  EE20 F034          	lfsr	2,52
  5621  000FB4  500B               	movf	i1send_msg@qptr,w,c
  5622  000FB6  26D9               	addwf	fsr2l,f,c
  5623  000FB8  500C               	movf	i1send_msg@qptr+1,w,c
  5624  000FBA  22DA               	addwfc	fsr2h,f,c
  5625  000FBC  50DF               	movf	indf2,w,c
  5626  000FBE  6E14               	movwf	i1send_msg@slot,c
  5627                           
  5628                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5629  000FC0  5014               	movf	i1send_msg@slot,w,c
  5630  000FC2  0D0D               	mullw	13
  5631  000FC4  50F3               	movf	prodl,w,c
  5632  000FC6  240B               	addwf	i1send_msg@qptr,w,c
  5633  000FC8  6E15               	movwf	i1send_msg@qmsg,c
  5634  000FCA  50F4               	movf	prodh,w,c
  5635  000FCC  200C               	addwfc	i1send_msg@qptr+1,w,c
  5636  000FCE  6E16               	movwf	i1send_msg@qmsg+1,c
  5637                           
  5638                           ;messages.c: 41: if (qmsg->full != 0) {
  5639  000FD0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5640  000FD4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5641  000FD8  50DF               	movf	indf2,w,c
  5642  000FDA  B4D8               	btfsc	status,2,c
  5643  000FDC  D002               	goto	i1l2945
  5644                           
  5645                           ;messages.c: 42: return (-1);
  5646  000FDE  0EFF               	movlw	255
  5647  000FE0  0012               	return	
  5648  000FE2                     i1l2945:
  5649                           
  5650                           ;messages.c: 43: }
  5651                           ;messages.c: 46: qmsg->length = length;
  5652  000FE2  EE20 F001          	lfsr	2,1
  5653  000FE6  5015               	movf	i1send_msg@qmsg,w,c
  5654  000FE8  26D9               	addwf	fsr2l,f,c
  5655  000FEA  5016               	movf	i1send_msg@qmsg+1,w,c
  5656  000FEC  22DA               	addwfc	fsr2h,f,c
  5657  000FEE  C00D  FFDF         	movff	i1send_msg@length,indf2
  5658                           
  5659                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5660  000FF2  EE20 F002          	lfsr	2,2
  5661  000FF6  5015               	movf	i1send_msg@qmsg,w,c
  5662  000FF8  26D9               	addwf	fsr2l,f,c
  5663  000FFA  5016               	movf	i1send_msg@qmsg+1,w,c
  5664  000FFC  22DA               	addwfc	fsr2h,f,c
  5665  000FFE  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5666                           
  5667                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5668  001002  0E03               	movlw	3
  5669  001004  2415               	addwf	i1send_msg@qmsg,w,c
  5670  001006  6E01               	movwf	i1memcpy@d1,c
  5671  001008  0E00               	movlw	0
  5672  00100A  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5673  00100C  6E02               	movwf	i1memcpy@d1+1,c
  5674  00100E  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5675  001012  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5676  001016  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5677  00101A  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5678  00101E  EC0C  F00C         	call	i1_memcpy	;wreg free
  5679                           
  5680                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5681  001022  EE20 F034          	lfsr	2,52
  5682  001026  500B               	movf	i1send_msg@qptr,w,c
  5683  001028  26D9               	addwf	fsr2l,f,c
  5684  00102A  500C               	movf	i1send_msg@qptr+1,w,c
  5685  00102C  22DA               	addwfc	fsr2h,f,c
  5686  00102E  EE10 F034          	lfsr	1,52
  5687  001032  500B               	movf	i1send_msg@qptr,w,c
  5688  001034  26E1               	addwf	fsr1l,f,c
  5689  001036  500C               	movf	i1send_msg@qptr+1,w,c
  5690  001038  22E2               	addwfc	fsr1h,f,c
  5691  00103A  50E7               	movf	indf1,w,c
  5692  00103C  6E11               	movwf	??i1_send_msg& (0+255),c
  5693  00103E  2811               	incf	??i1_send_msg,w,c
  5694  001040  0B03               	andlw	3
  5695  001042  6EDF               	movwf	indf2,c
  5696                           
  5697                           ;messages.c: 59: qmsg->full = 1;
  5698  001044  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5699  001048  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5700  00104C  0E01               	movlw	1
  5701  00104E  6EDF               	movwf	indf2,c
  5702                           
  5703                           ;messages.c: 60: return (1);
  5704  001050  0E01               	movlw	1
  5705  001052  0012               	return	
  5706  001054                     __end_ofi1_send_msg:
  5707                           	opt stack 0
  5708                           pclatu	equ	0xFFB
  5709                           pclath	equ	0xFFA
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           prodh	equ	0xFF4
  5715                           prodl	equ	0xFF3
  5716                           intcon	equ	0xFF2
  5717                           postinc0	equ	0xFEE
  5718                           fsr0h	equ	0xFEA
  5719                           fsr0l	equ	0xFE9
  5720                           wreg	equ	0xFE8
  5721                           indf1	equ	0xFE7
  5722                           fsr1h	equ	0xFE2
  5723                           fsr1l	equ	0xFE1
  5724                           bsr	equ	0xFE0
  5725                           indf2	equ	0xFDF
  5726                           postinc2	equ	0xFDE
  5727                           postdec2	equ	0xFDD
  5728                           fsr2h	equ	0xFDA
  5729                           fsr2l	equ	0xFD9
  5730                           status	equ	0xFD8
  5731                           
  5732 ;; *************** function i1_memcpy *****************
  5733 ;; Defined at:
  5734 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  d1              2    0[COMRAM] PTR void 
  5737 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5738 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5739 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5740 ;;  s1              2    2[COMRAM] PTR const void 
  5741 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5742 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5743 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5744 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5745 ;;		 -> main@ic(28), main@uc(5), 
  5746 ;;  n               2    4[COMRAM] unsigned int 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5749 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5750 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5751 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5752 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5753 ;;		 -> main@ic(28), main@uc(5), 
  5754 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5755 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5756 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5757 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  2    0[COMRAM] PTR void 
  5760 ;; Registers used:
  5761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5767 ;;      Params:         6       0       0       0       0
  5768 ;;      Locals:         4       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0
  5770 ;;      Totals:        10       0       0       0       0
  5771 ;;Total ram usage:       10 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    5
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		i1_send_msg
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text37
  5782  001818                     __ptext37:
  5783                           	opt stack 0
  5784  001818                     i1_memcpy:
  5785                           	opt stack 17
  5786                           
  5787                           ;incstack = 0
  5788  001818  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5789  00181C  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5790  001820  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5791  001824  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5792  001828  D00E               	goto	i1l2921
  5793  00182A                     i1l2915:
  5794  00182A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5795  00182E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5796  001832  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5797  001836  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5798  00183A  CFDF FFE7          	movff	indf2,indf1
  5799  00183E  4A09               	infsnz	i1memcpy@s,f,c
  5800  001840  2A0A               	incf	i1memcpy@s+1,f,c
  5801  001842  4A07               	infsnz	i1memcpy@d,f,c
  5802  001844  2A08               	incf	i1memcpy@d+1,f,c
  5803  001846                     i1l2921:
  5804  001846  0605               	decf	i1memcpy@n,f,c
  5805  001848  A0D8               	btfss	status,0,c
  5806  00184A  0606               	decf	i1memcpy@n+1,f,c
  5807  00184C  2805               	incf	i1memcpy@n& (0+255),w,c
  5808  00184E  B4D8               	btfsc	status,2,c
  5809  001850  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5810  001852  B4D8               	btfsc	status,2,c
  5811                           
  5812                           ;	Return value of i1_memcpy is never used
  5813  001854  0012               	return	
  5814  001856  D7E9               	goto	i1l2915
  5815  001858                     __end_ofi1_memcpy:
  5816                           	opt stack 0
  5817                           pclatu	equ	0xFFB
  5818                           pclath	equ	0xFFA
  5819                           tblptru	equ	0xFF8
  5820                           tblptrh	equ	0xFF7
  5821                           tblptrl	equ	0xFF6
  5822                           tablat	equ	0xFF5
  5823                           prodh	equ	0xFF4
  5824                           prodl	equ	0xFF3
  5825                           intcon	equ	0xFF2
  5826                           postinc0	equ	0xFEE
  5827                           fsr0h	equ	0xFEA
  5828                           fsr0l	equ	0xFE9
  5829                           wreg	equ	0xFE8
  5830                           indf1	equ	0xFE7
  5831                           fsr1h	equ	0xFE2
  5832                           fsr1l	equ	0xFE1
  5833                           bsr	equ	0xFE0
  5834                           indf2	equ	0xFDF
  5835                           postinc2	equ	0xFDE
  5836                           postdec2	equ	0xFDD
  5837                           fsr2h	equ	0xFDA
  5838                           fsr2l	equ	0xFD9
  5839                           status	equ	0xFD8
  5840                           
  5841 ;; *************** function _ReadTimer1 *****************
  5842 ;; Defined at:
  5843 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  timer           2    2[COMRAM] struct Timers
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  2    0[COMRAM] unsigned int 
  5850 ;; Registers used:
  5851 ;;		None
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5857 ;;      Params:         2       0       0       0       0
  5858 ;;      Locals:         2       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0
  5860 ;;      Totals:         4       0       0       0       0
  5861 ;;Total ram usage:        4 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    5
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_timer1_int_handler
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text38
  5872  001B84                     __ptext38:
  5873                           	opt stack 0
  5874  001B84                     _ReadTimer1:
  5875                           	opt stack 19
  5876                           
  5877                           ;incstack = 0
  5878  001B84  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5879  001B88  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5880  001B8C  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5881  001B90  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5882  001B94  0012               	return	
  5883  001B96                     __end_of_ReadTimer1:
  5884                           	opt stack 0
  5885                           pclatu	equ	0xFFB
  5886                           pclath	equ	0xFFA
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           prodh	equ	0xFF4
  5892                           prodl	equ	0xFF3
  5893                           intcon	equ	0xFF2
  5894                           postinc0	equ	0xFEE
  5895                           fsr0h	equ	0xFEA
  5896                           fsr0l	equ	0xFE9
  5897                           wreg	equ	0xFE8
  5898                           indf1	equ	0xFE7
  5899                           fsr1h	equ	0xFE2
  5900                           fsr1l	equ	0xFE1
  5901                           bsr	equ	0xFE0
  5902                           indf2	equ	0xFDF
  5903                           postinc2	equ	0xFDE
  5904                           postdec2	equ	0xFDD
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function _InterruptHandlerHigh *****************
  5910 ;; Defined at:
  5911 ;;		line 83 in file "../src/interrupts.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;		None               void
  5918 ;; Registers used:
  5919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5925 ;;      Params:         0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0
  5927 ;;      Temps:          0      14       0       0       0
  5928 ;;      Totals:         0      14       0       0       0
  5929 ;;Total ram usage:       14 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    4
  5932 ;; This function calls:
  5933 ;;		_SleepIfOkay
  5934 ;;		_i2c_int_handler
  5935 ;;		_timer0_int_handler
  5936 ;; This function is called by:
  5937 ;;		Interrupt level 2
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	intcode
  5942  000008                     __pintcode:
  5943                           	opt stack 0
  5944  000008                     _InterruptHandlerHigh:
  5945                           	opt stack 17
  5946                           
  5947                           ;incstack = 0
  5948  000008  CFFA F0BF          	movff	pclath,??_InterruptHandlerHigh
  5949  00000C  CFFB F0C0          	movff	pclatu,??_InterruptHandlerHigh+1
  5950  000010  EF5B  F009         	goto	int_func
  5951                           pclatu	equ	0xFFB
  5952                           pclath	equ	0xFFA
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           prodh	equ	0xFF4
  5958                           prodl	equ	0xFF3
  5959                           intcon	equ	0xFF2
  5960                           postinc0	equ	0xFEE
  5961                           fsr0h	equ	0xFEA
  5962                           fsr0l	equ	0xFE9
  5963                           wreg	equ	0xFE8
  5964                           indf1	equ	0xFE7
  5965                           fsr1h	equ	0xFE2
  5966                           fsr1l	equ	0xFE1
  5967                           bsr	equ	0xFE0
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975                           	psect	intcode_body
  5976  0012B6                     __pintcode_body:
  5977                           	opt stack 17
  5978  0012B6                     int_func:
  5979                           	opt stack 17
  5980  0012B6  CFE9 F0C1          	movff	fsr0l,??_InterruptHandlerHigh+2
  5981  0012BA  CFEA F0C2          	movff	fsr0h,??_InterruptHandlerHigh+3
  5982  0012BE  CFE1 F0C3          	movff	fsr1l,??_InterruptHandlerHigh+4
  5983  0012C2  CFE2 F0C4          	movff	fsr1h,??_InterruptHandlerHigh+5
  5984  0012C6  CFD9 F0C5          	movff	fsr2l,??_InterruptHandlerHigh+6
  5985  0012CA  CFDA F0C6          	movff	fsr2h,??_InterruptHandlerHigh+7
  5986  0012CE  CFF3 F0C7          	movff	prodl,??_InterruptHandlerHigh+8
  5987  0012D2  CFF4 F0C8          	movff	prodh,??_InterruptHandlerHigh+9
  5988  0012D6  CFF6 F0C9          	movff	tblptrl,??_InterruptHandlerHigh+10
  5989  0012DA  CFF7 F0CA          	movff	tblptrh,??_InterruptHandlerHigh+11
  5990  0012DE  CFF8 F0CB          	movff	tblptru,??_InterruptHandlerHigh+12
  5991  0012E2  CFF5 F0CC          	movff	tablat,??_InterruptHandlerHigh+13
  5992                           
  5993                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5994  0012E6  A69E               	btfss	3998,3,c	;volatile
  5995  0012E8  D003               	goto	i2l2185
  5996                           
  5997                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5998  0012EA  969E               	bcf	3998,3,c	;volatile
  5999                           
  6000                           ;interrupts.c: 92: i2c_int_handler();
  6001  0012EC  EC5D  F000         	call	_i2c_int_handler	;wreg free
  6002  0012F0                     i2l2185:
  6003                           
  6004                           ;interrupts.c: 93: }
  6005                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6006  0012F0  A4F2               	btfss	intcon,2,c	;volatile
  6007  0012F2  D003               	goto	i2l41
  6008                           
  6009                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6010  0012F4  94F2               	bcf	intcon,2,c	;volatile
  6011                           
  6012                           ;interrupts.c: 99: timer0_int_handler();
  6013  0012F6  ECBD  F00A         	call	_timer0_int_handler	;wreg free
  6014  0012FA                     i2l41:
  6015                           
  6016                           ;interrupts.c: 100: }
  6017                           ;interrupts.c: 109: SleepIfOkay();
  6018  0012FA  EC1E  F00B         	call	_SleepIfOkay	;wreg free
  6019  0012FE  C0CC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6020  001302  C0CB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6021  001306  C0CA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6022  00130A  C0C9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6023  00130E  C0C8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6024  001312  C0C7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6025  001316  C0C6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6026  00131A  C0C5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6027  00131E  C0C4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6028  001322  C0C3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6029  001326  C0C2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6030  00132A  C0C1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6031  00132E  C0C0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6032  001332  C0BF  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6033  001336  0011               	retfie		f
  6034  001338                     __end_of_InterruptHandlerHigh:
  6035                           	opt stack 0
  6036                           pclatu	equ	0xFFB
  6037                           pclath	equ	0xFFA
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           prodh	equ	0xFF4
  6043                           prodl	equ	0xFF3
  6044                           intcon	equ	0xFF2
  6045                           postinc0	equ	0xFEE
  6046                           fsr0h	equ	0xFEA
  6047                           fsr0l	equ	0xFE9
  6048                           wreg	equ	0xFE8
  6049                           indf1	equ	0xFE7
  6050                           fsr1h	equ	0xFE2
  6051                           fsr1l	equ	0xFE1
  6052                           bsr	equ	0xFE0
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function _timer0_int_handler *****************
  6061 ;; Defined at:
  6062 ;;		line 16 in file "../src/user_interrupts.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;		None
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  val             2    4[BANK0 ] unsigned int 
  6067 ;;  msgtype         2    2[BANK0 ] int 
  6068 ;;  length          2    0[BANK0 ] int 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;		None               void
  6071 ;; Registers used:
  6072 ;;		wreg, status,2, status,0, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6078 ;;      Params:         0       0       0       0       0
  6079 ;;      Locals:         0       6       0       0       0
  6080 ;;      Temps:          1       0       0       0       0
  6081 ;;      Totals:         1       6       0       0       0
  6082 ;;Total ram usage:        7 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    3
  6085 ;; This function calls:
  6086 ;;		_FromMainHigh_recvmsg
  6087 ;;		_ToMainHigh_sendmsg
  6088 ;;		_WriteTimer0
  6089 ;; This function is called by:
  6090 ;;		_InterruptHandlerHigh
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text40
  6095  00157A                     __ptext40:
  6096                           	opt stack 0
  6097  00157A                     _timer0_int_handler:
  6098                           	opt stack 17
  6099                           
  6100                           ;user_interrupts.c: 17: unsigned int val;
  6101                           ;user_interrupts.c: 18: int length, msgtype;
  6102                           ;user_interrupts.c: 25: WriteTimer0(0);
  6103                           
  6104                           ;incstack = 0
  6105  00157A  0E00               	movlw	0
  6106  00157C  6E30               	movwf	WriteTimer0@timer0+1,c
  6107  00157E  0E00               	movlw	0
  6108  001580  6E2F               	movwf	WriteTimer0@timer0,c
  6109  001582  ECCB  F00D         	call	_WriteTimer0	;wreg free
  6110                           
  6111                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6112  001586  0100               	movlb	0	; () banked
  6113  001588  0E00               	movlw	high timer0_int_handler@msgtype
  6114  00158A  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6115  00158C  0100               	movlb	0	; () banked
  6116  00158E  0EB8               	movlw	low timer0_int_handler@msgtype
  6117  001590  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  6118  001592  0100               	movlb	0	; () banked
  6119  001594  0E00               	movlw	high timer0_int_handler@val
  6120  001596  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  6121  001598  0100               	movlb	0	; () banked
  6122  00159A  0EBA               	movlw	low timer0_int_handler@val
  6123  00159C  6E49               	movwf	FromMainHigh_recvmsg@data,c
  6124  00159E  0E02               	movlw	2
  6125  0015A0  EC01  F00D         	call	_FromMainHigh_recvmsg
  6126  0015A4  0100               	movlb	0	; () banked
  6127  0015A6  0100               	movlb	0	; () banked
  6128  0015A8  6FB6               	movwf	timer0_int_handler@length& (0+255),b
  6129  0015AA  0100               	movlb	0	; () banked
  6130  0015AC  6BB7               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6131  0015AE  0100               	movlb	0	; () banked
  6132  0015B0  BFB6               	btfsc	timer0_int_handler@length& (0+255),7,b
  6133  0015B2  07B7               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6137  0015B4  0100               	movlb	0	; () banked
  6138  0015B6  0100               	movlb	0	; () banked
  6139  0015B8  51B6               	movf	timer0_int_handler@length& (0+255),w,b
  6140  0015BA  0A02               	xorlw	2
  6141  0015BC  11B7               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6142  0015BE  A4D8               	btfss	status,2,c
  6143  0015C0  0012               	return	
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6147  0015C2  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6148  0015C4  0E0A               	movlw	10
  6149  0015C6  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6150  0015C8  504C               	movf	??_timer0_int_handler& (0+255),w,c
  6151  0015CA  0100               	movlb	0	; () banked
  6152  0015CC  0E00               	movlw	high timer0_int_handler@val
  6153  0015CE  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6154  0015D0  0100               	movlb	0	; () banked
  6155  0015D2  0EBA               	movlw	low timer0_int_handler@val
  6156  0015D4  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6157  0015D6  0E02               	movlw	2
  6158  0015D8  EC50  F00D         	call	_ToMainHigh_sendmsg
  6159  0015DC  0012               	return	
  6160  0015DE                     __end_of_timer0_int_handler:
  6161                           	opt stack 0
  6162                           pclatu	equ	0xFFB
  6163                           pclath	equ	0xFFA
  6164                           tblptru	equ	0xFF8
  6165                           tblptrh	equ	0xFF7
  6166                           tblptrl	equ	0xFF6
  6167                           tablat	equ	0xFF5
  6168                           prodh	equ	0xFF4
  6169                           prodl	equ	0xFF3
  6170                           intcon	equ	0xFF2
  6171                           postinc0	equ	0xFEE
  6172                           fsr0h	equ	0xFEA
  6173                           fsr0l	equ	0xFE9
  6174                           wreg	equ	0xFE8
  6175                           indf1	equ	0xFE7
  6176                           fsr1h	equ	0xFE2
  6177                           fsr1l	equ	0xFE1
  6178                           bsr	equ	0xFE0
  6179                           indf2	equ	0xFDF
  6180                           postinc2	equ	0xFDE
  6181                           postdec2	equ	0xFDD
  6182                           fsr2h	equ	0xFDA
  6183                           fsr2l	equ	0xFD9
  6184                           status	equ	0xFD8
  6185                           
  6186 ;; *************** function _WriteTimer0 *****************
  6187 ;; Defined at:
  6188 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  timer0          2   46[COMRAM] unsigned int 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  timer           2   48[COMRAM] struct Timers
  6193 ;; Return value:  Size  Location     Type
  6194 ;;		None               void
  6195 ;; Registers used:
  6196 ;;		None
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6202 ;;      Params:         2       0       0       0       0
  6203 ;;      Locals:         2       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0
  6205 ;;      Totals:         4       0       0       0       0
  6206 ;;Total ram usage:        4 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_timer0_int_handler
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text41
  6216  001B96                     __ptext41:
  6217                           	opt stack 0
  6218  001B96                     _WriteTimer0:
  6219                           	opt stack 19
  6220                           
  6221                           ;incstack = 0
  6222  001B96  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6223  001B9A  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6224  001B9E  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6225  001BA2  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6226  001BA6  0012               	return	
  6227  001BA8                     __end_of_WriteTimer0:
  6228                           	opt stack 0
  6229                           pclatu	equ	0xFFB
  6230                           pclath	equ	0xFFA
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           postinc0	equ	0xFEE
  6239                           fsr0h	equ	0xFEA
  6240                           fsr0l	equ	0xFE9
  6241                           wreg	equ	0xFE8
  6242                           indf1	equ	0xFE7
  6243                           fsr1h	equ	0xFE2
  6244                           fsr1l	equ	0xFE1
  6245                           bsr	equ	0xFE0
  6246                           indf2	equ	0xFDF
  6247                           postinc2	equ	0xFDE
  6248                           postdec2	equ	0xFDD
  6249                           fsr2h	equ	0xFDA
  6250                           fsr2l	equ	0xFD9
  6251                           status	equ	0xFD8
  6252                           
  6253 ;; *************** function _FromMainHigh_recvmsg *****************
  6254 ;; Defined at:
  6255 ;;		line 183 in file "../src/messages.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  maxlength       1    wreg     unsigned char 
  6258 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  6259 ;;		 -> timer0_int_handler@msgtype(2), 
  6260 ;;  data            2   72[COMRAM] PTR void 
  6261 ;;		 -> timer0_int_handler@val(2), 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  maxlength       1   74[COMRAM] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      char 
  6266 ;; Registers used:
  6267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6273 ;;      Params:         4       0       0       0       0
  6274 ;;      Locals:         1       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0
  6276 ;;      Totals:         5       0       0       0       0
  6277 ;;Total ram usage:        5 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    2
  6280 ;; This function calls:
  6281 ;;		i2_recv_msg
  6282 ;; This function is called by:
  6283 ;;		_timer0_int_handler
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text42
  6288  001A02                     __ptext42:
  6289                           	opt stack 0
  6290  001A02                     _FromMainHigh_recvmsg:
  6291                           	opt stack 17
  6292                           
  6293                           ;incstack = 0
  6294                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6295  001A02  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6296                           
  6297                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6298  001A06  0101               	movlb	1	; () banked
  6299  001A08  0E01               	movlw	high _FromMainHigh_MQ
  6300  001A0A  6E3A               	movwf	i2recv_msg@qptr+1,c
  6301  001A0C  0101               	movlb	1	; () banked
  6302  001A0E  0E00               	movlw	low _FromMainHigh_MQ
  6303  001A10  6E39               	movwf	i2recv_msg@qptr,c
  6304  001A12  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6305  001A16  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6306  001A1A  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6307  001A1E  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6308  001A22  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6309  001A26  EC08  F007         	call	i2_recv_msg	;wreg free
  6310  001A2A  0012               	return	
  6311  001A2C                     __end_of_FromMainHigh_recvmsg:
  6312                           	opt stack 0
  6313                           pclatu	equ	0xFFB
  6314                           pclath	equ	0xFFA
  6315                           tblptru	equ	0xFF8
  6316                           tblptrh	equ	0xFF7
  6317                           tblptrl	equ	0xFF6
  6318                           tablat	equ	0xFF5
  6319                           prodh	equ	0xFF4
  6320                           prodl	equ	0xFF3
  6321                           intcon	equ	0xFF2
  6322                           postinc0	equ	0xFEE
  6323                           fsr0h	equ	0xFEA
  6324                           fsr0l	equ	0xFE9
  6325                           wreg	equ	0xFE8
  6326                           indf1	equ	0xFE7
  6327                           fsr1h	equ	0xFE2
  6328                           fsr1l	equ	0xFE1
  6329                           bsr	equ	0xFE0
  6330                           indf2	equ	0xFDF
  6331                           postinc2	equ	0xFDE
  6332                           postdec2	equ	0xFDD
  6333                           fsr2h	equ	0xFDA
  6334                           fsr2l	equ	0xFD9
  6335                           status	equ	0xFD8
  6336                           
  6337 ;; *************** function i2_recv_msg *****************
  6338 ;; Defined at:
  6339 ;;		line 63 in file "../src/messages.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6342 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6343 ;;  maxlength       1   58[COMRAM] unsigned char 
  6344 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6345 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6346 ;;  data            2   61[COMRAM] PTR void 
  6347 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6350 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6351 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6352 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6353 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      char 
  6356 ;; Registers used:
  6357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6363 ;;      Params:         7       0       0       0       0
  6364 ;;      Locals:         5       0       0       0       0
  6365 ;;      Temps:          2       0       0       0       0
  6366 ;;      Totals:        14       0       0       0       0
  6367 ;;Total ram usage:       14 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    1
  6370 ;; This function calls:
  6371 ;;		i2_memcpy
  6372 ;; This function is called by:
  6373 ;;		_FromMainHigh_recvmsg
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text43
  6378  000E10                     __ptext43:
  6379                           	opt stack 0
  6380  000E10                     i2_recv_msg:
  6381                           	opt stack 17
  6382                           
  6383                           ;messages.c: 64: unsigned char slot;
  6384                           ;messages.c: 68: msg *qmsg;
  6385                           ;messages.c: 69: size_t tlength;
  6386                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6387                           
  6388                           ;incstack = 0
  6389  000E10  EE20 F035          	lfsr	2,53
  6390  000E14  5039               	movf	i2recv_msg@qptr,w,c
  6391  000E16  26D9               	addwf	fsr2l,f,c
  6392  000E18  503A               	movf	i2recv_msg@qptr+1,w,c
  6393  000E1A  22DA               	addwfc	fsr2h,f,c
  6394  000E1C  50DF               	movf	indf2,w,c
  6395  000E1E  6E42               	movwf	i2recv_msg@slot,c
  6396                           
  6397                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6398  000E20  5042               	movf	i2recv_msg@slot,w,c
  6399  000E22  0D0D               	mullw	13
  6400  000E24  50F3               	movf	prodl,w,c
  6401  000E26  2439               	addwf	i2recv_msg@qptr,w,c
  6402  000E28  6E45               	movwf	i2recv_msg@qmsg,c
  6403  000E2A  50F4               	movf	prodh,w,c
  6404  000E2C  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6405  000E2E  6E46               	movwf	i2recv_msg@qmsg+1,c
  6406                           
  6407                           ;messages.c: 74: if (qmsg->full == 1) {
  6408  000E30  0E01               	movlw	1
  6409  000E32  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6410  000E36  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6411  000E3A  62DF               	cpfseq	indf2,c
  6412  000E3C  D050               	goto	i2l2905
  6413                           
  6414                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6415  000E3E  EE20 F001          	lfsr	2,1
  6416  000E42  5045               	movf	i2recv_msg@qmsg,w,c
  6417  000E44  26D9               	addwf	fsr2l,f,c
  6418  000E46  5046               	movf	i2recv_msg@qmsg+1,w,c
  6419  000E48  22DA               	addwfc	fsr2h,f,c
  6420  000E4A  50DF               	movf	indf2,w,c
  6421  000E4C  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6422  000E4E  B0D8               	btfsc	status,0,c
  6423  000E50  D002               	goto	i2l2889
  6424                           
  6425                           ;messages.c: 77: return (-3);
  6426  000E52  0EFD               	movlw	253
  6427  000E54  0012               	return	
  6428  000E56                     i2l2889:
  6429                           
  6430                           ;messages.c: 78: }
  6431                           ;messages.c: 80: tlength = qmsg->length;
  6432  000E56  EE20 F001          	lfsr	2,1
  6433  000E5A  5045               	movf	i2recv_msg@qmsg,w,c
  6434  000E5C  26D9               	addwf	fsr2l,f,c
  6435  000E5E  5046               	movf	i2recv_msg@qmsg+1,w,c
  6436  000E60  22DA               	addwfc	fsr2h,f,c
  6437  000E62  50DF               	movf	indf2,w,c
  6438  000E64  6E40               	movwf	??i2_recv_msg& (0+255),c
  6439  000E66  5040               	movf	??i2_recv_msg,w,c
  6440  000E68  6E43               	movwf	i2recv_msg@tlength,c
  6441  000E6A  6A44               	clrf	i2recv_msg@tlength+1,c
  6442                           
  6443                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6444  000E6C  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6445  000E70  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6446  000E74  0E03               	movlw	3
  6447  000E76  2445               	addwf	i2recv_msg@qmsg,w,c
  6448  000E78  6E40               	movwf	??i2_recv_msg& (0+255),c
  6449  000E7A  0E00               	movlw	0
  6450  000E7C  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6451  000E7E  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6452  000E80  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6453  000E84  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6454  000E88  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6455  000E8C  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6456  000E90  EC2C  F00C         	call	i2_memcpy	;wreg free
  6457                           
  6458                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6459  000E94  EE20 F035          	lfsr	2,53
  6460  000E98  5039               	movf	i2recv_msg@qptr,w,c
  6461  000E9A  26D9               	addwf	fsr2l,f,c
  6462  000E9C  503A               	movf	i2recv_msg@qptr+1,w,c
  6463  000E9E  22DA               	addwfc	fsr2h,f,c
  6464  000EA0  EE10 F035          	lfsr	1,53
  6465  000EA4  5039               	movf	i2recv_msg@qptr,w,c
  6466  000EA6  26E1               	addwf	fsr1l,f,c
  6467  000EA8  503A               	movf	i2recv_msg@qptr+1,w,c
  6468  000EAA  22E2               	addwfc	fsr1h,f,c
  6469  000EAC  50E7               	movf	indf1,w,c
  6470  000EAE  6E40               	movwf	??i2_recv_msg& (0+255),c
  6471  000EB0  2840               	incf	??i2_recv_msg,w,c
  6472  000EB2  0B03               	andlw	3
  6473  000EB4  6EDF               	movwf	indf2,c
  6474                           
  6475                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6476  000EB6  EE20 F002          	lfsr	2,2
  6477  000EBA  5045               	movf	i2recv_msg@qmsg,w,c
  6478  000EBC  26D9               	addwf	fsr2l,f,c
  6479  000EBE  5046               	movf	i2recv_msg@qmsg+1,w,c
  6480  000EC0  22DA               	addwfc	fsr2h,f,c
  6481  000EC2  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6482  000EC6  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6483  000ECA  CFDF FFE7          	movff	indf2,indf1
  6484                           
  6485                           ;messages.c: 91: qmsg->full = 0;
  6486  000ECE  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6487  000ED2  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6488  000ED6  0E00               	movlw	0
  6489  000ED8  6EDF               	movwf	indf2,c
  6490                           
  6491                           ;messages.c: 92: return (tlength);
  6492  000EDA  5043               	movf	i2recv_msg@tlength,w,c
  6493  000EDC  0012               	return	
  6494  000EDE                     i2l2905:
  6495                           
  6496                           ;messages.c: 94: return (-4);
  6497  000EDE  0EFC               	movlw	252
  6498  000EE0  0012               	return	
  6499  000EE2                     __end_ofi2_recv_msg:
  6500                           	opt stack 0
  6501                           pclatu	equ	0xFFB
  6502                           pclath	equ	0xFFA
  6503                           tblptru	equ	0xFF8
  6504                           tblptrh	equ	0xFF7
  6505                           tblptrl	equ	0xFF6
  6506                           tablat	equ	0xFF5
  6507                           prodh	equ	0xFF4
  6508                           prodl	equ	0xFF3
  6509                           intcon	equ	0xFF2
  6510                           postinc0	equ	0xFEE
  6511                           fsr0h	equ	0xFEA
  6512                           fsr0l	equ	0xFE9
  6513                           wreg	equ	0xFE8
  6514                           indf1	equ	0xFE7
  6515                           fsr1h	equ	0xFE2
  6516                           fsr1l	equ	0xFE1
  6517                           bsr	equ	0xFE0
  6518                           indf2	equ	0xFDF
  6519                           postinc2	equ	0xFDE
  6520                           postdec2	equ	0xFDD
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function _i2c_int_handler *****************
  6526 ;; Defined at:
  6527 ;;		line 100 in file "../src/my_i2c.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  6532 ;;  data_read       1    8[BANK0 ] unsigned char 
  6533 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  6534 ;;  msg_to_send     1    6[BANK0 ] unsigned char 
  6535 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  6536 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  6537 ;;  data_written    1    3[BANK0 ] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;		None               void
  6540 ;; Registers used:
  6541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6547 ;;      Params:         0       0       0       0       0
  6548 ;;      Locals:         0       9       0       0       0
  6549 ;;      Temps:          2       0       0       0       0
  6550 ;;      Totals:         2       9       0       0       0
  6551 ;;Total ram usage:       11 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    3
  6554 ;; This function calls:
  6555 ;;		_ToMainHigh_sendmsg
  6556 ;;		_handle_start
  6557 ;; This function is called by:
  6558 ;;		_InterruptHandlerHigh
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text44
  6563  0000BA                     __ptext44:
  6564                           	opt stack 0
  6565  0000BA                     _i2c_int_handler:
  6566                           	opt stack 17
  6567                           
  6568                           ;my_i2c.c: 101: unsigned char i2c_data;
  6569                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6570                           
  6571                           ;incstack = 0
  6572  0000BA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6573  0000BC  0E00               	movlw	0
  6574  0000BE  0100               	movlb	0	; () banked
  6575  0000C0  0100               	movlb	0	; () banked
  6576  0000C2  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6577  0000C4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6578                           
  6579                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6580  0000C6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6581  0000C8  0E00               	movlw	0
  6582  0000CA  0100               	movlb	0	; () banked
  6583  0000CC  0100               	movlb	0	; () banked
  6584  0000CE  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  6585  0000D0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6586                           
  6587                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6588  0000D2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6589  0000D4  0E00               	movlw	0
  6590  0000D6  0100               	movlb	0	; () banked
  6591  0000D8  0100               	movlb	0	; () banked
  6592  0000DA  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6593  0000DC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6594                           
  6595                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6596  0000DE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6597  0000E0  0E00               	movlw	0
  6598  0000E2  0100               	movlb	0	; () banked
  6599  0000E4  0100               	movlb	0	; () banked
  6600  0000E6  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6601  0000E8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6602                           
  6603                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6604  0000EA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6605  0000EC  0E00               	movlw	0
  6606  0000EE  0100               	movlb	0	; () banked
  6607  0000F0  0100               	movlb	0	; () banked
  6608  0000F2  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6609  0000F4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6613                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6614  0000F6  ACC6               	btfss	4038,6,c	;volatile
  6615  0000F8  D027               	goto	i2l2205
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6619  0000FA  9CC6               	bcf	4038,6,c	;volatile
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6623  0000FC  0100               	movlb	0	; () banked
  6624  0000FE  EE20 F00C          	lfsr	2,12
  6625  000102  0100               	movlb	0	; () banked
  6626  000104  51E7               	movf	_ic_ptr& (0+255),w,b
  6627  000106  26D9               	addwf	fsr2l,f,c
  6628  000108  0100               	movlb	0	; () banked
  6629  00010A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6630  00010C  22DA               	addwfc	fsr2h,f,c
  6631  00010E  0E05               	movlw	5
  6632  000110  6EDF               	movwf	indf2,c
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;my_i2c.c: 116: overrun_error = 1;
  6636  000112  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6637  000114  0E01               	movlw	1
  6638  000116  0100               	movlb	0	; () banked
  6639  000118  0100               	movlb	0	; () banked
  6640  00011A  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6641  00011C  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6645  00011E  0100               	movlb	0	; () banked
  6646  000120  EE20 F00E          	lfsr	2,14
  6647  000124  0100               	movlb	0	; () banked
  6648  000126  51E7               	movf	_ic_ptr& (0+255),w,b
  6649  000128  26D9               	addwf	fsr2l,f,c
  6650  00012A  0100               	movlb	0	; () banked
  6651  00012C  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6652  00012E  22DA               	addwfc	fsr2h,f,c
  6653  000130  2ADF               	incf	indf2,f,c
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6657  000132  0100               	movlb	0	; () banked
  6658  000134  EE20 F00D          	lfsr	2,13
  6659  000138  0100               	movlb	0	; () banked
  6660  00013A  51E7               	movf	_ic_ptr& (0+255),w,b
  6661  00013C  26D9               	addwf	fsr2l,f,c
  6662  00013E  0100               	movlb	0	; () banked
  6663  000140  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6664  000142  22DA               	addwfc	fsr2h,f,c
  6665  000144  0E04               	movlw	4
  6666  000146  6EDF               	movwf	indf2,c
  6667  000148                     i2l2205:
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;my_i2c.c: 119: }
  6671                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6672  000148  A0C7               	btfss	4039,0,c	;volatile
  6673  00014A  D008               	goto	i2l2211
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6677  00014C  CFC9 F0BB          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;my_i2c.c: 123: data_read = 1;
  6681  000150  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6682  000152  0E01               	movlw	1
  6683  000154  0100               	movlb	0	; () banked
  6684  000156  0100               	movlb	0	; () banked
  6685  000158  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6686  00015A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6687  00015C                     i2l2211:
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;my_i2c.c: 124: }
  6691                           ;my_i2c.c: 126: if (!overrun_error) {
  6692  00015C  0100               	movlb	0	; () banked
  6693  00015E  0100               	movlb	0	; () banked
  6694  000160  67BA               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6695  000162  D1B8               	goto	i2l272
  6696  000164  D1A1               	goto	i2l2299
  6697  000166                     i2l274:
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;my_i2c.c: 129: {
  6701                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6702  000166  A6C7               	btfss	4039,3,c	;volatile
  6703  000168  D1B5               	goto	i2l272
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;my_i2c.c: 132: handle_start(data_read);
  6707  00016A  0100               	movlb	0	; () banked
  6708  00016C  0100               	movlb	0	; () banked
  6709  00016E  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6710  000170  EC71  F007         	call	_handle_start
  6711                           
  6712                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6713  000174  0100               	movlb	0	; () banked
  6714  000176  EE20 F00C          	lfsr	2,12
  6715  00017A  0100               	movlb	0	; () banked
  6716  00017C  51E7               	movf	_ic_ptr& (0+255),w,b
  6717  00017E  26D9               	addwf	fsr2l,f,c
  6718  000180  0100               	movlb	0	; () banked
  6719  000182  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6720  000184  22DA               	addwfc	fsr2h,f,c
  6721  000186  0E08               	movlw	8
  6722  000188  62DF               	cpfseq	indf2,c
  6723  00018A  D1A4               	goto	i2l272
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 135: data_read = 0;
  6727  00018C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6728  00018E  0E00               	movlw	0
  6729  000190  0100               	movlb	0	; () banked
  6730  000192  0100               	movlb	0	; () banked
  6731  000194  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6732  000196  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6733                           
  6734                           ;my_i2c.c: 136: msg_to_send = 1;
  6735  000198  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6736  00019A  0E01               	movlw	1
  6737  00019C  0100               	movlb	0	; () banked
  6738  00019E  0100               	movlb	0	; () banked
  6739  0001A0  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6740  0001A2  D175               	goto	L6
  6741  0001A4                     i2l278:
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;my_i2c.c: 142: {
  6745                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6746  0001A4  A8C7               	btfss	4039,4,c	;volatile
  6747  0001A6  D02E               	goto	i2l2231
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6751  0001A8  0100               	movlb	0	; () banked
  6752  0001AA  EE20 F00B          	lfsr	2,11
  6753  0001AE  0100               	movlb	0	; () banked
  6754  0001B0  51E7               	movf	_ic_ptr& (0+255),w,b
  6755  0001B2  26D9               	addwf	fsr2l,f,c
  6756  0001B4  0100               	movlb	0	; () banked
  6757  0001B6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6758  0001B8  22DA               	addwfc	fsr2h,f,c
  6759  0001BA  2ADF               	incf	indf2,f,c
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;my_i2c.c: 148: if (data_read) {
  6763  0001BC  0100               	movlb	0	; () banked
  6764  0001BE  0100               	movlb	0	; () banked
  6765  0001C0  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6766  0001C2  B4D8               	btfsc	status,2,c
  6767  0001C4  D166               	goto	L8
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  6771  0001C6  BAC7               	btfsc	4039,5,c	;volatile
  6772  0001C8  D007               	goto	i2l2229
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;my_i2c.c: 150: msg_ready = 1;
  6776  0001CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6777  0001CC  0E01               	movlw	1
  6778  0001CE  0100               	movlb	0	; () banked
  6779  0001D0  0100               	movlb	0	; () banked
  6780  0001D2  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6781  0001D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6782                           
  6783                           ;my_i2c.c: 151: } else {
  6784  0001D6  D15D               	goto	L8
  6785  0001D8                     i2l2229:
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;my_i2c.c: 152: ic_ptr->error_count++;
  6789  0001D8  0100               	movlb	0	; () banked
  6790  0001DA  EE20 F00E          	lfsr	2,14
  6791  0001DE  0100               	movlb	0	; () banked
  6792  0001E0  51E7               	movf	_ic_ptr& (0+255),w,b
  6793  0001E2  26D9               	addwf	fsr2l,f,c
  6794  0001E4  0100               	movlb	0	; () banked
  6795  0001E6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6796  0001E8  22DA               	addwfc	fsr2h,f,c
  6797  0001EA  2ADF               	incf	indf2,f,c
  6798                           
  6799                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6800  0001EC  0100               	movlb	0	; () banked
  6801  0001EE  EE20 F00D          	lfsr	2,13
  6802  0001F2  0100               	movlb	0	; () banked
  6803  0001F4  51E7               	movf	_ic_ptr& (0+255),w,b
  6804  0001F6  26D9               	addwf	fsr2l,f,c
  6805  0001F8  0100               	movlb	0	; () banked
  6806  0001FA  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6807  0001FC  22DA               	addwfc	fsr2h,f,c
  6808  0001FE  0E06               	movlw	6
  6809  000200  6EDF               	movwf	indf2,c
  6810                           
  6811                           ; BSR set to: 0
  6812  000202  D147               	goto	L8
  6813  000204                     i2l2231:
  6814                           
  6815                           ; BSR set to: 0
  6816  000204  0100               	movlb	0	; () banked
  6817  000206  0100               	movlb	0	; () banked
  6818  000208  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6819  00020A  B4D8               	btfsc	status,2,c
  6820  00020C  D163               	goto	i2l272
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6824  00020E  0100               	movlb	0	; () banked
  6825  000210  EE20 F00B          	lfsr	2,11
  6826  000214  0100               	movlb	0	; () banked
  6827  000216  51E7               	movf	_ic_ptr& (0+255),w,b
  6828  000218  26D9               	addwf	fsr2l,f,c
  6829  00021A  0100               	movlb	0	; () banked
  6830  00021C  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6831  00021E  22DA               	addwfc	fsr2h,f,c
  6832  000220  2ADF               	incf	indf2,f,c
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6836  000222  BAC7               	btfsc	4039,5,c	;volatile
  6837  000224  D019               	goto	i2l2247
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6841  000226  B4C7               	btfsc	4039,2,c	;volatile
  6842  000228  D00B               	goto	i2l2241
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6846  00022A  0100               	movlb	0	; () banked
  6847  00022C  EE20 F00C          	lfsr	2,12
  6848  000230  0100               	movlb	0	; () banked
  6849  000232  51E7               	movf	_ic_ptr& (0+255),w,b
  6850  000234  26D9               	addwf	fsr2l,f,c
  6851  000236  0100               	movlb	0	; () banked
  6852  000238  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6853  00023A  22DA               	addwfc	fsr2h,f,c
  6854  00023C  0E07               	movlw	7
  6855  00023E  D071               	goto	L5
  6856  000240                     i2l2241:
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6860  000240  0100               	movlb	0	; () banked
  6861  000242  EE20 F00C          	lfsr	2,12
  6862  000246  0100               	movlb	0	; () banked
  6863  000248  51E7               	movf	_ic_ptr& (0+255),w,b
  6864  00024A  26D9               	addwf	fsr2l,f,c
  6865  00024C  0100               	movlb	0	; () banked
  6866  00024E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6867  000250  22DA               	addwfc	fsr2h,f,c
  6868  000252  0E08               	movlw	8
  6869  000254  6EDF               	movwf	indf2,c
  6870  000256  D110               	goto	L9
  6871  000258                     i2l2247:
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6875  000258  0100               	movlb	0	; () banked
  6876  00025A  EE20 F00E          	lfsr	2,14
  6877  00025E  0100               	movlb	0	; () banked
  6878  000260  51E7               	movf	_ic_ptr& (0+255),w,b
  6879  000262  26D9               	addwf	fsr2l,f,c
  6880  000264  0100               	movlb	0	; () banked
  6881  000266  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6882  000268  22DA               	addwfc	fsr2h,f,c
  6883  00026A  2ADF               	incf	indf2,f,c
  6884                           
  6885                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6886  00026C  0100               	movlb	0	; () banked
  6887  00026E  EE20 F00C          	lfsr	2,12
  6888  000272  0100               	movlb	0	; () banked
  6889  000274  51E7               	movf	_ic_ptr& (0+255),w,b
  6890  000276  26D9               	addwf	fsr2l,f,c
  6891  000278  0100               	movlb	0	; () banked
  6892  00027A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6893  00027C  22DA               	addwfc	fsr2h,f,c
  6894  00027E  0E05               	movlw	5
  6895  000280  6EDF               	movwf	indf2,c
  6896                           
  6897                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  6898  000282  0100               	movlb	0	; () banked
  6899  000284  EE20 F00D          	lfsr	2,13
  6900  000288  0100               	movlb	0	; () banked
  6901  00028A  51E7               	movf	_ic_ptr& (0+255),w,b
  6902  00028C  26D9               	addwf	fsr2l,f,c
  6903  00028E  0100               	movlb	0	; () banked
  6904  000290  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6905  000292  22DA               	addwfc	fsr2h,f,c
  6906  000294  0E06               	movlw	6
  6907  000296  D045               	goto	L5
  6908  000298                     i2l2249:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;my_i2c.c: 177: {
  6912                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6913  000298  0100               	movlb	0	; () banked
  6914  00029A  EE20 F01A          	lfsr	2,26
  6915  00029E  0100               	movlb	0	; () banked
  6916  0002A0  51E7               	movf	_ic_ptr& (0+255),w,b
  6917  0002A2  26D9               	addwf	fsr2l,f,c
  6918  0002A4  0100               	movlb	0	; () banked
  6919  0002A6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6920  0002A8  22DA               	addwfc	fsr2h,f,c
  6921  0002AA  50DF               	movf	indf2,w,c
  6922  0002AC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6923  0002AE  0100               	movlb	0	; () banked
  6924  0002B0  EE20 F019          	lfsr	2,25
  6925  0002B4  0100               	movlb	0	; () banked
  6926  0002B6  51E7               	movf	_ic_ptr& (0+255),w,b
  6927  0002B8  26D9               	addwf	fsr2l,f,c
  6928  0002BA  0100               	movlb	0	; () banked
  6929  0002BC  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6930  0002BE  22DA               	addwfc	fsr2h,f,c
  6931  0002C0  50DF               	movf	indf2,w,c
  6932  0002C2  5C49               	subwf	??_i2c_int_handler,w,c
  6933  0002C4  B0D8               	btfsc	status,0,c
  6934  0002C6  D0E5               	goto	L8
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6938  0002C8  0100               	movlb	0	; () banked
  6939  0002CA  EE20 F01A          	lfsr	2,26
  6940  0002CE  0100               	movlb	0	; () banked
  6941  0002D0  51E7               	movf	_ic_ptr& (0+255),w,b
  6942  0002D2  26D9               	addwf	fsr2l,f,c
  6943  0002D4  0100               	movlb	0	; () banked
  6944  0002D6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6945  0002D8  22DA               	addwfc	fsr2h,f,c
  6946  0002DA  50DF               	movf	indf2,w,c
  6947  0002DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6948  0002DE  5049               	movf	??_i2c_int_handler,w,c
  6949  0002E0  0D01               	mullw	1
  6950  0002E2  0E0F               	movlw	15
  6951  0002E4  26F3               	addwf	prodl,f,c
  6952  0002E6  0E00               	movlw	0
  6953  0002E8  22F4               	addwfc	prodh,f,c
  6954  0002EA  50F3               	movf	prodl,w,c
  6955  0002EC  0100               	movlb	0	; () banked
  6956  0002EE  0100               	movlb	0	; () banked
  6957  0002F0  25E7               	addwf	_ic_ptr& (0+255),w,b
  6958  0002F2  6ED9               	movwf	fsr2l,c
  6959  0002F4  50F4               	movf	prodh,w,c
  6960  0002F6  0100               	movlb	0	; () banked
  6961  0002F8  0100               	movlb	0	; () banked
  6962  0002FA  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6963  0002FC  6EDA               	movwf	fsr2h,c
  6964  0002FE  50DF               	movf	indf2,w,c
  6965  000300  6EC9               	movwf	4041,c	;volatile
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  6969  000302  0100               	movlb	0	; () banked
  6970  000304  EE20 F01A          	lfsr	2,26
  6971  000308  0100               	movlb	0	; () banked
  6972  00030A  51E7               	movf	_ic_ptr& (0+255),w,b
  6973  00030C  26D9               	addwf	fsr2l,f,c
  6974  00030E  0100               	movlb	0	; () banked
  6975  000310  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6976  000312  22DA               	addwfc	fsr2h,f,c
  6977  000314  2ADF               	incf	indf2,f,c
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;my_i2c.c: 181: data_written = 1;
  6981  000316  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6982  000318  0E01               	movlw	1
  6983  00031A  0100               	movlb	0	; () banked
  6984  00031C  0100               	movlb	0	; () banked
  6985  00031E  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  6986  000320  D0B6               	goto	L6
  6987  000322                     L5:
  6988  000322  6EDF               	movwf	indf2,c
  6989  000324  D0D7               	goto	i2l272
  6990  000326                     i2l292:
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;my_i2c.c: 189: {
  6994                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  6995  000326  A8C7               	btfss	4039,4,c	;volatile
  6996  000328  D05E               	goto	i2l2277
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7000  00032A  0100               	movlb	0	; () banked
  7001  00032C  EE20 F00B          	lfsr	2,11
  7002  000330  0100               	movlb	0	; () banked
  7003  000332  51E7               	movf	_ic_ptr& (0+255),w,b
  7004  000334  26D9               	addwf	fsr2l,f,c
  7005  000336  0100               	movlb	0	; () banked
  7006  000338  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7007  00033A  22DA               	addwfc	fsr2h,f,c
  7008  00033C  2ADF               	incf	indf2,f,c
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;my_i2c.c: 194: if (data_read) {
  7012  00033E  0100               	movlb	0	; () banked
  7013  000340  0100               	movlb	0	; () banked
  7014  000342  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7015  000344  B4D8               	btfsc	status,2,c
  7016  000346  D048               	goto	i2l2273
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7020  000348  AAC7               	btfss	4039,5,c	;volatile
  7021  00034A  D025               	goto	i2l2271
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7025  00034C  0100               	movlb	0	; () banked
  7026  00034E  EE20 F00A          	lfsr	2,10
  7027  000352  0100               	movlb	0	; () banked
  7028  000354  51E7               	movf	_ic_ptr& (0+255),w,b
  7029  000356  26D9               	addwf	fsr2l,f,c
  7030  000358  0100               	movlb	0	; () banked
  7031  00035A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7032  00035C  22DA               	addwfc	fsr2h,f,c
  7033  00035E  50DF               	movf	indf2,w,c
  7034  000360  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7035  000362  5049               	movf	??_i2c_int_handler,w,c
  7036  000364  0D01               	mullw	1
  7037  000366  50F3               	movf	prodl,w,c
  7038  000368  0100               	movlb	0	; () banked
  7039  00036A  0100               	movlb	0	; () banked
  7040  00036C  25E7               	addwf	_ic_ptr& (0+255),w,b
  7041  00036E  6ED9               	movwf	fsr2l,c
  7042  000370  50F4               	movf	prodh,w,c
  7043  000372  0100               	movlb	0	; () banked
  7044  000374  0100               	movlb	0	; () banked
  7045  000376  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7046  000378  6EDA               	movwf	fsr2h,c
  7047  00037A  0100               	movlb	0	; () banked
  7048  00037C  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7052  000380  0100               	movlb	0	; () banked
  7053  000382  EE20 F00A          	lfsr	2,10
  7054  000386  0100               	movlb	0	; () banked
  7055  000388  51E7               	movf	_ic_ptr& (0+255),w,b
  7056  00038A  26D9               	addwf	fsr2l,f,c
  7057  00038C  0100               	movlb	0	; () banked
  7058  00038E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7059  000390  22DA               	addwfc	fsr2h,f,c
  7060  000392  2ADF               	incf	indf2,f,c
  7061  000394  D021               	goto	i2l2273
  7062  000396                     i2l2271:
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7066  000396  0100               	movlb	0	; () banked
  7067  000398  EE20 F00E          	lfsr	2,14
  7068  00039C  0100               	movlb	0	; () banked
  7069  00039E  51E7               	movf	_ic_ptr& (0+255),w,b
  7070  0003A0  26D9               	addwf	fsr2l,f,c
  7071  0003A2  0100               	movlb	0	; () banked
  7072  0003A4  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7073  0003A6  22DA               	addwfc	fsr2h,f,c
  7074  0003A8  2ADF               	incf	indf2,f,c
  7075                           
  7076                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7077  0003AA  0100               	movlb	0	; () banked
  7078  0003AC  EE20 F00D          	lfsr	2,13
  7079  0003B0  0100               	movlb	0	; () banked
  7080  0003B2  51E7               	movf	_ic_ptr& (0+255),w,b
  7081  0003B4  26D9               	addwf	fsr2l,f,c
  7082  0003B6  0100               	movlb	0	; () banked
  7083  0003B8  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7084  0003BA  22DA               	addwfc	fsr2h,f,c
  7085  0003BC  0E06               	movlw	6
  7086  0003BE  6EDF               	movwf	indf2,c
  7087                           
  7088                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7089  0003C0  0100               	movlb	0	; () banked
  7090  0003C2  EE20 F00C          	lfsr	2,12
  7091  0003C6  0100               	movlb	0	; () banked
  7092  0003C8  51E7               	movf	_ic_ptr& (0+255),w,b
  7093  0003CA  26D9               	addwf	fsr2l,f,c
  7094  0003CC  0100               	movlb	0	; () banked
  7095  0003CE  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7096  0003D0  22DA               	addwfc	fsr2h,f,c
  7097  0003D2  0E05               	movlw	5
  7098  0003D4  6EDF               	movwf	indf2,c
  7099  0003D6  D05D               	goto	L8
  7100  0003D8                     i2l2273:
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;my_i2c.c: 205: msg_ready = 1;
  7104  0003D8  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7105  0003DA  0E01               	movlw	1
  7106  0003DC  0100               	movlb	0	; () banked
  7107  0003DE  0100               	movlb	0	; () banked
  7108  0003E0  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7109  0003E2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7110                           
  7111                           ; BSR set to: 0
  7112  0003E4  D056               	goto	L8
  7113  0003E6                     i2l2277:
  7114                           
  7115                           ; BSR set to: 0
  7116  0003E6  0100               	movlb	0	; () banked
  7117  0003E8  0100               	movlb	0	; () banked
  7118  0003EA  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7119  0003EC  B4D8               	btfsc	status,2,c
  7120  0003EE  D072               	goto	i2l272
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7124  0003F0  0100               	movlb	0	; () banked
  7125  0003F2  EE20 F00B          	lfsr	2,11
  7126  0003F6  0100               	movlb	0	; () banked
  7127  0003F8  51E7               	movf	_ic_ptr& (0+255),w,b
  7128  0003FA  26D9               	addwf	fsr2l,f,c
  7129  0003FC  0100               	movlb	0	; () banked
  7130  0003FE  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7131  000400  22DA               	addwfc	fsr2h,f,c
  7132  000402  2ADF               	incf	indf2,f,c
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7136  000404  AAC7               	btfss	4039,5,c	;volatile
  7137  000406  D025               	goto	i2l300
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7141  000408  0100               	movlb	0	; () banked
  7142  00040A  EE20 F00A          	lfsr	2,10
  7143  00040E  0100               	movlb	0	; () banked
  7144  000410  51E7               	movf	_ic_ptr& (0+255),w,b
  7145  000412  26D9               	addwf	fsr2l,f,c
  7146  000414  0100               	movlb	0	; () banked
  7147  000416  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7148  000418  22DA               	addwfc	fsr2h,f,c
  7149  00041A  50DF               	movf	indf2,w,c
  7150  00041C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7151  00041E  5049               	movf	??_i2c_int_handler,w,c
  7152  000420  0D01               	mullw	1
  7153  000422  50F3               	movf	prodl,w,c
  7154  000424  0100               	movlb	0	; () banked
  7155  000426  0100               	movlb	0	; () banked
  7156  000428  25E7               	addwf	_ic_ptr& (0+255),w,b
  7157  00042A  6ED9               	movwf	fsr2l,c
  7158  00042C  50F4               	movf	prodh,w,c
  7159  00042E  0100               	movlb	0	; () banked
  7160  000430  0100               	movlb	0	; () banked
  7161  000432  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7162  000434  6EDA               	movwf	fsr2h,c
  7163  000436  0100               	movlb	0	; () banked
  7164  000438  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7168  00043C  0100               	movlb	0	; () banked
  7169  00043E  EE20 F00A          	lfsr	2,10
  7170  000442  0100               	movlb	0	; () banked
  7171  000444  51E7               	movf	_ic_ptr& (0+255),w,b
  7172  000446  26D9               	addwf	fsr2l,f,c
  7173  000448  0100               	movlb	0	; () banked
  7174  00044A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7175  00044C  22DA               	addwfc	fsr2h,f,c
  7176  00044E  2ADF               	incf	indf2,f,c
  7177                           
  7178                           ;my_i2c.c: 213: } else {
  7179  000450  D041               	goto	i2l272
  7180  000452                     i2l300:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7184  000452  A4C7               	btfss	4039,2,c	;volatile
  7185  000454  D6C1               	goto	i2l2229
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7189  000456  0100               	movlb	0	; () banked
  7190  000458  EE20 F00C          	lfsr	2,12
  7191  00045C  0100               	movlb	0	; () banked
  7192  00045E  51E7               	movf	_ic_ptr& (0+255),w,b
  7193  000460  26D9               	addwf	fsr2l,f,c
  7194  000462  0100               	movlb	0	; () banked
  7195  000464  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7196  000466  22DA               	addwfc	fsr2h,f,c
  7197  000468  0E08               	movlw	8
  7198  00046A  6EDF               	movwf	indf2,c
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;my_i2c.c: 216: msg_ready = 1;
  7202  00046C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7203  00046E  0E01               	movlw	1
  7204  000470  0100               	movlb	0	; () banked
  7205  000472  0100               	movlb	0	; () banked
  7206  000474  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7207  000476  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7208  000478                     L9:
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 217: msg_to_send = 1;
  7212  000478  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7213  00047A  0E01               	movlw	1
  7214  00047C  0100               	movlb	0	; () banked
  7215  00047E  0100               	movlb	0	; () banked
  7216  000480  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7217  000482  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;my_i2c.c: 219: data_read = 0;
  7221  000484  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7222  000486  0E00               	movlw	0
  7223  000488  0100               	movlb	0	; () banked
  7224  00048A  0100               	movlb	0	; () banked
  7225  00048C  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  7226  00048E                     L6:
  7227  00048E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7228                           
  7229                           ;my_i2c.c: 220: } else {
  7230  000490  D021               	goto	i2l272
  7231  000492                     L8:
  7232                           
  7233                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7234  000492  0100               	movlb	0	; () banked
  7235  000494  EE20 F00C          	lfsr	2,12
  7236  000498  0100               	movlb	0	; () banked
  7237  00049A  51E7               	movf	_ic_ptr& (0+255),w,b
  7238  00049C  26D9               	addwf	fsr2l,f,c
  7239  00049E  0100               	movlb	0	; () banked
  7240  0004A0  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7241  0004A2  22DA               	addwfc	fsr2h,f,c
  7242  0004A4  0E05               	movlw	5
  7243  0004A6  D73D               	goto	L5
  7244  0004A8                     i2l2299:
  7245                           
  7246                           ; BSR set to: 0
  7247  0004A8  0100               	movlb	0	; () banked
  7248  0004AA  EE20 F00C          	lfsr	2,12
  7249  0004AE  0100               	movlb	0	; () banked
  7250  0004B0  51E7               	movf	_ic_ptr& (0+255),w,b
  7251  0004B2  26D9               	addwf	fsr2l,f,c
  7252  0004B4  0100               	movlb	0	; () banked
  7253  0004B6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7254  0004B8  22DA               	addwfc	fsr2h,f,c
  7255  0004BA  50DF               	movf	indf2,w,c
  7256                           
  7257                           ; Switch size 1, requested type "space"
  7258                           ; Number of cases is 4, Range of values is 5 to 8
  7259                           ; switch strategies available:
  7260                           ; Name         Instructions Cycles
  7261                           ; simple_byte           13     7 (average)
  7262                           ;	Chosen strategy is simple_byte
  7263  0004BC  0A05               	xorlw	5	; case 5
  7264  0004BE  B4D8               	btfsc	status,2,c
  7265  0004C0  D652               	goto	i2l274
  7266  0004C2  0A03               	xorlw	3	; case 6
  7267  0004C4  B4D8               	btfsc	status,2,c
  7268  0004C6  D66E               	goto	i2l278
  7269  0004C8  0A01               	xorlw	1	; case 7
  7270  0004CA  B4D8               	btfsc	status,2,c
  7271  0004CC  D72C               	goto	i2l292
  7272  0004CE  0A0F               	xorlw	15	; case 8
  7273  0004D0  B4D8               	btfsc	status,2,c
  7274  0004D2  D6E2               	goto	i2l2249
  7275  0004D4                     i2l272:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;my_i2c.c: 230: }
  7279                           ;my_i2c.c: 233: if (data_read || data_written) {
  7280  0004D4  0100               	movlb	0	; () banked
  7281  0004D6  0100               	movlb	0	; () banked
  7282  0004D8  67BE               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7283  0004DA  D005               	goto	i2l306
  7284                           
  7285                           ; BSR set to: 0
  7286  0004DC  0100               	movlb	0	; () banked
  7287  0004DE  0100               	movlb	0	; () banked
  7288  0004E0  51B9               	movf	i2c_int_handler@data_written& (0+255),w,b
  7289  0004E2  B4D8               	btfsc	status,2,c
  7290  0004E4  D002               	goto	i2l2305
  7291  0004E6                     i2l306:
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7295  0004E6  A8C6               	btfss	4038,4,c	;volatile
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7299  0004E8  88C6               	bsf	4038,4,c	;volatile
  7300  0004EA                     i2l2305:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;my_i2c.c: 237: }
  7304                           ;my_i2c.c: 238: }
  7305                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7306  0004EA  0100               	movlb	0	; () banked
  7307  0004EC  EE20 F00A          	lfsr	2,10
  7308  0004F0  0100               	movlb	0	; () banked
  7309  0004F2  51E7               	movf	_ic_ptr& (0+255),w,b
  7310  0004F4  26D9               	addwf	fsr2l,f,c
  7311  0004F6  0100               	movlb	0	; () banked
  7312  0004F8  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7313  0004FA  22DA               	addwfc	fsr2h,f,c
  7314  0004FC  0E08               	movlw	8
  7315  0004FE  64DF               	cpfsgt	indf2,c
  7316  000500  D024               	goto	i2l2311
  7317                           
  7318                           ; BSR set to: 0
  7319  000502  0100               	movlb	0	; () banked
  7320  000504  0100               	movlb	0	; () banked
  7321  000506  67BD               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7322  000508  D020               	goto	i2l2311
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7326  00050A  0100               	movlb	0	; () banked
  7327  00050C  EE20 F00C          	lfsr	2,12
  7328  000510  0100               	movlb	0	; () banked
  7329  000512  51E7               	movf	_ic_ptr& (0+255),w,b
  7330  000514  26D9               	addwf	fsr2l,f,c
  7331  000516  0100               	movlb	0	; () banked
  7332  000518  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7333  00051A  22DA               	addwfc	fsr2h,f,c
  7334  00051C  0E05               	movlw	5
  7335  00051E  6EDF               	movwf	indf2,c
  7336                           
  7337                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7338  000520  0100               	movlb	0	; () banked
  7339  000522  EE20 F00E          	lfsr	2,14
  7340  000526  0100               	movlb	0	; () banked
  7341  000528  51E7               	movf	_ic_ptr& (0+255),w,b
  7342  00052A  26D9               	addwf	fsr2l,f,c
  7343  00052C  0100               	movlb	0	; () banked
  7344  00052E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7345  000530  22DA               	addwfc	fsr2h,f,c
  7346  000532  2ADF               	incf	indf2,f,c
  7347                           
  7348                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7349  000534  0100               	movlb	0	; () banked
  7350  000536  EE20 F00D          	lfsr	2,13
  7351  00053A  0100               	movlb	0	; () banked
  7352  00053C  51E7               	movf	_ic_ptr& (0+255),w,b
  7353  00053E  26D9               	addwf	fsr2l,f,c
  7354  000540  0100               	movlb	0	; () banked
  7355  000542  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7356  000544  22DA               	addwfc	fsr2h,f,c
  7357  000546  0E07               	movlw	7
  7358  000548  6EDF               	movwf	indf2,c
  7359  00054A                     i2l2311:
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;my_i2c.c: 245: }
  7363                           ;my_i2c.c: 247: if (msg_ready) {
  7364  00054A  0100               	movlb	0	; () banked
  7365  00054C  0100               	movlb	0	; () banked
  7366  00054E  51BD               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7367  000550  B4D8               	btfsc	status,2,c
  7368  000552  D03E               	goto	i2l2319
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7372  000554  0100               	movlb	0	; () banked
  7373  000556  EE20 F00B          	lfsr	2,11
  7374  00055A  0100               	movlb	0	; () banked
  7375  00055C  51E7               	movf	_ic_ptr& (0+255),w,b
  7376  00055E  26D9               	addwf	fsr2l,f,c
  7377  000560  0100               	movlb	0	; () banked
  7378  000562  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7379  000564  22DA               	addwfc	fsr2h,f,c
  7380  000566  0100               	movlb	0	; () banked
  7381  000568  EE10 F00A          	lfsr	1,10
  7382  00056C  0100               	movlb	0	; () banked
  7383  00056E  51E7               	movf	_ic_ptr& (0+255),w,b
  7384  000570  26E1               	addwf	fsr1l,f,c
  7385  000572  0100               	movlb	0	; () banked
  7386  000574  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7387  000576  22E2               	addwfc	fsr1h,f,c
  7388  000578  50E7               	movf	indf1,w,c
  7389  00057A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7390  00057C  5049               	movf	??_i2c_int_handler,w,c
  7391  00057E  0D01               	mullw	1
  7392  000580  50F3               	movf	prodl,w,c
  7393  000582  0100               	movlb	0	; () banked
  7394  000584  0100               	movlb	0	; () banked
  7395  000586  25E7               	addwf	_ic_ptr& (0+255),w,b
  7396  000588  6EE1               	movwf	fsr1l,c
  7397  00058A  50F4               	movf	prodh,w,c
  7398  00058C  0100               	movlb	0	; () banked
  7399  00058E  0100               	movlb	0	; () banked
  7400  000590  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7401  000592  6EE2               	movwf	fsr1h,c
  7402  000594  CFDF FFE7          	movff	indf2,indf1
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7406  000598  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7407  00059A  0E28               	movlw	40
  7408  00059C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7409  00059E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7410  0005A0  0100               	movlb	0	; () banked
  7411  0005A2  C0E8  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7412  0005A6  0100               	movlb	0	; () banked
  7413  0005A8  C0E7  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7414  0005AC  0100               	movlb	0	; () banked
  7415  0005AE  EE20 F00A          	lfsr	2,10
  7416  0005B2  0100               	movlb	0	; () banked
  7417  0005B4  51E7               	movf	_ic_ptr& (0+255),w,b
  7418  0005B6  26D9               	addwf	fsr2l,f,c
  7419  0005B8  0100               	movlb	0	; () banked
  7420  0005BA  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7421  0005BC  22DA               	addwfc	fsr2h,f,c
  7422  0005BE  50DF               	movf	indf2,w,c
  7423  0005C0  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  7424  0005C2  284A               	incf	??_i2c_int_handler+1,w,c
  7425  0005C4  EC50  F00D         	call	_ToMainHigh_sendmsg
  7426                           
  7427                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7428  0005C8  0100               	movlb	0	; () banked
  7429  0005CA  EE20 F00A          	lfsr	2,10
  7430  0005CE  D043               	goto	L7
  7431  0005D0                     i2l2319:
  7432                           
  7433                           ; BSR set to: 0
  7434  0005D0  0100               	movlb	0	; () banked
  7435  0005D2  EE20 F00E          	lfsr	2,14
  7436  0005D6  0100               	movlb	0	; () banked
  7437  0005D8  51E7               	movf	_ic_ptr& (0+255),w,b
  7438  0005DA  26D9               	addwf	fsr2l,f,c
  7439  0005DC  0100               	movlb	0	; () banked
  7440  0005DE  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7441  0005E0  22DA               	addwfc	fsr2h,f,c
  7442  0005E2  50DF               	movf	indf2,w,c
  7443  0005E4  B4D8               	btfsc	status,2,c
  7444  0005E6  D03F               	goto	i2l2327
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7448  0005E8  0100               	movlb	0	; () banked
  7449  0005EA  EE20 F00E          	lfsr	2,14
  7450  0005EE  0100               	movlb	0	; () banked
  7451  0005F0  51E7               	movf	_ic_ptr& (0+255),w,b
  7452  0005F2  26D9               	addwf	fsr2l,f,c
  7453  0005F4  0100               	movlb	0	; () banked
  7454  0005F6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7455  0005F8  22DA               	addwfc	fsr2h,f,c
  7456  0005FA  50DF               	movf	indf2,w,c
  7457  0005FC  0100               	movlb	0	; () banked
  7458  0005FE  0100               	movlb	0	; () banked
  7459  000600  6FB6               	movwf	i2c_int_handler@error_buf& (0+255),b
  7460                           
  7461                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7462  000602  0100               	movlb	0	; () banked
  7463  000604  EE20 F00D          	lfsr	2,13
  7464  000608  0100               	movlb	0	; () banked
  7465  00060A  51E7               	movf	_ic_ptr& (0+255),w,b
  7466  00060C  26D9               	addwf	fsr2l,f,c
  7467  00060E  0100               	movlb	0	; () banked
  7468  000610  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7469  000612  22DA               	addwfc	fsr2h,f,c
  7470  000614  50DF               	movf	indf2,w,c
  7471  000616  0100               	movlb	0	; () banked
  7472  000618  0100               	movlb	0	; () banked
  7473  00061A  6FB7               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7474                           
  7475                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7476  00061C  0100               	movlb	0	; () banked
  7477  00061E  EE20 F00B          	lfsr	2,11
  7478  000622  0100               	movlb	0	; () banked
  7479  000624  51E7               	movf	_ic_ptr& (0+255),w,b
  7480  000626  26D9               	addwf	fsr2l,f,c
  7481  000628  0100               	movlb	0	; () banked
  7482  00062A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7483  00062C  22DA               	addwfc	fsr2h,f,c
  7484  00062E  50DF               	movf	indf2,w,c
  7485  000630  0100               	movlb	0	; () banked
  7486  000632  0100               	movlb	0	; () banked
  7487  000634  6FB8               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7491  000636  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7492  000638  0E29               	movlw	41
  7493  00063A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7494  00063C  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7495  00063E  0100               	movlb	0	; () banked
  7496  000640  0E00               	movlw	high i2c_int_handler@error_buf
  7497  000642  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7498  000644  0100               	movlb	0	; () banked
  7499  000646  0EB6               	movlw	low i2c_int_handler@error_buf
  7500  000648  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7501  00064A  0E03               	movlw	3
  7502  00064C  EC50  F00D         	call	_ToMainHigh_sendmsg
  7503                           
  7504                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7505  000650  0100               	movlb	0	; () banked
  7506  000652  EE20 F00E          	lfsr	2,14
  7507  000656                     L7:
  7508  000656  0100               	movlb	0	; () banked
  7509  000658  51E7               	movf	_ic_ptr& (0+255),w,b
  7510  00065A  26D9               	addwf	fsr2l,f,c
  7511  00065C  0100               	movlb	0	; () banked
  7512  00065E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7513  000660  22DA               	addwfc	fsr2h,f,c
  7514  000662  0E00               	movlw	0
  7515  000664  6EDF               	movwf	indf2,c
  7516  000666                     i2l2327:
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;my_i2c.c: 257: }
  7520                           ;my_i2c.c: 258: if (msg_to_send) {
  7521  000666  0100               	movlb	0	; () banked
  7522  000668  0100               	movlb	0	; () banked
  7523  00066A  51BC               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7524  00066C  B4D8               	btfsc	status,2,c
  7525  00066E  0012               	return	
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7529  000670  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7530  000672  0E2A               	movlw	42
  7531  000674  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7532  000676  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7533  000678  0100               	movlb	0	; () banked
  7534  00067A  C0E8  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7535  00067E  0100               	movlb	0	; () banked
  7536  000680  C0E7  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7537  000684  0E00               	movlw	0
  7538  000686  EC50  F00D         	call	_ToMainHigh_sendmsg
  7539                           
  7540                           ;my_i2c.c: 261: msg_to_send = 0;
  7541  00068A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7542  00068C  0E00               	movlw	0
  7543  00068E  0100               	movlb	0	; () banked
  7544  000690  0100               	movlb	0	; () banked
  7545  000692  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7546  000694  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7547  000696  0012               	return	
  7548  000698                     __end_of_i2c_int_handler:
  7549                           	opt stack 0
  7550                           pclatu	equ	0xFFB
  7551                           pclath	equ	0xFFA
  7552                           tblptru	equ	0xFF8
  7553                           tblptrh	equ	0xFF7
  7554                           tblptrl	equ	0xFF6
  7555                           tablat	equ	0xFF5
  7556                           prodh	equ	0xFF4
  7557                           prodl	equ	0xFF3
  7558                           intcon	equ	0xFF2
  7559                           postinc0	equ	0xFEE
  7560                           fsr0h	equ	0xFEA
  7561                           fsr0l	equ	0xFE9
  7562                           wreg	equ	0xFE8
  7563                           indf1	equ	0xFE7
  7564                           fsr1h	equ	0xFE2
  7565                           fsr1l	equ	0xFE1
  7566                           bsr	equ	0xFE0
  7567                           indf2	equ	0xFDF
  7568                           postinc2	equ	0xFDE
  7569                           postdec2	equ	0xFDD
  7570                           fsr2h	equ	0xFDA
  7571                           fsr2l	equ	0xFD9
  7572                           status	equ	0xFD8
  7573                           
  7574 ;; *************** function _handle_start *****************
  7575 ;; Defined at:
  7576 ;;		line 71 in file "../src/my_i2c.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  data_read       1    wreg     unsigned char 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  data_read       1   46[COMRAM] unsigned char 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;		None               void
  7583 ;; Registers used:
  7584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7590 ;;      Params:         0       0       0       0       0
  7591 ;;      Locals:         1       0       0       0       0
  7592 ;;      Temps:          0       0       0       0       0
  7593 ;;      Totals:         1       0       0       0       0
  7594 ;;Total ram usage:        1 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_i2c_int_handler
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text45
  7604  000EE2                     __ptext45:
  7605                           	opt stack 0
  7606  000EE2                     _handle_start:
  7607                           	opt stack 19
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;incstack = 0
  7611                           ;handle_start@data_read stored from wreg
  7612  000EE2  CFE8 F02F          	movff	wreg,handle_start@data_read
  7613                           
  7614                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7615  000EE6  0100               	movlb	0	; () banked
  7616  000EE8  EE20 F00B          	lfsr	2,11
  7617  000EEC  0100               	movlb	0	; () banked
  7618  000EEE  51E7               	movf	_ic_ptr& (0+255),w,b
  7619  000EF0  26D9               	addwf	fsr2l,f,c
  7620  000EF2  0100               	movlb	0	; () banked
  7621  000EF4  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7622  000EF6  22DA               	addwfc	fsr2h,f,c
  7623  000EF8  0E01               	movlw	1
  7624  000EFA  6EDF               	movwf	indf2,c
  7625                           
  7626                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7627  000EFC  0100               	movlb	0	; () banked
  7628  000EFE  EE20 F00A          	lfsr	2,10
  7629  000F02  0100               	movlb	0	; () banked
  7630  000F04  51E7               	movf	_ic_ptr& (0+255),w,b
  7631  000F06  26D9               	addwf	fsr2l,f,c
  7632  000F08  0100               	movlb	0	; () banked
  7633  000F0A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7634  000F0C  22DA               	addwfc	fsr2h,f,c
  7635  000F0E  0E00               	movlw	0
  7636  000F10  6EDF               	movwf	indf2,c
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;my_i2c.c: 75: if (data_read) {
  7640  000F12  502F               	movf	handle_start@data_read,w,c
  7641  000F14  B4D8               	btfsc	status,2,c
  7642  000F16  D03D               	goto	i2l2793
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7646  000F18  AAC7               	btfss	4039,5,c	;volatile
  7647  000F1A  D021               	goto	i2l262
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7651  000F1C  0100               	movlb	0	; () banked
  7652  000F1E  EE20 F00C          	lfsr	2,12
  7653  000F22  0100               	movlb	0	; () banked
  7654  000F24  51E7               	movf	_ic_ptr& (0+255),w,b
  7655  000F26  26D9               	addwf	fsr2l,f,c
  7656  000F28  0100               	movlb	0	; () banked
  7657  000F2A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7658  000F2C  22DA               	addwfc	fsr2h,f,c
  7659  000F2E  0E05               	movlw	5
  7660  000F30  6EDF               	movwf	indf2,c
  7661                           
  7662                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7663  000F32  0100               	movlb	0	; () banked
  7664  000F34  EE20 F00E          	lfsr	2,14
  7665  000F38  0100               	movlb	0	; () banked
  7666  000F3A  51E7               	movf	_ic_ptr& (0+255),w,b
  7667  000F3C  26D9               	addwf	fsr2l,f,c
  7668  000F3E  0100               	movlb	0	; () banked
  7669  000F40  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7670  000F42  22DA               	addwfc	fsr2h,f,c
  7671  000F44  2ADF               	incf	indf2,f,c
  7672                           
  7673                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7674  000F46  0100               	movlb	0	; () banked
  7675  000F48  EE20 F00D          	lfsr	2,13
  7676  000F4C  0100               	movlb	0	; () banked
  7677  000F4E  51E7               	movf	_ic_ptr& (0+255),w,b
  7678  000F50  26D9               	addwf	fsr2l,f,c
  7679  000F52  0100               	movlb	0	; () banked
  7680  000F54  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7681  000F56  22DA               	addwfc	fsr2h,f,c
  7682  000F58  0E05               	movlw	5
  7683  000F5A  6EDF               	movwf	indf2,c
  7684                           
  7685                           ;my_i2c.c: 82: } else {
  7686  000F5C  0012               	return	
  7687  000F5E                     i2l262:
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7691  000F5E  A4C7               	btfss	4039,2,c	;volatile
  7692  000F60  D00C               	goto	i2l2791
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7696  000F62  0100               	movlb	0	; () banked
  7697  000F64  EE20 F00C          	lfsr	2,12
  7698  000F68  0100               	movlb	0	; () banked
  7699  000F6A  51E7               	movf	_ic_ptr& (0+255),w,b
  7700  000F6C  26D9               	addwf	fsr2l,f,c
  7701  000F6E  0100               	movlb	0	; () banked
  7702  000F70  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7703  000F72  22DA               	addwfc	fsr2h,f,c
  7704  000F74  0E08               	movlw	8
  7705  000F76  6EDF               	movwf	indf2,c
  7706                           
  7707                           ;my_i2c.c: 85: } else {
  7708  000F78  0012               	return	
  7709  000F7A                     i2l2791:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7713  000F7A  0100               	movlb	0	; () banked
  7714  000F7C  EE20 F00C          	lfsr	2,12
  7715  000F80  0100               	movlb	0	; () banked
  7716  000F82  51E7               	movf	_ic_ptr& (0+255),w,b
  7717  000F84  26D9               	addwf	fsr2l,f,c
  7718  000F86  0100               	movlb	0	; () banked
  7719  000F88  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7720  000F8A  22DA               	addwfc	fsr2h,f,c
  7721  000F8C  0E07               	movlw	7
  7722  000F8E  6EDF               	movwf	indf2,c
  7723  000F90  0012               	return	
  7724  000F92                     i2l2793:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7728  000F92  0100               	movlb	0	; () banked
  7729  000F94  EE20 F00C          	lfsr	2,12
  7730  000F98  0100               	movlb	0	; () banked
  7731  000F9A  51E7               	movf	_ic_ptr& (0+255),w,b
  7732  000F9C  26D9               	addwf	fsr2l,f,c
  7733  000F9E  0100               	movlb	0	; () banked
  7734  000FA0  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7735  000FA2  22DA               	addwfc	fsr2h,f,c
  7736  000FA4  0E06               	movlw	6
  7737  000FA6  6EDF               	movwf	indf2,c
  7738  000FA8  0012               	return	
  7739  000FAA                     __end_of_handle_start:
  7740                           	opt stack 0
  7741                           pclatu	equ	0xFFB
  7742                           pclath	equ	0xFFA
  7743                           tblptru	equ	0xFF8
  7744                           tblptrh	equ	0xFF7
  7745                           tblptrl	equ	0xFF6
  7746                           tablat	equ	0xFF5
  7747                           prodh	equ	0xFF4
  7748                           prodl	equ	0xFF3
  7749                           intcon	equ	0xFF2
  7750                           postinc0	equ	0xFEE
  7751                           fsr0h	equ	0xFEA
  7752                           fsr0l	equ	0xFE9
  7753                           wreg	equ	0xFE8
  7754                           indf1	equ	0xFE7
  7755                           fsr1h	equ	0xFE2
  7756                           fsr1l	equ	0xFE1
  7757                           bsr	equ	0xFE0
  7758                           indf2	equ	0xFDF
  7759                           postinc2	equ	0xFDE
  7760                           postdec2	equ	0xFDD
  7761                           fsr2h	equ	0xFDA
  7762                           fsr2l	equ	0xFD9
  7763                           status	equ	0xFD8
  7764                           
  7765 ;; *************** function _ToMainHigh_sendmsg *****************
  7766 ;; Defined at:
  7767 ;;		line 126 in file "../src/messages.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  length          1    wreg     unsigned char 
  7770 ;;  msgtype         1   68[COMRAM] unsigned char 
  7771 ;;  data            2   69[COMRAM] PTR void 
  7772 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  length          1   71[COMRAM] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      char 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7784 ;;      Params:         3       0       0       0       0
  7785 ;;      Locals:         1       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0
  7787 ;;      Totals:         4       0       0       0       0
  7788 ;;Total ram usage:        4 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    2
  7791 ;; This function calls:
  7792 ;;		i2_send_msg
  7793 ;; This function is called by:
  7794 ;;		_i2c_int_handler
  7795 ;;		_timer0_int_handler
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text46
  7800  001AA0                     __ptext46:
  7801                           	opt stack 0
  7802  001AA0                     _ToMainHigh_sendmsg:
  7803                           	opt stack 17
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;incstack = 0
  7807                           ;ToMainHigh_sendmsg@length stored from wreg
  7808  001AA0  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  7809                           
  7810                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7811                           ;	Return value of _ToMainHigh_sendmsg is never used
  7812  001AA4  0101               	movlb	1	; () banked
  7813  001AA6  0E01               	movlw	high _ToMainHigh_MQ
  7814  001AA8  6E3A               	movwf	i2send_msg@qptr+1,c
  7815  001AAA  0101               	movlb	1	; () banked
  7816  001AAC  0E6C               	movlw	low _ToMainHigh_MQ
  7817  001AAE  6E39               	movwf	i2send_msg@qptr,c
  7818  001AB0  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7819  001AB4  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7820  001AB8  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7821  001ABC  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7822  001AC0  EC2A  F008         	call	i2_send_msg	;wreg free
  7823  001AC4  0012               	return	
  7824  001AC6                     __end_of_ToMainHigh_sendmsg:
  7825                           	opt stack 0
  7826                           pclatu	equ	0xFFB
  7827                           pclath	equ	0xFFA
  7828                           tblptru	equ	0xFF8
  7829                           tblptrh	equ	0xFF7
  7830                           tblptrl	equ	0xFF6
  7831                           tablat	equ	0xFF5
  7832                           prodh	equ	0xFF4
  7833                           prodl	equ	0xFF3
  7834                           intcon	equ	0xFF2
  7835                           postinc0	equ	0xFEE
  7836                           fsr0h	equ	0xFEA
  7837                           fsr0l	equ	0xFE9
  7838                           wreg	equ	0xFE8
  7839                           indf1	equ	0xFE7
  7840                           fsr1h	equ	0xFE2
  7841                           fsr1l	equ	0xFE1
  7842                           bsr	equ	0xFE0
  7843                           indf2	equ	0xFDF
  7844                           postinc2	equ	0xFDE
  7845                           postdec2	equ	0xFDD
  7846                           fsr2h	equ	0xFDA
  7847                           fsr2l	equ	0xFD9
  7848                           status	equ	0xFD8
  7849                           
  7850 ;; *************** function i2_send_msg *****************
  7851 ;; Defined at:
  7852 ;;		line 24 in file "../src/messages.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7855 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7856 ;;  length          1   58[COMRAM] unsigned char 
  7857 ;;  msgtype         1   59[COMRAM] unsigned char 
  7858 ;;  data            2   60[COMRAM] PTR void 
  7859 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  7860 ;;		 -> main@ic(28), main@uc(5), 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  7863 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7864 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7865 ;;  send_msg        2   63[COMRAM] unsigned int 
  7866 ;;  send_msg        1   65[COMRAM] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      char 
  7869 ;; Registers used:
  7870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7876 ;;      Params:         6       0       0       0       0
  7877 ;;      Locals:         5       0       0       0       0
  7878 ;;      Temps:          1       0       0       0       0
  7879 ;;      Totals:        12       0       0       0       0
  7880 ;;Total ram usage:       12 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    1
  7883 ;; This function calls:
  7884 ;;		i2_memcpy
  7885 ;; This function is called by:
  7886 ;;		_ToMainHigh_sendmsg
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text47
  7891  001054                     __ptext47:
  7892                           	opt stack 0
  7893  001054                     i2_send_msg:
  7894                           	opt stack 17
  7895                           
  7896                           ;messages.c: 25: unsigned char slot;
  7897                           ;messages.c: 27: msg *qmsg;
  7898                           ;messages.c: 28: size_t tlength = length;
  7899                           
  7900                           ;incstack = 0
  7901  001054  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  7902  001058  6A41               	clrf	i2send_msg@tlength+1,c
  7903                           
  7904                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7905  00105A  EE20 F034          	lfsr	2,52
  7906  00105E  5039               	movf	i2send_msg@qptr,w,c
  7907  001060  26D9               	addwf	fsr2l,f,c
  7908  001062  503A               	movf	i2send_msg@qptr+1,w,c
  7909  001064  22DA               	addwfc	fsr2h,f,c
  7910  001066  50DF               	movf	indf2,w,c
  7911  001068  6E42               	movwf	i2send_msg@slot,c
  7912                           
  7913                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7914  00106A  5042               	movf	i2send_msg@slot,w,c
  7915  00106C  0D0D               	mullw	13
  7916  00106E  50F3               	movf	prodl,w,c
  7917  001070  2439               	addwf	i2send_msg@qptr,w,c
  7918  001072  6E43               	movwf	i2send_msg@qmsg,c
  7919  001074  50F4               	movf	prodh,w,c
  7920  001076  203A               	addwfc	i2send_msg@qptr+1,w,c
  7921  001078  6E44               	movwf	i2send_msg@qmsg+1,c
  7922                           
  7923                           ;messages.c: 41: if (qmsg->full != 0) {
  7924  00107A  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7925  00107E  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7926  001082  50DF               	movf	indf2,w,c
  7927  001084  B4D8               	btfsc	status,2,c
  7928  001086  D002               	goto	i2l2865
  7929                           
  7930                           ;messages.c: 42: return (-1);
  7931  001088  0EFF               	movlw	255
  7932  00108A  0012               	return	
  7933  00108C                     i2l2865:
  7934                           
  7935                           ;messages.c: 43: }
  7936                           ;messages.c: 46: qmsg->length = length;
  7937  00108C  EE20 F001          	lfsr	2,1
  7938  001090  5043               	movf	i2send_msg@qmsg,w,c
  7939  001092  26D9               	addwf	fsr2l,f,c
  7940  001094  5044               	movf	i2send_msg@qmsg+1,w,c
  7941  001096  22DA               	addwfc	fsr2h,f,c
  7942  001098  C03B  FFDF         	movff	i2send_msg@length,indf2
  7943                           
  7944                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7945  00109C  EE20 F002          	lfsr	2,2
  7946  0010A0  5043               	movf	i2send_msg@qmsg,w,c
  7947  0010A2  26D9               	addwf	fsr2l,f,c
  7948  0010A4  5044               	movf	i2send_msg@qmsg+1,w,c
  7949  0010A6  22DA               	addwfc	fsr2h,f,c
  7950  0010A8  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  7951                           
  7952                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7953  0010AC  0E03               	movlw	3
  7954  0010AE  2443               	addwf	i2send_msg@qmsg,w,c
  7955  0010B0  6E2F               	movwf	i2memcpy@d1,c
  7956  0010B2  0E00               	movlw	0
  7957  0010B4  2044               	addwfc	i2send_msg@qmsg+1,w,c
  7958  0010B6  6E30               	movwf	i2memcpy@d1+1,c
  7959  0010B8  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7960  0010BC  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  7961  0010C0  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  7962  0010C4  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7963  0010C8  EC2C  F00C         	call	i2_memcpy	;wreg free
  7964                           
  7965                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7966  0010CC  EE20 F034          	lfsr	2,52
  7967  0010D0  5039               	movf	i2send_msg@qptr,w,c
  7968  0010D2  26D9               	addwf	fsr2l,f,c
  7969  0010D4  503A               	movf	i2send_msg@qptr+1,w,c
  7970  0010D6  22DA               	addwfc	fsr2h,f,c
  7971  0010D8  EE10 F034          	lfsr	1,52
  7972  0010DC  5039               	movf	i2send_msg@qptr,w,c
  7973  0010DE  26E1               	addwf	fsr1l,f,c
  7974  0010E0  503A               	movf	i2send_msg@qptr+1,w,c
  7975  0010E2  22E2               	addwfc	fsr1h,f,c
  7976  0010E4  50E7               	movf	indf1,w,c
  7977  0010E6  6E3F               	movwf	??i2_send_msg& (0+255),c
  7978  0010E8  283F               	incf	??i2_send_msg,w,c
  7979  0010EA  0B03               	andlw	3
  7980  0010EC  6EDF               	movwf	indf2,c
  7981                           
  7982                           ;messages.c: 59: qmsg->full = 1;
  7983  0010EE  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7984  0010F2  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7985  0010F6  0E01               	movlw	1
  7986  0010F8  6EDF               	movwf	indf2,c
  7987                           
  7988                           ;messages.c: 60: return (1);
  7989  0010FA  0E01               	movlw	1
  7990  0010FC  0012               	return	
  7991  0010FE                     __end_ofi2_send_msg:
  7992                           	opt stack 0
  7993                           pclatu	equ	0xFFB
  7994                           pclath	equ	0xFFA
  7995                           tblptru	equ	0xFF8
  7996                           tblptrh	equ	0xFF7
  7997                           tblptrl	equ	0xFF6
  7998                           tablat	equ	0xFF5
  7999                           prodh	equ	0xFF4
  8000                           prodl	equ	0xFF3
  8001                           intcon	equ	0xFF2
  8002                           postinc0	equ	0xFEE
  8003                           fsr0h	equ	0xFEA
  8004                           fsr0l	equ	0xFE9
  8005                           wreg	equ	0xFE8
  8006                           indf1	equ	0xFE7
  8007                           fsr1h	equ	0xFE2
  8008                           fsr1l	equ	0xFE1
  8009                           bsr	equ	0xFE0
  8010                           indf2	equ	0xFDF
  8011                           postinc2	equ	0xFDE
  8012                           postdec2	equ	0xFDD
  8013                           fsr2h	equ	0xFDA
  8014                           fsr2l	equ	0xFD9
  8015                           status	equ	0xFD8
  8016                           
  8017 ;; *************** function i2_memcpy *****************
  8018 ;; Defined at:
  8019 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  d1              2   46[COMRAM] PTR void 
  8022 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8023 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8024 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8025 ;;  s1              2   48[COMRAM] PTR const void 
  8026 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8027 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8028 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8029 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  8030 ;;		 -> main@ic(28), main@uc(5), 
  8031 ;;  n               2   50[COMRAM] unsigned int 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  8034 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8035 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8036 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8037 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  8038 ;;		 -> main@ic(28), main@uc(5), 
  8039 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  8040 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8041 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8042 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  2   46[COMRAM] PTR void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8052 ;;      Params:         6       0       0       0       0
  8053 ;;      Locals:         4       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0
  8055 ;;      Totals:        10       0       0       0       0
  8056 ;;Total ram usage:       10 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		i2_send_msg
  8062 ;;		i2_recv_msg
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text48
  8067  001858                     __ptext48:
  8068                           	opt stack 0
  8069  001858                     i2_memcpy:
  8070                           	opt stack 17
  8071                           
  8072                           ;incstack = 0
  8073  001858  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8074  00185C  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8075  001860  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8076  001864  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8077  001868  D00E               	goto	i2l2931
  8078  00186A                     i2l2925:
  8079  00186A  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8080  00186E  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8081  001872  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8082  001876  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8083  00187A  CFDF FFE7          	movff	indf2,indf1
  8084  00187E  4A37               	infsnz	i2memcpy@s,f,c
  8085  001880  2A38               	incf	i2memcpy@s+1,f,c
  8086  001882  4A35               	infsnz	i2memcpy@d,f,c
  8087  001884  2A36               	incf	i2memcpy@d+1,f,c
  8088  001886                     i2l2931:
  8089  001886  0633               	decf	i2memcpy@n,f,c
  8090  001888  A0D8               	btfss	status,0,c
  8091  00188A  0634               	decf	i2memcpy@n+1,f,c
  8092  00188C  2833               	incf	i2memcpy@n& (0+255),w,c
  8093  00188E  B4D8               	btfsc	status,2,c
  8094  001890  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8095  001892  B4D8               	btfsc	status,2,c
  8096                           
  8097                           ;	Return value of i2_memcpy is never used
  8098  001894  0012               	return	
  8099  001896  D7E9               	goto	i2l2925
  8100  001898                     __end_ofi2_memcpy:
  8101                           	opt stack 0
  8102                           pclatu	equ	0xFFB
  8103                           pclath	equ	0xFFA
  8104                           tblptru	equ	0xFF8
  8105                           tblptrh	equ	0xFF7
  8106                           tblptrl	equ	0xFF6
  8107                           tablat	equ	0xFF5
  8108                           prodh	equ	0xFF4
  8109                           prodl	equ	0xFF3
  8110                           intcon	equ	0xFF2
  8111                           postinc0	equ	0xFEE
  8112                           fsr0h	equ	0xFEA
  8113                           fsr0l	equ	0xFE9
  8114                           wreg	equ	0xFE8
  8115                           indf1	equ	0xFE7
  8116                           fsr1h	equ	0xFE2
  8117                           fsr1l	equ	0xFE1
  8118                           bsr	equ	0xFE0
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           postdec2	equ	0xFDD
  8122                           fsr2h	equ	0xFDA
  8123                           fsr2l	equ	0xFD9
  8124                           status	equ	0xFD8
  8125                           
  8126 ;; *************** function _SleepIfOkay *****************
  8127 ;; Defined at:
  8128 ;;		line 228 in file "../src/messages.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;		None
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;		None
  8133 ;; Return value:  Size  Location     Type
  8134 ;;		None               void
  8135 ;; Registers used:
  8136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8142 ;;      Params:         0       0       0       0       0
  8143 ;;      Locals:         0       0       0       0       0
  8144 ;;      Temps:          0       0       0       0       0
  8145 ;;      Totals:         0       0       0       0       0
  8146 ;;Total ram usage:        0 bytes
  8147 ;; Hardware stack levels used:    1
  8148 ;; Hardware stack levels required when called:    2
  8149 ;; This function calls:
  8150 ;;		_enter_sleep_mode
  8151 ;;		i2_check_msg
  8152 ;;		i2_in_high_int
  8153 ;;		i2_in_low_int
  8154 ;; This function is called by:
  8155 ;;		_InterruptHandlerHigh
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159                           	psect	text49
  8160  00163C                     __ptext49:
  8161                           	opt stack 0
  8162  00163C                     _SleepIfOkay:
  8163                           	opt stack 18
  8164                           
  8165                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8166                           
  8167                           ;incstack = 0
  8168  00163C  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  8169  00163E  D001               	goto	i2l2345
  8170  001640  0012               	return	
  8171  001642                     i2l2345:
  8172                           
  8173                           ;messages.c: 232: }
  8174                           ;messages.c: 235: if (in_low_int()) {
  8175  001642  ECD5  F00C         	call	i2_in_low_int	;wreg free
  8176  001646  5032               	movf	?i2_in_low_int+1,w,c
  8177  001648  1031               	iorwf	?i2_in_low_int,w,c
  8178  00164A  A4D8               	btfss	status,2,c
  8179  00164C  0012               	return	
  8180                           
  8181                           ;messages.c: 237: }
  8182                           ;messages.c: 240: if (!in_high_int()) {
  8183                           
  8184                           ;messages.c: 236: return;
  8185  00164E  ECD4  F00D         	call	i2_in_high_int	;wreg free
  8186  001652  5030               	movf	?i2_in_high_int+1,w,c
  8187  001654  102F               	iorwf	?i2_in_high_int,w,c
  8188  001656  B4D8               	btfsc	status,2,c
  8189  001658  0012               	return	
  8190                           
  8191                           ;messages.c: 242: }
  8192                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8193                           
  8194                           ;messages.c: 241: return;
  8195  00165A  0101               	movlb	1	; () banked
  8196  00165C  0E01               	movlw	high _ToMainHigh_MQ
  8197  00165E  6E30               	movwf	i2check_msg@qptr+1,c
  8198  001660  0101               	movlb	1	; () banked
  8199  001662  0E6C               	movlw	low _ToMainHigh_MQ
  8200  001664  6E2F               	movwf	i2check_msg@qptr,c
  8201  001666  EC63  F00D         	call	i2_check_msg	;wreg free
  8202  00166A  0900               	iorlw	0
  8203  00166C  A4D8               	btfss	status,2,c
  8204  00166E  0012               	return	
  8205                           
  8206                           ;messages.c: 249: }
  8207                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8208                           
  8209                           ;messages.c: 248: return;
  8210  001670  0100               	movlb	0	; () banked
  8211  001672  0E00               	movlw	high _ToMainLow_MQ
  8212  001674  6E30               	movwf	i2check_msg@qptr+1,c
  8213  001676  0100               	movlb	0	; () banked
  8214  001678  0E80               	movlw	low _ToMainLow_MQ
  8215  00167A  6E2F               	movwf	i2check_msg@qptr,c
  8216  00167C  EC63  F00D         	call	i2_check_msg	;wreg free
  8217  001680  0900               	iorlw	0
  8218  001682  B4D8               	btfsc	status,2,c
  8219                           
  8220                           ;messages.c: 252: }
  8221                           ;messages.c: 253: enter_sleep_mode();
  8222                           
  8223                           ;messages.c: 251: return;
  8224  001684  ECDE  F00D         	call	_enter_sleep_mode	;wreg free
  8225  001688  0012               	return	
  8226  00168A                     __end_of_SleepIfOkay:
  8227                           	opt stack 0
  8228                           pclatu	equ	0xFFB
  8229                           pclath	equ	0xFFA
  8230                           tblptru	equ	0xFF8
  8231                           tblptrh	equ	0xFF7
  8232                           tblptrl	equ	0xFF6
  8233                           tablat	equ	0xFF5
  8234                           prodh	equ	0xFF4
  8235                           prodl	equ	0xFF3
  8236                           intcon	equ	0xFF2
  8237                           postinc0	equ	0xFEE
  8238                           fsr0h	equ	0xFEA
  8239                           fsr0l	equ	0xFE9
  8240                           wreg	equ	0xFE8
  8241                           indf1	equ	0xFE7
  8242                           fsr1h	equ	0xFE2
  8243                           fsr1l	equ	0xFE1
  8244                           bsr	equ	0xFE0
  8245                           indf2	equ	0xFDF
  8246                           postinc2	equ	0xFDE
  8247                           postdec2	equ	0xFDD
  8248                           fsr2h	equ	0xFDA
  8249                           fsr2l	equ	0xFD9
  8250                           status	equ	0xFD8
  8251                           
  8252 ;; *************** function i2_in_low_int *****************
  8253 ;; Defined at:
  8254 ;;		line 30 in file "../src/interrupts.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  2   48[COMRAM] int 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8268 ;;      Params:         2       0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0
  8270 ;;      Temps:          0       0       0       0       0
  8271 ;;      Totals:         2       0       0       0       0
  8272 ;;Total ram usage:        2 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    1
  8275 ;; This function calls:
  8276 ;;		i2_in_high_int
  8277 ;; This function is called by:
  8278 ;;		_SleepIfOkay
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text50
  8283  0019AA                     __ptext50:
  8284                           	opt stack 0
  8285  0019AA                     i2_in_low_int:
  8286                           	opt stack 18
  8287                           
  8288                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8289                           
  8290                           ;incstack = 0
  8291  0019AA  ACF2               	btfss	intcon,6,c	;volatile
  8292  0019AC  D005               	goto	i2l2841
  8293                           
  8294                           ;interrupts.c: 32: return (0);
  8295  0019AE  0E00               	movlw	0
  8296  0019B0  6E32               	movwf	?i2_in_low_int+1,c
  8297  0019B2  0E00               	movlw	0
  8298  0019B4  6E31               	movwf	?i2_in_low_int,c
  8299  0019B6  0012               	return	
  8300  0019B8                     i2l2841:
  8301  0019B8  ECD4  F00D         	call	i2_in_high_int	;wreg free
  8302  0019BC  5030               	movf	?i2_in_high_int+1,w,c
  8303  0019BE  102F               	iorwf	?i2_in_high_int,w,c
  8304  0019C0  B4D8               	btfsc	status,2,c
  8305  0019C2  D005               	goto	i2l2849
  8306                           
  8307                           ;interrupts.c: 34: return (0);
  8308  0019C4  0E00               	movlw	0
  8309  0019C6  6E32               	movwf	?i2_in_low_int+1,c
  8310  0019C8  0E00               	movlw	0
  8311  0019CA  6E31               	movwf	?i2_in_low_int,c
  8312  0019CC  0012               	return	
  8313  0019CE                     i2l2849:
  8314                           
  8315                           ;interrupts.c: 36: return (1);
  8316  0019CE  0E00               	movlw	0
  8317  0019D0  6E32               	movwf	?i2_in_low_int+1,c
  8318  0019D2  0E01               	movlw	1
  8319  0019D4  6E31               	movwf	?i2_in_low_int,c
  8320  0019D6  0012               	return	
  8321  0019D8                     __end_ofi2_in_low_int:
  8322                           	opt stack 0
  8323                           pclatu	equ	0xFFB
  8324                           pclath	equ	0xFFA
  8325                           tblptru	equ	0xFF8
  8326                           tblptrh	equ	0xFF7
  8327                           tblptrl	equ	0xFF6
  8328                           tablat	equ	0xFF5
  8329                           prodh	equ	0xFF4
  8330                           prodl	equ	0xFF3
  8331                           intcon	equ	0xFF2
  8332                           postinc0	equ	0xFEE
  8333                           fsr0h	equ	0xFEA
  8334                           fsr0l	equ	0xFE9
  8335                           wreg	equ	0xFE8
  8336                           indf1	equ	0xFE7
  8337                           fsr1h	equ	0xFE2
  8338                           fsr1l	equ	0xFE1
  8339                           bsr	equ	0xFE0
  8340                           indf2	equ	0xFDF
  8341                           postinc2	equ	0xFDE
  8342                           postdec2	equ	0xFDD
  8343                           fsr2h	equ	0xFDA
  8344                           fsr2l	equ	0xFD9
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function i2_in_high_int *****************
  8348 ;; Defined at:
  8349 ;;		line 22 in file "../src/interrupts.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;		None
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  2   46[COMRAM] int 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8363 ;;      Params:         2       0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0
  8366 ;;      Totals:         2       0       0       0       0
  8367 ;;Total ram usage:        2 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_SleepIfOkay
  8373 ;;		i2_in_low_int
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text51
  8378  001BA8                     __ptext51:
  8379                           	opt stack 0
  8380  001BA8                     i2_in_high_int:
  8381                           	opt stack 18
  8382                           
  8383                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8384                           
  8385                           ;incstack = 0
  8386  001BA8  0E00               	movlw	0
  8387  001BAA  AEF2               	btfss	intcon,7,c	;volatile
  8388  001BAC  0E01               	movlw	1
  8389  001BAE  6E2F               	movwf	?i2_in_high_int,c
  8390  001BB0  6A30               	clrf	?i2_in_high_int+1,c
  8391  001BB2  0012               	return	
  8392  001BB4                     __end_ofi2_in_high_int:
  8393                           	opt stack 0
  8394                           pclatu	equ	0xFFB
  8395                           pclath	equ	0xFFA
  8396                           tblptru	equ	0xFF8
  8397                           tblptrh	equ	0xFF7
  8398                           tblptrl	equ	0xFF6
  8399                           tablat	equ	0xFF5
  8400                           prodh	equ	0xFF4
  8401                           prodl	equ	0xFF3
  8402                           intcon	equ	0xFF2
  8403                           postinc0	equ	0xFEE
  8404                           fsr0h	equ	0xFEA
  8405                           fsr0l	equ	0xFE9
  8406                           wreg	equ	0xFE8
  8407                           indf1	equ	0xFE7
  8408                           fsr1h	equ	0xFE2
  8409                           fsr1l	equ	0xFE1
  8410                           bsr	equ	0xFE0
  8411                           indf2	equ	0xFDF
  8412                           postinc2	equ	0xFDE
  8413                           postdec2	equ	0xFDD
  8414                           fsr2h	equ	0xFDA
  8415                           fsr2l	equ	0xFD9
  8416                           status	equ	0xFD8
  8417                           
  8418 ;; *************** function i2_check_msg *****************
  8419 ;; Defined at:
  8420 ;;		line 222 in file "../src/messages.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8423 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;		None
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      unsigned char 
  8428 ;; Registers used:
  8429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8435 ;;      Params:         2       0       0       0       0
  8436 ;;      Locals:         0       0       0       0       0
  8437 ;;      Temps:          1       0       0       0       0
  8438 ;;      Totals:         3       0       0       0       0
  8439 ;;Total ram usage:        3 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_SleepIfOkay
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text52
  8449  001AC6                     __ptext52:
  8450                           	opt stack 0
  8451  001AC6                     i2_check_msg:
  8452                           	opt stack 19
  8453                           
  8454                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8455                           
  8456                           ;incstack = 0
  8457  001AC6  EE20 F035          	lfsr	2,53
  8458  001ACA  502F               	movf	i2check_msg@qptr,w,c
  8459  001ACC  26D9               	addwf	fsr2l,f,c
  8460  001ACE  5030               	movf	i2check_msg@qptr+1,w,c
  8461  001AD0  22DA               	addwfc	fsr2h,f,c
  8462  001AD2  50DF               	movf	indf2,w,c
  8463  001AD4  6E31               	movwf	??i2_check_msg& (0+255),c
  8464  001AD6  5031               	movf	??i2_check_msg,w,c
  8465  001AD8  0D0D               	mullw	13
  8466  001ADA  50F3               	movf	prodl,w,c
  8467  001ADC  242F               	addwf	i2check_msg@qptr,w,c
  8468  001ADE  6ED9               	movwf	fsr2l,c
  8469  001AE0  50F4               	movf	prodh,w,c
  8470  001AE2  2030               	addwfc	i2check_msg@qptr+1,w,c
  8471  001AE4  6EDA               	movwf	fsr2h,c
  8472  001AE6  50DF               	movf	indf2,w,c
  8473  001AE8  0012               	return	
  8474  001AEA                     __end_ofi2_check_msg:
  8475                           	opt stack 0
  8476                           pclatu	equ	0xFFB
  8477                           pclath	equ	0xFFA
  8478                           tblptru	equ	0xFF8
  8479                           tblptrh	equ	0xFF7
  8480                           tblptrl	equ	0xFF6
  8481                           tablat	equ	0xFF5
  8482                           prodh	equ	0xFF4
  8483                           prodl	equ	0xFF3
  8484                           intcon	equ	0xFF2
  8485                           postinc0	equ	0xFEE
  8486                           fsr0h	equ	0xFEA
  8487                           fsr0l	equ	0xFE9
  8488                           wreg	equ	0xFE8
  8489                           indf1	equ	0xFE7
  8490                           fsr1h	equ	0xFE2
  8491                           fsr1l	equ	0xFE1
  8492                           bsr	equ	0xFE0
  8493                           indf2	equ	0xFDF
  8494                           postinc2	equ	0xFDE
  8495                           postdec2	equ	0xFDD
  8496                           fsr2h	equ	0xFDA
  8497                           fsr2l	equ	0xFD9
  8498                           status	equ	0xFD8
  8499                           
  8500 ;; *************** function _enter_sleep_mode *****************
  8501 ;; Defined at:
  8502 ;;		line 202 in file "../src/messages.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;		None
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;		None
  8507 ;; Return value:  Size  Location     Type
  8508 ;;		None               void
  8509 ;; Registers used:
  8510 ;;		None
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8516 ;;      Params:         0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0
  8518 ;;      Temps:          0       0       0       0       0
  8519 ;;      Totals:         0       0       0       0       0
  8520 ;;Total ram usage:        0 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_SleepIfOkay
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text53
  8530  001BBC                     __ptext53:
  8531                           	opt stack 0
  8532  001BBC                     _enter_sleep_mode:
  8533                           	opt stack 19
  8534                           
  8535                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8536                           
  8537                           ;incstack = 0
  8538  001BBC  8ED3               	bsf	4051,7,c	;volatile
  8539  001BBE  0003               	sleep		;# 
  8540  001BC0  0012               	return	
  8541  001BC2                     __end_of_enter_sleep_mode:
  8542                           	opt stack 0
  8543  0000                     pclatu	equ	0xFFB
  8544                           pclath	equ	0xFFA
  8545                           tblptru	equ	0xFF8
  8546                           tblptrh	equ	0xFF7
  8547                           tblptrl	equ	0xFF6
  8548                           tablat	equ	0xFF5
  8549                           prodh	equ	0xFF4
  8550                           prodl	equ	0xFF3
  8551                           intcon	equ	0xFF2
  8552                           postinc0	equ	0xFEE
  8553                           fsr0h	equ	0xFEA
  8554                           fsr0l	equ	0xFE9
  8555                           wreg	equ	0xFE8
  8556                           indf1	equ	0xFE7
  8557                           fsr1h	equ	0xFE2
  8558                           fsr1l	equ	0xFE1
  8559                           bsr	equ	0xFE0
  8560                           indf2	equ	0xFDF
  8561                           postinc2	equ	0xFDE
  8562                           postdec2	equ	0xFDD
  8563                           fsr2h	equ	0xFDA
  8564                           fsr2l	equ	0xFD9
  8565                           status	equ	0xFD8
  8566                           pclatu	equ	0xFFB
  8567                           pclath	equ	0xFFA
  8568                           tblptru	equ	0xFF8
  8569                           tblptrh	equ	0xFF7
  8570                           tblptrl	equ	0xFF6
  8571                           tablat	equ	0xFF5
  8572                           prodh	equ	0xFF4
  8573                           prodl	equ	0xFF3
  8574                           intcon	equ	0xFF2
  8575                           postinc0	equ	0xFEE
  8576                           fsr0h	equ	0xFEA
  8577                           fsr0l	equ	0xFE9
  8578                           wreg	equ	0xFE8
  8579                           indf1	equ	0xFE7
  8580                           fsr1h	equ	0xFE2
  8581                           fsr1l	equ	0xFE1
  8582                           bsr	equ	0xFE0
  8583                           indf2	equ	0xFDF
  8584                           postinc2	equ	0xFDE
  8585                           postdec2	equ	0xFDD
  8586                           fsr2h	equ	0xFDA
  8587                           fsr2l	equ	0xFD9
  8588                           status	equ	0xFD8
  8589                           
  8590                           	psect	rparam
  8591  0000                     pclatu	equ	0xFFB
  8592                           pclath	equ	0xFFA
  8593                           tblptru	equ	0xFF8
  8594                           tblptrh	equ	0xFF7
  8595                           tblptrl	equ	0xFF6
  8596                           tablat	equ	0xFF5
  8597                           prodh	equ	0xFF4
  8598                           prodl	equ	0xFF3
  8599                           intcon	equ	0xFF2
  8600                           postinc0	equ	0xFEE
  8601                           fsr0h	equ	0xFEA
  8602                           fsr0l	equ	0xFE9
  8603                           wreg	equ	0xFE8
  8604                           indf1	equ	0xFE7
  8605                           fsr1h	equ	0xFE2
  8606                           fsr1l	equ	0xFE1
  8607                           bsr	equ	0xFE0
  8608                           indf2	equ	0xFDF
  8609                           postinc2	equ	0xFDE
  8610                           postdec2	equ	0xFDD
  8611                           fsr2h	equ	0xFDA
  8612                           fsr2l	equ	0xFD9
  8613                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     49     105
    BANK1           256     81     243
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                73    73      0   12139
                                             10 BANK1     71    71      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                           _resetDBG
                             _setDBG
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             23 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3046
                                              0 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2309
                                             45 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                             33 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             23 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _setDBG                                               1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetDBG                                             1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             27 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             29 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             23 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             47 BANK0      1     1      0
                                              0 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             47 BANK0      1     1      0
                                              0 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             33 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             23 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4938
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2522
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    8935
                                              9 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    5507
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2477
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2283
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3192
                                             72 COMRAM     2     2      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2788
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2210
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     929
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _resetDBG
   _setDBG
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     51      F3       6       94.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80     31      69       4       82.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      11        0.0%
DATA                 0      0     1AC      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Feb 06 11:10:19 2014

              main@uthread_data 01C3        _MQ_Main_Willing_to_block 004F                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1756                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1AA0  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003C               i2recv_msg@tlength 0043  
                           l106 07C6                             l400 17EE                             l500 11FE  
                           l501 1200                             l426 19FC                             l450 18F0  
                           l427 19FE                             l452 1908                             l453 190A  
                           l384 179E                             l386 17A2                             l395 17DE  
                           l387 17A6                             l388 17AA                             l397 17E2  
                           l389 17AE                             l494 11CE                             l398 17E6  
                           l727 1B2A                             l399 17EA                             l498 11EE  
                           l499 11F0            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0136                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00CD                ??_init_uart_recv 00CF                 ReadTimer1@timer 0003  
           i2recv_msg@maxlength 003B                            l1039 12AC                            l3101 09E2  
                          l3111 0AA8                            l2161 16C0                            l2153 169E  
                          l3105 0A04                            l3041 0774                            l3033 0732  
                          l3211 124A                            l3107 0A56                            l3051 07FC  
                          l3043 07CC                            l3141 0D68                            l3213 125C  
                          l3053 080C                            l3061 0880                            l2175 1704  
                          l3215 1264                            l3063 0888                            l2521 18F2  
                          l3161 1624                            l3073 08D2                            l3057 0848  
                          l3155 1600                            l3219 1298                            l2613 1382  
                          l3077 090E                            l3085 094E                            l3093 0986  
                          l3175 0B34                            l3191 0BFA                            l2607 1356  
                          l2631 17B2                            l3087 0960                            l3095 09A4  
                          l2561 11BA                            l2641 0C1A                            l2619 13AE  
                          l2637 17F2                            l2645 0C9E                            l2569 11D0  
                          l2679 13FE                            _LATB 000F8A                            u2147 1B2C  
                          i1l47 0070                            i2l41 12FA                 _FromMainHigh_MQ 0100  
                 __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001                            _main 0698  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 01D5  
                    i1_send_msg 0FAA                            pclat 000FFA                     i2_check_msg 1AC6  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 002F  
                          start 00B6                      i2_recv_msg 0E10                   __CFG_FOSC2$ON 000000  
                    i2_send_msg 1054       ToMainHigh_recvmsg@msgtype 01A2                  send_msg@length 00D9  
   __size_of_timer0_int_handler 0064                     _Delay1KTCYx 1B26                           ?_main 0001  
                         _T0CON 000FD5                           _T1CON 000FCD                           i1l512 1B16  
               __end_of___lwmod 12B6                      i1memcpy@d1 0001                           i2l300 0452  
                         i2l306 04E6                           i2l262 0F5E                           i2l272 04D4  
                         i2l274 0166                           i2l292 0326                           i2l278 01A4  
                    i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 0047                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR1L 000FCE                           _SPBRG 000FAF  
                         _TRISB 000F93                           _TXSTA 000FAC                      i2memcpy@d1 002F  
                    i2memcpy@s1 0031                    ?_init_queues 0001       __size_of_enter_sleep_mode 0006  
               __end_of_in_main 1714      ToMainLow_recvmsg@maxlength 00E5                           main@j 01C8  
       timer0_lthread@msgbuffer 00D3         i2c_configure_slave@addr 00CD                           tablat 000FF5  
                         status 000FD8                __end_ofi1_memcpy 1858                __end_ofi2_memcpy 1898  
               __initialization 1A54                    __end_of_main 0AC8                      _ReadTimer1 1B84  
   __size_of_timer1_int_handler 0030      __size_of_ToMainLow_recvmsg 0042      __size_of_ToMainLow_sendmsg 0026  
 __size_of_FromMainHigh_recvmsg 002A           __size_ofi2_in_low_int 002E   __size_of_FromMainHigh_sendmsg 0036  
                        ??_main 01AC                 send_msg@msgtype 00DA                   __activetblptr 000002  
               send_msg@tlength 00DE            __end_of_handle_start 0FAA         ??_uart_recv_int_handler 001B  
                        i1l2921 1846                          i2l2211 015C                          i1l2915 182A  
                        i2l2205 0148                          i2l2311 054A                          i2l2231 0204  
                        i2l2305 04EA                          i2l2241 0240                          i1l2945 0FE2  
                        i2l2229 01D8                          i2l2327 0666                          i2l2319 05D0  
                        i2l2271 0396                          i2l2247 0258                          i1l2991 0066  
                        i2l2345 1642                          i2l2273 03D8                          i2l2249 0298  
                        i2l2185 12F0                      _OpenTimer0 19D8                      _OpenTimer1 18D6  
                        i1l2979 117A                          i2l2277 03E6                  __CFG_WDTEN$OFF 000000  
                        i2l2299 04A8                          i2l2841 19B8                          i2l2905 0EDE  
                        i2l2931 1886                          i2l2925 186A                          i2l2791 0F7A  
                        i2l2849 19CE                          i2l2865 108C                          i2l2793 0F92  
                        i2l2889 0E56     __end_of_i2c_configure_slave 1A54                   ??_SleepIfOkay 0033  
            __size_of_ReadUSART 001E                          _OSCCON 000FD3                          _SPBRGH 000FB0  
                        _SSPADD 000FC8                          _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 010E  
                   ?i1_send_msg 000B   __end_of_start_i2c_slave_reply 0D0C              timer0_lthread@tptr 00CD  
                   ?i2_recv_msg 0039                    i2_in_low_int 19AA                     ?i2_send_msg 0039  
                __CFG_XINST$OFF 000000              __size_of_OpenUSART 0092                 _i2c_int_handler 00BA  
              OpenTimer0@config 00CD                          _ic_ptr 00E7                       ??___lwmod 00D1  
                 main@msgbuffer 01B8                __end_of_init_i2c 157A                OpenTimer1@config 00CD  
                        _setDBG 1798                          _memcpy 15DE                          clear_0 1A5A  
                        clear_1 1A66                          _uc_ptr 004D                          main@ic 01D7  
                        main@uc 01CC                __end_of_recv_msg 0BFE     start_i2c_slave_reply@length 00D1  
              __end_of_resetDBG 1818                       ??_in_main 00D3                __end_of_send_msg 0E10  
         timer0_int_handler@val 00BA         i2c_int_handler@i2c_data 00BB                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 00D0  
      ToMainLow_recvmsg@msgtype 01A2            __size_of_in_high_int 0012                 __CFG_FOSC$HSPLL 000000  
                    __accesstop 0080         __end_of__initialization 1A70      __end_of_ToMainHigh_recvmsg 1798  
    __end_of_ToMainHigh_sendmsg 1AC6     __end_of_init_timer1_lthread 1B60             __end_of_SleepIfOkay 168A  
                __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C                     ?_ReadTimer1 0001  
            __size_of_check_msg 0036               __end_of_ReadUSART 1B26       timer0_int_handler@msgtype 00B8  
           __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 1330  
   __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 002F                   _ToMainHigh_MQ 016C  
           __size_ofi2_recv_msg 00D2                _enter_sleep_mode 1BBC             __size_ofi2_send_msg 00AA  
          timer1_lthread@length 01A6                   ReadUSART@data 0001               __end_of_OpenUSART 122C  
                 check_msg@qptr 00CD            timer1_lthread@retval 01AB         ??_block_on_To_msgqueues 00D3  
          __size_of_init_queues 006E                      __pbssBANK0 0080                      __pbssBANK1 0100  
                   ?_OpenTimer0 0001                     ?_OpenTimer1 0001                      __pnvCOMRAM 004D  
            main@to_send_buffer 01AD         __end_of_i2c_int_handler 0698                    ?i2_check_msg 002F  
            timer1_lthread@tptr 01A2               recv_msg@maxlength 00D9                 recv_msg@msgtype 00DA  
               recv_msg@tlength 00E1           __size_of_handle_start 00C8                    ?_Delay1KTCYx 0001  
              WriteTimer0@timer 0031                         ?_setDBG 0001                         ?_memcpy 00CD  
              WriteTimer1@timer 0003                   ??_WriteTimer0 0031                   ??_WriteTimer1 0003  
       __size_of_timer0_lthread 0012         __size_of_timer1_lthread 0072                      ??i1_memcpy 0007  
                    ??i2_memcpy 0035                i1send_msg@length 000D                   i2_in_high_int 1BA8  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
           __size_of_ReadTimer1 0012               __end_of_check_msg 197A                       ?_init_i2c 00CD  
                   _SleepIfOkay 163C                       ?_recv_msg 00D7                      _in_low_int 168A  
                  _handle_start 0EE2                       ?_resetDBG 0001                         __Hparam 0000  
                     ?_send_msg 00D7                         __Lparam 0000      __end_of_timer0_int_handler 15DE  
              init_uart_recv@uc 00CD                         ___lwmod 122C                 __CFG_STVREN$OFF 000000  
                       __pcinit 1A54                 __size_of_setDBG 0040                 __size_of_memcpy 005E  
                    _init_queue 13B6                         __ramtop 0400             __size_of_OpenTimer0 002A  
           __size_of_OpenTimer1 0038                         __ptext0 0698                         __ptext1 1898  
                       __ptext2 1430                         __ptext3 122C                         __ptext4 190E  
                       __ptext5 0D0C                         __ptext6 1B3C                         __ptext7 0BFE  
                       __ptext8 1798                         __ptext9 17D8                       _T0CONbits 000FD5  
                       _in_main 16D0                       _T1CONbits 000FCD             __end_of_WriteTimer0 1BA8  
           __end_of_WriteTimer1 1B84                  ?i2_in_high_int 002F                  __pintcode_body 12B6  
  __end_of_FromMainHigh_recvmsg 1A2C            end_of_initialization 1A70         timer1_lthread@msgbuffer 01A8  
  __end_of_FromMainHigh_sendmsg 1944                         setDBG@b 00CD  __size_of_uart_recv_int_handler 009C  
    FromMainHigh_sendmsg@length 00E6                         memcpy@d 00D3                         memcpy@n 00D1  
                       memcpy@s 00D5   __end_of_uart_recv_int_handler 119A                      ??_init_i2c 00CF  
   i2c_int_handler@data_written 00B9                   __Lmediumconst 0000                         int_func 12B6  
                  ??i1_send_msg 0011                   ?_uart_lthread 00CD         __size_of_init_uart_recv 001E  
              ?_i2c_int_handler 0001                    ??i2_recv_msg 0040                      ??_recv_msg 00DE  
                    ??_resetDBG 00CD                    ??i2_send_msg 003F                      ??_send_msg 00DD  
    __end_of_timer1_int_handler 19AA                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 0045  
            __end_ofi1_send_msg 1054     FromMainHigh_sendmsg@msgtype 00E3                       _TRISCbits 000F94  
            __end_ofi2_recv_msg 0EE2              __end_ofi2_send_msg 10FE   FromMainHigh_recvmsg@maxlength 004B  
      timer1_int_handler@result 001C                  ??_uart_lthread 00D5                       _TXSTAbits 000FAC  
                    main@length 01D6                     ?_in_low_int 00CF           timer0_lthread@msgtype 00CF  
         _start_i2c_slave_reply 0BFE    __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0024  
      __end_of_enter_sleep_mode 1BC2                    ??_ReadTimer1 0003              _ToMainHigh_recvmsg 1756  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 1AA0                       i1memcpy@n 0005  
                     i1memcpy@s 0009                  _timer0_lthread 1B3C                     ?_init_queue 00CD  
                     i2memcpy@d 0035                     _WriteTimer0 1B96                     _WriteTimer1 1B72  
                     i2memcpy@n 0033                       i2memcpy@s 0037                  _timer1_lthread 1430  
                __end_of_setDBG 17D8                  __end_of_memcpy 163C               _enable_interrupts 1BB4  
          __size_of_Delay1KTCYx 0016             ?_ToMainHigh_recvmsg 01A2                 ??i2_in_high_int 0031  
      i2c_int_handler@data_read 00BE             ?_ToMainHigh_sendmsg 0045              ?_enable_interrupts 0001  
           start_initialization 1A54                   ??_in_high_int 00CF                       _ReadUSART 1B08  
             __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0040             ??_enable_interrupts 00CD  
                  ??_OpenTimer0 00CD                    ??_OpenTimer1 00CD  __size_of_block_on_To_msgqueues 007E  
            __end_of_ReadTimer1 1B96   __end_of_block_on_To_msgqueues 13B6                       _OpenUSART 119A  
  __end_of_InterruptHandlerHigh 1338                      init_i2c@ic 00CD            ??_ToMainHigh_recvmsg 00E5  
          ??_ToMainHigh_sendmsg 0048          __end_of_timer0_lthread 1B4E        i2c_int_handler@error_buf 00B6  
        __end_of_timer1_lthread 14A2                        ??_setDBG 00CD       __end_of_enable_interrupts 1BBC  
                      ??_memcpy 00D3           timer1_lthread@msgtype 01A4            _FromMainHigh_recvmsg 1A02  
          _FromMainHigh_sendmsg 190E    __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 1A02  
            __end_of_OpenTimer1 190E        i2c_int_handler@msg_ready 00BD                     __pbssCOMRAM 004F  
                    ?_ReadUSART 0001                   ??_init_queues 00D1                   __pcstackBANK0 00B6  
                 __pcstackBANK1 01A2             __size_of_in_low_int 0046        start_i2c_slave_reply@msg 00CD  
           __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 00CD        ToMainLow_sendmsg@msgtype 0017  
  __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 1B72                      ?_OpenUSART 00CD  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01A4                    _ToMainLow_MQ 0080  
           __size_of_init_queue 007A                  _init_uart_recv 1AEA                       _check_msg 1944  
                     __pnvBANK0 00E7          ?_start_i2c_slave_reply 00CD               __size_of_init_i2c 006A  
                  recv_msg@data 00DC                    recv_msg@qmsg 00E3                    recv_msg@slot 00E0  
                  recv_msg@qptr 00D7               __size_of_recv_msg 0136                       __pintcode 0008  
             __size_of_resetDBG 0040               __size_of_send_msg 0104                 ?_timer0_lthread 00CD  
                      ?___lwmod 00CD           ?_FromMainHigh_recvmsg 0047                 ?_timer1_lthread 01A2  
         ?_FromMainHigh_sendmsg 00E3                     __pintcodelo 0018          ToMainHigh_recvmsg@data 01A4  
          __end_of_uart_lthread 18D6      i2c_int_handler@msg_to_send 00BC                        ?_in_main 00D1  
             WriteTimer0@timer0 002F              _timer0_int_handler 157A               WriteTimer1@timer1 0001  
           uart_lthread@msgtype 00CF           ToMainLow_sendmsg@data 0018             ?_timer0_int_handler 0001  
              uart_lthread@uptr 00CD          __end_of_init_uart_recv 1B08             __end_of_init_queues 1510  
                      _LATBbits 000F8A                 i2check_msg@qptr 002F                      ?_check_msg 00CD  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                   ?i2_in_low_int 0031  
                      _PIR1bits 000F9E          ToMainHigh_sendmsg@data 0046                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000            ??_timer0_int_handler 004C      __size_of_enable_interrupts 0008  
             i1send_msg@msgtype 000E               i1send_msg@tlength 0012                       main@j_518 01CA  
          timer0_lthread@length 00D1              _timer1_int_handler 197A                        i1_memcpy 1818  
          _InterruptHandlerHigh 0008                     ??_ReadUSART 0001                        i2_memcpy 1858  
          timer0_lthread@msgval 00D5        FromMainHigh_recvmsg@data 0049                     _in_high_int 1B60  
                  send_msg@data 00DB             _i2c_configure_slave 1A2C                    send_msg@qmsg 00E1  
                  send_msg@slot 00E0                    send_msg@qptr 00D7           uart_lthread@msgbuffer 00D3  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 00CD                     ??_OpenUSART 00CF  
               OpenUSART@config 00D2                  ??i2_in_low_int 0033           _uart_recv_int_handler 10FE  
                  ??_in_low_int 00D1                        __Hrparam 0000            ?_i2c_configure_slave 0001  
                      __Lrparam 0000               ?_enter_sleep_mode 0001          ??_FromMainHigh_recvmsg 004B  
        ??_FromMainHigh_sendmsg 00E6            ??_timer1_int_handler 001B        __size_of_i2c_int_handler 05DE  
            ??_enter_sleep_mode 002F                __size_of___lwmod 008A                    ??_init_queue 00CF  
                  ?_WriteTimer0 002F                    ?_WriteTimer1 0001        FromMainHigh_sendmsg@data 00E4  
       ToMainLow_sendmsg@length 001A               main@t0thread_data 01C5           ?_InterruptHandlerHigh 0001  
              __size_of_in_main 0044               i2send_msg@msgtype 003C     ToMainHigh_recvmsg@maxlength 00E5  
             i2send_msg@tlength 0040         init_timer1_lthread@tptr 00CD                     _init_queues 14A2  
            __end_of_in_low_int 16D0                        __ptext10 1AEA                        __ptext11 1B4E  
                      __ptext20 1B60                        __ptext12 14A2                        __ptext21 1944  
                      __ptext13 13B6                        __ptext22 1B26                        __ptext14 1510  
                      __ptext31 10FE                        __ptext23 1714                        __ptext15 1A2C  
                      __ptext40 157A                        __ptext32 1B08                        __ptext24 1756  
                      __ptext16 1BB4                        __ptext41 1B96                        __ptext33 197A  
                      __ptext25 0AC8                        __ptext17 1338                        __ptext50 19AA  
                      __ptext42 1A02                        __ptext34 1B72                        __ptext26 15DE  
                      __ptext18 16D0                        __ptext51 1BA8                        __ptext43 0E10  
                      __ptext35 1A7A                        __ptext27 119A                        __ptext19 168A  
                      __ptext52 1AC6                        __ptext44 00BA                        __ptext36 0FAA  
                      __ptext28 18D6                        __ptext53 1BBC                        __ptext45 0EE2  
                      __ptext37 1818                        __ptext29 19D8                        __ptext46 1AA0  
                      __ptext38 1B84                        __ptext47 1054                        __ptext48 1858  
                      __ptext49 163C                       resetDBG@b 00CD                  i1send_msg@data 000F  
                i1send_msg@qmsg 0015                  i1send_msg@slot 0014                  i1send_msg@qptr 000B  
            uart_lthread@length 00D1        timer0_int_handler@length 00B6                        _init_i2c 1510  
           _init_timer1_lthread 1B4E                   __size_of_main 0430                   ??i2_check_msg 0031  
             main@t1thread_data 01D1                     ??_check_msg 00CF              __end_of_init_queue 1430  
          __size_of_SleepIfOkay 004E                        _recv_msg 0AC8                        _resetDBG 17D8  
         ??_i2c_configure_slave 00CD                        _send_msg 0D0C                  init_queue@qptr 00CD  
         __size_of_uart_lthread 003E                  i2recv_msg@data 003E                  i2recv_msg@qmsg 0045  
                 ??_Delay1KTCYx 00CD                  i2recv_msg@slot 0042                  i2recv_msg@qptr 0039  
           _InterruptHandlerLow 0018            ?_init_timer1_lthread 00CD                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 00CD                        memcpy@d1 00CD  
                      memcpy@s1 00CF           __end_ofi2_in_high_int 1BB4           main@data_points_count 01D3  
  i2c_int_handler@overrun_error 00BA                i2send_msg@length 003B                        intlevel1 0000  
                      intlevel2 0000            ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 00CF  
              ___lwmod@dividend 00CD          ?_uart_recv_int_handler 0001                    _uart_lthread 1898  
         _block_on_To_msgqueues 1338                   ?_handle_start 0001                ??_timer0_lthread 00D5  
   __size_of_ToMainHigh_recvmsg 0042     __size_of_ToMainHigh_sendmsg 0026                      _OSCCONbits 000FD3  
              ??_timer1_lthread 01AA        ToMainHigh_sendmsg@length 0048             __end_ofi2_check_msg 1AEA  
         ??_init_timer1_lthread 00CF          ??_InterruptHandlerHigh 00BF               _ToMainLow_recvmsg 1714  
             _ToMainLow_sendmsg 1A7A              main@last_reg_recvd 01C7                 ___lwmod@divisor 00CF  
          __end_ofi2_in_low_int 19D8              ?_ToMainLow_recvmsg 01A2             __end_of_Delay1KTCYx 1B3C  
             ??_i2c_int_handler 0049                 ___lwmod@counter 00D2              ?_ToMainLow_sendmsg 0017  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                  i2send_msg@data 003D  
         ??_InterruptHandlerLow 001E             ??_ToMainLow_recvmsg 00E5                  i2send_msg@qmsg 0043  
                i2send_msg@slot 0042                  i2send_msg@qptr 0039             ??_ToMainLow_sendmsg 001A  
                ??_handle_start 002F                    _USART_Status 0050  
