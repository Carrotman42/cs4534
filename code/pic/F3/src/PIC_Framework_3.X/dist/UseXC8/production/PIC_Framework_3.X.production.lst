

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Feb 11 11:29:19 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           	psect	idataCOMRAM
    79  001BF0                     __pidataCOMRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _sample1
    83  001BF0  01                 	db	1
    84                           
    85                           ;initializer for _sample2
    86  001BF1  05                 	db	5
    87                           
    88                           ;initializer for _sample3
    89  001BF2  10                 	db	16
    90                           
    91                           ;initializer for _sample4
    92  001BF3  D8                 	db	216
    93                           
    94                           ;initializer for _sample5
    95  001BF4  FE                 	db	254
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADRESL	set	4035
   102  0000                     _INTCONbits	set	4082
   103  0000                     _IPR1bits	set	3999
   104  0000                     _LATB	set	3978
   105  0000                     _LATBbits	set	3978
   106  0000                     _OSCCON	set	4051
   107  0000                     _OSCCONbits	set	4051
   108  0000                     _OSCTUNEbits	set	3995
   109  0000                     _PIE1bits	set	3997
   110  0000                     _PIR1bits	set	3998
   111  0000                     _RCONbits	set	4048
   112  0000                     _RCREG	set	4014
   113  0000                     _RCSTAbits	set	4011
   114  0000                     _SSPADD	set	4040
   115  0000                     _SSPBUF	set	4041
   116  0000                     _SSPCON1	set	4038
   117  0000                     _SSPCON1bits	set	4038
   118  0000                     _SSPCON2	set	4037
   119  0000                     _SSPCON2bits	set	4037
   120  0000                     _SSPSTAT	set	4039
   121  0000                     _SSPSTATbits	set	4039
   122  0000                     _T0CON	set	4053
   123  0000                     _T0CONbits	set	4053
   124  0000                     _TMR0H	set	4055
   125  0000                     _TMR0L	set	4054
   126  0000                     _TMR1H	set	4047
   127  0000                     _TMR1L	set	4046
   128  0000                     _TRISAbits	set	3986
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISCbits	set	3988
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  0014D0                     __pcinit:
   136                           	opt stack 0
   137  0014D0                     start_initialization:
   138                           	opt stack 0
   139  0014D0                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK3 (54 bytes)
   143  0014D0  EE03  F098         	lfsr	0,__pbssBANK3
   144  0014D4  0E36               	movlw	54
   145  0014D6                     clear_0:
   146  0014D6  6AEE               	clrf	postinc0,c
   147  0014D8  06E8               	decf	wreg,f,c
   148  0014DA  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to BANK2 (209 bytes)
   151  0014DC  EE02  F000         	lfsr	0,__pbssBANK2
   152  0014E0  0ED1               	movlw	209
   153  0014E2                     clear_1:
   154  0014E2  6AEE               	clrf	postinc0,c
   155  0014E4  06E8               	decf	wreg,f,c
   156  0014E6  E1FD               	bnz	clear_1
   157                           
   158                           ; Clear objects allocated to BANK1 (56 bytes)
   159  0014E8  EE01  F000         	lfsr	0,__pbssBANK1
   160  0014EC  0E38               	movlw	56
   161  0014EE                     clear_2:
   162  0014EE  6AEE               	clrf	postinc0,c
   163  0014F0  06E8               	decf	wreg,f,c
   164  0014F2  E1FD               	bnz	clear_2
   165                           
   166                           ; Clear objects allocated to COMRAM (13 bytes)
   167  0014F4  EE00  F040         	lfsr	0,__pbssCOMRAM
   168  0014F8  0E0D               	movlw	13
   169  0014FA                     clear_3:
   170  0014FA  6AEE               	clrf	postinc0,c
   171  0014FC  06E8               	decf	wreg,f,c
   172  0014FE  E1FD               	bnz	clear_3
   173                           
   174                           ; Initialize objects allocated to COMRAM (5 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176  001500  0EF0               	movlw	low __pidataCOMRAM
   177  001502  6EF6               	movwf	tblptrl,c
   178  001504  0E1B               	movlw	high __pidataCOMRAM
   179  001506  6EF7               	movwf	tblptrh,c
   180  001508  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181  00150A  6EF8               	movwf	tblptru,c
   182  00150C  EE00  F04D         	lfsr	0,__pdataCOMRAM
   183  001510  EE10 F005          	lfsr	1,5
   184  001514                     copy_data0:
   185  001514  0009               	tblrd		*+
   186  001516  CFF5 FFEE          	movff	tablat,postinc0
   187  00151A  50E5               	movf	postdec1,w,c
   188  00151C  50E1               	movf	fsr1l,w,c
   189  00151E  E1FA               	bnz	copy_data0
   190  001520                     end_of_initialization:
   191                           	opt stack 0
   192  001520                     __end_of__initialization:
   193                           	opt stack 0
   194  001520  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195  001522  6EF8               	movwf	tblptru,c
   196  001524  0100               	movlb	0
   197  001526  EF5C  F003         	goto	_main	;jump to C main() function
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           postdec1	equ	0xFE5
   205                           fsr1l	equ	0xFE1
   206                           
   207                           	psect	bssCOMRAM
   208  000040                     __pbssCOMRAM:
   209                           	opt stack 0
   210  000040                     _BrainMsgRecv:
   211                           	opt stack 0
   212  000040                     	ds	2
   213  000042                     _uc_ptr:
   214                           	opt stack 0
   215  000042                     	ds	2
   216  000044                     _MQ_Main_Willing_to_block:
   217                           	opt stack 0
   218  000044                     	ds	1
   219  000045                     _USART_Status:
   220                           	opt stack 0
   221  000045                     	ds	1
   222  000046                     _count:
   223                           	opt stack 0
   224  000046                     	ds	1
   225  000047                     _timesreq:
   226                           	opt stack 0
   227  000047                     	ds	1
   228  000048                     _ADCBuffer:
   229                           	opt stack 0
   230  000048                     	ds	5
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	dataCOMRAM
   241  00004D                     __pdataCOMRAM:
   242                           	opt stack 0
   243  00004D                     _sample1:
   244                           	opt stack 0
   245  00004D                     	ds	1
   246  00004E                     _sample2:
   247                           	opt stack 0
   248  00004E                     	ds	1
   249  00004F                     _sample3:
   250                           	opt stack 0
   251  00004F                     	ds	1
   252  000050                     _sample4:
   253                           	opt stack 0
   254  000050                     	ds	1
   255  000051                     _sample5:
   256                           	opt stack 0
   257  000051                     	ds	1
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	bssBANK1
   268  000100                     __pbssBANK1:
   269                           	opt stack 0
   270  000100                     _ic_ptr:
   271                           	opt stack 0
   272  000100                     	ds	2
   273  000102                     _ToMainHigh_MQ:
   274                           	opt stack 0
   275  000102                     	ds	54
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	bssBANK2
   286  000200                     __pbssBANK2:
   287                           	opt stack 0
   288  000200                     _ADacc:
   289                           	opt stack 0
   290  000200                     	ds	101
   291  000265                     _FromMainLow_MQ:
   292                           	opt stack 0
   293  000265                     	ds	54
   294  00029B                     _ToMainLow_MQ:
   295                           	opt stack 0
   296  00029B                     	ds	54
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	bssBANK3
   307  000398                     __pbssBANK3:
   308                           	opt stack 0
   309  000398                     _FromMainHigh_MQ:
   310                           	opt stack 0
   311  000398                     	ds	54
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	cstackBANK3
   322  000300                     __pcstackBANK3:
   323                           	opt stack 0
   324  000300                     main@to_send_buffer:
   325                           	opt stack 0
   326                           
   327                           ; 11 bytes @ 0x0
   328  000300                     	ds	11
   329  00030B                     main@msgbuffer:
   330                           	opt stack 0
   331                           
   332                           ; 11 bytes @ 0xB
   333  00030B                     	ds	11
   334  000316                     main@last_reg_recvd:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x16
   338  000316                     	ds	1
   339  000317                     main@j:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x17
   343  000317                     	ds	2
   344  000319                     main@j_452:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x19
   348  000319                     	ds	2
   349  00031B                     main@msgtype:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x1B
   353  00031B                     	ds	1
   354  00031C                     main@data_points_count:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x1C
   358  00031C                     	ds	2
   359  00031E                     main@length:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x1E
   363  00031E                     	ds	1
   364  00031F                     main@ic:
   365                           	opt stack 0
   366                           
   367                           ; 121 bytes @ 0x1F
   368  00031F                     	ds	121
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1l	equ	0xFE1
   377                           
   378                           	psect	cstackBANK1
   379  000138                     __pcstackBANK1:
   380                           	opt stack 0
   381  000138                     ??_InterruptHandlerHigh:
   382                           
   383                           ; 0 bytes @ 0x0
   384  000138                     	ds	14
   385  000146                     ??_resetADacc:
   386  000146                     ?_in_high_int:
   387                           	opt stack 0
   388  000146                     i2c_configure_slave@addr:
   389                           	opt stack 0
   390  000146                     OpenADC@config2:
   391                           	opt stack 0
   392  000146                     OpenTimer0@config:
   393                           	opt stack 0
   394  000146                     Delay1KTCYx@unit:
   395                           	opt stack 0
   396  000146                     init_queue@qptr:
   397                           	opt stack 0
   398  000146                     check_msg@qptr:
   399                           	opt stack 0
   400  000146                     start_i2c_slave_reply@msg:
   401                           	opt stack 0
   402  000146                     init_i2c@ic:
   403                           	opt stack 0
   404  000146                     addADDataPoints@data:
   405                           	opt stack 0
   406  000146                     memcpy@d1:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xE
   410  000146                     	ds	1
   411  000147                     OpenADC@portconfig:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0xF
   415  000147                     	ds	1
   416  000148                     ??_start_i2c_slave_reply:
   417  000148                     ??_OpenADC:
   418  000148                     ??_init_queue:
   419  000148                     ??_check_msg:
   420  000148                     ?_in_low_int:
   421                           	opt stack 0
   422  000148                     addADDataPoints@len:
   423                           	opt stack 0
   424  000148                     memcpy@s1:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x10
   428  000148                     	ds	1
   429  000149                     init_queue@i:
   430                           	opt stack 0
   431  000149                     resetADacc@i:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x11
   435  000149                     	ds	1
   436  00014A                     ??_init_queues:
   437  00014A                     ??_addADDataPoints:
   438  00014A                     ?_in_main:
   439                           	opt stack 0
   440  00014A                     start_i2c_slave_reply@length:
   441                           	opt stack 0
   442  00014A                     OpenADC@config:
   443                           	opt stack 0
   444  00014A                     memcpy@n:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x12
   448  00014A                     	ds	1
   449  00014B                     ??_init_adc:
   450                           
   451                           ; 0 bytes @ 0x13
   452  00014B                     	ds	1
   453  00014C                     ??_block_on_To_msgqueues:
   454  00014C                     addADDataPoints@i:
   455                           	opt stack 0
   456  00014C                     memcpy@d:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x14
   460  00014C                     	ds	2
   461  00014E                     addDataPoints@sensorid:
   462                           	opt stack 0
   463  00014E                     memcpy@s:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x16
   467  00014E                     	ds	2
   468  000150                     recv_msg@qptr:
   469                           	opt stack 0
   470  000150                     addDataPoints@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x18
   474  000150                     	ds	2
   475  000152                     recv_msg@maxlength:
   476                           	opt stack 0
   477  000152                     addDataPoints@len:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x1A
   481  000152                     	ds	1
   482  000153                     recv_msg@msgtype:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x1B
   486  000153                     	ds	1
   487  000154                     
   488                           ; 0 bytes @ 0x1C
   489  000154                     	ds	1
   490  000155                     recv_msg@data:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x1D
   494  000155                     	ds	2
   495  000157                     ??_recv_msg:
   496                           
   497                           ; 0 bytes @ 0x1F
   498  000157                     	ds	2
   499  000159                     recv_msg@slot:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x21
   503  000159                     	ds	1
   504  00015A                     recv_msg@tlength:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x22
   508  00015A                     	ds	2
   509  00015C                     recv_msg@qmsg:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x24
   513  00015C                     	ds	2
   514  00015E                     ToMainLow_recvmsg@msgtype:
   515                           	opt stack 0
   516  00015E                     ToMainHigh_recvmsg@msgtype:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x26
   520  00015E                     	ds	2
   521  000160                     ToMainLow_recvmsg@data:
   522                           	opt stack 0
   523  000160                     ToMainHigh_recvmsg@data:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x28
   527  000160                     	ds	2
   528  000162                     ToMainLow_recvmsg@maxlength:
   529                           	opt stack 0
   530  000162                     ToMainHigh_recvmsg@maxlength:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x2A
   534  000162                     	ds	1
   535  000163                     ??_main:
   536                           
   537                           ; 0 bytes @ 0x2B
   538  000163                     	ds	1
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           
   548                           	psect	cstackBANK0
   549  000080                     __pcstackBANK0:
   550                           	opt stack 0
   551  000080                     ?_packADData:
   552                           	opt stack 0
   553  000080                     packADData@data:
   554                           	opt stack 0
   555  000080                     i2send_msg@tlength:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x0
   559  000080                     	ds	2
   560  000082                     i2send_msg@slot:
   561                           	opt stack 0
   562  000082                     packADData@len:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x2
   566  000082                     	ds	1
   567  000083                     i2send_msg@qmsg:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x3
   571  000083                     	ds	1
   572  000084                     packADData@out:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x4
   576  000084                     	ds	1
   577  000085                     i2ToMainHigh_sendmsg@msgtype:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x5
   581  000085                     	ds	1
   582  000086                     packADData@maxout:
   583                           	opt stack 0
   584  000086                     i2ToMainHigh_sendmsg@data:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x6
   588  000086                     	ds	2
   589  000088                     i2ToMainHigh_sendmsg@length:
   590                           	opt stack 0
   591  000088                     sendADdata@outBuff:
   592                           	opt stack 0
   593                           
   594                           ; 103 bytes @ 0x8
   595  000088                     	ds	103
   596  0000EF                     sendADdata@bytes_packed:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x6F
   600  0000EF                     	ds	2
   601  0000F1                     ??_i2c_int_handler:
   602                           
   603                           ; 0 bytes @ 0x71
   604  0000F1                     	ds	1
   605  0000F2                     i2c_int_handler@error_buf:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x72
   609  0000F2                     	ds	3
   610  0000F5                     i2c_int_handler@data_written:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x75
   614  0000F5                     	ds	1
   615  0000F6                     i2c_int_handler@overrun_error:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x76
   619  0000F6                     	ds	1
   620  0000F7                     i2c_int_handler@i2c_data:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x77
   624  0000F7                     	ds	1
   625  0000F8                     i2c_int_handler@msg_to_send:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x78
   629  0000F8                     	ds	1
   630  0000F9                     i2c_int_handler@msg_ready:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x79
   634  0000F9                     	ds	1
   635  0000FA                     i2c_int_handler@data_read:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x7A
   639  0000FA                     	ds	1
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           postinc0	equ	0xFEE
   645                           wreg	equ	0xFE8
   646                           postdec1	equ	0xFE5
   647                           fsr1l	equ	0xFE1
   648                           
   649                           	psect	cstackCOMRAM
   650  000001                     __pcstackCOMRAM:
   651                           	opt stack 0
   652  000001                     ?_ReadADC:
   653                           	opt stack 0
   654  000001                     setDBG@b:
   655                           	opt stack 0
   656  000001                     resetDBG@b:
   657                           	opt stack 0
   658  000001                     addBuffer@data:
   659                           	opt stack 0
   660  000001                     i1memcpy@d1:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x0
   664  000001                     	ds	1
   665  000002                     debugNum@num:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x1
   669  000002                     	ds	1
   670  000003                     i1memcpy@s1:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x2
   674  000003                     	ds	1
   675  000004                     
   676                           ; 0 bytes @ 0x3
   677  000004                     	ds	1
   678  000005                     i1memcpy@n:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x4
   682  000005                     	ds	2
   683  000007                     i1memcpy@d:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x6
   687  000007                     	ds	2
   688  000009                     i1memcpy@s:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x8
   692  000009                     	ds	2
   693  00000B                     send_msg@qptr:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0xA
   697  00000B                     	ds	2
   698  00000D                     send_msg@length:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0xC
   702  00000D                     	ds	1
   703  00000E                     send_msg@msgtype:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0xD
   707  00000E                     	ds	1
   708  00000F                     send_msg@data:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0xE
   712  00000F                     	ds	2
   713  000011                     ??_send_msg:
   714                           
   715                           ; 0 bytes @ 0x10
   716  000011                     	ds	1
   717  000012                     send_msg@tlength:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x11
   721  000012                     	ds	2
   722  000014                     send_msg@slot:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x13
   726  000014                     	ds	1
   727  000015                     send_msg@qmsg:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x14
   731  000015                     	ds	2
   732  000017                     ToMainHigh_sendmsg@msgtype:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x16
   736  000017                     	ds	1
   737  000018                     ToMainHigh_sendmsg@data:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x17
   741  000018                     	ds	2
   742  00001A                     ToMainHigh_sendmsg@length:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x19
   746  00001A                     	ds	1
   747  00001B                     ??_adc_int_handler:
   748                           
   749                           ; 0 bytes @ 0x1A
   750  00001B                     	ds	1
   751  00001C                     adc_int_handler@data:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x1B
   755  00001C                     	ds	2
   756  00001E                     ??_InterruptHandlerLow:
   757                           
   758                           ; 0 bytes @ 0x1D
   759  00001E                     	ds	17
   760  00002F                     ??i2_resetADacc:
   761  00002F                     ?_packReturnData:
   762                           	opt stack 0
   763  00002F                     ?_unpackBrainMsg:
   764                           	opt stack 0
   765  00002F                     ?i2_in_high_int:
   766                           	opt stack 0
   767  00002F                     handle_start@data_read:
   768                           	opt stack 0
   769  00002F                     i2setDBG@b:
   770                           	opt stack 0
   771  00002F                     i2resetDBG@b:
   772                           	opt stack 0
   773  00002F                     packReturnData@data:
   774                           	opt stack 0
   775  00002F                     unpackBrainMsg@buf:
   776                           	opt stack 0
   777  00002F                     WriteTimer0@timer0:
   778                           	opt stack 0
   779  00002F                     i2check_msg@qptr:
   780                           	opt stack 0
   781  00002F                     i2start_i2c_slave_reply@msg:
   782                           	opt stack 0
   783  00002F                     i2memcpy@d1:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x2E
   787  00002F                     	ds	1
   788  000030                     i2debugNum@num:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x2F
   792  000030                     	ds	1
   793  000031                     ??i2_check_msg:
   794  000031                     ??i2_start_i2c_slave_reply:
   795  000031                     ?i2_in_low_int:
   796                           	opt stack 0
   797  000031                     packReturnData@payloadLen:
   798                           	opt stack 0
   799  000031                     setBrainReqData@buf:
   800                           	opt stack 0
   801  000031                     WriteTimer0@timer:
   802                           	opt stack 0
   803  000031                     i2memcpy@s1:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x30
   807  000031                     	ds	1
   808  000032                     i2resetADacc@i:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x31
   812  000032                     	ds	1
   813  000033                     i2start_i2c_slave_reply@length:
   814                           	opt stack 0
   815  000033                     packReturnData@msg:
   816                           	opt stack 0
   817  000033                     setBrainReqData@tempBrain:
   818                           	opt stack 0
   819  000033                     i2memcpy@n:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x32
   823  000033                     	ds	2
   824  000035                     packReturnData@maxout:
   825                           	opt stack 0
   826  000035                     i2memcpy@d:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x34
   830  000035                     	ds	2
   831  000037                     packReturnData@sensorID:
   832                           	opt stack 0
   833  000037                     i2memcpy@s:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x36
   837  000037                     	ds	2
   838  000039                     ??_packReturnData:
   839  000039                     i2send_msg@qptr:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x38
   843  000039                     	ds	2
   844  00003B                     i2send_msg@length:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x3A
   848  00003B                     	ds	1
   849  00003C                     i2send_msg@msgtype:
   850                           	opt stack 0
   851  00003C                     packReturnData@end:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x3B
   855  00003C                     	ds	1
   856  00003D                     i2send_msg@data:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x3C
   860  00003D                     	ds	1
   861  00003E                     packReturnData@dest:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x3D
   865  00003E                     	ds	1
   866  00003F                     ??i2_send_msg:
   867                           
   868                           ; 0 bytes @ 0x3E
   869  00003F                     	ds	1
   870  000040                     tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           
   879                           ; 0 bytes @ 0x3F
   880 ;;
   881 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   882 ;;
   883 ;; *************** function _main *****************
   884 ;; Defined at:
   885 ;;		line 188 in file "../src/main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  j               2   23[BANK3 ] int 
   890 ;;  j               2   25[BANK3 ] int 
   891 ;;  ic            121   31[BANK3 ] struct __i2c_comm
   892 ;;  msgbuffer      11   11[BANK3 ] unsigned char [11]
   893 ;;  to_send_buff   11    0[BANK3 ] unsigned char [11]
   894 ;;  data_points_    2   28[BANK3 ] int 
   895 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   896 ;;  length          1   30[BANK3 ] char 
   897 ;;  msgtype         1   27[BANK3 ] unsigned char 
   898 ;;  last_reg_rec    1   22[BANK3 ] unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;		None               void
   901 ;; Registers used:
   902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0     152
   910 ;;      Temps:          0       0       1       0       0
   911 ;;      Totals:         0       0       1       0     152
   912 ;;Total ram usage:      153 bytes
   913 ;; Hardware stack levels required when called:   15
   914 ;; This function calls:
   915 ;;		_OpenTimer0
   916 ;;		_ToMainHigh_recvmsg
   917 ;;		_ToMainLow_recvmsg
   918 ;;		_addDataPoints
   919 ;;		_block_on_To_msgqueues
   920 ;;		_enable_interrupts
   921 ;;		_i2c_configure_slave
   922 ;;		_init_adc
   923 ;;		_init_i2c
   924 ;;		_init_queues
   925 ;;		_resetAccumulators
   926 ;;		_start_i2c_slave_reply
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text0
   933  0006B8                     __ptext0:
   934                           	opt stack 0
   935  0006B8                     _main:
   936                           	opt stack 16
   937                           
   938                           ;main.c: 190: signed char length;
   939                           ;main.c: 191: unsigned char msgtype;
   940                           ;main.c: 192: unsigned char last_reg_recvd;
   941                           ;main.c: 194: i2c_comm ic;
   942                           ;main.c: 195: unsigned char msgbuffer[10 + 1];
   943                           ;main.c: 196: unsigned char to_send_buffer[10+1];
   944                           ;main.c: 197: int data_points_count = 0;
   945                           
   946                           ;incstack = 0
   947  0006B8  0E00               	movlw	0
   948  0006BA  0103               	movlb	3	; () banked
   949  0006BC  0103               	movlb	3	; () banked
   950  0006BE  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
   951  0006C0  0E00               	movlw	0
   952  0006C2  0103               	movlb	3	; () banked
   953  0006C4  6F1C               	movwf	main@data_points_count& (0+255),b
   954                           
   955                           ;main.c: 201: timer0_thread_struct t0thread_data;
   956                           ;main.c: 209: OSCCON = 0x82;
   957  0006C6  0E82               	movlw	130
   958  0006C8  6ED3               	movwf	4051,c	;volatile
   959                           
   960                           ; BSR set to: 3
   961                           ;main.c: 210: OSCTUNEbits.PLLEN = 0;
   962  0006CA  9C9B               	bcf	3995,6,c	;volatile
   963                           
   964                           ; BSR set to: 3
   965                           ;main.c: 227: resetAccumulators();
   966  0006CC  ECF2  F00D         	call	_resetAccumulators	;wreg free
   967                           
   968                           ;main.c: 229: init_adc();
   969  0006D0  ECD6  F00C         	call	_init_adc	;wreg free
   970                           
   971                           ;main.c: 234: init_i2c(&ic);
   972  0006D4  0103               	movlb	3	; () banked
   973  0006D6  0E03               	movlw	high main@ic
   974  0006D8  0101               	movlb	1	; () banked
   975  0006DA  0101               	movlb	1	; () banked
   976  0006DC  6F47               	movwf	(init_i2c@ic+1)& (0+255),b
   977  0006DE  0103               	movlb	3	; () banked
   978  0006E0  0E1F               	movlw	low main@ic
   979  0006E2  0101               	movlb	1	; () banked
   980  0006E4  0101               	movlb	1	; () banked
   981  0006E6  6F46               	movwf	init_i2c@ic& (0+255),b
   982  0006E8  EC04  F00A         	call	_init_i2c	;wreg free
   983                           
   984                           ;main.c: 240: init_queues();
   985  0006EC  ECCD  F009         	call	_init_queues	;wreg free
   986                           
   987                           ;main.c: 244: TRISB = 0x0;
   988  0006F0  0E00               	movlw	0
   989  0006F2  6E93               	movwf	3987,c	;volatile
   990                           
   991                           ;main.c: 245: LATB = 0x0;
   992  0006F4  0E00               	movlw	0
   993  0006F6  6E8A               	movwf	3978,c	;volatile
   994                           
   995                           ;main.c: 258: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110001);
   996  0006F8  0E91               	movlw	145
   997  0006FA  EC34  F00D         	call	_OpenTimer0
   998                           
   999                           ;main.c: 278: IPR1bits.SSPIP = 1;
  1000  0006FE  869F               	bsf	3999,3,c	;volatile
  1001                           
  1002                           ;main.c: 280: IPR1bits.ADIP = 0;
  1003  000700  9C9F               	bcf	3999,6,c	;volatile
  1004                           
  1005                           ;main.c: 290: i2c_configure_slave(0x9E);
  1006  000702  0E9E               	movlw	158
  1007  000704  EC5E  F00D         	call	_i2c_configure_slave
  1008                           
  1009                           ;main.c: 305: PIE1bits.SSPIE = 1;
  1010  000708  869D               	bsf	3997,3,c	;volatile
  1011                           
  1012                           ;main.c: 323: enable_interrupts();
  1013  00070A  ECEE  F00D         	call	_enable_interrupts	;wreg free
  1014  00070E                     l3364:
  1015                           
  1016                           ;main.c: 347: block_on_To_msgqueues();
  1017  00070E  ECDD  F008         	call	_block_on_To_msgqueues	;wreg free
  1018                           
  1019                           ;main.c: 354: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1020  000712  0103               	movlb	3	; () banked
  1021  000714  0E03               	movlw	high main@msgtype
  1022  000716  0101               	movlb	1	; () banked
  1023  000718  0101               	movlb	1	; () banked
  1024  00071A  6F5F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1025  00071C  0103               	movlb	3	; () banked
  1026  00071E  0E1B               	movlw	low main@msgtype
  1027  000720  0101               	movlb	1	; () banked
  1028  000722  0101               	movlb	1	; () banked
  1029  000724  6F5E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1030  000726  0103               	movlb	3	; () banked
  1031  000728  0E03               	movlw	high main@msgbuffer
  1032  00072A  0101               	movlb	1	; () banked
  1033  00072C  0101               	movlb	1	; () banked
  1034  00072E  6F61               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1035  000730  0103               	movlb	3	; () banked
  1036  000732  0E0B               	movlw	low main@msgbuffer
  1037  000734  0101               	movlb	1	; () banked
  1038  000736  0101               	movlb	1	; () banked
  1039  000738  6F60               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1040  00073A  0E0A               	movlw	10
  1041  00073C  ECC3  F00B         	call	_ToMainHigh_recvmsg
  1042  000740  0103               	movlb	3	; () banked
  1043  000742  0103               	movlb	3	; () banked
  1044  000744  6F1E               	movwf	main@length& (0+255),b
  1045                           
  1046                           ; BSR set to: 3
  1047                           ;main.c: 355: if (length < 0) {
  1048  000746  0103               	movlb	3	; () banked
  1049  000748  0103               	movlb	3	; () banked
  1050  00074A  BF1E               	btfsc	main@length& (0+255),7,b
  1051  00074C  D104               	goto	l3416
  1052  00074E  D0F1               	goto	l3414
  1053  000750                     l91:
  1054                           
  1055                           ; BSR set to: 3
  1056                           ;main.c: 368: case 41:
  1057                           ;main.c: 369: {
  1058                           ;main.c: 372: last_reg_recvd = msgbuffer[0];
  1059  000750  C30B  F316         	movff	main@msgbuffer,main@last_reg_recvd
  1060                           
  1061                           ;main.c: 373: break;
  1062  000754  D100               	goto	l3416
  1063  000756                     l3372:
  1064                           
  1065                           ; BSR set to: 3
  1066                           ;main.c: 406: {
  1067                           ;main.c: 407: if(data_points_count == 0){
  1068  000756  0103               	movlb	3	; () banked
  1069  000758  0103               	movlb	3	; () banked
  1070  00075A  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1071  00075C  111C               	iorwf	main@data_points_count& (0+255),w,b
  1072  00075E  A4D8               	btfss	status,2,c
  1073  000760  D00C               	goto	l3378
  1074                           
  1075                           ; BSR set to: 3
  1076                           ;main.c: 408: msgbuffer[0] = 0xff;
  1077  000762  0103               	movlb	3	; () banked
  1078  000764  0103               	movlb	3	; () banked
  1079  000766  690B               	setf	main@msgbuffer& (0+255),b
  1080                           
  1081                           ; BSR set to: 3
  1082                           ;main.c: 409: length = 1;
  1083  000768  0101               	movlb	1	; () banked
  1084  00076A  6F63               	movwf	??_main& (0+255),b
  1085  00076C  0E01               	movlw	1
  1086  00076E  0103               	movlb	3	; () banked
  1087  000770  0103               	movlb	3	; () banked
  1088  000772  6F1E               	movwf	main@length& (0+255),b
  1089  000774  0101               	movlb	1	; () banked
  1090  000776  5163               	movf	??_main& (0+255),w,b
  1091                           
  1092                           ;main.c: 410: }
  1093  000778  D09D               	goto	l3406
  1094  00077A                     l3378:
  1095                           
  1096                           ;main.c: 411: else{
  1097                           ;main.c: 412: for(int j = 0; j < data_points_count; j++){
  1098  00077A  0E00               	movlw	0
  1099  00077C  0103               	movlb	3	; () banked
  1100  00077E  0103               	movlb	3	; () banked
  1101  000780  6F18               	movwf	(main@j+1)& (0+255),b
  1102  000782  0E00               	movlw	0
  1103  000784  0103               	movlb	3	; () banked
  1104  000786  6F17               	movwf	main@j& (0+255),b
  1105  000788  D01E               	goto	l3384
  1106  00078A                     l3380:
  1107                           
  1108                           ;main.c: 413: msgbuffer[j] = to_send_buffer[j];
  1109  00078A  0103               	movlb	3	; () banked
  1110  00078C  0E00               	movlw	low main@to_send_buffer
  1111  00078E  0103               	movlb	3	; () banked
  1112  000790  0103               	movlb	3	; () banked
  1113  000792  2517               	addwf	main@j& (0+255),w,b
  1114  000794  6ED9               	movwf	fsr2l,c
  1115  000796  0103               	movlb	3	; () banked
  1116  000798  0E03               	movlw	high main@to_send_buffer
  1117  00079A  0103               	movlb	3	; () banked
  1118  00079C  0103               	movlb	3	; () banked
  1119  00079E  2118               	addwfc	(main@j+1)& (0+255),w,b
  1120  0007A0  6EDA               	movwf	fsr2h,c
  1121  0007A2  0103               	movlb	3	; () banked
  1122  0007A4  0E0B               	movlw	low main@msgbuffer
  1123  0007A6  0103               	movlb	3	; () banked
  1124  0007A8  0103               	movlb	3	; () banked
  1125  0007AA  2517               	addwf	main@j& (0+255),w,b
  1126  0007AC  6EE1               	movwf	fsr1l,c
  1127  0007AE  0103               	movlb	3	; () banked
  1128  0007B0  0E03               	movlw	high main@msgbuffer
  1129  0007B2  0103               	movlb	3	; () banked
  1130  0007B4  0103               	movlb	3	; () banked
  1131  0007B6  2118               	addwfc	(main@j+1)& (0+255),w,b
  1132  0007B8  6EE2               	movwf	fsr1h,c
  1133  0007BA  CFDF FFE7          	movff	indf2,indf1
  1134                           
  1135                           ; BSR set to: 3
  1136  0007BE  0103               	movlb	3	; () banked
  1137  0007C0  0103               	movlb	3	; () banked
  1138  0007C2  4B17               	infsnz	main@j& (0+255),f,b
  1139  0007C4  2B18               	incf	(main@j+1)& (0+255),f,b
  1140  0007C6                     l3384:
  1141                           
  1142                           ; BSR set to: 3
  1143  0007C6  0103               	movlb	3	; () banked
  1144  0007C8  0103               	movlb	3	; () banked
  1145  0007CA  5118               	movf	(main@j+1)& (0+255),w,b
  1146  0007CC  0A80               	xorlw	128
  1147  0007CE  0101               	movlb	1	; () banked
  1148  0007D0  6F63               	movwf	??_main& (0+255),b
  1149  0007D2  0103               	movlb	3	; () banked
  1150  0007D4  511C               	movf	main@data_points_count& (0+255),w,b
  1151  0007D6  0103               	movlb	3	; () banked
  1152  0007D8  0103               	movlb	3	; () banked
  1153  0007DA  5D17               	subwf	main@j& (0+255),w,b
  1154  0007DC  0103               	movlb	3	; () banked
  1155  0007DE  0103               	movlb	3	; () banked
  1156  0007E0  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1157  0007E2  0A80               	xorlw	128
  1158  0007E4  0101               	movlb	1	; () banked
  1159  0007E6  5963               	subwfb	??_main& (0+255),w,b
  1160  0007E8  A0D8               	btfss	status,0,c
  1161  0007EA  D7CF               	goto	l3380
  1162  0007EC  D050               	goto	u2290
  1163  0007EE                     l3388:
  1164                           
  1165                           ; BSR set to: 3
  1166                           ;main.c: 421: {
  1167                           ;main.c: 422: to_send_buffer[0] = 0x04;
  1168  0007EE  0101               	movlb	1	; () banked
  1169  0007F0  6F63               	movwf	??_main& (0+255),b
  1170  0007F2  0E04               	movlw	4
  1171  0007F4  0103               	movlb	3	; () banked
  1172  0007F6  0103               	movlb	3	; () banked
  1173  0007F8  6F00               	movwf	main@to_send_buffer& (0+255),b
  1174  0007FA  0101               	movlb	1	; () banked
  1175  0007FC  5163               	movf	??_main& (0+255),w,b
  1176                           
  1177                           ;main.c: 423: to_send_buffer[1] = 0x0d;
  1178  0007FE  0101               	movlb	1	; () banked
  1179  000800  6F63               	movwf	??_main& (0+255),b
  1180  000802  0E0D               	movlw	13
  1181  000804  0103               	movlb	3	; () banked
  1182  000806  0103               	movlb	3	; () banked
  1183  000808  6F01               	movwf	(main@to_send_buffer+1)& (0+255),b
  1184  00080A  0101               	movlb	1	; () banked
  1185  00080C  5163               	movf	??_main& (0+255),w,b
  1186                           
  1187                           ; BSR set to: 1
  1188                           ;main.c: 424: data_points_count = 2;
  1189  00080E  0E00               	movlw	0
  1190  000810  0103               	movlb	3	; () banked
  1191  000812  0103               	movlb	3	; () banked
  1192  000814  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
  1193  000816  0E02               	movlw	2
  1194  000818  0103               	movlb	3	; () banked
  1195  00081A  6F1C               	movwf	main@data_points_count& (0+255),b
  1196                           
  1197                           ; BSR set to: 3
  1198                           ;main.c: 425: for(int j = 0; j < data_points_count; j++){
  1199  00081C  0E00               	movlw	0
  1200  00081E  0103               	movlb	3	; () banked
  1201  000820  0103               	movlb	3	; () banked
  1202  000822  6F1A               	movwf	(main@j_452+1)& (0+255),b
  1203  000824  0E00               	movlw	0
  1204  000826  0103               	movlb	3	; () banked
  1205  000828  6F19               	movwf	main@j_452& (0+255),b
  1206  00082A  D01E               	goto	l3398
  1207  00082C                     l3394:
  1208                           
  1209                           ;main.c: 426: msgbuffer[j] = to_send_buffer[j];
  1210  00082C  0103               	movlb	3	; () banked
  1211  00082E  0E00               	movlw	low main@to_send_buffer
  1212  000830  0103               	movlb	3	; () banked
  1213  000832  0103               	movlb	3	; () banked
  1214  000834  2519               	addwf	main@j_452& (0+255),w,b
  1215  000836  6ED9               	movwf	fsr2l,c
  1216  000838  0103               	movlb	3	; () banked
  1217  00083A  0E03               	movlw	high main@to_send_buffer
  1218  00083C  0103               	movlb	3	; () banked
  1219  00083E  0103               	movlb	3	; () banked
  1220  000840  211A               	addwfc	(main@j_452+1)& (0+255),w,b
  1221  000842  6EDA               	movwf	fsr2h,c
  1222  000844  0103               	movlb	3	; () banked
  1223  000846  0E0B               	movlw	low main@msgbuffer
  1224  000848  0103               	movlb	3	; () banked
  1225  00084A  0103               	movlb	3	; () banked
  1226  00084C  2519               	addwf	main@j_452& (0+255),w,b
  1227  00084E  6EE1               	movwf	fsr1l,c
  1228  000850  0103               	movlb	3	; () banked
  1229  000852  0E03               	movlw	high main@msgbuffer
  1230  000854  0103               	movlb	3	; () banked
  1231  000856  0103               	movlb	3	; () banked
  1232  000858  211A               	addwfc	(main@j_452+1)& (0+255),w,b
  1233  00085A  6EE2               	movwf	fsr1h,c
  1234  00085C  CFDF FFE7          	movff	indf2,indf1
  1235                           
  1236                           ; BSR set to: 3
  1237  000860  0103               	movlb	3	; () banked
  1238  000862  0103               	movlb	3	; () banked
  1239  000864  4B19               	infsnz	main@j_452& (0+255),f,b
  1240  000866  2B1A               	incf	(main@j_452+1)& (0+255),f,b
  1241  000868                     l3398:
  1242                           
  1243                           ; BSR set to: 3
  1244  000868  0103               	movlb	3	; () banked
  1245  00086A  0103               	movlb	3	; () banked
  1246  00086C  511A               	movf	(main@j_452+1)& (0+255),w,b
  1247  00086E  0A80               	xorlw	128
  1248  000870  0101               	movlb	1	; () banked
  1249  000872  6F63               	movwf	??_main& (0+255),b
  1250  000874  0103               	movlb	3	; () banked
  1251  000876  511C               	movf	main@data_points_count& (0+255),w,b
  1252  000878  0103               	movlb	3	; () banked
  1253  00087A  0103               	movlb	3	; () banked
  1254  00087C  5D19               	subwf	main@j_452& (0+255),w,b
  1255  00087E  0103               	movlb	3	; () banked
  1256  000880  0103               	movlb	3	; () banked
  1257  000882  511D               	movf	(main@data_points_count+1)& (0+255),w,b
  1258  000884  0A80               	xorlw	128
  1259  000886  0101               	movlb	1	; () banked
  1260  000888  5963               	subwfb	??_main& (0+255),w,b
  1261  00088A  A0D8               	btfss	status,0,c
  1262  00088C  D7CF               	goto	l3394
  1263  00088E                     u2290:
  1264                           
  1265                           ; BSR set to: 1
  1266                           ;main.c: 427: }
  1267                           ;main.c: 428: length = data_points_count;
  1268  00088E  C31C  F31E         	movff	main@data_points_count,main@length
  1269                           
  1270                           ; BSR set to: 1
  1271                           ;main.c: 429: data_points_count = 0;
  1272  000892  0E00               	movlw	0
  1273  000894  0103               	movlb	3	; () banked
  1274  000896  0103               	movlb	3	; () banked
  1275  000898  6F1D               	movwf	(main@data_points_count+1)& (0+255),b
  1276  00089A  0E00               	movlw	0
  1277  00089C  0103               	movlb	3	; () banked
  1278  00089E  6F1C               	movwf	main@data_points_count& (0+255),b
  1279                           
  1280                           ;main.c: 430: break;
  1281  0008A0  D009               	goto	l3406
  1282  0008A2                     l3404:
  1283                           
  1284                           ; BSR set to: 3
  1285  0008A2  0103               	movlb	3	; () banked
  1286  0008A4  0103               	movlb	3	; () banked
  1287  0008A6  5116               	movf	main@last_reg_recvd& (0+255),w,b
  1288                           
  1289                           ; Switch size 1, requested type "space"
  1290                           ; Number of cases is 2, Range of values is 170 to 171
  1291                           ; switch strategies available:
  1292                           ; Name         Instructions Cycles
  1293                           ; simple_byte            7     4 (average)
  1294                           ;	Chosen strategy is simple_byte
  1295  0008A8  0AAA               	xorlw	170	; case 170
  1296  0008AA  B4D8               	btfsc	status,2,c
  1297  0008AC  D754               	goto	l3372
  1298  0008AE  0A01               	xorlw	1	; case 171
  1299  0008B0  B4D8               	btfsc	status,2,c
  1300  0008B2  D79D               	goto	l3388
  1301  0008B4                     l3406:
  1302                           
  1303                           ;main.c: 433: msgbuffer[0] = 0xaa;
  1304  0008B4  0101               	movlb	1	; () banked
  1305  0008B6  6F63               	movwf	??_main& (0+255),b
  1306  0008B8  0EAA               	movlw	170
  1307  0008BA  0103               	movlb	3	; () banked
  1308  0008BC  0103               	movlb	3	; () banked
  1309  0008BE  6F0B               	movwf	main@msgbuffer& (0+255),b
  1310  0008C0  0101               	movlb	1	; () banked
  1311  0008C2  5163               	movf	??_main& (0+255),w,b
  1312                           
  1313                           ;main.c: 434: length = 1;
  1314  0008C4  0101               	movlb	1	; () banked
  1315  0008C6  6F63               	movwf	??_main& (0+255),b
  1316  0008C8  0E01               	movlw	1
  1317  0008CA  0103               	movlb	3	; () banked
  1318  0008CC  0103               	movlb	3	; () banked
  1319  0008CE  6F1E               	movwf	main@length& (0+255),b
  1320  0008D0  0101               	movlb	1	; () banked
  1321  0008D2  5163               	movf	??_main& (0+255),w,b
  1322                           
  1323                           ; BSR set to: 1
  1324                           ;main.c: 435: start_i2c_slave_reply(length, msgbuffer);
  1325  0008D4  0103               	movlb	3	; () banked
  1326  0008D6  0E03               	movlw	high main@msgbuffer
  1327  0008D8  0101               	movlb	1	; () banked
  1328  0008DA  0101               	movlb	1	; () banked
  1329  0008DC  6F47               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1330  0008DE  0103               	movlb	3	; () banked
  1331  0008E0  0E0B               	movlw	low main@msgbuffer
  1332  0008E2  0101               	movlb	1	; () banked
  1333  0008E4  0101               	movlb	1	; () banked
  1334  0008E6  6F46               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1335  0008E8  0103               	movlb	3	; () banked
  1336  0008EA  0103               	movlb	3	; () banked
  1337  0008EC  511E               	movf	main@length& (0+255),w,b
  1338  0008EE  EC8B  F005         	call	_start_i2c_slave_reply
  1339                           
  1340                           ;main.c: 436: break;
  1341  0008F2  D031               	goto	l3416
  1342  0008F4                     l3410:
  1343                           
  1344                           ;main.c: 439: {
  1345                           ;main.c: 440: addDataPoints(0, msgbuffer, length);
  1346  0008F4  0E00               	movlw	0
  1347  0008F6  0101               	movlb	1	; () banked
  1348  0008F8  0101               	movlb	1	; () banked
  1349  0008FA  6F4F               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1350  0008FC  0E00               	movlw	0
  1351  0008FE  0101               	movlb	1	; () banked
  1352  000900  6F4E               	movwf	addDataPoints@sensorid& (0+255),b
  1353  000902  0103               	movlb	3	; () banked
  1354  000904  0E03               	movlw	high main@msgbuffer
  1355  000906  0101               	movlb	1	; () banked
  1356  000908  0101               	movlb	1	; () banked
  1357  00090A  6F51               	movwf	(addDataPoints@data+1)& (0+255),b
  1358  00090C  0103               	movlb	3	; () banked
  1359  00090E  0E0B               	movlw	low main@msgbuffer
  1360  000910  0101               	movlb	1	; () banked
  1361  000912  0101               	movlb	1	; () banked
  1362  000914  6F50               	movwf	addDataPoints@data& (0+255),b
  1363  000916  0103               	movlb	3	; () banked
  1364  000918  0103               	movlb	3	; () banked
  1365  00091A  511E               	movf	main@length& (0+255),w,b
  1366  00091C  0101               	movlb	1	; () banked
  1367  00091E  0101               	movlb	1	; () banked
  1368  000920  6F52               	movwf	addDataPoints@len& (0+255),b
  1369  000922  0101               	movlb	1	; () banked
  1370  000924  6B53               	clrf	(addDataPoints@len+1)& (0+255),b
  1371  000926  0101               	movlb	1	; () banked
  1372  000928  BF52               	btfsc	addDataPoints@len& (0+255),7,b
  1373  00092A  0753               	decf	(addDataPoints@len+1)& (0+255),f,b
  1374  00092C  EC1F  F00D         	call	_addDataPoints	;wreg free
  1375                           
  1376                           ;main.c: 441: break;
  1377  000930  D012               	goto	l3416
  1378  000932                     l3414:
  1379  000932  0103               	movlb	3	; () banked
  1380  000934  0103               	movlb	3	; () banked
  1381  000936  511B               	movf	main@msgtype& (0+255),w,b
  1382                           
  1383                           ; Switch size 1, requested type "space"
  1384                           ; Number of cases is 5, Range of values is 10 to 50
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte           16     9 (average)
  1388                           ;	Chosen strategy is simple_byte
  1389  000938  0A0A               	xorlw	10	; case 10
  1390  00093A  B4D8               	btfsc	status,2,c
  1391  00093C  D00C               	goto	l3416
  1392  00093E  0A22               	xorlw	34	; case 40
  1393  000940  B4D8               	btfsc	status,2,c
  1394  000942  D706               	goto	l91
  1395  000944  0A01               	xorlw	1	; case 41
  1396  000946  B4D8               	btfsc	status,2,c
  1397  000948  D703               	goto	l91
  1398  00094A  0A03               	xorlw	3	; case 42
  1399  00094C  B4D8               	btfsc	status,2,c
  1400  00094E  D7A9               	goto	l3404
  1401  000950  0A18               	xorlw	24	; case 50
  1402  000952  B4D8               	btfsc	status,2,c
  1403  000954  D7CF               	goto	l3410
  1404  000956                     l3416:
  1405                           
  1406                           ;main.c: 450: }
  1407                           ;main.c: 453: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1408  000956  0103               	movlb	3	; () banked
  1409  000958  0E03               	movlw	high main@msgtype
  1410  00095A  0101               	movlb	1	; () banked
  1411  00095C  0101               	movlb	1	; () banked
  1412  00095E  6F5F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1413  000960  0103               	movlb	3	; () banked
  1414  000962  0E1B               	movlw	low main@msgtype
  1415  000964  0101               	movlb	1	; () banked
  1416  000966  0101               	movlb	1	; () banked
  1417  000968  6F5E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1418  00096A  0103               	movlb	3	; () banked
  1419  00096C  0E03               	movlw	high main@msgbuffer
  1420  00096E  0101               	movlb	1	; () banked
  1421  000970  0101               	movlb	1	; () banked
  1422  000972  6F61               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1423  000974  0103               	movlb	3	; () banked
  1424  000976  0E0B               	movlw	low main@msgbuffer
  1425  000978  0101               	movlb	1	; () banked
  1426  00097A  0101               	movlb	1	; () banked
  1427  00097C  6F60               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1428  00097E  0E0A               	movlw	10
  1429  000980  ECA2  F00B         	call	_ToMainLow_recvmsg
  1430  000984  0103               	movlb	3	; () banked
  1431  000986  0103               	movlb	3	; () banked
  1432  000988  6F1E               	movwf	main@length& (0+255),b
  1433                           
  1434                           ; BSR set to: 3
  1435                           ;main.c: 454: if (length < 0) {
  1436  00098A  0103               	movlb	3	; () banked
  1437  00098C  0103               	movlb	3	; () banked
  1438  00098E  BF1E               	btfsc	main@length& (0+255),7,b
  1439  000990  D6BE               	goto	l3364
  1440  000992  D01F               	goto	l3426
  1441  000994                     l3422:
  1442                           
  1443                           ; BSR set to: 3
  1444                           ;main.c: 462: {
  1445                           ;main.c: 463: addDataPoints(0, msgbuffer, length);
  1446  000994  0E00               	movlw	0
  1447  000996  0101               	movlb	1	; () banked
  1448  000998  0101               	movlb	1	; () banked
  1449  00099A  6F4F               	movwf	(addDataPoints@sensorid+1)& (0+255),b
  1450  00099C  0E00               	movlw	0
  1451  00099E  0101               	movlb	1	; () banked
  1452  0009A0  6F4E               	movwf	addDataPoints@sensorid& (0+255),b
  1453  0009A2  0103               	movlb	3	; () banked
  1454  0009A4  0E03               	movlw	high main@msgbuffer
  1455  0009A6  0101               	movlb	1	; () banked
  1456  0009A8  0101               	movlb	1	; () banked
  1457  0009AA  6F51               	movwf	(addDataPoints@data+1)& (0+255),b
  1458  0009AC  0103               	movlb	3	; () banked
  1459  0009AE  0E0B               	movlw	low main@msgbuffer
  1460  0009B0  0101               	movlb	1	; () banked
  1461  0009B2  0101               	movlb	1	; () banked
  1462  0009B4  6F50               	movwf	addDataPoints@data& (0+255),b
  1463  0009B6  0103               	movlb	3	; () banked
  1464  0009B8  0103               	movlb	3	; () banked
  1465  0009BA  511E               	movf	main@length& (0+255),w,b
  1466  0009BC  0101               	movlb	1	; () banked
  1467  0009BE  0101               	movlb	1	; () banked
  1468  0009C0  6F52               	movwf	addDataPoints@len& (0+255),b
  1469  0009C2  0101               	movlb	1	; () banked
  1470  0009C4  6B53               	clrf	(addDataPoints@len+1)& (0+255),b
  1471  0009C6  0101               	movlb	1	; () banked
  1472  0009C8  BF52               	btfsc	addDataPoints@len& (0+255),7,b
  1473  0009CA  0753               	decf	(addDataPoints@len+1)& (0+255),f,b
  1474  0009CC  EC1F  F00D         	call	_addDataPoints	;wreg free
  1475                           
  1476                           ;main.c: 469: break;
  1477  0009D0  D69E               	goto	l3364
  1478  0009D2                     l3426:
  1479  0009D2  0103               	movlb	3	; () banked
  1480  0009D4  0103               	movlb	3	; () banked
  1481  0009D6  511B               	movf	main@msgtype& (0+255),w,b
  1482                           
  1483                           ; Switch size 1, requested type "space"
  1484                           ; Number of cases is 1, Range of values is 50 to 50
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ;	Chosen strategy is simple_byte
  1489  0009D8  0A32               	xorlw	50	; case 50
  1490  0009DA  B4D8               	btfsc	status,2,c
  1491  0009DC  D7DB               	goto	l3422
  1492  0009DE  D697               	goto	l3364
  1493  0009E0                     __end_of_main:
  1494                           	opt stack 0
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           indf1	equ	0xFE7
  1502                           postdec1	equ	0xFE5
  1503                           fsr1h	equ	0xFE2
  1504                           fsr1l	equ	0xFE1
  1505                           indf2	equ	0xFDF
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _start_i2c_slave_reply *****************
  1511 ;; Defined at:
  1512 ;;		line 60 in file "../src/my_i2c.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  length          1    wreg     unsigned char 
  1515 ;;  msg             2   14[BANK1 ] PTR unsigned char 
  1516 ;;		 -> sendADdata@outBuff(103), main@msgbuffer(11), 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  length          1   18[BANK1 ] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;		None               void
  1521 ;; Registers used:
  1522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1528 ;;      Params:         0       0       2       0       0
  1529 ;;      Locals:         0       0       1       0       0
  1530 ;;      Temps:          0       0       2       0       0
  1531 ;;      Totals:         0       0       5       0       0
  1532 ;;Total ram usage:        5 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:   11
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text1
  1543  000B16                     __ptext1:
  1544                           	opt stack 0
  1545  000B16                     _start_i2c_slave_reply:
  1546                           	opt stack 19
  1547                           
  1548                           ; BSR set to: 3
  1549                           ;incstack = 0
  1550                           ;start_i2c_slave_reply@length stored from wreg
  1551  000B16  CFE8 F14A          	movff	wreg,start_i2c_slave_reply@length
  1552                           
  1553                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1554  000B1A  0101               	movlb	1	; () banked
  1555  000B1C  EE20 F076          	lfsr	2,118
  1556  000B20  0101               	movlb	1	; () banked
  1557  000B22  5100               	movf	_ic_ptr& (0+255),w,b
  1558  000B24  26D9               	addwf	fsr2l,f,c
  1559  000B26  0101               	movlb	1	; () banked
  1560  000B28  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1561  000B2A  22DA               	addwfc	fsr2h,f,c
  1562  000B2C  0E00               	movlw	0
  1563  000B2E  6EDF               	movwf	indf2,c
  1564  000B30  D042               	goto	l3526
  1565  000B32                     l3522:
  1566                           
  1567                           ; BSR set to: 1
  1568                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1569  000B32  0101               	movlb	1	; () banked
  1570  000B34  EE20 F076          	lfsr	2,118
  1571  000B38  0101               	movlb	1	; () banked
  1572  000B3A  5100               	movf	_ic_ptr& (0+255),w,b
  1573  000B3C  26D9               	addwf	fsr2l,f,c
  1574  000B3E  0101               	movlb	1	; () banked
  1575  000B40  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1576  000B42  22DA               	addwfc	fsr2h,f,c
  1577  000B44  50DF               	movf	indf2,w,c
  1578  000B46  0101               	movlb	1	; () banked
  1579  000B48  6F48               	movwf	??_start_i2c_slave_reply& (0+255),b
  1580  000B4A  0101               	movlb	1	; () banked
  1581  000B4C  5148               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1582  000B4E  0D01               	mullw	1
  1583  000B50  50F3               	movf	prodl,w,c
  1584  000B52  0101               	movlb	1	; () banked
  1585  000B54  0101               	movlb	1	; () banked
  1586  000B56  2546               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1587  000B58  6ED9               	movwf	fsr2l,c
  1588  000B5A  50F4               	movf	prodh,w,c
  1589  000B5C  0101               	movlb	1	; () banked
  1590  000B5E  0101               	movlb	1	; () banked
  1591  000B60  2147               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1592  000B62  6EDA               	movwf	fsr2h,c
  1593  000B64  0101               	movlb	1	; () banked
  1594  000B66  EE10 F076          	lfsr	1,118
  1595  000B6A  0101               	movlb	1	; () banked
  1596  000B6C  5100               	movf	_ic_ptr& (0+255),w,b
  1597  000B6E  26E1               	addwf	fsr1l,f,c
  1598  000B70  0101               	movlb	1	; () banked
  1599  000B72  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1600  000B74  22E2               	addwfc	fsr1h,f,c
  1601  000B76  50E7               	movf	indf1,w,c
  1602  000B78  0101               	movlb	1	; () banked
  1603  000B7A  6F49               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1604  000B7C  0101               	movlb	1	; () banked
  1605  000B7E  5149               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1606  000B80  0D01               	mullw	1
  1607  000B82  0E0F               	movlw	15
  1608  000B84  26F3               	addwf	prodl,f,c
  1609  000B86  0E00               	movlw	0
  1610  000B88  22F4               	addwfc	prodh,f,c
  1611  000B8A  50F3               	movf	prodl,w,c
  1612  000B8C  0101               	movlb	1	; () banked
  1613  000B8E  0101               	movlb	1	; () banked
  1614  000B90  2500               	addwf	_ic_ptr& (0+255),w,b
  1615  000B92  6EE1               	movwf	fsr1l,c
  1616  000B94  50F4               	movf	prodh,w,c
  1617  000B96  0101               	movlb	1	; () banked
  1618  000B98  0101               	movlb	1	; () banked
  1619  000B9A  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1620  000B9C  6EE2               	movwf	fsr1h,c
  1621  000B9E  CFDF FFE7          	movff	indf2,indf1
  1622                           
  1623                           ; BSR set to: 1
  1624  000BA2  0101               	movlb	1	; () banked
  1625  000BA4  EE20 F076          	lfsr	2,118
  1626  000BA8  0101               	movlb	1	; () banked
  1627  000BAA  5100               	movf	_ic_ptr& (0+255),w,b
  1628  000BAC  26D9               	addwf	fsr2l,f,c
  1629  000BAE  0101               	movlb	1	; () banked
  1630  000BB0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1631  000BB2  22DA               	addwfc	fsr2h,f,c
  1632  000BB4  2ADF               	incf	indf2,f,c
  1633  000BB6                     l3526:
  1634                           
  1635                           ; BSR set to: 1
  1636  000BB6  0101               	movlb	1	; () banked
  1637  000BB8  EE20 F076          	lfsr	2,118
  1638  000BBC  0101               	movlb	1	; () banked
  1639  000BBE  5100               	movf	_ic_ptr& (0+255),w,b
  1640  000BC0  26D9               	addwf	fsr2l,f,c
  1641  000BC2  0101               	movlb	1	; () banked
  1642  000BC4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1643  000BC6  22DA               	addwfc	fsr2h,f,c
  1644  000BC8  50DF               	movf	indf2,w,c
  1645  000BCA  0101               	movlb	1	; () banked
  1646  000BCC  6F48               	movwf	??_start_i2c_slave_reply& (0+255),b
  1647  000BCE  0101               	movlb	1	; () banked
  1648  000BD0  0101               	movlb	1	; () banked
  1649  000BD2  514A               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1650  000BD4  0101               	movlb	1	; () banked
  1651  000BD6  5D48               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1652  000BD8  A0D8               	btfss	status,0,c
  1653  000BDA  D7AB               	goto	l3522
  1654                           
  1655                           ; BSR set to: 1
  1656                           ;my_i2c.c: 64: }
  1657                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  1658                           
  1659                           ; BSR set to: 1
  1660  000BDC  0101               	movlb	1	; () banked
  1661  000BDE  EE20 F076          	lfsr	2,118
  1662  000BE2  0101               	movlb	1	; () banked
  1663  000BE4  5100               	movf	_ic_ptr& (0+255),w,b
  1664  000BE6  26D9               	addwf	fsr2l,f,c
  1665  000BE8  0101               	movlb	1	; () banked
  1666  000BEA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1667  000BEC  22DA               	addwfc	fsr2h,f,c
  1668  000BEE  0101               	movlb	1	; () banked
  1669  000BF0  C14A  FFDF         	movff	start_i2c_slave_reply@length,indf2
  1670                           
  1671                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  1672  000BF4  0101               	movlb	1	; () banked
  1673  000BF6  EE20 F077          	lfsr	2,119
  1674  000BFA  0101               	movlb	1	; () banked
  1675  000BFC  5100               	movf	_ic_ptr& (0+255),w,b
  1676  000BFE  26D9               	addwf	fsr2l,f,c
  1677  000C00  0101               	movlb	1	; () banked
  1678  000C02  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1679  000C04  22DA               	addwfc	fsr2h,f,c
  1680  000C06  0E01               	movlw	1
  1681  000C08  6EDF               	movwf	indf2,c
  1682                           
  1683                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  1684  000C0A  0101               	movlb	1	; () banked
  1685  000C0C  EE20 F00F          	lfsr	2,15
  1686  000C10  0101               	movlb	1	; () banked
  1687  000C12  5100               	movf	_ic_ptr& (0+255),w,b
  1688  000C14  26D9               	addwf	fsr2l,f,c
  1689  000C16  0101               	movlb	1	; () banked
  1690  000C18  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  1691  000C1A  22DA               	addwfc	fsr2h,f,c
  1692  000C1C  50DF               	movf	indf2,w,c
  1693  000C1E  6EC9               	movwf	4041,c	;volatile
  1694                           
  1695                           ; BSR set to: 1
  1696                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  1697  000C20  88C6               	bsf	4038,4,c	;volatile
  1698                           
  1699                           ; BSR set to: 1
  1700  000C22  0012               	return	
  1701  000C24                     __end_of_start_i2c_slave_reply:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           prodh	equ	0xFF4
  1708                           prodl	equ	0xFF3
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           indf1	equ	0xFE7
  1712                           postdec1	equ	0xFE5
  1713                           fsr1h	equ	0xFE2
  1714                           fsr1l	equ	0xFE1
  1715                           indf2	equ	0xFDF
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _resetAccumulators *****************
  1721 ;; Defined at:
  1722 ;;		line 80 in file "../src/sensorcomm.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:   12
  1743 ;; This function calls:
  1744 ;;		_resetADacc
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text2
  1751  001BE4                     __ptext2:
  1752                           	opt stack 0
  1753  001BE4                     _resetAccumulators:
  1754                           	opt stack 18
  1755                           
  1756                           ;sensorcomm.c: 81: resetADacc();
  1757                           
  1758                           ; BSR set to: 1
  1759                           ;incstack = 0
  1760  001BE4  EC59  F009         	call	_resetADacc	;wreg free
  1761  001BE8  0012               	return	
  1762  001BEA                     __end_of_resetAccumulators:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           prodh	equ	0xFF4
  1769                           prodl	equ	0xFF3
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           indf1	equ	0xFE7
  1773                           postdec1	equ	0xFE5
  1774                           fsr1h	equ	0xFE2
  1775                           fsr1l	equ	0xFE1
  1776                           indf2	equ	0xFDF
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _resetADacc *****************
  1782 ;; Defined at:
  1783 ;;		line 72 in file "../src/sensorcomm.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  i               2   17[BANK1 ] int 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;		None               void
  1790 ;; Registers used:
  1791 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1797 ;;      Params:         0       0       0       0       0
  1798 ;;      Locals:         0       0       2       0       0
  1799 ;;      Temps:          0       0       3       0       0
  1800 ;;      Totals:         0       0       5       0       0
  1801 ;;Total ram usage:        5 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:   11
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_resetAccumulators
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text3
  1812  0012B2                     __ptext3:
  1813                           	opt stack 0
  1814  0012B2                     _resetADacc:
  1815                           	opt stack 18
  1816                           
  1817                           ;sensorcomm.c: 73: int i = 0;
  1818                           
  1819                           ;incstack = 0
  1820  0012B2  0E00               	movlw	0
  1821  0012B4  0101               	movlb	1	; () banked
  1822  0012B6  0101               	movlb	1	; () banked
  1823  0012B8  6F4A               	movwf	(resetADacc@i+1)& (0+255),b
  1824  0012BA  0E00               	movlw	0
  1825  0012BC  0101               	movlb	1	; () banked
  1826  0012BE  6F49               	movwf	resetADacc@i& (0+255),b
  1827  0012C0  D012               	goto	l3726
  1828  0012C2                     l3722:
  1829                           
  1830                           ; BSR set to: 1
  1831                           ;sensorcomm.c: 75: ADacc.data[i].data = 0;
  1832  0012C2  0102               	movlb	2	; () banked
  1833  0012C4  0E01               	movlw	low (_ADacc+1)
  1834  0012C6  0101               	movlb	1	; () banked
  1835  0012C8  0101               	movlb	1	; () banked
  1836  0012CA  2549               	addwf	resetADacc@i& (0+255),w,b
  1837  0012CC  6ED9               	movwf	fsr2l,c
  1838  0012CE  0102               	movlb	2	; () banked
  1839  0012D0  0E02               	movlw	high (_ADacc+1)
  1840  0012D2  0101               	movlb	1	; () banked
  1841  0012D4  0101               	movlb	1	; () banked
  1842  0012D6  214A               	addwfc	(resetADacc@i+1)& (0+255),w,b
  1843  0012D8  6EDA               	movwf	fsr2h,c
  1844  0012DA  0E00               	movlw	0
  1845  0012DC  6EDF               	movwf	indf2,c
  1846                           
  1847                           ; BSR set to: 1
  1848  0012DE  0101               	movlb	1	; () banked
  1849  0012E0  0101               	movlb	1	; () banked
  1850  0012E2  4B49               	infsnz	resetADacc@i& (0+255),f,b
  1851  0012E4  2B4A               	incf	(resetADacc@i+1)& (0+255),f,b
  1852  0012E6                     l3726:
  1853                           
  1854                           ; BSR set to: 1
  1855  0012E6  0102               	movlb	2	; () banked
  1856  0012E8  0102               	movlb	2	; () banked
  1857  0012EA  5100               	movf	_ADacc& (0+255),w,b
  1858  0012EC  0101               	movlb	1	; () banked
  1859  0012EE  6F46               	movwf	??_resetADacc& (0+255),b
  1860  0012F0  6B47               	clrf	(??_resetADacc+1)& (0+255),b
  1861  0012F2  0101               	movlb	1	; () banked
  1862  0012F4  0101               	movlb	1	; () banked
  1863  0012F6  514A               	movf	(resetADacc@i+1)& (0+255),w,b
  1864  0012F8  0A80               	xorlw	128
  1865  0012FA  0101               	movlb	1	; () banked
  1866  0012FC  6F48               	movwf	(??_resetADacc+2)& (0+255),b
  1867  0012FE  5146               	movf	??_resetADacc& (0+255),w,b
  1868  001300  0101               	movlb	1	; () banked
  1869  001302  0101               	movlb	1	; () banked
  1870  001304  5D49               	subwf	resetADacc@i& (0+255),w,b
  1871  001306  0101               	movlb	1	; () banked
  1872  001308  5147               	movf	(??_resetADacc+1)& (0+255),w,b
  1873  00130A  0A80               	xorlw	128
  1874  00130C  0101               	movlb	1	; () banked
  1875  00130E  5948               	subwfb	(??_resetADacc+2)& (0+255),w,b
  1876  001310  A0D8               	btfss	status,0,c
  1877  001312  D7D7               	goto	l3722
  1878                           
  1879                           ; BSR set to: 1
  1880                           ;sensorcomm.c: 76: }
  1881                           ;sensorcomm.c: 77: ADacc.len = 0;
  1882                           
  1883                           ; BSR set to: 1
  1884  001314  0101               	movlb	1	; () banked
  1885  001316  6F46               	movwf	??_resetADacc& (0+255),b
  1886  001318  0E00               	movlw	0
  1887  00131A  0102               	movlb	2	; () banked
  1888  00131C  0102               	movlb	2	; () banked
  1889  00131E  6F00               	movwf	_ADacc& (0+255),b
  1890  001320  0101               	movlb	1	; () banked
  1891  001322  5146               	movf	??_resetADacc& (0+255),w,b
  1892                           
  1893                           ; BSR set to: 1
  1894  001324  0012               	return	
  1895  001326                     __end_of_resetADacc:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           prodh	equ	0xFF4
  1902                           prodl	equ	0xFF3
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           indf1	equ	0xFE7
  1906                           postdec1	equ	0xFE5
  1907                           fsr1h	equ	0xFE2
  1908                           fsr1l	equ	0xFE1
  1909                           indf2	equ	0xFDF
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function _init_queues *****************
  1915 ;; Defined at:
  1916 ;;		line 195 in file "../src/messages.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;		None               void
  1923 ;; Registers used:
  1924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0
  1932 ;;      Temps:          0       0       1       0       0
  1933 ;;      Totals:         0       0       1       0       0
  1934 ;;Total ram usage:        1 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:   12
  1937 ;; This function calls:
  1938 ;;		_init_queue
  1939 ;; This function is called by:
  1940 ;;		_main
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text4
  1945  00139A                     __ptext4:
  1946                           	opt stack 0
  1947  00139A                     _init_queues:
  1948                           	opt stack 18
  1949                           
  1950                           ;messages.c: 196: MQ_Main_Willing_to_block = 0;
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;incstack = 0
  1954  00139A  0101               	movlb	1	; () banked
  1955  00139C  6F4A               	movwf	??_init_queues& (0+255),b
  1956  00139E  0E00               	movlw	0
  1957  0013A0  6E44               	movwf	_MQ_Main_Willing_to_block,c
  1958  0013A2  0101               	movlb	1	; () banked
  1959  0013A4  514A               	movf	??_init_queues& (0+255),w,b
  1960                           
  1961                           ; BSR set to: 1
  1962                           ;messages.c: 197: init_queue(&ToMainLow_MQ);
  1963  0013A6  0102               	movlb	2	; () banked
  1964  0013A8  0E02               	movlw	high _ToMainLow_MQ
  1965  0013AA  0101               	movlb	1	; () banked
  1966  0013AC  0101               	movlb	1	; () banked
  1967  0013AE  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  1968  0013B0  0102               	movlb	2	; () banked
  1969  0013B2  0E9B               	movlw	low _ToMainLow_MQ
  1970  0013B4  0101               	movlb	1	; () banked
  1971  0013B6  0101               	movlb	1	; () banked
  1972  0013B8  6F46               	movwf	init_queue@qptr& (0+255),b
  1973  0013BA  EC1C  F009         	call	_init_queue	;wreg free
  1974                           
  1975                           ;messages.c: 198: init_queue(&ToMainHigh_MQ);
  1976  0013BE  0101               	movlb	1	; () banked
  1977  0013C0  0E01               	movlw	high _ToMainHigh_MQ
  1978  0013C2  0101               	movlb	1	; () banked
  1979  0013C4  0101               	movlb	1	; () banked
  1980  0013C6  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  1981  0013C8  0101               	movlb	1	; () banked
  1982  0013CA  0E02               	movlw	low _ToMainHigh_MQ
  1983  0013CC  0101               	movlb	1	; () banked
  1984  0013CE  0101               	movlb	1	; () banked
  1985  0013D0  6F46               	movwf	init_queue@qptr& (0+255),b
  1986  0013D2  EC1C  F009         	call	_init_queue	;wreg free
  1987                           
  1988                           ;messages.c: 199: init_queue(&FromMainLow_MQ);
  1989  0013D6  0102               	movlb	2	; () banked
  1990  0013D8  0E02               	movlw	high _FromMainLow_MQ
  1991  0013DA  0101               	movlb	1	; () banked
  1992  0013DC  0101               	movlb	1	; () banked
  1993  0013DE  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  1994  0013E0  0102               	movlb	2	; () banked
  1995  0013E2  0E65               	movlw	low _FromMainLow_MQ
  1996  0013E4  0101               	movlb	1	; () banked
  1997  0013E6  0101               	movlb	1	; () banked
  1998  0013E8  6F46               	movwf	init_queue@qptr& (0+255),b
  1999  0013EA  EC1C  F009         	call	_init_queue	;wreg free
  2000                           
  2001                           ;messages.c: 200: init_queue(&FromMainHigh_MQ);
  2002  0013EE  0103               	movlb	3	; () banked
  2003  0013F0  0E03               	movlw	high _FromMainHigh_MQ
  2004  0013F2  0101               	movlb	1	; () banked
  2005  0013F4  0101               	movlb	1	; () banked
  2006  0013F6  6F47               	movwf	(init_queue@qptr+1)& (0+255),b
  2007  0013F8  0103               	movlb	3	; () banked
  2008  0013FA  0E98               	movlw	low _FromMainHigh_MQ
  2009  0013FC  0101               	movlb	1	; () banked
  2010  0013FE  0101               	movlb	1	; () banked
  2011  001400  6F46               	movwf	init_queue@qptr& (0+255),b
  2012  001402  EC1C  F009         	call	_init_queue	;wreg free
  2013  001406  0012               	return	
  2014  001408                     __end_of_init_queues:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           tblptrh	equ	0xFF7
  2018                           tblptrl	equ	0xFF6
  2019                           tablat	equ	0xFF5
  2020                           prodh	equ	0xFF4
  2021                           prodl	equ	0xFF3
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           indf1	equ	0xFE7
  2025                           postdec1	equ	0xFE5
  2026                           fsr1h	equ	0xFE2
  2027                           fsr1l	equ	0xFE1
  2028                           indf2	equ	0xFDF
  2029                           fsr2h	equ	0xFDA
  2030                           fsr2l	equ	0xFD9
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _init_queue *****************
  2034 ;; Defined at:
  2035 ;;		line 15 in file "../src/messages.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  qptr            2   14[BANK1 ] PTR struct __msg_queue
  2038 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  i               1   17[BANK1 ] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2050 ;;      Params:         0       0       2       0       0
  2051 ;;      Locals:         0       0       1       0       0
  2052 ;;      Temps:          0       0       1       0       0
  2053 ;;      Totals:         0       0       4       0       0
  2054 ;;Total ram usage:        4 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:   11
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_init_queues
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text5
  2065  001238                     __ptext5:
  2066                           	opt stack 0
  2067  001238                     _init_queue:
  2068                           	opt stack 18
  2069                           
  2070                           ;messages.c: 16: unsigned char i;
  2071                           ;messages.c: 18: qptr->cur_write_ind = 0;
  2072                           
  2073                           ;incstack = 0
  2074  001238  0101               	movlb	1	; () banked
  2075  00123A  EE20 F034          	lfsr	2,52
  2076  00123E  0101               	movlb	1	; () banked
  2077  001240  5146               	movf	init_queue@qptr& (0+255),w,b
  2078  001242  26D9               	addwf	fsr2l,f,c
  2079  001244  0101               	movlb	1	; () banked
  2080  001246  5147               	movf	(init_queue@qptr+1)& (0+255),w,b
  2081  001248  22DA               	addwfc	fsr2h,f,c
  2082  00124A  0E00               	movlw	0
  2083  00124C  6EDF               	movwf	indf2,c
  2084                           
  2085                           ;messages.c: 19: qptr->cur_read_ind = 0;
  2086  00124E  0101               	movlb	1	; () banked
  2087  001250  EE20 F035          	lfsr	2,53
  2088  001254  0101               	movlb	1	; () banked
  2089  001256  5146               	movf	init_queue@qptr& (0+255),w,b
  2090  001258  26D9               	addwf	fsr2l,f,c
  2091  00125A  0101               	movlb	1	; () banked
  2092  00125C  5147               	movf	(init_queue@qptr+1)& (0+255),w,b
  2093  00125E  22DA               	addwfc	fsr2h,f,c
  2094  001260  0E00               	movlw	0
  2095  001262  6EDF               	movwf	indf2,c
  2096                           
  2097                           ; BSR set to: 1
  2098                           ;messages.c: 20: for (i = 0; i < 4; i++) {
  2099  001264  0101               	movlb	1	; () banked
  2100  001266  6F48               	movwf	??_init_queue& (0+255),b
  2101  001268  0E00               	movlw	0
  2102  00126A  0101               	movlb	1	; () banked
  2103  00126C  0101               	movlb	1	; () banked
  2104  00126E  6F49               	movwf	init_queue@i& (0+255),b
  2105  001270  0101               	movlb	1	; () banked
  2106  001272  5148               	movf	??_init_queue& (0+255),w,b
  2107                           
  2108                           ; BSR set to: 1
  2109  001274  0E03               	movlw	3
  2110  001276  0101               	movlb	1	; () banked
  2111  001278  0101               	movlb	1	; () banked
  2112  00127A  6549               	cpfsgt	init_queue@i& (0+255),b
  2113  00127C  D001               	goto	l3548
  2114  00127E  0012               	return	
  2115  001280                     l3548:
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;messages.c: 21: qptr->queue[i].full = 0;
  2119  001280  0101               	movlb	1	; () banked
  2120  001282  0101               	movlb	1	; () banked
  2121  001284  5149               	movf	init_queue@i& (0+255),w,b
  2122  001286  0D0D               	mullw	13
  2123  001288  50F3               	movf	prodl,w,c
  2124  00128A  0101               	movlb	1	; () banked
  2125  00128C  0101               	movlb	1	; () banked
  2126  00128E  2546               	addwf	init_queue@qptr& (0+255),w,b
  2127  001290  6ED9               	movwf	fsr2l,c
  2128  001292  50F4               	movf	prodh,w,c
  2129  001294  0101               	movlb	1	; () banked
  2130  001296  0101               	movlb	1	; () banked
  2131  001298  2147               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2132  00129A  6EDA               	movwf	fsr2h,c
  2133  00129C  0E00               	movlw	0
  2134  00129E  6EDF               	movwf	indf2,c
  2135                           
  2136                           ; BSR set to: 1
  2137  0012A0  0101               	movlb	1	; () banked
  2138  0012A2  0101               	movlb	1	; () banked
  2139  0012A4  2B49               	incf	init_queue@i& (0+255),f,b
  2140                           
  2141                           ; BSR set to: 1
  2142  0012A6  0E03               	movlw	3
  2143  0012A8  0101               	movlb	1	; () banked
  2144  0012AA  0101               	movlb	1	; () banked
  2145  0012AC  6549               	cpfsgt	init_queue@i& (0+255),b
  2146  0012AE  D7E8               	goto	l3548
  2147  0012B0  0012               	return	
  2148  0012B2                     __end_of_init_queue:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           indf1	equ	0xFE7
  2159                           postdec1	equ	0xFE5
  2160                           fsr1h	equ	0xFE2
  2161                           fsr1l	equ	0xFE1
  2162                           indf2	equ	0xFDF
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _init_i2c *****************
  2168 ;; Defined at:
  2169 ;;		line 294 in file "../src/my_i2c.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  ic              2   14[BANK1 ] PTR struct __i2c_comm
  2172 ;;		 -> main@ic(121), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2184 ;;      Params:         0       0       2       0       0
  2185 ;;      Locals:         0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0
  2187 ;;      Totals:         0       0       2       0       0
  2188 ;;Total ram usage:        2 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:   11
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text6
  2199  001408                     __ptext6:
  2200                           	opt stack 0
  2201  001408                     _init_i2c:
  2202                           	opt stack 19
  2203                           
  2204                           ;my_i2c.c: 295: ic_ptr = ic;
  2205                           
  2206                           ; BSR set to: 1
  2207                           ;incstack = 0
  2208  001408  0101               	movlb	1	; () banked
  2209  00140A  0101               	movlb	1	; () banked
  2210  00140C  C147  F101         	movff	init_i2c@ic+1,_ic_ptr+1
  2211  001410  0101               	movlb	1	; () banked
  2212  001412  0101               	movlb	1	; () banked
  2213  001414  C146  F100         	movff	init_i2c@ic,_ic_ptr
  2214                           
  2215                           ; BSR set to: 1
  2216                           ;my_i2c.c: 296: ic_ptr->buflen = 0;
  2217  001418  0101               	movlb	1	; () banked
  2218  00141A  EE20 F00A          	lfsr	2,10
  2219  00141E  0101               	movlb	1	; () banked
  2220  001420  5100               	movf	_ic_ptr& (0+255),w,b
  2221  001422  26D9               	addwf	fsr2l,f,c
  2222  001424  0101               	movlb	1	; () banked
  2223  001426  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2224  001428  22DA               	addwfc	fsr2h,f,c
  2225  00142A  0E00               	movlw	0
  2226  00142C  6EDF               	movwf	indf2,c
  2227                           
  2228                           ; BSR set to: 1
  2229                           ;my_i2c.c: 297: ic_ptr->event_count = 0;
  2230  00142E  0101               	movlb	1	; () banked
  2231  001430  EE20 F00B          	lfsr	2,11
  2232  001434  0101               	movlb	1	; () banked
  2233  001436  5100               	movf	_ic_ptr& (0+255),w,b
  2234  001438  26D9               	addwf	fsr2l,f,c
  2235  00143A  0101               	movlb	1	; () banked
  2236  00143C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2237  00143E  22DA               	addwfc	fsr2h,f,c
  2238  001440  0E00               	movlw	0
  2239  001442  6EDF               	movwf	indf2,c
  2240                           
  2241                           ; BSR set to: 1
  2242                           ;my_i2c.c: 298: ic_ptr->status = 0x5;
  2243  001444  0101               	movlb	1	; () banked
  2244  001446  EE20 F00C          	lfsr	2,12
  2245  00144A  0101               	movlb	1	; () banked
  2246  00144C  5100               	movf	_ic_ptr& (0+255),w,b
  2247  00144E  26D9               	addwf	fsr2l,f,c
  2248  001450  0101               	movlb	1	; () banked
  2249  001452  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2250  001454  22DA               	addwfc	fsr2h,f,c
  2251  001456  0E05               	movlw	5
  2252  001458  6EDF               	movwf	indf2,c
  2253                           
  2254                           ; BSR set to: 1
  2255                           ;my_i2c.c: 299: ic_ptr->error_count = 0;
  2256  00145A  0101               	movlb	1	; () banked
  2257  00145C  EE20 F00E          	lfsr	2,14
  2258  001460  0101               	movlb	1	; () banked
  2259  001462  5100               	movf	_ic_ptr& (0+255),w,b
  2260  001464  26D9               	addwf	fsr2l,f,c
  2261  001466  0101               	movlb	1	; () banked
  2262  001468  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  2263  00146A  22DA               	addwfc	fsr2h,f,c
  2264  00146C  0E00               	movlw	0
  2265  00146E  6EDF               	movwf	indf2,c
  2266                           
  2267                           ; BSR set to: 1
  2268  001470  0012               	return	
  2269  001472                     __end_of_init_i2c:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           prodh	equ	0xFF4
  2276                           prodl	equ	0xFF3
  2277                           postinc0	equ	0xFEE
  2278                           wreg	equ	0xFE8
  2279                           indf1	equ	0xFE7
  2280                           postdec1	equ	0xFE5
  2281                           fsr1h	equ	0xFE2
  2282                           fsr1l	equ	0xFE1
  2283                           indf2	equ	0xFDF
  2284                           fsr2h	equ	0xFDA
  2285                           fsr2l	equ	0xFD9
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _init_adc *****************
  2289 ;; Defined at:
  2290 ;;		line 20 in file "../src/my_adc.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2304 ;;      Params:         0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0
  2306 ;;      Temps:          0       0       2       0       0
  2307 ;;      Totals:         0       0       2       0       0
  2308 ;;Total ram usage:        2 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:   12
  2311 ;; This function calls:
  2312 ;;		_OpenADC
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text7
  2319  0019AC                     __ptext7:
  2320                           	opt stack 0
  2321  0019AC                     _init_adc:
  2322                           	opt stack 18
  2323                           
  2324                           ;my_adc.c: 21: OpenADC(0b10001111 & 0b11111111 & 0b11110001,
  2325                           ;my_adc.c: 22: 0b10001111 & 0b11111111 & 0b11111111 & 0b11111111,
  2326                           ;my_adc.c: 23: 0xC);
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;incstack = 0
  2330  0019AC  0101               	movlb	1	; () banked
  2331  0019AE  6F4B               	movwf	??_init_adc& (0+255),b
  2332  0019B0  0E8F               	movlw	143
  2333  0019B2  0101               	movlb	1	; () banked
  2334  0019B4  0101               	movlb	1	; () banked
  2335  0019B6  6F46               	movwf	OpenADC@config2& (0+255),b
  2336  0019B8  0101               	movlb	1	; () banked
  2337  0019BA  514B               	movf	??_init_adc& (0+255),w,b
  2338  0019BC  0101               	movlb	1	; () banked
  2339  0019BE  6F4C               	movwf	(??_init_adc+1)& (0+255),b
  2340  0019C0  0E0C               	movlw	12
  2341  0019C2  0101               	movlb	1	; () banked
  2342  0019C4  0101               	movlb	1	; () banked
  2343  0019C6  6F47               	movwf	OpenADC@portconfig& (0+255),b
  2344  0019C8  0101               	movlb	1	; () banked
  2345  0019CA  514C               	movf	(??_init_adc+1)& (0+255),w,b
  2346  0019CC  0E81               	movlw	129
  2347  0019CE  EC5A  F008         	call	_OpenADC
  2348                           
  2349                           ;my_adc.c: 26: TRISAbits.TRISA1 = 1;
  2350  0019D2  8292               	bsf	3986,1,c	;volatile
  2351                           
  2352                           ;my_adc.c: 27: TRISAbits.TRISA2 = 1;
  2353  0019D4  8492               	bsf	3986,2,c	;volatile
  2354                           
  2355                           ;my_adc.c: 35: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  2356  0019D6  9C9E               	bcf	3998,6,c	;volatile
  2357  0019D8  8CF2               	bsf	intcon,6,c	;volatile
  2358  0019DA  8C9D               	bsf	3997,6,c	;volatile
  2359  0019DC  0012               	return	
  2360  0019DE                     __end_of_init_adc:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           prodh	equ	0xFF4
  2367                           prodl	equ	0xFF3
  2368                           intcon	equ	0xFF2
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           indf1	equ	0xFE7
  2372                           postdec1	equ	0xFE5
  2373                           fsr1h	equ	0xFE2
  2374                           fsr1l	equ	0xFE1
  2375                           indf2	equ	0xFDF
  2376                           fsr2h	equ	0xFDA
  2377                           fsr2l	equ	0xFD9
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _OpenADC *****************
  2381 ;; Defined at:
  2382 ;;		line 68 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  config          1    wreg     unsigned char 
  2385 ;;  config2         1   14[BANK1 ] unsigned char 
  2386 ;;  portconfig      1   15[BANK1 ] unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  config          1   18[BANK1 ] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;		None               void
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2398 ;;      Params:         0       0       2       0       0
  2399 ;;      Locals:         0       0       1       0       0
  2400 ;;      Temps:          0       0       2       0       0
  2401 ;;      Totals:         0       0       5       0       0
  2402 ;;Total ram usage:        5 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:   11
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_init_adc
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text8
  2413  0010B4                     __ptext8:
  2414                           	opt stack 0
  2415  0010B4                     _OpenADC:
  2416                           	opt stack 18
  2417                           
  2418                           ;incstack = 0
  2419                           ;OpenADC@config stored from wreg
  2420  0010B4  CFE8 F14A          	movff	wreg,OpenADC@config
  2421  0010B8  0E00               	movlw	0
  2422  0010BA  6EC2               	movwf	4034,c	;volatile
  2423  0010BC  0E00               	movlw	0
  2424  0010BE  6EC0               	movwf	4032,c	;volatile
  2425  0010C0  0101               	movlb	1	; () banked
  2426  0010C2  0101               	movlb	1	; () banked
  2427  0010C4  90D8               	bcf	status,0,c
  2428  0010C6  3146               	rrcf	OpenADC@config2& (0+255),w,b
  2429  0010C8  0B3C               	andlw	60
  2430  0010CA  6EC2               	movwf	4034,c	;volatile
  2431                           
  2432                           ; BSR set to: 1
  2433  0010CC  C146  F148         	movff	OpenADC@config2,??_OpenADC
  2434  0010D0  0101               	movlb	1	; () banked
  2435  0010D2  3B48               	swapf	??_OpenADC& (0+255),f,b
  2436  0010D4  0EF0               	movlw	240
  2437  0010D6  1748               	andwf	??_OpenADC& (0+255),f,b
  2438  0010D8  0E30               	movlw	48
  2439  0010DA  0101               	movlb	1	; () banked
  2440  0010DC  1748               	andwf	??_OpenADC& (0+255),f,b
  2441  0010DE  0101               	movlb	1	; () banked
  2442  0010E0  0101               	movlb	1	; () banked
  2443  0010E2  5147               	movf	OpenADC@portconfig& (0+255),w,b
  2444  0010E4  0B0F               	andlw	15
  2445  0010E6  0101               	movlb	1	; () banked
  2446  0010E8  1148               	iorwf	??_OpenADC& (0+255),w,b
  2447  0010EA  6EC1               	movwf	4033,c	;volatile
  2448                           
  2449                           ; BSR set to: 1
  2450  0010EC  C14A  F148         	movff	OpenADC@config,??_OpenADC
  2451  0010F0  0101               	movlb	1	; () banked
  2452  0010F2  90D8               	bcf	status,0,c
  2453  0010F4  3748               	rlcf	??_OpenADC& (0+255),f,b
  2454  0010F6  0101               	movlb	1	; () banked
  2455  0010F8  90D8               	bcf	status,0,c
  2456  0010FA  3748               	rlcf	??_OpenADC& (0+255),f,b
  2457  0010FC  0E38               	movlw	56
  2458  0010FE  0101               	movlb	1	; () banked
  2459  001100  1748               	andwf	??_OpenADC& (0+255),f,b
  2460  001102  C14A  F149         	movff	OpenADC@config,??_OpenADC+1
  2461  001106  0101               	movlb	1	; () banked
  2462  001108  3B49               	swapf	(??_OpenADC+1)& (0+255),f,b
  2463  00110A  0E0F               	movlw	15
  2464  00110C  1749               	andwf	(??_OpenADC+1)& (0+255),f,b
  2465  00110E  0E07               	movlw	7
  2466  001110  0101               	movlb	1	; () banked
  2467  001112  1749               	andwf	(??_OpenADC+1)& (0+255),f,b
  2468  001114  0101               	movlb	1	; () banked
  2469  001116  0101               	movlb	1	; () banked
  2470  001118  514A               	movf	OpenADC@config& (0+255),w,b
  2471  00111A  0B80               	andlw	128
  2472  00111C  0101               	movlb	1	; () banked
  2473  00111E  1149               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2474  001120  0101               	movlb	1	; () banked
  2475  001122  1148               	iorwf	??_OpenADC& (0+255),w,b
  2476  001124  6EC0               	movwf	4032,c	;volatile
  2477                           
  2478                           ; BSR set to: 1
  2479  001126  0101               	movlb	1	; () banked
  2480  001128  0101               	movlb	1	; () banked
  2481  00112A  AF46               	btfss	OpenADC@config2& (0+255),7,b
  2482  00112C  D003               	goto	l550
  2483                           
  2484                           ; BSR set to: 1
  2485  00112E  9C9E               	bcf	3998,6,c	;volatile
  2486  001130  8C9D               	bsf	3997,6,c	;volatile
  2487  001132  8CF2               	bsf	intcon,6,c	;volatile
  2488  001134                     l550:
  2489                           
  2490                           ; BSR set to: 1
  2491  001134  80C2               	bsf	4034,0,c	;volatile
  2492                           
  2493                           ; BSR set to: 1
  2494  001136  0012               	return	
  2495  001138                     __end_of_OpenADC:
  2496                           	opt stack 0
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           prodh	equ	0xFF4
  2502                           prodl	equ	0xFF3
  2503                           intcon	equ	0xFF2
  2504                           postinc0	equ	0xFEE
  2505                           wreg	equ	0xFE8
  2506                           indf1	equ	0xFE7
  2507                           postdec1	equ	0xFE5
  2508                           fsr1h	equ	0xFE2
  2509                           fsr1l	equ	0xFE1
  2510                           indf2	equ	0xFDF
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _i2c_configure_slave *****************
  2516 ;; Defined at:
  2517 ;;		line 305 in file "../src/my_i2c.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  addr            1    wreg     unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  addr            1   14[BANK1 ] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       1       0       0
  2533 ;;      Temps:          0       0       0       0       0
  2534 ;;      Totals:         0       0       1       0       0
  2535 ;;Total ram usage:        1 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:   11
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text9
  2546  001ABC                     __ptext9:
  2547                           	opt stack 0
  2548  001ABC                     _i2c_configure_slave:
  2549                           	opt stack 19
  2550                           
  2551                           ; BSR set to: 1
  2552                           ;incstack = 0
  2553                           ;i2c_configure_slave@addr stored from wreg
  2554  001ABC  CFE8 F146          	movff	wreg,i2c_configure_slave@addr
  2555                           
  2556                           ;my_i2c.c: 317: TRISCbits.TRISC3 = 1;
  2557  001AC0  8694               	bsf	3988,3,c	;volatile
  2558                           
  2559                           ;my_i2c.c: 318: TRISCbits.TRISC4 = 1;
  2560  001AC2  8894               	bsf	3988,4,c	;volatile
  2561                           
  2562                           ;my_i2c.c: 323: SSPADD = addr;
  2563  001AC4  C146  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2564                           
  2565                           ;my_i2c.c: 325: SSPSTAT = 0x0;
  2566  001AC8  0E00               	movlw	0
  2567  001ACA  6EC7               	movwf	4039,c	;volatile
  2568                           
  2569                           ;my_i2c.c: 326: SSPCON1 = 0x0;
  2570  001ACC  0E00               	movlw	0
  2571  001ACE  6EC6               	movwf	4038,c	;volatile
  2572                           
  2573                           ;my_i2c.c: 327: SSPCON2 = 0x0;
  2574  001AD0  0E00               	movlw	0
  2575  001AD2  6EC5               	movwf	4037,c	;volatile
  2576                           
  2577                           ;my_i2c.c: 328: SSPCON1 |= 0x0E;
  2578  001AD4  0E0E               	movlw	14
  2579  001AD6  12C6               	iorwf	4038,f,c	;volatile
  2580                           
  2581                           ;my_i2c.c: 329: SSPSTAT |= 0b10000000;
  2582  001AD8  8EC7               	bsf	4039,7,c	;volatile
  2583                           
  2584                           ;my_i2c.c: 332: TRISCbits.TRISC3 = 1;
  2585  001ADA  8694               	bsf	3988,3,c	;volatile
  2586                           
  2587                           ;my_i2c.c: 333: TRISCbits.TRISC4 = 1;
  2588  001ADC  8894               	bsf	3988,4,c	;volatile
  2589                           
  2590                           ;my_i2c.c: 354: SSPCON2bits.SEN = 1;
  2591  001ADE  80C5               	bsf	4037,0,c	;volatile
  2592                           
  2593                           ;my_i2c.c: 355: SSPCON1 |= 0b00100000;
  2594  001AE0  8AC6               	bsf	4038,5,c	;volatile
  2595  001AE2  0012               	return	
  2596  001AE4                     __end_of_i2c_configure_slave:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           prodh	equ	0xFF4
  2603                           prodl	equ	0xFF3
  2604                           intcon	equ	0xFF2
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           indf1	equ	0xFE7
  2608                           postdec1	equ	0xFE5
  2609                           fsr1h	equ	0xFE2
  2610                           fsr1l	equ	0xFE1
  2611                           indf2	equ	0xFDF
  2612                           fsr2h	equ	0xFDA
  2613                           fsr2l	equ	0xFD9
  2614                           status	equ	0xFD8
  2615                           
  2616 ;; *************** function _enable_interrupts *****************
  2617 ;; Defined at:
  2618 ;;		line 16 in file "../src/interrupts.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;		None               void
  2625 ;; Registers used:
  2626 ;;		None
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:   11
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_main
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text10
  2647  001BDC                     __ptext10:
  2648                           	opt stack 0
  2649  001BDC                     _enable_interrupts:
  2650                           	opt stack 19
  2651                           
  2652                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  2653                           
  2654                           ;incstack = 0
  2655  001BDC  8ED0               	bsf	4048,7,c	;volatile
  2656                           
  2657                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  2658  001BDE  8EF2               	bsf	intcon,7,c	;volatile
  2659                           
  2660                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  2661  001BE0  8CF2               	bsf	intcon,6,c	;volatile
  2662  001BE2  0012               	return	
  2663  001BE4                     __end_of_enable_interrupts:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           indf1	equ	0xFE7
  2675                           postdec1	equ	0xFE5
  2676                           fsr1h	equ	0xFE2
  2677                           fsr1l	equ	0xFE1
  2678                           indf2	equ	0xFDF
  2679                           fsr2h	equ	0xFDA
  2680                           fsr2l	equ	0xFD9
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _block_on_To_msgqueues *****************
  2684 ;; Defined at:
  2685 ;;		line 259 in file "../src/messages.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;		None               void
  2692 ;; Registers used:
  2693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0
  2701 ;;      Temps:          0       0       1       0       0
  2702 ;;      Totals:         0       0       1       0       0
  2703 ;;Total ram usage:        1 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:   14
  2706 ;; This function calls:
  2707 ;;		_Delay1KTCYx
  2708 ;;		_check_msg
  2709 ;;		_in_main
  2710 ;; This function is called by:
  2711 ;;		_main
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text11
  2716  0011BA                     __ptext11:
  2717                           	opt stack 0
  2718  0011BA                     _block_on_To_msgqueues:
  2719                           	opt stack 16
  2720                           
  2721                           ;messages.c: 260: if (!in_main()) {
  2722                           
  2723                           ;incstack = 0
  2724  0011BA  EC80  F00B         	call	_in_main	;wreg free
  2725  0011BE  0101               	movlb	1	; () banked
  2726  0011C0  0101               	movlb	1	; () banked
  2727  0011C2  514B               	movf	(?_in_main+1)& (0+255),w,b
  2728  0011C4  0101               	movlb	1	; () banked
  2729  0011C6  114A               	iorwf	?_in_main& (0+255),w,b
  2730  0011C8  B4D8               	btfsc	status,2,c
  2731  0011CA  0012               	return	
  2732                           
  2733                           ; BSR set to: 1
  2734                           ;messages.c: 262: }
  2735                           ;messages.c: 264: MQ_Main_Willing_to_block = 1;
  2736                           
  2737                           ; BSR set to: 1
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;messages.c: 261: return;
  2741  0011CC  0101               	movlb	1	; () banked
  2742  0011CE  6F4C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2743  0011D0  0E01               	movlw	1
  2744  0011D2  6E44               	movwf	_MQ_Main_Willing_to_block,c
  2745  0011D4  0101               	movlb	1	; () banked
  2746  0011D6  514C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2747  0011D8                     l3502:
  2748                           
  2749                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  2750  0011D8  0101               	movlb	1	; () banked
  2751  0011DA  0E01               	movlw	high _ToMainHigh_MQ
  2752  0011DC  0101               	movlb	1	; () banked
  2753  0011DE  0101               	movlb	1	; () banked
  2754  0011E0  6F47               	movwf	(check_msg@qptr+1)& (0+255),b
  2755  0011E2  0101               	movlb	1	; () banked
  2756  0011E4  0E02               	movlw	low _ToMainHigh_MQ
  2757  0011E6  0101               	movlb	1	; () banked
  2758  0011E8  0101               	movlb	1	; () banked
  2759  0011EA  6F46               	movwf	check_msg@qptr& (0+255),b
  2760  0011EC  ECBB  F00C         	call	_check_msg	;wreg free
  2761  0011F0  0900               	iorlw	0
  2762  0011F2  B4D8               	btfsc	status,2,c
  2763  0011F4  D007               	goto	l3508
  2764                           
  2765                           ;messages.c: 267: MQ_Main_Willing_to_block = 0;
  2766  0011F6  0101               	movlb	1	; () banked
  2767  0011F8  6F4C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2768  0011FA  0E00               	movlw	0
  2769  0011FC  6E44               	movwf	_MQ_Main_Willing_to_block,c
  2770  0011FE  0101               	movlb	1	; () banked
  2771  001200  514C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2772  001202  0012               	return	
  2773  001204                     l3508:
  2774                           
  2775                           ;messages.c: 272: }
  2776                           ;messages.c: 273: if (check_msg(&ToMainLow_MQ)) {
  2777  001204  0102               	movlb	2	; () banked
  2778  001206  0E02               	movlw	high _ToMainLow_MQ
  2779  001208  0101               	movlb	1	; () banked
  2780  00120A  0101               	movlb	1	; () banked
  2781  00120C  6F47               	movwf	(check_msg@qptr+1)& (0+255),b
  2782  00120E  0102               	movlb	2	; () banked
  2783  001210  0E9B               	movlw	low _ToMainLow_MQ
  2784  001212  0101               	movlb	1	; () banked
  2785  001214  0101               	movlb	1	; () banked
  2786  001216  6F46               	movwf	check_msg@qptr& (0+255),b
  2787  001218  ECBB  F00C         	call	_check_msg	;wreg free
  2788  00121C  0900               	iorlw	0
  2789  00121E  B4D8               	btfsc	status,2,c
  2790  001220  D007               	goto	l3514
  2791                           
  2792                           ;messages.c: 274: MQ_Main_Willing_to_block = 0;
  2793  001222  0101               	movlb	1	; () banked
  2794  001224  6F4C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2795  001226  0E00               	movlw	0
  2796  001228  6E44               	movwf	_MQ_Main_Willing_to_block,c
  2797  00122A  0101               	movlb	1	; () banked
  2798  00122C  514C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2799  00122E  0012               	return	
  2800  001230                     l3514:
  2801                           
  2802                           ;messages.c: 279: }
  2803                           ;messages.c: 280: Delay1KTCYx(10);
  2804  001230  0E0A               	movlw	10
  2805  001232  ECB7  F00D         	call	_Delay1KTCYx
  2806  001236  D7D0               	goto	l3502
  2807  001238                     __end_of_block_on_To_msgqueues:
  2808                           	opt stack 0
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           postinc0	equ	0xFEE
  2817                           wreg	equ	0xFE8
  2818                           indf1	equ	0xFE7
  2819                           postdec1	equ	0xFE5
  2820                           fsr1h	equ	0xFE2
  2821                           fsr1l	equ	0xFE1
  2822                           indf2	equ	0xFDF
  2823                           fsr2h	equ	0xFDA
  2824                           fsr2l	equ	0xFD9
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _in_main *****************
  2828 ;; Defined at:
  2829 ;;		line 42 in file "../src/interrupts.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2   18[BANK1 ] int 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2843 ;;      Params:         0       0       2       0       0
  2844 ;;      Locals:         0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0
  2846 ;;      Totals:         0       0       2       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:   13
  2850 ;; This function calls:
  2851 ;;		_in_high_int
  2852 ;;		_in_low_int
  2853 ;; This function is called by:
  2854 ;;		_block_on_To_msgqueues
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text12
  2859  001700                     __ptext12:
  2860                           	opt stack 0
  2861  001700                     _in_main:
  2862                           	opt stack 16
  2863                           
  2864                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  2865                           
  2866                           ;incstack = 0
  2867  001700  EC5D  F00B         	call	_in_low_int	;wreg free
  2868  001704  0101               	movlb	1	; () banked
  2869  001706  0101               	movlb	1	; () banked
  2870  001708  5149               	movf	(?_in_low_int+1)& (0+255),w,b
  2871  00170A  0101               	movlb	1	; () banked
  2872  00170C  1148               	iorwf	?_in_low_int& (0+255),w,b
  2873  00170E  A4D8               	btfss	status,2,c
  2874  001710  D011               	goto	l3176
  2875                           
  2876                           ; BSR set to: 1
  2877  001712  ECCC  F00D         	call	_in_high_int	;wreg free
  2878  001716  0101               	movlb	1	; () banked
  2879  001718  0101               	movlb	1	; () banked
  2880  00171A  5147               	movf	(?_in_high_int+1)& (0+255),w,b
  2881  00171C  0101               	movlb	1	; () banked
  2882  00171E  1146               	iorwf	?_in_high_int& (0+255),w,b
  2883  001720  A4D8               	btfss	status,2,c
  2884  001722  D008               	goto	l3176
  2885                           
  2886                           ; BSR set to: 1
  2887                           ;interrupts.c: 44: return (1);
  2888  001724  0E00               	movlw	0
  2889  001726  0101               	movlb	1	; () banked
  2890  001728  0101               	movlb	1	; () banked
  2891  00172A  6F4B               	movwf	(?_in_main+1)& (0+255),b
  2892  00172C  0E01               	movlw	1
  2893  00172E  0101               	movlb	1	; () banked
  2894  001730  6F4A               	movwf	?_in_main& (0+255),b
  2895  001732  0012               	return	
  2896  001734                     l3176:
  2897                           
  2898                           ; BSR set to: 1
  2899                           ;interrupts.c: 46: return (0);
  2900  001734  0E00               	movlw	0
  2901  001736  0101               	movlb	1	; () banked
  2902  001738  0101               	movlb	1	; () banked
  2903  00173A  6F4B               	movwf	(?_in_main+1)& (0+255),b
  2904  00173C  0E00               	movlw	0
  2905  00173E  0101               	movlb	1	; () banked
  2906  001740  6F4A               	movwf	?_in_main& (0+255),b
  2907  001742  0012               	return	
  2908  001744                     __end_of_in_main:
  2909                           	opt stack 0
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           prodh	equ	0xFF4
  2915                           prodl	equ	0xFF3
  2916                           intcon	equ	0xFF2
  2917                           postinc0	equ	0xFEE
  2918                           wreg	equ	0xFE8
  2919                           indf1	equ	0xFE7
  2920                           postdec1	equ	0xFE5
  2921                           fsr1h	equ	0xFE2
  2922                           fsr1l	equ	0xFE1
  2923                           indf2	equ	0xFDF
  2924                           fsr2h	equ	0xFDA
  2925                           fsr2l	equ	0xFD9
  2926                           status	equ	0xFD8
  2927                           
  2928 ;; *************** function _in_low_int *****************
  2929 ;; Defined at:
  2930 ;;		line 32 in file "../src/interrupts.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2   16[BANK1 ] int 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2944 ;;      Params:         0       0       2       0       0
  2945 ;;      Locals:         0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0
  2947 ;;      Totals:         0       0       2       0       0
  2948 ;;Total ram usage:        2 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:   12
  2951 ;; This function calls:
  2952 ;;		_in_high_int
  2953 ;; This function is called by:
  2954 ;;		_in_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text13
  2959  0016BA                     __ptext13:
  2960                           	opt stack 0
  2961  0016BA                     _in_low_int:
  2962                           	opt stack 16
  2963                           
  2964                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  2965                           
  2966                           ; BSR set to: 1
  2967                           ;incstack = 0
  2968  0016BA  ACF2               	btfss	intcon,6,c	;volatile
  2969  0016BC  D008               	goto	l3154
  2970                           
  2971                           ;interrupts.c: 34: return (0);
  2972  0016BE  0E00               	movlw	0
  2973  0016C0  0101               	movlb	1	; () banked
  2974  0016C2  0101               	movlb	1	; () banked
  2975  0016C4  6F49               	movwf	(?_in_low_int+1)& (0+255),b
  2976  0016C6  0E00               	movlw	0
  2977  0016C8  0101               	movlb	1	; () banked
  2978  0016CA  6F48               	movwf	?_in_low_int& (0+255),b
  2979  0016CC  0012               	return	
  2980  0016CE                     l3154:
  2981  0016CE  ECCC  F00D         	call	_in_high_int	;wreg free
  2982  0016D2  0101               	movlb	1	; () banked
  2983  0016D4  0101               	movlb	1	; () banked
  2984  0016D6  5147               	movf	(?_in_high_int+1)& (0+255),w,b
  2985  0016D8  0101               	movlb	1	; () banked
  2986  0016DA  1146               	iorwf	?_in_high_int& (0+255),w,b
  2987  0016DC  B4D8               	btfsc	status,2,c
  2988  0016DE  D008               	goto	l3162
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;interrupts.c: 36: return (0);
  2992  0016E0  0E00               	movlw	0
  2993  0016E2  0101               	movlb	1	; () banked
  2994  0016E4  0101               	movlb	1	; () banked
  2995  0016E6  6F49               	movwf	(?_in_low_int+1)& (0+255),b
  2996  0016E8  0E00               	movlw	0
  2997  0016EA  0101               	movlb	1	; () banked
  2998  0016EC  6F48               	movwf	?_in_low_int& (0+255),b
  2999  0016EE  0012               	return	
  3000  0016F0                     l3162:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;interrupts.c: 38: return (1);
  3004  0016F0  0E00               	movlw	0
  3005  0016F2  0101               	movlb	1	; () banked
  3006  0016F4  0101               	movlb	1	; () banked
  3007  0016F6  6F49               	movwf	(?_in_low_int+1)& (0+255),b
  3008  0016F8  0E01               	movlw	1
  3009  0016FA  0101               	movlb	1	; () banked
  3010  0016FC  6F48               	movwf	?_in_low_int& (0+255),b
  3011  0016FE  0012               	return	
  3012  001700                     __end_of_in_low_int:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           intcon	equ	0xFF2
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           indf1	equ	0xFE7
  3024                           postdec1	equ	0xFE5
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           fsr2h	equ	0xFDA
  3029                           fsr2l	equ	0xFD9
  3030                           status	equ	0xFD8
  3031                           
  3032 ;; *************** function _in_high_int *****************
  3033 ;; Defined at:
  3034 ;;		line 24 in file "../src/interrupts.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  2   14[BANK1 ] int 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3048 ;;      Params:         0       0       2       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         0       0       2       0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:   11
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_in_low_int
  3059 ;;		_in_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text14
  3064  001B98                     __ptext14:
  3065                           	opt stack 0
  3066  001B98                     _in_high_int:
  3067                           	opt stack 16
  3068                           
  3069                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3070                           
  3071                           ; BSR set to: 1
  3072                           ;incstack = 0
  3073  001B98  0E00               	movlw	0
  3074  001B9A  AEF2               	btfss	intcon,7,c	;volatile
  3075  001B9C  0E01               	movlw	1
  3076  001B9E  0101               	movlb	1	; () banked
  3077  001BA0  0101               	movlb	1	; () banked
  3078  001BA2  6F46               	movwf	?_in_high_int& (0+255),b
  3079  001BA4  0101               	movlb	1	; () banked
  3080  001BA6  6B47               	clrf	(?_in_high_int+1)& (0+255),b
  3081  001BA8  0012               	return	
  3082  001BAA                     __end_of_in_high_int:
  3083                           	opt stack 0
  3084                           tblptru	equ	0xFF8
  3085                           tblptrh	equ	0xFF7
  3086                           tblptrl	equ	0xFF6
  3087                           tablat	equ	0xFF5
  3088                           prodh	equ	0xFF4
  3089                           prodl	equ	0xFF3
  3090                           intcon	equ	0xFF2
  3091                           postinc0	equ	0xFEE
  3092                           wreg	equ	0xFE8
  3093                           indf1	equ	0xFE7
  3094                           postdec1	equ	0xFE5
  3095                           fsr1h	equ	0xFE2
  3096                           fsr1l	equ	0xFE1
  3097                           indf2	equ	0xFDF
  3098                           fsr2h	equ	0xFDA
  3099                           fsr2l	equ	0xFD9
  3100                           status	equ	0xFD8
  3101                           
  3102 ;; *************** function _check_msg *****************
  3103 ;; Defined at:
  3104 ;;		line 223 in file "../src/messages.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  qptr            2   14[BANK1 ] PTR struct __msg_queue
  3107 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      unsigned char 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3119 ;;      Params:         0       0       2       0       0
  3120 ;;      Locals:         0       0       0       0       0
  3121 ;;      Temps:          0       0       1       0       0
  3122 ;;      Totals:         0       0       3       0       0
  3123 ;;Total ram usage:        3 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:   11
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_block_on_To_msgqueues
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text15
  3134  001976                     __ptext15:
  3135                           	opt stack 0
  3136  001976                     _check_msg:
  3137                           	opt stack 18
  3138                           
  3139                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  3140                           
  3141                           ; BSR set to: 1
  3142                           ;incstack = 0
  3143  001976  0101               	movlb	1	; () banked
  3144  001978  EE20 F035          	lfsr	2,53
  3145  00197C  0101               	movlb	1	; () banked
  3146  00197E  5146               	movf	check_msg@qptr& (0+255),w,b
  3147  001980  26D9               	addwf	fsr2l,f,c
  3148  001982  0101               	movlb	1	; () banked
  3149  001984  5147               	movf	(check_msg@qptr+1)& (0+255),w,b
  3150  001986  22DA               	addwfc	fsr2h,f,c
  3151  001988  50DF               	movf	indf2,w,c
  3152  00198A  0101               	movlb	1	; () banked
  3153  00198C  6F48               	movwf	??_check_msg& (0+255),b
  3154  00198E  0101               	movlb	1	; () banked
  3155  001990  5148               	movf	??_check_msg& (0+255),w,b
  3156  001992  0D0D               	mullw	13
  3157  001994  50F3               	movf	prodl,w,c
  3158  001996  0101               	movlb	1	; () banked
  3159  001998  0101               	movlb	1	; () banked
  3160  00199A  2546               	addwf	check_msg@qptr& (0+255),w,b
  3161  00199C  6ED9               	movwf	fsr2l,c
  3162  00199E  50F4               	movf	prodh,w,c
  3163  0019A0  0101               	movlb	1	; () banked
  3164  0019A2  0101               	movlb	1	; () banked
  3165  0019A4  2147               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3166  0019A6  6EDA               	movwf	fsr2h,c
  3167  0019A8  50DF               	movf	indf2,w,c
  3168  0019AA  0012               	return	
  3169  0019AC                     __end_of_check_msg:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           intcon	equ	0xFF2
  3178                           postinc0	equ	0xFEE
  3179                           wreg	equ	0xFE8
  3180                           indf1	equ	0xFE7
  3181                           postdec1	equ	0xFE5
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           indf2	equ	0xFDF
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _Delay1KTCYx *****************
  3190 ;; Defined at:
  3191 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  unit            1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  unit            1   14[BANK1 ] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;		None               void
  3198 ;; Registers used:
  3199 ;;		wreg
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         0       0       1       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       0       1       0       0
  3209 ;;Total ram usage:        1 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:   11
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_block_on_To_msgqueues
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text16
  3220  001B6E                     __ptext16:
  3221                           	opt stack 0
  3222  001B6E                     _Delay1KTCYx:
  3223                           	opt stack 18
  3224                           
  3225                           ; BSR set to: 1
  3226                           ;incstack = 0
  3227                           ;Delay1KTCYx@unit stored from wreg
  3228  001B6E  CFE8 F146          	movff	wreg,Delay1KTCYx@unit
  3229  001B72                     l820:
  3230  001B72  0EFA               	movlw	250
  3231  001B74                     u2667:
  3232  001B74  F000               	nop	
  3233  001B76  2EE8               	decfsz	wreg,f,c
  3234  001B78  D7FD               	goto	u2667
  3235  001B7A  0101               	movlb	1	; () banked
  3236  001B7C  0101               	movlb	1	; () banked
  3237  001B7E  2F46               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3238  001B80  D7F8               	goto	l820
  3239  001B82  0012               	return	
  3240  001B84                     __end_of_Delay1KTCYx:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           wreg	equ	0xFE8
  3251                           indf1	equ	0xFE7
  3252                           postdec1	equ	0xFE5
  3253                           fsr1h	equ	0xFE2
  3254                           fsr1l	equ	0xFE1
  3255                           indf2	equ	0xFDF
  3256                           fsr2h	equ	0xFDA
  3257                           fsr2l	equ	0xFD9
  3258                           status	equ	0xFD8
  3259                           
  3260 ;; *************** function _addDataPoints *****************
  3261 ;; Defined at:
  3262 ;;		line 48 in file "../src/sensorcomm.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  sensorid        2   22[BANK1 ] int 
  3265 ;;  data            2   24[BANK1 ] PTR void 
  3266 ;;		 -> main@msgbuffer(11), 
  3267 ;;  len             2   26[BANK1 ] int 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;		None               void
  3272 ;; Registers used:
  3273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3279 ;;      Params:         0       0       6       0       0
  3280 ;;      Locals:         0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0
  3282 ;;      Totals:         0       0       6       0       0
  3283 ;;Total ram usage:        6 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:   12
  3286 ;; This function calls:
  3287 ;;		_addADDataPoints
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text17
  3294  001A3E                     __ptext17:
  3295                           	opt stack 0
  3296  001A3E                     _addDataPoints:
  3297                           	opt stack 18
  3298                           
  3299                           ;sensorcomm.c: 51: if(sensorid == 0){
  3300                           
  3301                           ; BSR set to: 1
  3302                           ;incstack = 0
  3303  001A3E  0101               	movlb	1	; () banked
  3304  001A40  0101               	movlb	1	; () banked
  3305  001A42  514F               	movf	(addDataPoints@sensorid+1)& (0+255),w,b
  3306  001A44  114E               	iorwf	addDataPoints@sensorid& (0+255),w,b
  3307  001A46  A4D8               	btfss	status,2,c
  3308  001A48  0012               	return	
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;sensorcomm.c: 52: addADDataPoints((sensorADData*) data, len);
  3312  001A4A  0101               	movlb	1	; () banked
  3313  001A4C  0101               	movlb	1	; () banked
  3314  001A4E  C151  F147         	movff	addDataPoints@data+1,addADDataPoints@data+1
  3315  001A52  0101               	movlb	1	; () banked
  3316  001A54  0101               	movlb	1	; () banked
  3317  001A56  C150  F146         	movff	addDataPoints@data,addADDataPoints@data
  3318  001A5A  C152  F148         	movff	addDataPoints@len,addADDataPoints@len
  3319  001A5E  C153  F149         	movff	addDataPoints@len+1,addADDataPoints@len+1
  3320  001A62  EC59  F007         	call	_addADDataPoints	;wreg free
  3321  001A66  0012               	return	
  3322  001A68                     __end_of_addDataPoints:
  3323                           	opt stack 0
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           prodh	equ	0xFF4
  3329                           prodl	equ	0xFF3
  3330                           intcon	equ	0xFF2
  3331                           postinc0	equ	0xFEE
  3332                           wreg	equ	0xFE8
  3333                           indf1	equ	0xFE7
  3334                           postdec1	equ	0xFE5
  3335                           fsr1h	equ	0xFE2
  3336                           fsr1l	equ	0xFE1
  3337                           indf2	equ	0xFDF
  3338                           fsr2h	equ	0xFDA
  3339                           fsr2l	equ	0xFD9
  3340                           status	equ	0xFD8
  3341                           
  3342 ;; *************** function _addADDataPoints *****************
  3343 ;; Defined at:
  3344 ;;		line 57 in file "../src/sensorcomm.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  data            2   14[BANK1 ] PTR struct .
  3347 ;;		 -> main@msgbuffer(11), 
  3348 ;;  len             2   16[BANK1 ] int 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  i               2   20[BANK1 ] int 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;		None               void
  3353 ;; Registers used:
  3354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3360 ;;      Params:         0       0       4       0       0
  3361 ;;      Locals:         0       0       2       0       0
  3362 ;;      Temps:          0       0       2       0       0
  3363 ;;      Totals:         0       0       8       0       0
  3364 ;;Total ram usage:        8 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:   11
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_addDataPoints
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text18
  3375  000EB2                     __ptext18:
  3376                           	opt stack 0
  3377  000EB2                     _addADDataPoints:
  3378                           	opt stack 18
  3379                           
  3380                           ;sensorcomm.c: 59: if(ADacc.len + len < (int) sizeof(ADacc.data)){
  3381                           
  3382                           ;incstack = 0
  3383  000EB2  0102               	movlb	2	; () banked
  3384  000EB4  0102               	movlb	2	; () banked
  3385  000EB6  5100               	movf	_ADacc& (0+255),w,b
  3386  000EB8  0101               	movlb	1	; () banked
  3387  000EBA  0101               	movlb	1	; () banked
  3388  000EBC  2548               	addwf	addADDataPoints@len& (0+255),w,b
  3389  000EBE  0101               	movlb	1	; () banked
  3390  000EC0  6F4A               	movwf	??_addADDataPoints& (0+255),b
  3391  000EC2  0E00               	movlw	0
  3392  000EC4  0101               	movlb	1	; () banked
  3393  000EC6  0101               	movlb	1	; () banked
  3394  000EC8  2149               	addwfc	(addADDataPoints@len+1)& (0+255),w,b
  3395  000ECA  0101               	movlb	1	; () banked
  3396  000ECC  6F4B               	movwf	(??_addADDataPoints+1)& (0+255),b
  3397  000ECE  0101               	movlb	1	; () banked
  3398  000ED0  514B               	movf	(??_addADDataPoints+1)& (0+255),w,b
  3399  000ED2  0A80               	xorlw	128
  3400  000ED4  6EF3               	movwf	prodl,c
  3401  000ED6  0E80               	movlw	128
  3402  000ED8  5CF3               	subwf	prodl,w,c
  3403  000EDA  0E64               	movlw	100
  3404  000EDC  B4D8               	btfsc	status,2,c
  3405  000EDE  5D4A               	subwf	??_addADDataPoints& (0+255),w,b
  3406  000EE0  B0D8               	btfsc	status,0,c
  3407  000EE2  0012               	return	
  3408                           
  3409                           ; BSR set to: 1
  3410                           ;sensorcomm.c: 60: int i = 0;
  3411  000EE4  0E00               	movlw	0
  3412  000EE6  0101               	movlb	1	; () banked
  3413  000EE8  0101               	movlb	1	; () banked
  3414  000EEA  6F4D               	movwf	(addADDataPoints@i+1)& (0+255),b
  3415  000EEC  0E00               	movlw	0
  3416  000EEE  0101               	movlb	1	; () banked
  3417  000EF0  6F4C               	movwf	addADDataPoints@i& (0+255),b
  3418  000EF2  D023               	goto	l3740
  3419  000EF4                     l3734:
  3420                           
  3421                           ; BSR set to: 1
  3422                           ;sensorcomm.c: 62: ADacc.data[ADacc.len++] = data[i];
  3423  000EF4  0101               	movlb	1	; () banked
  3424  000EF6  0101               	movlb	1	; () banked
  3425  000EF8  514C               	movf	addADDataPoints@i& (0+255),w,b
  3426  000EFA  0101               	movlb	1	; () banked
  3427  000EFC  0101               	movlb	1	; () banked
  3428  000EFE  2546               	addwf	addADDataPoints@data& (0+255),w,b
  3429  000F00  6ED9               	movwf	fsr2l,c
  3430  000F02  0101               	movlb	1	; () banked
  3431  000F04  0101               	movlb	1	; () banked
  3432  000F06  514D               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3433  000F08  0101               	movlb	1	; () banked
  3434  000F0A  0101               	movlb	1	; () banked
  3435  000F0C  2147               	addwfc	(addADDataPoints@data+1)& (0+255),w,b
  3436  000F0E  6EDA               	movwf	fsr2h,c
  3437  000F10  0102               	movlb	2	; () banked
  3438  000F12  0102               	movlb	2	; () banked
  3439  000F14  5100               	movf	_ADacc& (0+255),w,b
  3440  000F16  0D01               	mullw	1
  3441  000F18  0102               	movlb	2	; () banked
  3442  000F1A  0E01               	movlw	low (_ADacc+1)
  3443  000F1C  24F3               	addwf	prodl,w,c
  3444  000F1E  6EE1               	movwf	fsr1l,c
  3445  000F20  0102               	movlb	2	; () banked
  3446  000F22  0E02               	movlw	high (_ADacc+1)
  3447  000F24  20F4               	addwfc	prodh,w,c
  3448  000F26  6EE2               	movwf	fsr1h,c
  3449  000F28  CFDF FFE7          	movff	indf2,indf1
  3450                           
  3451                           ; BSR set to: 2
  3452  000F2C  0102               	movlb	2	; () banked
  3453  000F2E  0102               	movlb	2	; () banked
  3454  000F30  2B00               	incf	_ADacc& (0+255),f,b
  3455                           
  3456                           ; BSR set to: 2
  3457  000F32  0101               	movlb	1	; () banked
  3458  000F34  0101               	movlb	1	; () banked
  3459  000F36  4B4C               	infsnz	addADDataPoints@i& (0+255),f,b
  3460  000F38  2B4D               	incf	(addADDataPoints@i+1)& (0+255),f,b
  3461  000F3A                     l3740:
  3462                           
  3463                           ; BSR set to: 1
  3464  000F3A  0101               	movlb	1	; () banked
  3465  000F3C  0101               	movlb	1	; () banked
  3466  000F3E  514D               	movf	(addADDataPoints@i+1)& (0+255),w,b
  3467  000F40  0A80               	xorlw	128
  3468  000F42  0101               	movlb	1	; () banked
  3469  000F44  6F4A               	movwf	??_addADDataPoints& (0+255),b
  3470  000F46  0101               	movlb	1	; () banked
  3471  000F48  5148               	movf	addADDataPoints@len& (0+255),w,b
  3472  000F4A  0101               	movlb	1	; () banked
  3473  000F4C  0101               	movlb	1	; () banked
  3474  000F4E  5D4C               	subwf	addADDataPoints@i& (0+255),w,b
  3475  000F50  0101               	movlb	1	; () banked
  3476  000F52  0101               	movlb	1	; () banked
  3477  000F54  5149               	movf	(addADDataPoints@len+1)& (0+255),w,b
  3478  000F56  0A80               	xorlw	128
  3479  000F58  0101               	movlb	1	; () banked
  3480  000F5A  594A               	subwfb	??_addADDataPoints& (0+255),w,b
  3481  000F5C  B0D8               	btfsc	status,0,c
  3482                           
  3483                           ; BSR set to: 1
  3484                           
  3485                           ; BSR set to: 1
  3486                           
  3487                           ; BSR set to: 1
  3488  000F5E  0012               	return	
  3489  000F60  D7C9               	goto	l3734
  3490  000F62                     __end_of_addADDataPoints:
  3491                           	opt stack 0
  3492                           tblptru	equ	0xFF8
  3493                           tblptrh	equ	0xFF7
  3494                           tblptrl	equ	0xFF6
  3495                           tablat	equ	0xFF5
  3496                           prodh	equ	0xFF4
  3497                           prodl	equ	0xFF3
  3498                           intcon	equ	0xFF2
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           indf1	equ	0xFE7
  3502                           postdec1	equ	0xFE5
  3503                           fsr1h	equ	0xFE2
  3504                           fsr1l	equ	0xFE1
  3505                           indf2	equ	0xFDF
  3506                           fsr2h	equ	0xFDA
  3507                           fsr2l	equ	0xFD9
  3508                           status	equ	0xFD8
  3509                           
  3510 ;; *************** function _ToMainLow_recvmsg *****************
  3511 ;; Defined at:
  3512 ;;		line 113 in file "../src/messages.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  maxlength       1    wreg     unsigned char 
  3515 ;;  msgtype         2   38[BANK1 ] PTR unsigned char 
  3516 ;;		 -> main@msgtype(1), 
  3517 ;;  data            2   40[BANK1 ] PTR void 
  3518 ;;		 -> main@msgbuffer(11), 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  maxlength       1   42[BANK1 ] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      char 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3530 ;;      Params:         0       0       4       0       0
  3531 ;;      Locals:         0       0       1       0       0
  3532 ;;      Temps:          0       0       0       0       0
  3533 ;;      Totals:         0       0       5       0       0
  3534 ;;Total ram usage:        5 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:   13
  3537 ;; This function calls:
  3538 ;;		_recv_msg
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text19
  3545  001744                     __ptext19:
  3546                           	opt stack 0
  3547  001744                     _ToMainLow_recvmsg:
  3548                           	opt stack 17
  3549                           
  3550                           ; BSR set to: 1
  3551                           ;incstack = 0
  3552                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3553  001744  CFE8 F162          	movff	wreg,ToMainLow_recvmsg@maxlength
  3554                           
  3555                           ;messages.c: 119: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3556  001748  0102               	movlb	2	; () banked
  3557  00174A  0E02               	movlw	high _ToMainLow_MQ
  3558  00174C  0101               	movlb	1	; () banked
  3559  00174E  0101               	movlb	1	; () banked
  3560  001750  6F51               	movwf	(recv_msg@qptr+1)& (0+255),b
  3561  001752  0102               	movlb	2	; () banked
  3562  001754  0E9B               	movlw	low _ToMainLow_MQ
  3563  001756  0101               	movlb	1	; () banked
  3564  001758  0101               	movlb	1	; () banked
  3565  00175A  6F50               	movwf	recv_msg@qptr& (0+255),b
  3566  00175C  C162  F152         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3567  001760  0101               	movlb	1	; () banked
  3568  001762  0101               	movlb	1	; () banked
  3569  001764  C15F  F154         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3570  001768  0101               	movlb	1	; () banked
  3571  00176A  0101               	movlb	1	; () banked
  3572  00176C  C15E  F153         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3573  001770  0101               	movlb	1	; () banked
  3574  001772  0101               	movlb	1	; () banked
  3575  001774  C161  F156         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3576  001778  0101               	movlb	1	; () banked
  3577  00177A  0101               	movlb	1	; () banked
  3578  00177C  C160  F155         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3579  001780  ECF0  F004         	call	_recv_msg	;wreg free
  3580  001784  0012               	return	
  3581  001786                     __end_of_ToMainLow_recvmsg:
  3582                           	opt stack 0
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           prodh	equ	0xFF4
  3588                           prodl	equ	0xFF3
  3589                           intcon	equ	0xFF2
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           indf1	equ	0xFE7
  3593                           postdec1	equ	0xFE5
  3594                           fsr1h	equ	0xFE2
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _ToMainHigh_recvmsg *****************
  3602 ;; Defined at:
  3603 ;;		line 136 in file "../src/messages.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  maxlength       1    wreg     unsigned char 
  3606 ;;  msgtype         2   38[BANK1 ] PTR unsigned char 
  3607 ;;		 -> main@msgtype(1), 
  3608 ;;  data            2   40[BANK1 ] PTR void 
  3609 ;;		 -> main@msgbuffer(11), 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  maxlength       1   42[BANK1 ] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      char 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3621 ;;      Params:         0       0       4       0       0
  3622 ;;      Locals:         0       0       1       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         0       0       5       0       0
  3625 ;;Total ram usage:        5 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:   13
  3628 ;; This function calls:
  3629 ;;		_recv_msg
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text20
  3636  001786                     __ptext20:
  3637                           	opt stack 0
  3638  001786                     _ToMainHigh_recvmsg:
  3639                           	opt stack 17
  3640                           
  3641                           ;incstack = 0
  3642                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3643  001786  CFE8 F162          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3644                           
  3645                           ;messages.c: 142: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3646  00178A  0101               	movlb	1	; () banked
  3647  00178C  0E01               	movlw	high _ToMainHigh_MQ
  3648  00178E  0101               	movlb	1	; () banked
  3649  001790  0101               	movlb	1	; () banked
  3650  001792  6F51               	movwf	(recv_msg@qptr+1)& (0+255),b
  3651  001794  0101               	movlb	1	; () banked
  3652  001796  0E02               	movlw	low _ToMainHigh_MQ
  3653  001798  0101               	movlb	1	; () banked
  3654  00179A  0101               	movlb	1	; () banked
  3655  00179C  6F50               	movwf	recv_msg@qptr& (0+255),b
  3656  00179E  C162  F152         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3657  0017A2  0101               	movlb	1	; () banked
  3658  0017A4  0101               	movlb	1	; () banked
  3659  0017A6  C15F  F154         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3660  0017AA  0101               	movlb	1	; () banked
  3661  0017AC  0101               	movlb	1	; () banked
  3662  0017AE  C15E  F153         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3663  0017B2  0101               	movlb	1	; () banked
  3664  0017B4  0101               	movlb	1	; () banked
  3665  0017B6  C161  F156         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3666  0017BA  0101               	movlb	1	; () banked
  3667  0017BC  0101               	movlb	1	; () banked
  3668  0017BE  C160  F155         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3669  0017C2  ECF0  F004         	call	_recv_msg	;wreg free
  3670  0017C6  0012               	return	
  3671  0017C8                     __end_of_ToMainHigh_recvmsg:
  3672                           	opt stack 0
  3673                           tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           prodh	equ	0xFF4
  3678                           prodl	equ	0xFF3
  3679                           intcon	equ	0xFF2
  3680                           postinc0	equ	0xFEE
  3681                           wreg	equ	0xFE8
  3682                           indf1	equ	0xFE7
  3683                           postdec1	equ	0xFE5
  3684                           fsr1h	equ	0xFE2
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           fsr2h	equ	0xFDA
  3688                           fsr2l	equ	0xFD9
  3689                           status	equ	0xFD8
  3690                           
  3691 ;; *************** function _recv_msg *****************
  3692 ;; Defined at:
  3693 ;;		line 64 in file "../src/messages.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  qptr            2   24[BANK1 ] PTR struct __msg_queue
  3696 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3697 ;;  maxlength       1   26[BANK1 ] unsigned char 
  3698 ;;  msgtype         2   27[BANK1 ] PTR unsigned char 
  3699 ;;		 -> main@msgtype(1), 
  3700 ;;  data            2   29[BANK1 ] PTR void 
  3701 ;;		 -> main@msgbuffer(11), 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  qmsg            2   36[BANK1 ] PTR struct __msg
  3704 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3705 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3706 ;;  tlength         2   34[BANK1 ] unsigned int 
  3707 ;;  slot            1   33[BANK1 ] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      char 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3717 ;;      Params:         0       0       7       0       0
  3718 ;;      Locals:         0       0       5       0       0
  3719 ;;      Temps:          0       0       2       0       0
  3720 ;;      Totals:         0       0      14       0       0
  3721 ;;Total ram usage:       14 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:   12
  3724 ;; This function calls:
  3725 ;;		_memcpy
  3726 ;; This function is called by:
  3727 ;;		_ToMainLow_recvmsg
  3728 ;;		_ToMainHigh_recvmsg
  3729 ;;		_FromMainLow_recvmsg
  3730 ;;		_FromMainHigh_recvmsg
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text21
  3735  0009E0                     __ptext21:
  3736                           	opt stack 0
  3737  0009E0                     _recv_msg:
  3738                           	opt stack 17
  3739                           
  3740                           ;messages.c: 65: unsigned char slot;
  3741                           ;messages.c: 69: msg *qmsg;
  3742                           ;messages.c: 70: size_t tlength;
  3743                           ;messages.c: 73: slot = qptr->cur_read_ind;
  3744                           
  3745                           ;incstack = 0
  3746  0009E0  0101               	movlb	1	; () banked
  3747  0009E2  EE20 F035          	lfsr	2,53
  3748  0009E6  0101               	movlb	1	; () banked
  3749  0009E8  5150               	movf	recv_msg@qptr& (0+255),w,b
  3750  0009EA  26D9               	addwf	fsr2l,f,c
  3751  0009EC  0101               	movlb	1	; () banked
  3752  0009EE  5151               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3753  0009F0  22DA               	addwfc	fsr2h,f,c
  3754  0009F2  50DF               	movf	indf2,w,c
  3755  0009F4  0101               	movlb	1	; () banked
  3756  0009F6  0101               	movlb	1	; () banked
  3757  0009F8  6F59               	movwf	recv_msg@slot& (0+255),b
  3758                           
  3759                           ; BSR set to: 1
  3760                           ;messages.c: 74: qmsg = &(qptr->queue[slot]);
  3761  0009FA  0101               	movlb	1	; () banked
  3762  0009FC  0101               	movlb	1	; () banked
  3763  0009FE  5159               	movf	recv_msg@slot& (0+255),w,b
  3764  000A00  0D0D               	mullw	13
  3765  000A02  50F3               	movf	prodl,w,c
  3766  000A04  0101               	movlb	1	; () banked
  3767  000A06  0101               	movlb	1	; () banked
  3768  000A08  2550               	addwf	recv_msg@qptr& (0+255),w,b
  3769  000A0A  0101               	movlb	1	; () banked
  3770  000A0C  0101               	movlb	1	; () banked
  3771  000A0E  6F5C               	movwf	recv_msg@qmsg& (0+255),b
  3772  000A10  50F4               	movf	prodh,w,c
  3773  000A12  0101               	movlb	1	; () banked
  3774  000A14  0101               	movlb	1	; () banked
  3775  000A16  2151               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3776  000A18  0101               	movlb	1	; () banked
  3777  000A1A  6F5D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3778                           
  3779                           ; BSR set to: 1
  3780                           ;messages.c: 75: if (qmsg->full == 1) {
  3781  000A1C  0E01               	movlw	1
  3782  000A1E  C15C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3783  000A22  C15D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3784  000A26  62DF               	cpfseq	indf2,c
  3785  000A28  D074               	goto	l3592
  3786                           
  3787                           ; BSR set to: 1
  3788                           ;messages.c: 77: if (qmsg->length > maxlength) {
  3789  000A2A  0101               	movlb	1	; () banked
  3790  000A2C  EE20 F001          	lfsr	2,1
  3791  000A30  0101               	movlb	1	; () banked
  3792  000A32  515C               	movf	recv_msg@qmsg& (0+255),w,b
  3793  000A34  26D9               	addwf	fsr2l,f,c
  3794  000A36  0101               	movlb	1	; () banked
  3795  000A38  515D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3796  000A3A  22DA               	addwfc	fsr2h,f,c
  3797  000A3C  50DF               	movf	indf2,w,c
  3798  000A3E  0101               	movlb	1	; () banked
  3799  000A40  0101               	movlb	1	; () banked
  3800  000A42  5D52               	subwf	recv_msg@maxlength& (0+255),w,b
  3801  000A44  B0D8               	btfsc	status,0,c
  3802  000A46  D002               	goto	l3576
  3803                           
  3804                           ; BSR set to: 1
  3805                           ;messages.c: 78: return (-3);
  3806  000A48  0EFD               	movlw	253
  3807  000A4A  0012               	return	
  3808  000A4C                     l3576:
  3809                           
  3810                           ; BSR set to: 1
  3811                           ;messages.c: 79: }
  3812                           ;messages.c: 81: tlength = qmsg->length;
  3813  000A4C  0101               	movlb	1	; () banked
  3814  000A4E  EE20 F001          	lfsr	2,1
  3815  000A52  0101               	movlb	1	; () banked
  3816  000A54  515C               	movf	recv_msg@qmsg& (0+255),w,b
  3817  000A56  26D9               	addwf	fsr2l,f,c
  3818  000A58  0101               	movlb	1	; () banked
  3819  000A5A  515D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3820  000A5C  22DA               	addwfc	fsr2h,f,c
  3821  000A5E  50DF               	movf	indf2,w,c
  3822  000A60  0101               	movlb	1	; () banked
  3823  000A62  6F57               	movwf	??_recv_msg& (0+255),b
  3824  000A64  0101               	movlb	1	; () banked
  3825  000A66  5157               	movf	??_recv_msg& (0+255),w,b
  3826  000A68  0101               	movlb	1	; () banked
  3827  000A6A  0101               	movlb	1	; () banked
  3828  000A6C  6F5A               	movwf	recv_msg@tlength& (0+255),b
  3829  000A6E  0101               	movlb	1	; () banked
  3830  000A70  6B5B               	clrf	(recv_msg@tlength+1)& (0+255),b
  3831                           
  3832                           ; BSR set to: 1
  3833                           ;messages.c: 82: memcpy(data, qmsg->data, tlength);
  3834  000A72  0101               	movlb	1	; () banked
  3835  000A74  0101               	movlb	1	; () banked
  3836  000A76  C156  F147         	movff	recv_msg@data+1,memcpy@d1+1
  3837  000A7A  0101               	movlb	1	; () banked
  3838  000A7C  0101               	movlb	1	; () banked
  3839  000A7E  C155  F146         	movff	recv_msg@data,memcpy@d1
  3840  000A82  0E03               	movlw	3
  3841  000A84  0101               	movlb	1	; () banked
  3842  000A86  0101               	movlb	1	; () banked
  3843  000A88  255C               	addwf	recv_msg@qmsg& (0+255),w,b
  3844  000A8A  0101               	movlb	1	; () banked
  3845  000A8C  6F57               	movwf	??_recv_msg& (0+255),b
  3846  000A8E  0E00               	movlw	0
  3847  000A90  0101               	movlb	1	; () banked
  3848  000A92  0101               	movlb	1	; () banked
  3849  000A94  215D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3850  000A96  0101               	movlb	1	; () banked
  3851  000A98  6F58               	movwf	(??_recv_msg+1)& (0+255),b
  3852  000A9A  C157  F148         	movff	??_recv_msg,memcpy@s1
  3853  000A9E  C158  F149         	movff	??_recv_msg+1,memcpy@s1+1
  3854  000AA2  C15A  F14A         	movff	recv_msg@tlength,memcpy@n
  3855  000AA6  C15B  F14B         	movff	recv_msg@tlength+1,memcpy@n+1
  3856  000AAA  EC39  F00A         	call	_memcpy	;wreg free
  3857                           
  3858                           ;messages.c: 88: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3859  000AAE  0101               	movlb	1	; () banked
  3860  000AB0  EE20 F035          	lfsr	2,53
  3861  000AB4  0101               	movlb	1	; () banked
  3862  000AB6  5150               	movf	recv_msg@qptr& (0+255),w,b
  3863  000AB8  26D9               	addwf	fsr2l,f,c
  3864  000ABA  0101               	movlb	1	; () banked
  3865  000ABC  5151               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3866  000ABE  22DA               	addwfc	fsr2h,f,c
  3867  000AC0  0101               	movlb	1	; () banked
  3868  000AC2  EE10 F035          	lfsr	1,53
  3869  000AC6  0101               	movlb	1	; () banked
  3870  000AC8  5150               	movf	recv_msg@qptr& (0+255),w,b
  3871  000ACA  26E1               	addwf	fsr1l,f,c
  3872  000ACC  0101               	movlb	1	; () banked
  3873  000ACE  5151               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3874  000AD0  22E2               	addwfc	fsr1h,f,c
  3875  000AD2  50E7               	movf	indf1,w,c
  3876  000AD4  0101               	movlb	1	; () banked
  3877  000AD6  6F57               	movwf	??_recv_msg& (0+255),b
  3878  000AD8  0101               	movlb	1	; () banked
  3879  000ADA  2957               	incf	??_recv_msg& (0+255),w,b
  3880  000ADC  0B03               	andlw	3
  3881  000ADE  6EDF               	movwf	indf2,c
  3882                           
  3883                           ; BSR set to: 1
  3884                           ;messages.c: 90: (*msgtype) = qmsg->msgtype;
  3885  000AE0  0101               	movlb	1	; () banked
  3886  000AE2  EE20 F002          	lfsr	2,2
  3887  000AE6  0101               	movlb	1	; () banked
  3888  000AE8  515C               	movf	recv_msg@qmsg& (0+255),w,b
  3889  000AEA  26D9               	addwf	fsr2l,f,c
  3890  000AEC  0101               	movlb	1	; () banked
  3891  000AEE  515D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3892  000AF0  22DA               	addwfc	fsr2h,f,c
  3893  000AF2  C153  FFE1         	movff	recv_msg@msgtype,fsr1l
  3894  000AF6  C154  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3895  000AFA  CFDF FFE7          	movff	indf2,indf1
  3896                           
  3897                           ; BSR set to: 1
  3898                           ;messages.c: 92: qmsg->full = 0;
  3899  000AFE  C15C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3900  000B02  C15D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3901  000B06  0E00               	movlw	0
  3902  000B08  6EDF               	movwf	indf2,c
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;messages.c: 93: return (tlength);
  3906  000B0A  0101               	movlb	1	; () banked
  3907  000B0C  0101               	movlb	1	; () banked
  3908  000B0E  515A               	movf	recv_msg@tlength& (0+255),w,b
  3909  000B10  0012               	return	
  3910  000B12                     l3592:
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;messages.c: 95: return (-4);
  3914  000B12  0EFC               	movlw	252
  3915  000B14  0012               	return	
  3916  000B16                     __end_of_recv_msg:
  3917                           	opt stack 0
  3918                           tblptru	equ	0xFF8
  3919                           tblptrh	equ	0xFF7
  3920                           tblptrl	equ	0xFF6
  3921                           tablat	equ	0xFF5
  3922                           prodh	equ	0xFF4
  3923                           prodl	equ	0xFF3
  3924                           intcon	equ	0xFF2
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           indf1	equ	0xFE7
  3928                           postdec1	equ	0xFE5
  3929                           fsr1h	equ	0xFE2
  3930                           fsr1l	equ	0xFE1
  3931                           indf2	equ	0xFDF
  3932                           fsr2h	equ	0xFDA
  3933                           fsr2l	equ	0xFD9
  3934                           status	equ	0xFD8
  3935                           
  3936 ;; *************** function _memcpy *****************
  3937 ;; Defined at:
  3938 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  d1              2   14[BANK1 ] PTR void 
  3941 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3942 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3943 ;;		 -> main@msgbuffer(11), 
  3944 ;;  s1              2   16[BANK1 ] PTR const void 
  3945 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3946 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3947 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  3948 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3949 ;;  n               2   18[BANK1 ] unsigned int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  s               2   22[BANK1 ] PTR const unsigned char 
  3952 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3953 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3954 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  3955 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3956 ;;  d               2   20[BANK1 ] PTR unsigned char 
  3957 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3958 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3959 ;;		 -> main@msgbuffer(11), 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2   14[BANK1 ] PTR void 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3969 ;;      Params:         0       0       6       0       0
  3970 ;;      Locals:         0       0       4       0       0
  3971 ;;      Temps:          0       0       0       0       0
  3972 ;;      Totals:         0       0      10       0       0
  3973 ;;Total ram usage:       10 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:   11
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_recv_msg
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text22
  3984  001472                     __ptext22:
  3985                           	opt stack 0
  3986  001472                     _memcpy:
  3987                           	opt stack 17
  3988                           
  3989                           ; BSR set to: 1
  3990                           ;incstack = 0
  3991  001472  0101               	movlb	1	; () banked
  3992  001474  0101               	movlb	1	; () banked
  3993  001476  C149  F14F         	movff	memcpy@s1+1,memcpy@s+1
  3994  00147A  0101               	movlb	1	; () banked
  3995  00147C  0101               	movlb	1	; () banked
  3996  00147E  C148  F14E         	movff	memcpy@s1,memcpy@s
  3997  001482  0101               	movlb	1	; () banked
  3998  001484  0101               	movlb	1	; () banked
  3999  001486  C147  F14D         	movff	memcpy@d1+1,memcpy@d+1
  4000  00148A  0101               	movlb	1	; () banked
  4001  00148C  0101               	movlb	1	; () banked
  4002  00148E  C146  F14C         	movff	memcpy@d1,memcpy@d
  4003  001492  D012               	goto	l3562
  4004  001494                     l3556:
  4005                           
  4006                           ; BSR set to: 1
  4007  001494  C14E  FFD9         	movff	memcpy@s,fsr2l
  4008  001498  C14F  FFDA         	movff	memcpy@s+1,fsr2h
  4009  00149C  C14C  FFE1         	movff	memcpy@d,fsr1l
  4010  0014A0  C14D  FFE2         	movff	memcpy@d+1,fsr1h
  4011  0014A4  CFDF FFE7          	movff	indf2,indf1
  4012                           
  4013                           ; BSR set to: 1
  4014  0014A8  0101               	movlb	1	; () banked
  4015  0014AA  0101               	movlb	1	; () banked
  4016  0014AC  4B4E               	infsnz	memcpy@s& (0+255),f,b
  4017  0014AE  2B4F               	incf	(memcpy@s+1)& (0+255),f,b
  4018                           
  4019                           ; BSR set to: 1
  4020  0014B0  0101               	movlb	1	; () banked
  4021  0014B2  0101               	movlb	1	; () banked
  4022  0014B4  4B4C               	infsnz	memcpy@d& (0+255),f,b
  4023  0014B6  2B4D               	incf	(memcpy@d+1)& (0+255),f,b
  4024  0014B8                     l3562:
  4025                           
  4026                           ; BSR set to: 1
  4027  0014B8  0101               	movlb	1	; () banked
  4028  0014BA  0101               	movlb	1	; () banked
  4029  0014BC  074A               	decf	memcpy@n& (0+255),f,b
  4030  0014BE  A0D8               	btfss	status,0,c
  4031  0014C0  074B               	decf	(memcpy@n+1)& (0+255),f,b
  4032  0014C2  0101               	movlb	1	; () banked
  4033  0014C4  294A               	incf	memcpy@n& (0+255),w,b
  4034  0014C6  B4D8               	btfsc	status,2,c
  4035  0014C8  294B               	incf	(memcpy@n+1)& (0+255),w,b
  4036  0014CA  B4D8               	btfsc	status,2,c
  4037                           
  4038                           ; BSR set to: 1
  4039                           
  4040                           ; BSR set to: 1
  4041                           ;	Return value of _memcpy is never used
  4042  0014CC  0012               	return	
  4043  0014CE  D7E2               	goto	l3556
  4044  0014D0                     __end_of_memcpy:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           postinc0	equ	0xFEE
  4054                           wreg	equ	0xFE8
  4055                           indf1	equ	0xFE7
  4056                           postdec1	equ	0xFE5
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           indf2	equ	0xFDF
  4060                           fsr2h	equ	0xFDA
  4061                           fsr2l	equ	0xFD9
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function _OpenTimer0 *****************
  4065 ;; Defined at:
  4066 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  config          1    wreg     unsigned char 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  config          1   14[BANK1 ] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;		None               void
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4080 ;;      Params:         0       0       0       0       0
  4081 ;;      Locals:         0       0       1       0       0
  4082 ;;      Temps:          0       0       0       0       0
  4083 ;;      Totals:         0       0       1       0       0
  4084 ;;Total ram usage:        1 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:   11
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text23
  4095  001A68                     __ptext23:
  4096                           	opt stack 0
  4097  001A68                     _OpenTimer0:
  4098                           	opt stack 19
  4099                           
  4100                           ; BSR set to: 1
  4101                           ;incstack = 0
  4102                           ;OpenTimer0@config stored from wreg
  4103  001A68  CFE8 F146          	movff	wreg,OpenTimer0@config
  4104  001A6C  0101               	movlb	1	; () banked
  4105  001A6E  0101               	movlb	1	; () banked
  4106  001A70  5146               	movf	OpenTimer0@config& (0+255),w,b
  4107  001A72  0B7F               	andlw	127
  4108  001A74  6ED5               	movwf	4053,c	;volatile
  4109                           
  4110                           ; BSR set to: 1
  4111  001A76  0E00               	movlw	0
  4112  001A78  6ED7               	movwf	4055,c	;volatile
  4113                           
  4114                           ; BSR set to: 1
  4115  001A7A  0E00               	movlw	0
  4116  001A7C  6ED6               	movwf	4054,c	;volatile
  4117                           
  4118                           ; BSR set to: 1
  4119  001A7E  94F2               	bcf	intcon,2,c	;volatile
  4120                           
  4121                           ; BSR set to: 1
  4122  001A80  0101               	movlb	1	; () banked
  4123  001A82  0101               	movlb	1	; () banked
  4124  001A84  AF46               	btfss	OpenTimer0@config& (0+255),7,b
  4125  001A86  D002               	goto	l571
  4126                           
  4127                           ; BSR set to: 1
  4128  001A88  8AF2               	bsf	intcon,5,c	;volatile
  4129  001A8A  D001               	goto	l572
  4130  001A8C                     l571:
  4131                           
  4132                           ; BSR set to: 1
  4133  001A8C  9AF2               	bcf	intcon,5,c	;volatile
  4134  001A8E                     l572:
  4135                           
  4136                           ; BSR set to: 1
  4137  001A8E  8ED5               	bsf	4053,7,c	;volatile
  4138                           
  4139                           ; BSR set to: 1
  4140  001A90  0012               	return	
  4141  001A92                     __end_of_OpenTimer0:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           intcon	equ	0xFF2
  4150                           postinc0	equ	0xFEE
  4151                           wreg	equ	0xFE8
  4152                           indf1	equ	0xFE7
  4153                           postdec1	equ	0xFE5
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           indf2	equ	0xFDF
  4157                           fsr2h	equ	0xFDA
  4158                           fsr2l	equ	0xFD9
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function _InterruptHandlerLow *****************
  4162 ;; Defined at:
  4163 ;;		line 124 in file "../src/interrupts.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;		None               void
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4177 ;;      Params:         0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0
  4179 ;;      Temps:         17       0       0       0       0
  4180 ;;      Totals:        17       0       0       0       0
  4181 ;;Total ram usage:       17 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:   10
  4184 ;; This function calls:
  4185 ;;		_adc_int_handler
  4186 ;; This function is called by:
  4187 ;;		Interrupt level 1
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	intcodelo
  4192  000018                     __pintcodelo:
  4193                           	opt stack 0
  4194  000018                     _InterruptHandlerLow:
  4195                           	opt stack 16
  4196                           
  4197                           ; BSR set to: 1
  4198                           ;incstack = 0
  4199  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4200  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4201  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4202  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4203  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4204  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4205  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4206  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4207  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4208  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4209  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4210  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4211  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4212  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4213  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4214  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  4215  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  4216                           
  4217                           ;interrupts.c: 126: if (PIR1bits.ADIF) {
  4218  00005C  AC9E               	btfss	3998,6,c	;volatile
  4219  00005E  D003               	goto	i1l44
  4220                           
  4221                           ;interrupts.c: 127: PIR1bits.ADIF = 0;
  4222  000060  9C9E               	bcf	3998,6,c	;volatile
  4223                           
  4224                           ;interrupts.c: 128: adc_int_handler();
  4225  000062  ECE7  F00A         	call	_adc_int_handler	;wreg free
  4226  000066                     i1l44:
  4227  000066  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4228  00006A  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4229  00006E  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4230  000072  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4231  000076  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4232  00007A  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4233  00007E  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4234  000082  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4235  000086  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4236  00008A  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4237  00008E  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4238  000092  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4239  000096  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4240  00009A  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4241  00009E  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4242  0000A2  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4243  0000A6  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  4244  0000AA  0010               	retfie	
  4245  0000AC                     __end_of_InterruptHandlerLow:
  4246                           	opt stack 0
  4247                           pclatu	equ	0xFFB
  4248                           pclath	equ	0xFFA
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           prodh	equ	0xFF4
  4254                           prodl	equ	0xFF3
  4255                           intcon	equ	0xFF2
  4256                           postinc0	equ	0xFEE
  4257                           fsr0h	equ	0xFEA
  4258                           fsr0l	equ	0xFE9
  4259                           wreg	equ	0xFE8
  4260                           indf1	equ	0xFE7
  4261                           postdec1	equ	0xFE5
  4262                           fsr1h	equ	0xFE2
  4263                           fsr1l	equ	0xFE1
  4264                           bsr	equ	0xFE0
  4265                           indf2	equ	0xFDF
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8
  4269                           
  4270 ;; *************** function _adc_int_handler *****************
  4271 ;; Defined at:
  4272 ;;		line 43 in file "../src/my_adc.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  data            2   27[COMRAM] unsigned int 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;		None               void
  4279 ;; Registers used:
  4280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4286 ;;      Params:         0       0       0       0       0
  4287 ;;      Locals:         2       0       0       0       0
  4288 ;;      Temps:          1       0       0       0       0
  4289 ;;      Totals:         3       0       0       0       0
  4290 ;;Total ram usage:        3 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    9
  4293 ;; This function calls:
  4294 ;;		_ReadADC
  4295 ;;		_ToMainHigh_sendmsg
  4296 ;;		_addBuffer
  4297 ;;		_debugNum
  4298 ;; This function is called by:
  4299 ;;		_InterruptHandlerLow
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text25
  4304  0015CE                     __ptext25:
  4305                           	opt stack 0
  4306  0015CE                     _adc_int_handler:
  4307                           	opt stack 16
  4308                           
  4309                           ;my_adc.c: 44: unsigned int data;
  4310                           ;my_adc.c: 46: data = ReadADC();
  4311                           
  4312                           ;incstack = 0
  4313  0015CE  ECE4  F00D         	call	_ReadADC	;wreg free
  4314  0015D2  C001  F01C         	movff	?_ReadADC,adc_int_handler@data
  4315  0015D6  C002  F01D         	movff	?_ReadADC+1,adc_int_handler@data+1
  4316                           
  4317                           ;my_adc.c: 47: data >>= 2;
  4318  0015DA  90D8               	bcf	status,0,c
  4319  0015DC  321D               	rrcf	adc_int_handler@data+1,f,c
  4320  0015DE  321C               	rrcf	adc_int_handler@data,f,c
  4321  0015E0  90D8               	bcf	status,0,c
  4322  0015E2  321D               	rrcf	adc_int_handler@data+1,f,c
  4323  0015E4  321C               	rrcf	adc_int_handler@data,f,c
  4324                           
  4325                           ;my_adc.c: 50: debugNum(2);
  4326  0015E6  0E00               	movlw	0
  4327  0015E8  6E03               	movwf	debugNum@num+1,c
  4328  0015EA  0E02               	movlw	2
  4329  0015EC  6E02               	movwf	debugNum@num,c
  4330  0015EE  EC95  F00A         	call	_debugNum	;wreg free
  4331                           
  4332                           ;my_adc.c: 51: addBuffer((char) data);
  4333  0015F2  501C               	movf	adc_int_handler@data,w,c
  4334  0015F4  EC85  F00D         	call	_addBuffer
  4335                           
  4336                           ;my_adc.c: 52: if(count >= 7){
  4337  0015F8  0E06               	movlw	6
  4338  0015FA  6446               	cpfsgt	_count,c
  4339  0015FC  0012               	return	
  4340                           
  4341                           ;my_adc.c: 53: ToMainHigh_sendmsg(7,50, ADCBuffer);
  4342  0015FE  6E1B               	movwf	??_adc_int_handler& (0+255),c
  4343  001600  0E32               	movlw	50
  4344  001602  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  4345  001604  501B               	movf	??_adc_int_handler& (0+255),w,c
  4346  001606  0E00               	movlw	high _ADCBuffer
  4347  001608  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  4348  00160A  0E48               	movlw	low _ADCBuffer
  4349  00160C  6E18               	movwf	ToMainHigh_sendmsg@data,c
  4350  00160E  0E07               	movlw	7
  4351  001610  EC72  F00D         	call	_ToMainHigh_sendmsg
  4352                           
  4353                           ;my_adc.c: 54: count = 0;
  4354  001614  6E1B               	movwf	??_adc_int_handler& (0+255),c
  4355  001616  0E00               	movlw	0
  4356  001618  6E46               	movwf	_count,c
  4357  00161A  501B               	movf	??_adc_int_handler& (0+255),w,c
  4358  00161C  0012               	return	
  4359  00161E                     __end_of_adc_int_handler:
  4360                           	opt stack 0
  4361                           pclatu	equ	0xFFB
  4362                           pclath	equ	0xFFA
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           prodh	equ	0xFF4
  4368                           prodl	equ	0xFF3
  4369                           intcon	equ	0xFF2
  4370                           postinc0	equ	0xFEE
  4371                           fsr0h	equ	0xFEA
  4372                           fsr0l	equ	0xFE9
  4373                           wreg	equ	0xFE8
  4374                           indf1	equ	0xFE7
  4375                           postdec1	equ	0xFE5
  4376                           fsr1h	equ	0xFE2
  4377                           fsr1l	equ	0xFE1
  4378                           bsr	equ	0xFE0
  4379                           indf2	equ	0xFDF
  4380                           fsr2h	equ	0xFDA
  4381                           fsr2l	equ	0xFD9
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function _debugNum *****************
  4385 ;; Defined at:
  4386 ;;		line 69 in file "../src/debug.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  num             2    1[COMRAM] int 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;		None               void
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4400 ;;      Params:         2       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0
  4403 ;;      Totals:         2       0       0       0       0
  4404 ;;Total ram usage:        2 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    7
  4407 ;; This function calls:
  4408 ;;		_resetDBG
  4409 ;;		_setDBG
  4410 ;; This function is called by:
  4411 ;;		_adc_int_handler
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text26
  4416  00152A                     __ptext26:
  4417                           	opt stack 0
  4418  00152A                     _debugNum:
  4419                           	opt stack 17
  4420                           
  4421                           ;debug.c: 70: if(num & 1){
  4422                           
  4423                           ;incstack = 0
  4424  00152A  A002               	btfss	debugNum@num,0,c
  4425  00152C  D006               	goto	i1l2256
  4426                           
  4427                           ;debug.c: 71: setDBG(DBG1);
  4428  00152E  0E00               	movlw	0
  4429  001530  EC43  F00C         	call	_setDBG
  4430                           
  4431                           ;debug.c: 72: resetDBG(DBG1);
  4432  001534  0E00               	movlw	0
  4433  001536  EC61  F00C         	call	_resetDBG
  4434  00153A                     i1l2256:
  4435                           
  4436                           ;debug.c: 73: }
  4437                           ;debug.c: 74: if(num & 2){
  4438  00153A  A202               	btfss	debugNum@num,1,c
  4439  00153C  D006               	goto	i1l2260
  4440                           
  4441                           ;debug.c: 75: setDBG(DBG2);
  4442  00153E  0E01               	movlw	1
  4443  001540  EC43  F00C         	call	_setDBG
  4444                           
  4445                           ;debug.c: 76: resetDBG(DBG2);
  4446  001544  0E01               	movlw	1
  4447  001546  EC61  F00C         	call	_resetDBG
  4448  00154A                     i1l2260:
  4449                           
  4450                           ;debug.c: 77: }
  4451                           ;debug.c: 78: if(num & 4){
  4452  00154A  A402               	btfss	debugNum@num,2,c
  4453  00154C  D006               	goto	i1l2264
  4454                           
  4455                           ;debug.c: 79: setDBG(DBG3);
  4456  00154E  0E02               	movlw	2
  4457  001550  EC43  F00C         	call	_setDBG
  4458                           
  4459                           ;debug.c: 80: resetDBG(DBG3);
  4460  001554  0E02               	movlw	2
  4461  001556  EC61  F00C         	call	_resetDBG
  4462  00155A                     i1l2264:
  4463                           
  4464                           ;debug.c: 81: }
  4465                           ;debug.c: 82: if(num & 8){
  4466  00155A  A602               	btfss	debugNum@num,3,c
  4467  00155C  D006               	goto	i1l2268
  4468                           
  4469                           ;debug.c: 83: setDBG(DBG4);
  4470  00155E  0E03               	movlw	3
  4471  001560  EC43  F00C         	call	_setDBG
  4472                           
  4473                           ;debug.c: 84: resetDBG(DBG4);
  4474  001564  0E03               	movlw	3
  4475  001566  EC61  F00C         	call	_resetDBG
  4476  00156A                     i1l2268:
  4477                           
  4478                           ;debug.c: 85: }
  4479                           ;debug.c: 86: if(num & 16){
  4480  00156A  A802               	btfss	debugNum@num,4,c
  4481  00156C  0012               	return	
  4482                           
  4483                           ;debug.c: 87: setDBG(DBG5);
  4484  00156E  0E04               	movlw	4
  4485  001570  EC43  F00C         	call	_setDBG
  4486                           
  4487                           ;debug.c: 88: resetDBG(DBG5);
  4488  001574  0E04               	movlw	4
  4489  001576  EC61  F00C         	call	_resetDBG
  4490  00157A  0012               	return	
  4491  00157C                     __end_of_debugNum:
  4492                           	opt stack 0
  4493                           pclatu	equ	0xFFB
  4494                           pclath	equ	0xFFA
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           intcon	equ	0xFF2
  4502                           postinc0	equ	0xFEE
  4503                           fsr0h	equ	0xFEA
  4504                           fsr0l	equ	0xFE9
  4505                           wreg	equ	0xFE8
  4506                           indf1	equ	0xFE7
  4507                           postdec1	equ	0xFE5
  4508                           fsr1h	equ	0xFE2
  4509                           fsr1l	equ	0xFE1
  4510                           bsr	equ	0xFE0
  4511                           indf2	equ	0xFDF
  4512                           fsr2h	equ	0xFDA
  4513                           fsr2l	equ	0xFD9
  4514                           status	equ	0xFD8
  4515                           
  4516 ;; *************** function _setDBG *****************
  4517 ;; Defined at:
  4518 ;;		line 4 in file "../src/debug.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  b               1    wreg     unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  b               1    0[COMRAM] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;		None               void
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4532 ;;      Params:         0       0       0       0       0
  4533 ;;      Locals:         1       0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0
  4535 ;;      Totals:         1       0       0       0       0
  4536 ;;Total ram usage:        1 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    6
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_debugNum
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text27
  4547  001886                     __ptext27:
  4548                           	opt stack 0
  4549  001886                     _setDBG:
  4550                           	opt stack 17
  4551                           
  4552                           ;incstack = 0
  4553                           ;setDBG@b stored from wreg
  4554  001886  CFE8 F001          	movff	wreg,setDBG@b
  4555                           
  4556                           ;debug.c: 5: switch(b) {
  4557  00188A  D00A               	goto	i1l1822
  4558  00188C                     i1l367:
  4559                           
  4560                           ;debug.c: 7: LATBbits.LATB0 = 1;
  4561  00188C  808A               	bsf	3978,0,c	;volatile
  4562                           
  4563                           ;debug.c: 8: break;
  4564  00188E  0012               	return	
  4565  001890                     i1l369:
  4566                           
  4567                           ;debug.c: 10: LATBbits.LATB1 = 1;
  4568  001890  828A               	bsf	3978,1,c	;volatile
  4569                           
  4570                           ;debug.c: 11: break;
  4571  001892  0012               	return	
  4572  001894                     i1l370:
  4573                           
  4574                           ;debug.c: 13: LATBbits.LATB2 = 1;
  4575  001894  848A               	bsf	3978,2,c	;volatile
  4576                           
  4577                           ;debug.c: 14: break;
  4578  001896  0012               	return	
  4579  001898                     i1l371:
  4580                           
  4581                           ;debug.c: 16: LATBbits.LATB3 = 1;
  4582  001898  868A               	bsf	3978,3,c	;volatile
  4583                           
  4584                           ;debug.c: 17: break;
  4585  00189A  0012               	return	
  4586  00189C                     i1l372:
  4587                           
  4588                           ;debug.c: 19: LATBbits.LATB4 = 1;
  4589  00189C  888A               	bsf	3978,4,c	;volatile
  4590                           
  4591                           ;debug.c: 20: break;
  4592  00189E  0012               	return	
  4593  0018A0                     i1l1822:
  4594  0018A0  5001               	movf	setDBG@b,w,c
  4595                           
  4596                           ; Switch size 1, requested type "space"
  4597                           ; Number of cases is 5, Range of values is 0 to 4
  4598                           ; switch strategies available:
  4599                           ; Name         Instructions Cycles
  4600                           ; simple_byte           16     9 (average)
  4601                           ;	Chosen strategy is simple_byte
  4602  0018A2  0A00               	xorlw	0	; case 0
  4603  0018A4  B4D8               	btfsc	status,2,c
  4604  0018A6  D7F2               	goto	i1l367
  4605  0018A8  0A01               	xorlw	1	; case 1
  4606  0018AA  B4D8               	btfsc	status,2,c
  4607  0018AC  D7F1               	goto	i1l369
  4608  0018AE  0A03               	xorlw	3	; case 2
  4609  0018B0  B4D8               	btfsc	status,2,c
  4610  0018B2  D7F0               	goto	i1l370
  4611  0018B4  0A01               	xorlw	1	; case 3
  4612  0018B6  B4D8               	btfsc	status,2,c
  4613  0018B8  D7EF               	goto	i1l371
  4614  0018BA  0A07               	xorlw	7	; case 4
  4615  0018BC  A4D8               	btfss	status,2,c
  4616  0018BE  0012               	return	
  4617  0018C0  D7ED               	goto	i1l372
  4618  0018C2                     __end_of_setDBG:
  4619                           	opt stack 0
  4620                           pclatu	equ	0xFFB
  4621                           pclath	equ	0xFFA
  4622                           tblptru	equ	0xFF8
  4623                           tblptrh	equ	0xFF7
  4624                           tblptrl	equ	0xFF6
  4625                           tablat	equ	0xFF5
  4626                           prodh	equ	0xFF4
  4627                           prodl	equ	0xFF3
  4628                           intcon	equ	0xFF2
  4629                           postinc0	equ	0xFEE
  4630                           fsr0h	equ	0xFEA
  4631                           fsr0l	equ	0xFE9
  4632                           wreg	equ	0xFE8
  4633                           indf1	equ	0xFE7
  4634                           postdec1	equ	0xFE5
  4635                           fsr1h	equ	0xFE2
  4636                           fsr1l	equ	0xFE1
  4637                           bsr	equ	0xFE0
  4638                           indf2	equ	0xFDF
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _resetDBG *****************
  4644 ;; Defined at:
  4645 ;;		line 26 in file "../src/debug.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  b               1    wreg     unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  b               1    0[COMRAM] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;		None               void
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4659 ;;      Params:         0       0       0       0       0
  4660 ;;      Locals:         1       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0
  4662 ;;      Totals:         1       0       0       0       0
  4663 ;;Total ram usage:        1 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    6
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_debugNum
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text28
  4674  0018C2                     __ptext28:
  4675                           	opt stack 0
  4676  0018C2                     _resetDBG:
  4677                           	opt stack 17
  4678                           
  4679                           ;incstack = 0
  4680                           ;resetDBG@b stored from wreg
  4681  0018C2  CFE8 F001          	movff	wreg,resetDBG@b
  4682                           
  4683                           ;debug.c: 27: switch(b) {
  4684  0018C6  D00A               	goto	i1l1828
  4685  0018C8                     i1l378:
  4686                           
  4687                           ;debug.c: 29: LATBbits.LATB0 = 0;
  4688  0018C8  908A               	bcf	3978,0,c	;volatile
  4689                           
  4690                           ;debug.c: 30: break;
  4691  0018CA  0012               	return	
  4692  0018CC                     i1l380:
  4693                           
  4694                           ;debug.c: 32: LATBbits.LATB1 = 0;
  4695  0018CC  928A               	bcf	3978,1,c	;volatile
  4696                           
  4697                           ;debug.c: 33: break;
  4698  0018CE  0012               	return	
  4699  0018D0                     i1l381:
  4700                           
  4701                           ;debug.c: 35: LATBbits.LATB2 = 0;
  4702  0018D0  948A               	bcf	3978,2,c	;volatile
  4703                           
  4704                           ;debug.c: 36: break;
  4705  0018D2  0012               	return	
  4706  0018D4                     i1l382:
  4707                           
  4708                           ;debug.c: 38: LATBbits.LATB3 = 0;
  4709  0018D4  968A               	bcf	3978,3,c	;volatile
  4710                           
  4711                           ;debug.c: 39: break;
  4712  0018D6  0012               	return	
  4713  0018D8                     i1l383:
  4714                           
  4715                           ;debug.c: 41: LATBbits.LATB4 = 0;
  4716  0018D8  988A               	bcf	3978,4,c	;volatile
  4717                           
  4718                           ;debug.c: 42: break;
  4719  0018DA  0012               	return	
  4720  0018DC                     i1l1828:
  4721  0018DC  5001               	movf	resetDBG@b,w,c
  4722                           
  4723                           ; Switch size 1, requested type "space"
  4724                           ; Number of cases is 5, Range of values is 0 to 4
  4725                           ; switch strategies available:
  4726                           ; Name         Instructions Cycles
  4727                           ; simple_byte           16     9 (average)
  4728                           ;	Chosen strategy is simple_byte
  4729  0018DE  0A00               	xorlw	0	; case 0
  4730  0018E0  B4D8               	btfsc	status,2,c
  4731  0018E2  D7F2               	goto	i1l378
  4732  0018E4  0A01               	xorlw	1	; case 1
  4733  0018E6  B4D8               	btfsc	status,2,c
  4734  0018E8  D7F1               	goto	i1l380
  4735  0018EA  0A03               	xorlw	3	; case 2
  4736  0018EC  B4D8               	btfsc	status,2,c
  4737  0018EE  D7F0               	goto	i1l381
  4738  0018F0  0A01               	xorlw	1	; case 3
  4739  0018F2  B4D8               	btfsc	status,2,c
  4740  0018F4  D7EF               	goto	i1l382
  4741  0018F6  0A07               	xorlw	7	; case 4
  4742  0018F8  A4D8               	btfss	status,2,c
  4743  0018FA  0012               	return	
  4744  0018FC  D7ED               	goto	i1l383
  4745  0018FE                     __end_of_resetDBG:
  4746                           	opt stack 0
  4747                           pclatu	equ	0xFFB
  4748                           pclath	equ	0xFFA
  4749                           tblptru	equ	0xFF8
  4750                           tblptrh	equ	0xFF7
  4751                           tblptrl	equ	0xFF6
  4752                           tablat	equ	0xFF5
  4753                           prodh	equ	0xFF4
  4754                           prodl	equ	0xFF3
  4755                           intcon	equ	0xFF2
  4756                           postinc0	equ	0xFEE
  4757                           fsr0h	equ	0xFEA
  4758                           fsr0l	equ	0xFE9
  4759                           wreg	equ	0xFE8
  4760                           indf1	equ	0xFE7
  4761                           postdec1	equ	0xFE5
  4762                           fsr1h	equ	0xFE2
  4763                           fsr1l	equ	0xFE1
  4764                           bsr	equ	0xFE0
  4765                           indf2	equ	0xFDF
  4766                           fsr2h	equ	0xFDA
  4767                           fsr2l	equ	0xFD9
  4768                           status	equ	0xFD8
  4769                           
  4770 ;; *************** function _addBuffer *****************
  4771 ;; Defined at:
  4772 ;;		line 15 in file "../src/my_adc.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  data            1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  data            1    0[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;		None               void
  4779 ;; Registers used:
  4780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4786 ;;      Params:         0       0       0       0       0
  4787 ;;      Locals:         1       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0
  4789 ;;      Totals:         1       0       0       0       0
  4790 ;;Total ram usage:        1 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    6
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_adc_int_handler
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text29
  4801  001B0A                     __ptext29:
  4802                           	opt stack 0
  4803  001B0A                     _addBuffer:
  4804                           	opt stack 18
  4805                           
  4806                           ;incstack = 0
  4807                           ;addBuffer@data stored from wreg
  4808  001B0A  CFE8 F001          	movff	wreg,addBuffer@data
  4809                           
  4810                           ;my_adc.c: 16: if(count < 7)
  4811  001B0E  0E07               	movlw	7
  4812  001B10  5C46               	subwf	_count,w,c
  4813  001B12  B0D8               	btfsc	status,0,c
  4814  001B14  0012               	return	
  4815                           
  4816                           ;my_adc.c: 17: ADCBuffer[count++] = data;
  4817  001B16  5046               	movf	_count,w,c
  4818  001B18  0D01               	mullw	1
  4819  001B1A  0E48               	movlw	low _ADCBuffer
  4820  001B1C  24F3               	addwf	prodl,w,c
  4821  001B1E  6ED9               	movwf	fsr2l,c
  4822  001B20  0E00               	movlw	high _ADCBuffer
  4823  001B22  20F4               	addwfc	prodh,w,c
  4824  001B24  6EDA               	movwf	fsr2h,c
  4825  001B26  C001  FFDF         	movff	addBuffer@data,indf2
  4826  001B2A  2A46               	incf	_count,f,c
  4827  001B2C  0012               	return	
  4828  001B2E                     __end_of_addBuffer:
  4829                           	opt stack 0
  4830                           pclatu	equ	0xFFB
  4831                           pclath	equ	0xFFA
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           postinc0	equ	0xFEE
  4840                           fsr0h	equ	0xFEA
  4841                           fsr0l	equ	0xFE9
  4842                           wreg	equ	0xFE8
  4843                           indf1	equ	0xFE7
  4844                           postdec1	equ	0xFE5
  4845                           fsr1h	equ	0xFE2
  4846                           fsr1l	equ	0xFE1
  4847                           bsr	equ	0xFE0
  4848                           indf2	equ	0xFDF
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _ToMainHigh_sendmsg *****************
  4854 ;; Defined at:
  4855 ;;		line 127 in file "../src/messages.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  length          1    wreg     unsigned char 
  4858 ;;  msgtype         1   22[COMRAM] unsigned char 
  4859 ;;  data            2   23[COMRAM] PTR void 
  4860 ;;		 -> ADCBuffer(5), reqADData@buf(10), i2c_int_handler@error_buf(3), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  length          1   25[COMRAM] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      char 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4872 ;;      Params:         3       0       0       0       0
  4873 ;;      Locals:         1       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0
  4875 ;;      Totals:         4       0       0       0       0
  4876 ;;Total ram usage:        4 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    8
  4879 ;; This function calls:
  4880 ;;		_send_msg
  4881 ;; This function is called by:
  4882 ;;		_adc_int_handler
  4883 ;;		_reqADData
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text30
  4888  001AE4                     __ptext30:
  4889                           	opt stack 0
  4890  001AE4                     _ToMainHigh_sendmsg:
  4891                           	opt stack 16
  4892                           
  4893                           ;incstack = 0
  4894                           ;ToMainHigh_sendmsg@length stored from wreg
  4895  001AE4  CFE8 F01A          	movff	wreg,ToMainHigh_sendmsg@length
  4896                           
  4897                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  4898                           ;	Return value of _ToMainHigh_sendmsg is never used
  4899  001AE8  0101               	movlb	1	; () banked
  4900  001AEA  0E01               	movlw	high _ToMainHigh_MQ
  4901  001AEC  6E0C               	movwf	send_msg@qptr+1,c
  4902  001AEE  0101               	movlb	1	; () banked
  4903  001AF0  0E02               	movlw	low _ToMainHigh_MQ
  4904  001AF2  6E0B               	movwf	send_msg@qptr,c
  4905  001AF4  C01A  F00D         	movff	ToMainHigh_sendmsg@length,send_msg@length
  4906  001AF8  C017  F00E         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  4907  001AFC  C019  F010         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  4908  001B00  C018  F00F         	movff	ToMainHigh_sendmsg@data,send_msg@data
  4909  001B04  ECB1  F007         	call	_send_msg	;wreg free
  4910  001B08  0012               	return	
  4911  001B0A                     __end_of_ToMainHigh_sendmsg:
  4912                           	opt stack 0
  4913                           pclatu	equ	0xFFB
  4914                           pclath	equ	0xFFA
  4915                           tblptru	equ	0xFF8
  4916                           tblptrh	equ	0xFF7
  4917                           tblptrl	equ	0xFF6
  4918                           tablat	equ	0xFF5
  4919                           prodh	equ	0xFF4
  4920                           prodl	equ	0xFF3
  4921                           intcon	equ	0xFF2
  4922                           postinc0	equ	0xFEE
  4923                           fsr0h	equ	0xFEA
  4924                           fsr0l	equ	0xFE9
  4925                           wreg	equ	0xFE8
  4926                           indf1	equ	0xFE7
  4927                           postdec1	equ	0xFE5
  4928                           fsr1h	equ	0xFE2
  4929                           fsr1l	equ	0xFE1
  4930                           bsr	equ	0xFE0
  4931                           indf2	equ	0xFDF
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function _send_msg *****************
  4937 ;; Defined at:
  4938 ;;		line 25 in file "../src/messages.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4941 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4942 ;;  length          1   12[COMRAM] unsigned char 
  4943 ;;  msgtype         1   13[COMRAM] unsigned char 
  4944 ;;  data            2   14[COMRAM] PTR void 
  4945 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  4948 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4949 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4950 ;;  tlength         2   17[COMRAM] unsigned int 
  4951 ;;  slot            1   19[COMRAM] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      char 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4961 ;;      Params:         6       0       0       0       0
  4962 ;;      Locals:         5       0       0       0       0
  4963 ;;      Temps:          1       0       0       0       0
  4964 ;;      Totals:        12       0       0       0       0
  4965 ;;Total ram usage:       12 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    7
  4968 ;; This function calls:
  4969 ;;		i1_memcpy
  4970 ;; This function is called by:
  4971 ;;		_ToMainHigh_sendmsg
  4972 ;;		_ToMainLow_sendmsg
  4973 ;;		_FromMainLow_sendmsg
  4974 ;;		_FromMainHigh_sendmsg
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text31
  4979  000F62                     __ptext31:
  4980                           	opt stack 0
  4981  000F62                     _send_msg:
  4982                           	opt stack 16
  4983                           
  4984                           ;messages.c: 26: unsigned char slot;
  4985                           ;messages.c: 28: msg *qmsg;
  4986                           ;messages.c: 29: size_t tlength = length;
  4987                           
  4988                           ;incstack = 0
  4989  000F62  C00D  F012         	movff	send_msg@length,send_msg@tlength
  4990  000F66  6A13               	clrf	send_msg@tlength+1,c
  4991                           
  4992                           ;messages.c: 39: slot = qptr->cur_write_ind;
  4993  000F68  EE20 F034          	lfsr	2,52
  4994  000F6C  500B               	movf	send_msg@qptr,w,c
  4995  000F6E  26D9               	addwf	fsr2l,f,c
  4996  000F70  500C               	movf	send_msg@qptr+1,w,c
  4997  000F72  22DA               	addwfc	fsr2h,f,c
  4998  000F74  50DF               	movf	indf2,w,c
  4999  000F76  6E14               	movwf	send_msg@slot,c
  5000                           
  5001                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  5002  000F78  5014               	movf	send_msg@slot,w,c
  5003  000F7A  0D0D               	mullw	13
  5004  000F7C  50F3               	movf	prodl,w,c
  5005  000F7E  240B               	addwf	send_msg@qptr,w,c
  5006  000F80  6E15               	movwf	send_msg@qmsg,c
  5007  000F82  50F4               	movf	prodh,w,c
  5008  000F84  200C               	addwfc	send_msg@qptr+1,w,c
  5009  000F86  6E16               	movwf	send_msg@qmsg+1,c
  5010                           
  5011                           ;messages.c: 42: if (qmsg->full != 0) {
  5012  000F88  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5013  000F8C  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5014  000F90  50DF               	movf	indf2,w,c
  5015  000F92  B4D8               	btfsc	status,2,c
  5016  000F94  D002               	goto	i1l3856
  5017                           
  5018                           ;messages.c: 43: return (-1);
  5019  000F96  0EFF               	movlw	255
  5020  000F98  0012               	return	
  5021  000F9A                     i1l3856:
  5022                           
  5023                           ;messages.c: 44: }
  5024                           ;messages.c: 47: qmsg->length = length;
  5025  000F9A  EE20 F001          	lfsr	2,1
  5026  000F9E  5015               	movf	send_msg@qmsg,w,c
  5027  000FA0  26D9               	addwf	fsr2l,f,c
  5028  000FA2  5016               	movf	send_msg@qmsg+1,w,c
  5029  000FA4  22DA               	addwfc	fsr2h,f,c
  5030  000FA6  C00D  FFDF         	movff	send_msg@length,indf2
  5031                           
  5032                           ;messages.c: 48: qmsg->msgtype = msgtype;
  5033  000FAA  EE20 F002          	lfsr	2,2
  5034  000FAE  5015               	movf	send_msg@qmsg,w,c
  5035  000FB0  26D9               	addwf	fsr2l,f,c
  5036  000FB2  5016               	movf	send_msg@qmsg+1,w,c
  5037  000FB4  22DA               	addwfc	fsr2h,f,c
  5038  000FB6  C00E  FFDF         	movff	send_msg@msgtype,indf2
  5039                           
  5040                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  5041  000FBA  0E03               	movlw	3
  5042  000FBC  2415               	addwf	send_msg@qmsg,w,c
  5043  000FBE  6E01               	movwf	i1memcpy@d1,c
  5044  000FC0  0E00               	movlw	0
  5045  000FC2  2016               	addwfc	send_msg@qmsg+1,w,c
  5046  000FC4  6E02               	movwf	i1memcpy@d1+1,c
  5047  000FC6  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  5048  000FCA  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  5049  000FCE  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  5050  000FD2  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  5051  000FD6  ECE4  F00B         	call	i1_memcpy	;wreg free
  5052                           
  5053                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5054  000FDA  EE20 F034          	lfsr	2,52
  5055  000FDE  500B               	movf	send_msg@qptr,w,c
  5056  000FE0  26D9               	addwf	fsr2l,f,c
  5057  000FE2  500C               	movf	send_msg@qptr+1,w,c
  5058  000FE4  22DA               	addwfc	fsr2h,f,c
  5059  000FE6  EE10 F034          	lfsr	1,52
  5060  000FEA  500B               	movf	send_msg@qptr,w,c
  5061  000FEC  26E1               	addwf	fsr1l,f,c
  5062  000FEE  500C               	movf	send_msg@qptr+1,w,c
  5063  000FF0  22E2               	addwfc	fsr1h,f,c
  5064  000FF2  50E7               	movf	indf1,w,c
  5065  000FF4  6E11               	movwf	??_send_msg& (0+255),c
  5066  000FF6  2811               	incf	??_send_msg,w,c
  5067  000FF8  0B03               	andlw	3
  5068  000FFA  6EDF               	movwf	indf2,c
  5069                           
  5070                           ;messages.c: 60: qmsg->full = 1;
  5071  000FFC  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5072  001000  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5073  001004  0E01               	movlw	1
  5074  001006  6EDF               	movwf	indf2,c
  5075                           
  5076                           ;messages.c: 61: return (1);
  5077  001008  0E01               	movlw	1
  5078  00100A  0012               	return	
  5079  00100C                     __end_of_send_msg:
  5080                           	opt stack 0
  5081                           pclatu	equ	0xFFB
  5082                           pclath	equ	0xFFA
  5083                           tblptru	equ	0xFF8
  5084                           tblptrh	equ	0xFF7
  5085                           tblptrl	equ	0xFF6
  5086                           tablat	equ	0xFF5
  5087                           prodh	equ	0xFF4
  5088                           prodl	equ	0xFF3
  5089                           intcon	equ	0xFF2
  5090                           postinc0	equ	0xFEE
  5091                           fsr0h	equ	0xFEA
  5092                           fsr0l	equ	0xFE9
  5093                           wreg	equ	0xFE8
  5094                           indf1	equ	0xFE7
  5095                           postdec1	equ	0xFE5
  5096                           fsr1h	equ	0xFE2
  5097                           fsr1l	equ	0xFE1
  5098                           bsr	equ	0xFE0
  5099                           indf2	equ	0xFDF
  5100                           fsr2h	equ	0xFDA
  5101                           fsr2l	equ	0xFD9
  5102                           status	equ	0xFD8
  5103                           
  5104 ;; *************** function i1_memcpy *****************
  5105 ;; Defined at:
  5106 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  d1              2    0[COMRAM] PTR void 
  5109 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5110 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5111 ;;		 -> main@msgbuffer(11), 
  5112 ;;  s1              2    2[COMRAM] PTR const void 
  5113 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5114 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5115 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5116 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5117 ;;  n               2    4[COMRAM] unsigned int 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5120 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5121 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5122 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  5123 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5124 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5125 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5126 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5127 ;;		 -> main@msgbuffer(11), 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  2    0[COMRAM] PTR void 
  5130 ;; Registers used:
  5131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5137 ;;      Params:         6       0       0       0       0
  5138 ;;      Locals:         4       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0
  5140 ;;      Totals:        10       0       0       0       0
  5141 ;;Total ram usage:       10 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    6
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_send_msg
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text32
  5152  0017C8                     __ptext32:
  5153                           	opt stack 0
  5154  0017C8                     i1_memcpy:
  5155                           	opt stack 16
  5156                           
  5157                           ;incstack = 0
  5158  0017C8  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5159  0017CC  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5160  0017D0  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5161  0017D4  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5162  0017D8  D00E               	goto	i1l3832
  5163  0017DA                     i1l3826:
  5164  0017DA  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5165  0017DE  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5166  0017E2  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5167  0017E6  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5168  0017EA  CFDF FFE7          	movff	indf2,indf1
  5169  0017EE  4A09               	infsnz	i1memcpy@s,f,c
  5170  0017F0  2A0A               	incf	i1memcpy@s+1,f,c
  5171  0017F2  4A07               	infsnz	i1memcpy@d,f,c
  5172  0017F4  2A08               	incf	i1memcpy@d+1,f,c
  5173  0017F6                     i1l3832:
  5174  0017F6  0605               	decf	i1memcpy@n,f,c
  5175  0017F8  A0D8               	btfss	status,0,c
  5176  0017FA  0606               	decf	i1memcpy@n+1,f,c
  5177  0017FC  2805               	incf	i1memcpy@n& (0+255),w,c
  5178  0017FE  B4D8               	btfsc	status,2,c
  5179  001800  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5180  001802  B4D8               	btfsc	status,2,c
  5181                           
  5182                           ;	Return value of i1_memcpy is never used
  5183  001804  0012               	return	
  5184  001806  D7E9               	goto	i1l3826
  5185  001808                     __end_ofi1_memcpy:
  5186                           	opt stack 0
  5187                           pclatu	equ	0xFFB
  5188                           pclath	equ	0xFFA
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           intcon	equ	0xFF2
  5196                           postinc0	equ	0xFEE
  5197                           fsr0h	equ	0xFEA
  5198                           fsr0l	equ	0xFE9
  5199                           wreg	equ	0xFE8
  5200                           indf1	equ	0xFE7
  5201                           postdec1	equ	0xFE5
  5202                           fsr1h	equ	0xFE2
  5203                           fsr1l	equ	0xFE1
  5204                           bsr	equ	0xFE0
  5205                           indf2	equ	0xFDF
  5206                           fsr2h	equ	0xFDA
  5207                           fsr2l	equ	0xFD9
  5208                           status	equ	0xFD8
  5209                           
  5210 ;; *************** function _ReadADC *****************
  5211 ;; Defined at:
  5212 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  2    0[COMRAM] int 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5226 ;;      Params:         2       0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0
  5229 ;;      Totals:         2       0       0       0       0
  5230 ;;Total ram usage:        2 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    6
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_adc_int_handler
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text33
  5241  001BC8                     __ptext33:
  5242                           	opt stack 0
  5243  001BC8                     _ReadADC:
  5244                           	opt stack 18
  5245                           
  5246                           ;incstack = 0
  5247  001BC8  50C4               	movf	4036,w,c	;volatile
  5248  001BCA  6E02               	movwf	?_ReadADC+1,c
  5249  001BCC  50C3               	movf	4035,w,c	;volatile
  5250  001BCE  6E01               	movwf	?_ReadADC,c
  5251  001BD0  0012               	return	
  5252  001BD2                     __end_of_ReadADC:
  5253                           	opt stack 0
  5254                           pclatu	equ	0xFFB
  5255                           pclath	equ	0xFFA
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           postinc0	equ	0xFEE
  5264                           fsr0h	equ	0xFEA
  5265                           fsr0l	equ	0xFE9
  5266                           wreg	equ	0xFE8
  5267                           indf1	equ	0xFE7
  5268                           postdec1	equ	0xFE5
  5269                           fsr1h	equ	0xFE2
  5270                           fsr1l	equ	0xFE1
  5271                           bsr	equ	0xFE0
  5272                           indf2	equ	0xFDF
  5273                           fsr2h	equ	0xFDA
  5274                           fsr2l	equ	0xFD9
  5275                           status	equ	0xFD8
  5276                           
  5277 ;; *************** function _InterruptHandlerHigh *****************
  5278 ;; Defined at:
  5279 ;;		line 85 in file "../src/interrupts.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;		None               void
  5286 ;; Registers used:
  5287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5293 ;;      Params:         0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0
  5295 ;;      Temps:          0       0      14       0       0
  5296 ;;      Totals:         0       0      14       0       0
  5297 ;;Total ram usage:       14 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:    5
  5300 ;; This function calls:
  5301 ;;		_SleepIfOkay
  5302 ;;		_i2c_int_handler
  5303 ;;		_timer0_int_handler
  5304 ;; This function is called by:
  5305 ;;		Interrupt level 2
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	intcode
  5310  000008                     __pintcode:
  5311                           	opt stack 0
  5312  000008                     _InterruptHandlerHigh:
  5313                           	opt stack 16
  5314                           
  5315                           ;incstack = 0
  5316  000008  CFFA F138          	movff	pclath,??_InterruptHandlerHigh
  5317  00000C  CFFB F139          	movff	pclatu,??_InterruptHandlerHigh+1
  5318  000010  EF9C  F008         	goto	int_func
  5319                           pclatu	equ	0xFFB
  5320                           pclath	equ	0xFFA
  5321                           tblptru	equ	0xFF8
  5322                           tblptrh	equ	0xFF7
  5323                           tblptrl	equ	0xFF6
  5324                           tablat	equ	0xFF5
  5325                           prodh	equ	0xFF4
  5326                           prodl	equ	0xFF3
  5327                           intcon	equ	0xFF2
  5328                           postinc0	equ	0xFEE
  5329                           fsr0h	equ	0xFEA
  5330                           fsr0l	equ	0xFE9
  5331                           wreg	equ	0xFE8
  5332                           indf1	equ	0xFE7
  5333                           postdec1	equ	0xFE5
  5334                           fsr1h	equ	0xFE2
  5335                           fsr1l	equ	0xFE1
  5336                           bsr	equ	0xFE0
  5337                           indf2	equ	0xFDF
  5338                           fsr2h	equ	0xFDA
  5339                           fsr2l	equ	0xFD9
  5340                           status	equ	0xFD8
  5341                           
  5342                           	psect	intcode_body
  5343  001138                     __pintcode_body:
  5344                           	opt stack 16
  5345  001138                     int_func:
  5346                           	opt stack 16
  5347  001138  CFE9 F13A          	movff	fsr0l,??_InterruptHandlerHigh+2
  5348  00113C  CFEA F13B          	movff	fsr0h,??_InterruptHandlerHigh+3
  5349  001140  CFE1 F13C          	movff	fsr1l,??_InterruptHandlerHigh+4
  5350  001144  CFE2 F13D          	movff	fsr1h,??_InterruptHandlerHigh+5
  5351  001148  CFD9 F13E          	movff	fsr2l,??_InterruptHandlerHigh+6
  5352  00114C  CFDA F13F          	movff	fsr2h,??_InterruptHandlerHigh+7
  5353  001150  CFF3 F140          	movff	prodl,??_InterruptHandlerHigh+8
  5354  001154  CFF4 F141          	movff	prodh,??_InterruptHandlerHigh+9
  5355  001158  CFF6 F142          	movff	tblptrl,??_InterruptHandlerHigh+10
  5356  00115C  CFF7 F143          	movff	tblptrh,??_InterruptHandlerHigh+11
  5357  001160  CFF8 F144          	movff	tblptru,??_InterruptHandlerHigh+12
  5358  001164  CFF5 F145          	movff	tablat,??_InterruptHandlerHigh+13
  5359                           
  5360                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  5361  001168  A69E               	btfss	3998,3,c	;volatile
  5362  00116A  D003               	goto	i2l3186
  5363                           
  5364                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  5365  00116C  969E               	bcf	3998,3,c	;volatile
  5366                           
  5367                           ;interrupts.c: 94: i2c_int_handler();
  5368  00116E  EC58  F000         	call	_i2c_int_handler	;wreg free
  5369  001172                     i2l3186:
  5370                           
  5371                           ;interrupts.c: 95: }
  5372                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  5373  001172  A4F2               	btfss	intcon,2,c	;volatile
  5374  001174  D003               	goto	i2l3192
  5375                           
  5376                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  5377  001176  94F2               	bcf	intcon,2,c	;volatile
  5378                           
  5379                           ;interrupts.c: 101: timer0_int_handler();
  5380  001178  ECA9  F00D         	call	_timer0_int_handler	;wreg free
  5381  00117C                     i2l3192:
  5382                           
  5383                           ;interrupts.c: 102: }
  5384                           ;interrupts.c: 111: SleepIfOkay();
  5385  00117C  EC36  F00B         	call	_SleepIfOkay	;wreg free
  5386  001180  C145  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5387  001184  C144  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5388  001188  C143  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5389  00118C  C142  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5390  001190  C141  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5391  001194  C140  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5392  001198  C13F  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5393  00119C  C13E  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5394  0011A0  C13D  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5395  0011A4  C13C  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5396  0011A8  C13B  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5397  0011AC  C13A  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5398  0011B0  C139  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5399  0011B4  C138  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5400  0011B8  0011               	retfie		f
  5401  0011BA                     __end_of_InterruptHandlerHigh:
  5402                           	opt stack 0
  5403                           pclatu	equ	0xFFB
  5404                           pclath	equ	0xFFA
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           prodh	equ	0xFF4
  5410                           prodl	equ	0xFF3
  5411                           intcon	equ	0xFF2
  5412                           postinc0	equ	0xFEE
  5413                           fsr0h	equ	0xFEA
  5414                           fsr0l	equ	0xFE9
  5415                           wreg	equ	0xFE8
  5416                           indf1	equ	0xFE7
  5417                           postdec1	equ	0xFE5
  5418                           fsr1h	equ	0xFE2
  5419                           fsr1l	equ	0xFE1
  5420                           bsr	equ	0xFE0
  5421                           indf2	equ	0xFDF
  5422                           fsr2h	equ	0xFDA
  5423                           fsr2l	equ	0xFD9
  5424                           status	equ	0xFD8
  5425                           
  5426 ;; *************** function _timer0_int_handler *****************
  5427 ;; Defined at:
  5428 ;;		line 17 in file "../src/user_interrupts.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;		None
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;		None
  5433 ;; Return value:  Size  Location     Type
  5434 ;;		None               void
  5435 ;; Registers used:
  5436 ;;		wreg, status,2, status,0, cstack
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5442 ;;      Params:         0       0       0       0       0
  5443 ;;      Locals:         0       0       0       0       0
  5444 ;;      Temps:          0       0       0       0       0
  5445 ;;      Totals:         0       0       0       0       0
  5446 ;;Total ram usage:        0 bytes
  5447 ;; Hardware stack levels used:    1
  5448 ;; Hardware stack levels required when called:    2
  5449 ;; This function calls:
  5450 ;;		_WriteTimer0
  5451 ;;		i2_debugNum
  5452 ;; This function is called by:
  5453 ;;		_InterruptHandlerHigh
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text35
  5458  001B52                     __ptext35:
  5459                           	opt stack 0
  5460  001B52                     _timer0_int_handler:
  5461                           	opt stack 18
  5462                           
  5463                           ;user_interrupts.c: 18: debugNum(1);
  5464                           
  5465                           ;incstack = 0
  5466  001B52  0E00               	movlw	0
  5467  001B54  6E31               	movwf	i2debugNum@num+1,c
  5468  001B56  0E01               	movlw	1
  5469  001B58  6E30               	movwf	i2debugNum@num,c
  5470  001B5A  ECBE  F00A         	call	i2_debugNum	;wreg free
  5471                           
  5472                           ;user_interrupts.c: 21: ADCON0bits.GO = 1;
  5473  001B5E  82C2               	bsf	4034,1,c	;volatile
  5474                           
  5475                           ;user_interrupts.c: 31: WriteTimer0(0xFFFF-375);
  5476  001B60  0EFE               	movlw	254
  5477  001B62  6E30               	movwf	WriteTimer0@timer0+1,c
  5478  001B64  0E88               	movlw	136
  5479  001B66  6E2F               	movwf	WriteTimer0@timer0,c
  5480  001B68  ECD5  F00D         	call	_WriteTimer0	;wreg free
  5481  001B6C  0012               	return	
  5482  001B6E                     __end_of_timer0_int_handler:
  5483                           	opt stack 0
  5484                           pclatu	equ	0xFFB
  5485                           pclath	equ	0xFFA
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           prodh	equ	0xFF4
  5491                           prodl	equ	0xFF3
  5492                           intcon	equ	0xFF2
  5493                           postinc0	equ	0xFEE
  5494                           fsr0h	equ	0xFEA
  5495                           fsr0l	equ	0xFE9
  5496                           wreg	equ	0xFE8
  5497                           indf1	equ	0xFE7
  5498                           postdec1	equ	0xFE5
  5499                           fsr1h	equ	0xFE2
  5500                           fsr1l	equ	0xFE1
  5501                           bsr	equ	0xFE0
  5502                           indf2	equ	0xFDF
  5503                           fsr2h	equ	0xFDA
  5504                           fsr2l	equ	0xFD9
  5505                           status	equ	0xFD8
  5506                           
  5507 ;; *************** function i2_debugNum *****************
  5508 ;; Defined at:
  5509 ;;		line 69 in file "../src/debug.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  num             2   47[COMRAM] int 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;		None
  5514 ;; Return value:  Size  Location     Type
  5515 ;;		None               void
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5523 ;;      Params:         2       0       0       0       0
  5524 ;;      Locals:         0       0       0       0       0
  5525 ;;      Temps:          0       0       0       0       0
  5526 ;;      Totals:         2       0       0       0       0
  5527 ;;Total ram usage:        2 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    1
  5530 ;; This function calls:
  5531 ;;		i2_resetDBG
  5532 ;;		i2_setDBG
  5533 ;; This function is called by:
  5534 ;;		_timer0_int_handler
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text36
  5539  00157C                     __ptext36:
  5540                           	opt stack 0
  5541  00157C                     i2_debugNum:
  5542                           	opt stack 18
  5543                           
  5544                           ;debug.c: 70: if(num & 1){
  5545                           
  5546                           ;incstack = 0
  5547  00157C  A030               	btfss	i2debugNum@num,0,c
  5548  00157E  D006               	goto	i2l3044
  5549                           
  5550                           ;debug.c: 71: setDBG(DBG1);
  5551  001580  0E00               	movlw	0
  5552  001582  EC7F  F00C         	call	i2_setDBG
  5553                           
  5554                           ;debug.c: 72: resetDBG(DBG1);
  5555  001586  0E00               	movlw	0
  5556  001588  EC9D  F00C         	call	i2_resetDBG
  5557  00158C                     i2l3044:
  5558                           
  5559                           ;debug.c: 73: }
  5560                           ;debug.c: 74: if(num & 2){
  5561  00158C  A230               	btfss	i2debugNum@num,1,c
  5562  00158E  D006               	goto	i2l3048
  5563                           
  5564                           ;debug.c: 75: setDBG(DBG2);
  5565  001590  0E01               	movlw	1
  5566  001592  EC7F  F00C         	call	i2_setDBG
  5567                           
  5568                           ;debug.c: 76: resetDBG(DBG2);
  5569  001596  0E01               	movlw	1
  5570  001598  EC9D  F00C         	call	i2_resetDBG
  5571  00159C                     i2l3048:
  5572                           
  5573                           ;debug.c: 77: }
  5574                           ;debug.c: 78: if(num & 4){
  5575  00159C  A430               	btfss	i2debugNum@num,2,c
  5576  00159E  D006               	goto	i2l3052
  5577                           
  5578                           ;debug.c: 79: setDBG(DBG3);
  5579  0015A0  0E02               	movlw	2
  5580  0015A2  EC7F  F00C         	call	i2_setDBG
  5581                           
  5582                           ;debug.c: 80: resetDBG(DBG3);
  5583  0015A6  0E02               	movlw	2
  5584  0015A8  EC9D  F00C         	call	i2_resetDBG
  5585  0015AC                     i2l3052:
  5586                           
  5587                           ;debug.c: 81: }
  5588                           ;debug.c: 82: if(num & 8){
  5589  0015AC  A630               	btfss	i2debugNum@num,3,c
  5590  0015AE  D006               	goto	i2l3056
  5591                           
  5592                           ;debug.c: 83: setDBG(DBG4);
  5593  0015B0  0E03               	movlw	3
  5594  0015B2  EC7F  F00C         	call	i2_setDBG
  5595                           
  5596                           ;debug.c: 84: resetDBG(DBG4);
  5597  0015B6  0E03               	movlw	3
  5598  0015B8  EC9D  F00C         	call	i2_resetDBG
  5599  0015BC                     i2l3056:
  5600                           
  5601                           ;debug.c: 85: }
  5602                           ;debug.c: 86: if(num & 16){
  5603  0015BC  A830               	btfss	i2debugNum@num,4,c
  5604  0015BE  0012               	return	
  5605                           
  5606                           ;debug.c: 87: setDBG(DBG5);
  5607  0015C0  0E04               	movlw	4
  5608  0015C2  EC7F  F00C         	call	i2_setDBG
  5609                           
  5610                           ;debug.c: 88: resetDBG(DBG5);
  5611  0015C6  0E04               	movlw	4
  5612  0015C8  EC9D  F00C         	call	i2_resetDBG
  5613  0015CC  0012               	return	
  5614  0015CE                     __end_ofi2_debugNum:
  5615                           	opt stack 0
  5616                           pclatu	equ	0xFFB
  5617                           pclath	equ	0xFFA
  5618                           tblptru	equ	0xFF8
  5619                           tblptrh	equ	0xFF7
  5620                           tblptrl	equ	0xFF6
  5621                           tablat	equ	0xFF5
  5622                           prodh	equ	0xFF4
  5623                           prodl	equ	0xFF3
  5624                           intcon	equ	0xFF2
  5625                           postinc0	equ	0xFEE
  5626                           fsr0h	equ	0xFEA
  5627                           fsr0l	equ	0xFE9
  5628                           wreg	equ	0xFE8
  5629                           indf1	equ	0xFE7
  5630                           postdec1	equ	0xFE5
  5631                           fsr1h	equ	0xFE2
  5632                           fsr1l	equ	0xFE1
  5633                           bsr	equ	0xFE0
  5634                           indf2	equ	0xFDF
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function i2_setDBG *****************
  5640 ;; Defined at:
  5641 ;;		line 4 in file "../src/debug.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  b               1    wreg     unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  b               1   46[COMRAM] unsigned char 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;		None               void
  5648 ;; Registers used:
  5649 ;;		wreg, status,2, status,0
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5655 ;;      Params:         0       0       0       0       0
  5656 ;;      Locals:         1       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0
  5658 ;;      Totals:         1       0       0       0       0
  5659 ;;Total ram usage:        1 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		i2_debugNum
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text37
  5669  0018FE                     __ptext37:
  5670                           	opt stack 0
  5671  0018FE                     i2_setDBG:
  5672                           	opt stack 18
  5673                           
  5674                           ;incstack = 0
  5675                           ;i2setDBG@b stored from wreg
  5676  0018FE  CFE8 F02F          	movff	wreg,i2setDBG@b
  5677                           
  5678                           ;debug.c: 5: switch(b) {
  5679  001902  D00A               	goto	i2l3032
  5680  001904                     i2l367:
  5681                           
  5682                           ;debug.c: 7: LATBbits.LATB0 = 1;
  5683  001904  808A               	bsf	3978,0,c	;volatile
  5684                           
  5685                           ;debug.c: 8: break;
  5686  001906  0012               	return	
  5687  001908                     i2l369:
  5688                           
  5689                           ;debug.c: 10: LATBbits.LATB1 = 1;
  5690  001908  828A               	bsf	3978,1,c	;volatile
  5691                           
  5692                           ;debug.c: 11: break;
  5693  00190A  0012               	return	
  5694  00190C                     i2l370:
  5695                           
  5696                           ;debug.c: 13: LATBbits.LATB2 = 1;
  5697  00190C  848A               	bsf	3978,2,c	;volatile
  5698                           
  5699                           ;debug.c: 14: break;
  5700  00190E  0012               	return	
  5701  001910                     i2l371:
  5702                           
  5703                           ;debug.c: 16: LATBbits.LATB3 = 1;
  5704  001910  868A               	bsf	3978,3,c	;volatile
  5705                           
  5706                           ;debug.c: 17: break;
  5707  001912  0012               	return	
  5708  001914                     i2l372:
  5709                           
  5710                           ;debug.c: 19: LATBbits.LATB4 = 1;
  5711  001914  888A               	bsf	3978,4,c	;volatile
  5712                           
  5713                           ;debug.c: 20: break;
  5714  001916  0012               	return	
  5715  001918                     i2l3032:
  5716  001918  502F               	movf	i2setDBG@b,w,c
  5717                           
  5718                           ; Switch size 1, requested type "space"
  5719                           ; Number of cases is 5, Range of values is 0 to 4
  5720                           ; switch strategies available:
  5721                           ; Name         Instructions Cycles
  5722                           ; simple_byte           16     9 (average)
  5723                           ;	Chosen strategy is simple_byte
  5724  00191A  0A00               	xorlw	0	; case 0
  5725  00191C  B4D8               	btfsc	status,2,c
  5726  00191E  D7F2               	goto	i2l367
  5727  001920  0A01               	xorlw	1	; case 1
  5728  001922  B4D8               	btfsc	status,2,c
  5729  001924  D7F1               	goto	i2l369
  5730  001926  0A03               	xorlw	3	; case 2
  5731  001928  B4D8               	btfsc	status,2,c
  5732  00192A  D7F0               	goto	i2l370
  5733  00192C  0A01               	xorlw	1	; case 3
  5734  00192E  B4D8               	btfsc	status,2,c
  5735  001930  D7EF               	goto	i2l371
  5736  001932  0A07               	xorlw	7	; case 4
  5737  001934  A4D8               	btfss	status,2,c
  5738  001936  0012               	return	
  5739  001938  D7ED               	goto	i2l372
  5740  00193A                     __end_ofi2_setDBG:
  5741                           	opt stack 0
  5742                           pclatu	equ	0xFFB
  5743                           pclath	equ	0xFFA
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           prodh	equ	0xFF4
  5749                           prodl	equ	0xFF3
  5750                           intcon	equ	0xFF2
  5751                           postinc0	equ	0xFEE
  5752                           fsr0h	equ	0xFEA
  5753                           fsr0l	equ	0xFE9
  5754                           wreg	equ	0xFE8
  5755                           indf1	equ	0xFE7
  5756                           postdec1	equ	0xFE5
  5757                           fsr1h	equ	0xFE2
  5758                           fsr1l	equ	0xFE1
  5759                           bsr	equ	0xFE0
  5760                           indf2	equ	0xFDF
  5761                           fsr2h	equ	0xFDA
  5762                           fsr2l	equ	0xFD9
  5763                           status	equ	0xFD8
  5764                           
  5765 ;; *************** function i2_resetDBG *****************
  5766 ;; Defined at:
  5767 ;;		line 26 in file "../src/debug.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  b               1    wreg     unsigned char 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  b               1   46[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;		None               void
  5774 ;; Registers used:
  5775 ;;		wreg, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5781 ;;      Params:         0       0       0       0       0
  5782 ;;      Locals:         1       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0
  5784 ;;      Totals:         1       0       0       0       0
  5785 ;;Total ram usage:        1 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		i2_debugNum
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text38
  5795  00193A                     __ptext38:
  5796                           	opt stack 0
  5797  00193A                     i2_resetDBG:
  5798                           	opt stack 18
  5799                           
  5800                           ;incstack = 0
  5801                           ;i2resetDBG@b stored from wreg
  5802  00193A  CFE8 F02F          	movff	wreg,i2resetDBG@b
  5803                           
  5804                           ;debug.c: 27: switch(b) {
  5805  00193E  D00A               	goto	i2l3038
  5806  001940                     i2l378:
  5807                           
  5808                           ;debug.c: 29: LATBbits.LATB0 = 0;
  5809  001940  908A               	bcf	3978,0,c	;volatile
  5810                           
  5811                           ;debug.c: 30: break;
  5812  001942  0012               	return	
  5813  001944                     i2l380:
  5814                           
  5815                           ;debug.c: 32: LATBbits.LATB1 = 0;
  5816  001944  928A               	bcf	3978,1,c	;volatile
  5817                           
  5818                           ;debug.c: 33: break;
  5819  001946  0012               	return	
  5820  001948                     i2l381:
  5821                           
  5822                           ;debug.c: 35: LATBbits.LATB2 = 0;
  5823  001948  948A               	bcf	3978,2,c	;volatile
  5824                           
  5825                           ;debug.c: 36: break;
  5826  00194A  0012               	return	
  5827  00194C                     i2l382:
  5828                           
  5829                           ;debug.c: 38: LATBbits.LATB3 = 0;
  5830  00194C  968A               	bcf	3978,3,c	;volatile
  5831                           
  5832                           ;debug.c: 39: break;
  5833  00194E  0012               	return	
  5834  001950                     i2l383:
  5835                           
  5836                           ;debug.c: 41: LATBbits.LATB4 = 0;
  5837  001950  988A               	bcf	3978,4,c	;volatile
  5838                           
  5839                           ;debug.c: 42: break;
  5840  001952  0012               	return	
  5841  001954                     i2l3038:
  5842  001954  502F               	movf	i2resetDBG@b,w,c
  5843                           
  5844                           ; Switch size 1, requested type "space"
  5845                           ; Number of cases is 5, Range of values is 0 to 4
  5846                           ; switch strategies available:
  5847                           ; Name         Instructions Cycles
  5848                           ; simple_byte           16     9 (average)
  5849                           ;	Chosen strategy is simple_byte
  5850  001956  0A00               	xorlw	0	; case 0
  5851  001958  B4D8               	btfsc	status,2,c
  5852  00195A  D7F2               	goto	i2l378
  5853  00195C  0A01               	xorlw	1	; case 1
  5854  00195E  B4D8               	btfsc	status,2,c
  5855  001960  D7F1               	goto	i2l380
  5856  001962  0A03               	xorlw	3	; case 2
  5857  001964  B4D8               	btfsc	status,2,c
  5858  001966  D7F0               	goto	i2l381
  5859  001968  0A01               	xorlw	1	; case 3
  5860  00196A  B4D8               	btfsc	status,2,c
  5861  00196C  D7EF               	goto	i2l382
  5862  00196E  0A07               	xorlw	7	; case 4
  5863  001970  A4D8               	btfss	status,2,c
  5864  001972  0012               	return	
  5865  001974  D7ED               	goto	i2l383
  5866  001976                     __end_ofi2_resetDBG:
  5867                           	opt stack 0
  5868                           pclatu	equ	0xFFB
  5869                           pclath	equ	0xFFA
  5870                           tblptru	equ	0xFF8
  5871                           tblptrh	equ	0xFF7
  5872                           tblptrl	equ	0xFF6
  5873                           tablat	equ	0xFF5
  5874                           prodh	equ	0xFF4
  5875                           prodl	equ	0xFF3
  5876                           intcon	equ	0xFF2
  5877                           postinc0	equ	0xFEE
  5878                           fsr0h	equ	0xFEA
  5879                           fsr0l	equ	0xFE9
  5880                           wreg	equ	0xFE8
  5881                           indf1	equ	0xFE7
  5882                           postdec1	equ	0xFE5
  5883                           fsr1h	equ	0xFE2
  5884                           fsr1l	equ	0xFE1
  5885                           bsr	equ	0xFE0
  5886                           indf2	equ	0xFDF
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function _WriteTimer0 *****************
  5892 ;; Defined at:
  5893 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  timer0          2   46[COMRAM] unsigned int 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;  timer           2   48[COMRAM] struct Timers
  5898 ;; Return value:  Size  Location     Type
  5899 ;;		None               void
  5900 ;; Registers used:
  5901 ;;		None
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5907 ;;      Params:         2       0       0       0       0
  5908 ;;      Locals:         2       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0
  5910 ;;      Totals:         4       0       0       0       0
  5911 ;;Total ram usage:        4 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_timer0_int_handler
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text39
  5921  001BAA                     __ptext39:
  5922                           	opt stack 0
  5923  001BAA                     _WriteTimer0:
  5924                           	opt stack 19
  5925                           
  5926                           ;incstack = 0
  5927  001BAA  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5928  001BAE  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5929  001BB2  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5930  001BB6  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5931  001BBA  0012               	return	
  5932  001BBC                     __end_of_WriteTimer0:
  5933                           	opt stack 0
  5934                           pclatu	equ	0xFFB
  5935                           pclath	equ	0xFFA
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           intcon	equ	0xFF2
  5943                           postinc0	equ	0xFEE
  5944                           fsr0h	equ	0xFEA
  5945                           fsr0l	equ	0xFE9
  5946                           wreg	equ	0xFE8
  5947                           indf1	equ	0xFE7
  5948                           postdec1	equ	0xFE5
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           bsr	equ	0xFE0
  5952                           indf2	equ	0xFDF
  5953                           fsr2h	equ	0xFDA
  5954                           fsr2l	equ	0xFD9
  5955                           status	equ	0xFD8
  5956                           
  5957 ;; *************** function _i2c_int_handler *****************
  5958 ;; Defined at:
  5959 ;;		line 107 in file "../src/my_i2c.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  error_buf       3  114[BANK0 ] unsigned char [3]
  5964 ;;  data_read       1  122[BANK0 ] unsigned char 
  5965 ;;  msg_ready       1  121[BANK0 ] unsigned char 
  5966 ;;  msg_to_send     1  120[BANK0 ] unsigned char 
  5967 ;;  i2c_data        1  119[BANK0 ] unsigned char 
  5968 ;;  overrun_erro    1  118[BANK0 ] unsigned char 
  5969 ;;  data_written    1  117[BANK0 ] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;		None               void
  5972 ;; Registers used:
  5973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5979 ;;      Params:         0       0       0       0       0
  5980 ;;      Locals:         0       9       0       0       0
  5981 ;;      Temps:          0       1       0       0       0
  5982 ;;      Totals:         0      10       0       0       0
  5983 ;;Total ram usage:       10 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    4
  5986 ;; This function calls:
  5987 ;;		_handle_start
  5988 ;;		_sendRequestedData
  5989 ;;		_setBrainReqData
  5990 ;;		i2_ToMainHigh_sendmsg
  5991 ;; This function is called by:
  5992 ;;		_InterruptHandlerHigh
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text40
  5997  0000B0                     __ptext40:
  5998                           	opt stack 0
  5999  0000B0                     _i2c_int_handler:
  6000                           	opt stack 16
  6001                           
  6002                           ;my_i2c.c: 109: unsigned char i2c_data;
  6003                           ;my_i2c.c: 110: unsigned char data_read = 0;
  6004                           
  6005                           ;incstack = 0
  6006  0000B0  0100               	movlb	0	; () banked
  6007  0000B2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6008  0000B4  0E00               	movlw	0
  6009  0000B6  0100               	movlb	0	; () banked
  6010  0000B8  0100               	movlb	0	; () banked
  6011  0000BA  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6012  0000BC  0100               	movlb	0	; () banked
  6013  0000BE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6014                           
  6015                           ;my_i2c.c: 111: unsigned char data_written = 0;
  6016  0000C0  0100               	movlb	0	; () banked
  6017  0000C2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6018  0000C4  0E00               	movlw	0
  6019  0000C6  0100               	movlb	0	; () banked
  6020  0000C8  0100               	movlb	0	; () banked
  6021  0000CA  6FF5               	movwf	i2c_int_handler@data_written& (0+255),b
  6022  0000CC  0100               	movlb	0	; () banked
  6023  0000CE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6024                           
  6025                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  6026  0000D0  0100               	movlb	0	; () banked
  6027  0000D2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6028  0000D4  0E00               	movlw	0
  6029  0000D6  0100               	movlb	0	; () banked
  6030  0000D8  0100               	movlb	0	; () banked
  6031  0000DA  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6032  0000DC  0100               	movlb	0	; () banked
  6033  0000DE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6034                           
  6035                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  6036  0000E0  0100               	movlb	0	; () banked
  6037  0000E2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6038  0000E4  0E00               	movlw	0
  6039  0000E6  0100               	movlb	0	; () banked
  6040  0000E8  0100               	movlb	0	; () banked
  6041  0000EA  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6042  0000EC  0100               	movlb	0	; () banked
  6043  0000EE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6044                           
  6045                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  6046  0000F0  0100               	movlb	0	; () banked
  6047  0000F2  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6048  0000F4  0E00               	movlw	0
  6049  0000F6  0100               	movlb	0	; () banked
  6050  0000F8  0100               	movlb	0	; () banked
  6051  0000FA  6FF6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6052  0000FC  0100               	movlb	0	; () banked
  6053  0000FE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;my_i2c.c: 115: unsigned char error_buf[3];
  6057                           ;my_i2c.c: 118: if (SSPCON1bits.SSPOV == 1) {
  6058  000100  ACC6               	btfss	4038,6,c	;volatile
  6059  000102  D029               	goto	i2l3208
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;my_i2c.c: 119: SSPCON1bits.SSPOV = 0;
  6063  000104  9CC6               	bcf	4038,6,c	;volatile
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;my_i2c.c: 123: ic_ptr->status = 0x5;
  6067  000106  0101               	movlb	1	; () banked
  6068  000108  EE20 F00C          	lfsr	2,12
  6069  00010C  0101               	movlb	1	; () banked
  6070  00010E  5100               	movf	_ic_ptr& (0+255),w,b
  6071  000110  26D9               	addwf	fsr2l,f,c
  6072  000112  0101               	movlb	1	; () banked
  6073  000114  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6074  000116  22DA               	addwfc	fsr2h,f,c
  6075  000118  0E05               	movlw	5
  6076  00011A  6EDF               	movwf	indf2,c
  6077                           
  6078                           ; BSR set to: 1
  6079                           ;my_i2c.c: 124: overrun_error = 1;
  6080  00011C  0100               	movlb	0	; () banked
  6081  00011E  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6082  000120  0E01               	movlw	1
  6083  000122  0100               	movlb	0	; () banked
  6084  000124  0100               	movlb	0	; () banked
  6085  000126  6FF6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6086  000128  0100               	movlb	0	; () banked
  6087  00012A  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;my_i2c.c: 125: ic_ptr->error_count++;
  6091  00012C  0101               	movlb	1	; () banked
  6092  00012E  EE20 F00E          	lfsr	2,14
  6093  000132  0101               	movlb	1	; () banked
  6094  000134  5100               	movf	_ic_ptr& (0+255),w,b
  6095  000136  26D9               	addwf	fsr2l,f,c
  6096  000138  0101               	movlb	1	; () banked
  6097  00013A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6098  00013C  22DA               	addwfc	fsr2h,f,c
  6099  00013E  2ADF               	incf	indf2,f,c
  6100                           
  6101                           ; BSR set to: 1
  6102                           ;my_i2c.c: 126: ic_ptr->error_code = 0x4;
  6103  000140  0101               	movlb	1	; () banked
  6104  000142  EE20 F00D          	lfsr	2,13
  6105  000146  0101               	movlb	1	; () banked
  6106  000148  5100               	movf	_ic_ptr& (0+255),w,b
  6107  00014A  26D9               	addwf	fsr2l,f,c
  6108  00014C  0101               	movlb	1	; () banked
  6109  00014E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6110  000150  22DA               	addwfc	fsr2h,f,c
  6111  000152  0E04               	movlw	4
  6112  000154  6EDF               	movwf	indf2,c
  6113  000156                     i2l3208:
  6114                           
  6115                           ;my_i2c.c: 127: }
  6116                           ;my_i2c.c: 129: if (SSPSTATbits.BF == 1) {
  6117  000156  A0C7               	btfss	4039,0,c	;volatile
  6118  000158  D00A               	goto	i2l3214
  6119                           
  6120                           ;my_i2c.c: 130: i2c_data = SSPBUF;
  6121  00015A  CFC9 F0F7          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6122                           
  6123                           ;my_i2c.c: 131: data_read = 1;
  6124  00015E  0100               	movlb	0	; () banked
  6125  000160  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6126  000162  0E01               	movlw	1
  6127  000164  0100               	movlb	0	; () banked
  6128  000166  0100               	movlb	0	; () banked
  6129  000168  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6130  00016A  0100               	movlb	0	; () banked
  6131  00016C  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6132  00016E                     i2l3214:
  6133                           
  6134                           ;my_i2c.c: 132: }
  6135                           ;my_i2c.c: 134: if (!overrun_error) {
  6136  00016E  0100               	movlb	0	; () banked
  6137  000170  0100               	movlb	0	; () banked
  6138  000172  67F6               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6139  000174  D1CE               	goto	i2l258
  6140  000176  D1B7               	goto	i2l3302
  6141  000178                     i2l260:
  6142                           
  6143                           ; BSR set to: 1
  6144                           ;my_i2c.c: 137: {
  6145                           ;my_i2c.c: 139: if (SSPSTATbits.S == 1) {
  6146  000178  A6C7               	btfss	4039,3,c	;volatile
  6147  00017A  D1CB               	goto	i2l258
  6148                           
  6149                           ; BSR set to: 1
  6150                           ;my_i2c.c: 140: handle_start(data_read);
  6151  00017C  0100               	movlb	0	; () banked
  6152  00017E  0100               	movlb	0	; () banked
  6153  000180  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6154  000182  ECF5  F006         	call	_handle_start
  6155                           
  6156                           ;my_i2c.c: 142: if (ic_ptr->status == 0x8) {
  6157  000186  0101               	movlb	1	; () banked
  6158  000188  EE20 F00C          	lfsr	2,12
  6159  00018C  0101               	movlb	1	; () banked
  6160  00018E  5100               	movf	_ic_ptr& (0+255),w,b
  6161  000190  26D9               	addwf	fsr2l,f,c
  6162  000192  0101               	movlb	1	; () banked
  6163  000194  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6164  000196  22DA               	addwfc	fsr2h,f,c
  6165  000198  0E08               	movlw	8
  6166  00019A  62DF               	cpfseq	indf2,c
  6167  00019C  D1BA               	goto	i2l258
  6168                           
  6169                           ; BSR set to: 1
  6170                           ;my_i2c.c: 143: data_read = 0;
  6171  00019E  0100               	movlb	0	; () banked
  6172  0001A0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6173  0001A2  0E00               	movlw	0
  6174  0001A4  0100               	movlb	0	; () banked
  6175  0001A6  0100               	movlb	0	; () banked
  6176  0001A8  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6177  0001AA  0100               	movlb	0	; () banked
  6178  0001AC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6179                           
  6180                           ;my_i2c.c: 144: msg_to_send = 1;
  6181  0001AE  0100               	movlb	0	; () banked
  6182  0001B0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6183  0001B2  0E01               	movlw	1
  6184  0001B4  0100               	movlb	0	; () banked
  6185  0001B6  0100               	movlb	0	; () banked
  6186  0001B8  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6187  0001BA  D187               	goto	L6
  6188  0001BC                     i2l264:
  6189                           
  6190                           ; BSR set to: 1
  6191                           ;my_i2c.c: 150: {
  6192                           ;my_i2c.c: 152: if (SSPSTATbits.P == 1) {
  6193  0001BC  A8C7               	btfss	4039,4,c	;volatile
  6194  0001BE  D030               	goto	i2l3234
  6195                           
  6196                           ; BSR set to: 1
  6197                           ;my_i2c.c: 155: ic_ptr->event_count++;
  6198  0001C0  0101               	movlb	1	; () banked
  6199  0001C2  EE20 F00B          	lfsr	2,11
  6200  0001C6  0101               	movlb	1	; () banked
  6201  0001C8  5100               	movf	_ic_ptr& (0+255),w,b
  6202  0001CA  26D9               	addwf	fsr2l,f,c
  6203  0001CC  0101               	movlb	1	; () banked
  6204  0001CE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6205  0001D0  22DA               	addwfc	fsr2h,f,c
  6206  0001D2  2ADF               	incf	indf2,f,c
  6207                           
  6208                           ; BSR set to: 1
  6209                           ;my_i2c.c: 156: if (data_read) {
  6210  0001D4  0100               	movlb	0	; () banked
  6211  0001D6  0100               	movlb	0	; () banked
  6212  0001D8  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6213  0001DA  B4D8               	btfsc	status,2,c
  6214  0001DC  D179               	goto	L8
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;my_i2c.c: 157: if (SSPSTATbits.D_A == 0) {
  6218  0001DE  BAC7               	btfsc	4039,5,c	;volatile
  6219  0001E0  D009               	goto	i2l3232
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;my_i2c.c: 158: msg_ready = 1;
  6223  0001E2  0100               	movlb	0	; () banked
  6224  0001E4  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6225  0001E6  0E01               	movlw	1
  6226  0001E8  0100               	movlb	0	; () banked
  6227  0001EA  0100               	movlb	0	; () banked
  6228  0001EC  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6229  0001EE  0100               	movlb	0	; () banked
  6230  0001F0  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6231                           
  6232                           ;my_i2c.c: 159: } else {
  6233  0001F2  D16E               	goto	L8
  6234  0001F4                     i2l3232:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;my_i2c.c: 160: ic_ptr->error_count++;
  6238  0001F4  0101               	movlb	1	; () banked
  6239  0001F6  EE20 F00E          	lfsr	2,14
  6240  0001FA  0101               	movlb	1	; () banked
  6241  0001FC  5100               	movf	_ic_ptr& (0+255),w,b
  6242  0001FE  26D9               	addwf	fsr2l,f,c
  6243  000200  0101               	movlb	1	; () banked
  6244  000202  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6245  000204  22DA               	addwfc	fsr2h,f,c
  6246  000206  2ADF               	incf	indf2,f,c
  6247                           
  6248                           ;my_i2c.c: 161: ic_ptr->error_code = 0x6;
  6249  000208  0101               	movlb	1	; () banked
  6250  00020A  EE20 F00D          	lfsr	2,13
  6251  00020E  0101               	movlb	1	; () banked
  6252  000210  5100               	movf	_ic_ptr& (0+255),w,b
  6253  000212  26D9               	addwf	fsr2l,f,c
  6254  000214  0101               	movlb	1	; () banked
  6255  000216  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6256  000218  22DA               	addwfc	fsr2h,f,c
  6257  00021A  0E06               	movlw	6
  6258  00021C  6EDF               	movwf	indf2,c
  6259                           
  6260                           ; BSR set to: 1
  6261  00021E  D158               	goto	L8
  6262  000220                     i2l3234:
  6263                           
  6264                           ; BSR set to: 1
  6265  000220  0100               	movlb	0	; () banked
  6266  000222  0100               	movlb	0	; () banked
  6267  000224  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6268  000226  B4D8               	btfsc	status,2,c
  6269  000228  D174               	goto	i2l258
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;my_i2c.c: 166: ic_ptr->event_count++;
  6273  00022A  0101               	movlb	1	; () banked
  6274  00022C  EE20 F00B          	lfsr	2,11
  6275  000230  0101               	movlb	1	; () banked
  6276  000232  5100               	movf	_ic_ptr& (0+255),w,b
  6277  000234  26D9               	addwf	fsr2l,f,c
  6278  000236  0101               	movlb	1	; () banked
  6279  000238  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6280  00023A  22DA               	addwfc	fsr2h,f,c
  6281  00023C  2ADF               	incf	indf2,f,c
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;my_i2c.c: 167: if (SSPSTATbits.D_A == 0) {
  6285  00023E  BAC7               	btfsc	4039,5,c	;volatile
  6286  000240  D019               	goto	i2l3250
  6287                           
  6288                           ; BSR set to: 1
  6289                           ;my_i2c.c: 168: if (SSPSTATbits.R_W == 0) {
  6290  000242  B4C7               	btfsc	4039,2,c	;volatile
  6291  000244  D00B               	goto	i2l3244
  6292                           
  6293                           ; BSR set to: 1
  6294                           ;my_i2c.c: 169: ic_ptr->status = 0x7;
  6295  000246  0101               	movlb	1	; () banked
  6296  000248  EE20 F00C          	lfsr	2,12
  6297  00024C  0101               	movlb	1	; () banked
  6298  00024E  5100               	movf	_ic_ptr& (0+255),w,b
  6299  000250  26D9               	addwf	fsr2l,f,c
  6300  000252  0101               	movlb	1	; () banked
  6301  000254  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6302  000256  22DA               	addwfc	fsr2h,f,c
  6303  000258  0E07               	movlw	7
  6304  00025A  D076               	goto	L5
  6305  00025C                     i2l3244:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;my_i2c.c: 171: ic_ptr->status = 0x8;
  6309  00025C  0101               	movlb	1	; () banked
  6310  00025E  EE20 F00C          	lfsr	2,12
  6311  000262  0101               	movlb	1	; () banked
  6312  000264  5100               	movf	_ic_ptr& (0+255),w,b
  6313  000266  26D9               	addwf	fsr2l,f,c
  6314  000268  0101               	movlb	1	; () banked
  6315  00026A  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6316  00026C  22DA               	addwfc	fsr2h,f,c
  6317  00026E  0E08               	movlw	8
  6318  000270  6EDF               	movwf	indf2,c
  6319  000272  D11D               	goto	L9
  6320  000274                     i2l3250:
  6321                           
  6322                           ;my_i2c.c: 177: ic_ptr->error_count++;
  6323  000274  0101               	movlb	1	; () banked
  6324  000276  EE20 F00E          	lfsr	2,14
  6325  00027A  0101               	movlb	1	; () banked
  6326  00027C  5100               	movf	_ic_ptr& (0+255),w,b
  6327  00027E  26D9               	addwf	fsr2l,f,c
  6328  000280  0101               	movlb	1	; () banked
  6329  000282  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6330  000284  22DA               	addwfc	fsr2h,f,c
  6331  000286  2ADF               	incf	indf2,f,c
  6332                           
  6333                           ;my_i2c.c: 178: ic_ptr->status = 0x5;
  6334  000288  0101               	movlb	1	; () banked
  6335  00028A  EE20 F00C          	lfsr	2,12
  6336  00028E  0101               	movlb	1	; () banked
  6337  000290  5100               	movf	_ic_ptr& (0+255),w,b
  6338  000292  26D9               	addwf	fsr2l,f,c
  6339  000294  0101               	movlb	1	; () banked
  6340  000296  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6341  000298  22DA               	addwfc	fsr2h,f,c
  6342  00029A  0E05               	movlw	5
  6343  00029C  6EDF               	movwf	indf2,c
  6344                           
  6345                           ;my_i2c.c: 179: ic_ptr->error_code = 0x6;
  6346  00029E  0101               	movlb	1	; () banked
  6347  0002A0  EE20 F00D          	lfsr	2,13
  6348  0002A4  0101               	movlb	1	; () banked
  6349  0002A6  5100               	movf	_ic_ptr& (0+255),w,b
  6350  0002A8  26D9               	addwf	fsr2l,f,c
  6351  0002AA  0101               	movlb	1	; () banked
  6352  0002AC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6353  0002AE  22DA               	addwfc	fsr2h,f,c
  6354  0002B0  0E06               	movlw	6
  6355  0002B2  D04A               	goto	L5
  6356  0002B4                     i2l3252:
  6357                           
  6358                           ; BSR set to: 1
  6359                           ;my_i2c.c: 185: {
  6360                           ;my_i2c.c: 186: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6361  0002B4  0101               	movlb	1	; () banked
  6362  0002B6  EE20 F077          	lfsr	2,119
  6363  0002BA  0101               	movlb	1	; () banked
  6364  0002BC  5100               	movf	_ic_ptr& (0+255),w,b
  6365  0002BE  26D9               	addwf	fsr2l,f,c
  6366  0002C0  0101               	movlb	1	; () banked
  6367  0002C2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6368  0002C4  22DA               	addwfc	fsr2h,f,c
  6369  0002C6  50DF               	movf	indf2,w,c
  6370  0002C8  0100               	movlb	0	; () banked
  6371  0002CA  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6372  0002CC  0101               	movlb	1	; () banked
  6373  0002CE  EE20 F076          	lfsr	2,118
  6374  0002D2  0101               	movlb	1	; () banked
  6375  0002D4  5100               	movf	_ic_ptr& (0+255),w,b
  6376  0002D6  26D9               	addwf	fsr2l,f,c
  6377  0002D8  0101               	movlb	1	; () banked
  6378  0002DA  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6379  0002DC  22DA               	addwfc	fsr2h,f,c
  6380  0002DE  50DF               	movf	indf2,w,c
  6381  0002E0  0100               	movlb	0	; () banked
  6382  0002E2  5DF1               	subwf	??_i2c_int_handler& (0+255),w,b
  6383  0002E4  B0D8               	btfsc	status,0,c
  6384  0002E6  D0F4               	goto	L8
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;my_i2c.c: 189: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6388  0002E8  0101               	movlb	1	; () banked
  6389  0002EA  EE20 F077          	lfsr	2,119
  6390  0002EE  0101               	movlb	1	; () banked
  6391  0002F0  5100               	movf	_ic_ptr& (0+255),w,b
  6392  0002F2  26D9               	addwf	fsr2l,f,c
  6393  0002F4  0101               	movlb	1	; () banked
  6394  0002F6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6395  0002F8  22DA               	addwfc	fsr2h,f,c
  6396  0002FA  50DF               	movf	indf2,w,c
  6397  0002FC  0100               	movlb	0	; () banked
  6398  0002FE  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6399  000300  0100               	movlb	0	; () banked
  6400  000302  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6401  000304  0D01               	mullw	1
  6402  000306  0E0F               	movlw	15
  6403  000308  26F3               	addwf	prodl,f,c
  6404  00030A  0E00               	movlw	0
  6405  00030C  22F4               	addwfc	prodh,f,c
  6406  00030E  50F3               	movf	prodl,w,c
  6407  000310  0101               	movlb	1	; () banked
  6408  000312  0101               	movlb	1	; () banked
  6409  000314  2500               	addwf	_ic_ptr& (0+255),w,b
  6410  000316  6ED9               	movwf	fsr2l,c
  6411  000318  50F4               	movf	prodh,w,c
  6412  00031A  0101               	movlb	1	; () banked
  6413  00031C  0101               	movlb	1	; () banked
  6414  00031E  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6415  000320  6EDA               	movwf	fsr2h,c
  6416  000322  50DF               	movf	indf2,w,c
  6417  000324  6EC9               	movwf	4041,c	;volatile
  6418                           
  6419                           ; BSR set to: 1
  6420                           ;my_i2c.c: 190: ic_ptr->outbufind++;
  6421  000326  0101               	movlb	1	; () banked
  6422  000328  EE20 F077          	lfsr	2,119
  6423  00032C  0101               	movlb	1	; () banked
  6424  00032E  5100               	movf	_ic_ptr& (0+255),w,b
  6425  000330  26D9               	addwf	fsr2l,f,c
  6426  000332  0101               	movlb	1	; () banked
  6427  000334  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6428  000336  22DA               	addwfc	fsr2h,f,c
  6429  000338  2ADF               	incf	indf2,f,c
  6430                           
  6431                           ; BSR set to: 1
  6432                           ;my_i2c.c: 191: data_written = 1;
  6433  00033A  0100               	movlb	0	; () banked
  6434  00033C  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6435  00033E  0E01               	movlw	1
  6436  000340  0100               	movlb	0	; () banked
  6437  000342  0100               	movlb	0	; () banked
  6438  000344  6FF5               	movwf	i2c_int_handler@data_written& (0+255),b
  6439  000346  D0C1               	goto	L6
  6440  000348                     L5:
  6441  000348  6EDF               	movwf	indf2,c
  6442  00034A  D0E3               	goto	i2l258
  6443  00034C                     i2l278:
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;my_i2c.c: 199: {
  6447                           ;my_i2c.c: 201: if (SSPSTATbits.P == 1) {
  6448  00034C  A8C7               	btfss	4039,4,c	;volatile
  6449  00034E  D062               	goto	i2l3280
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;my_i2c.c: 203: ic_ptr->event_count++;
  6453  000350  0101               	movlb	1	; () banked
  6454  000352  EE20 F00B          	lfsr	2,11
  6455  000356  0101               	movlb	1	; () banked
  6456  000358  5100               	movf	_ic_ptr& (0+255),w,b
  6457  00035A  26D9               	addwf	fsr2l,f,c
  6458  00035C  0101               	movlb	1	; () banked
  6459  00035E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6460  000360  22DA               	addwfc	fsr2h,f,c
  6461  000362  2ADF               	incf	indf2,f,c
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;my_i2c.c: 204: if (data_read) {
  6465  000364  0100               	movlb	0	; () banked
  6466  000366  0100               	movlb	0	; () banked
  6467  000368  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6468  00036A  B4D8               	btfsc	status,2,c
  6469  00036C  D04A               	goto	i2l3276
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;my_i2c.c: 205: if (SSPSTATbits.D_A == 1) {
  6473  00036E  AAC7               	btfss	4039,5,c	;volatile
  6474  000370  D027               	goto	i2l3274
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;my_i2c.c: 206: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6478  000372  0101               	movlb	1	; () banked
  6479  000374  EE20 F00A          	lfsr	2,10
  6480  000378  0101               	movlb	1	; () banked
  6481  00037A  5100               	movf	_ic_ptr& (0+255),w,b
  6482  00037C  26D9               	addwf	fsr2l,f,c
  6483  00037E  0101               	movlb	1	; () banked
  6484  000380  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6485  000382  22DA               	addwfc	fsr2h,f,c
  6486  000384  50DF               	movf	indf2,w,c
  6487  000386  0100               	movlb	0	; () banked
  6488  000388  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6489  00038A  0100               	movlb	0	; () banked
  6490  00038C  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6491  00038E  0D01               	mullw	1
  6492  000390  50F3               	movf	prodl,w,c
  6493  000392  0101               	movlb	1	; () banked
  6494  000394  0101               	movlb	1	; () banked
  6495  000396  2500               	addwf	_ic_ptr& (0+255),w,b
  6496  000398  6ED9               	movwf	fsr2l,c
  6497  00039A  50F4               	movf	prodh,w,c
  6498  00039C  0101               	movlb	1	; () banked
  6499  00039E  0101               	movlb	1	; () banked
  6500  0003A0  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6501  0003A2  6EDA               	movwf	fsr2h,c
  6502  0003A4  0100               	movlb	0	; () banked
  6503  0003A6  C0F7  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;my_i2c.c: 207: ic_ptr->buflen++;
  6507  0003AA  0101               	movlb	1	; () banked
  6508  0003AC  EE20 F00A          	lfsr	2,10
  6509  0003B0  0101               	movlb	1	; () banked
  6510  0003B2  5100               	movf	_ic_ptr& (0+255),w,b
  6511  0003B4  26D9               	addwf	fsr2l,f,c
  6512  0003B6  0101               	movlb	1	; () banked
  6513  0003B8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6514  0003BA  22DA               	addwfc	fsr2h,f,c
  6515  0003BC  2ADF               	incf	indf2,f,c
  6516  0003BE  D021               	goto	i2l3276
  6517  0003C0                     i2l3274:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;my_i2c.c: 210: ic_ptr->error_count++;
  6521  0003C0  0101               	movlb	1	; () banked
  6522  0003C2  EE20 F00E          	lfsr	2,14
  6523  0003C6  0101               	movlb	1	; () banked
  6524  0003C8  5100               	movf	_ic_ptr& (0+255),w,b
  6525  0003CA  26D9               	addwf	fsr2l,f,c
  6526  0003CC  0101               	movlb	1	; () banked
  6527  0003CE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6528  0003D0  22DA               	addwfc	fsr2h,f,c
  6529  0003D2  2ADF               	incf	indf2,f,c
  6530                           
  6531                           ;my_i2c.c: 211: ic_ptr->error_code = 0x6;
  6532  0003D4  0101               	movlb	1	; () banked
  6533  0003D6  EE20 F00D          	lfsr	2,13
  6534  0003DA  0101               	movlb	1	; () banked
  6535  0003DC  5100               	movf	_ic_ptr& (0+255),w,b
  6536  0003DE  26D9               	addwf	fsr2l,f,c
  6537  0003E0  0101               	movlb	1	; () banked
  6538  0003E2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6539  0003E4  22DA               	addwfc	fsr2h,f,c
  6540  0003E6  0E06               	movlw	6
  6541  0003E8  6EDF               	movwf	indf2,c
  6542                           
  6543                           ;my_i2c.c: 212: ic_ptr->status = 0x5;
  6544  0003EA  0101               	movlb	1	; () banked
  6545  0003EC  EE20 F00C          	lfsr	2,12
  6546  0003F0  0101               	movlb	1	; () banked
  6547  0003F2  5100               	movf	_ic_ptr& (0+255),w,b
  6548  0003F4  26D9               	addwf	fsr2l,f,c
  6549  0003F6  0101               	movlb	1	; () banked
  6550  0003F8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6551  0003FA  22DA               	addwfc	fsr2h,f,c
  6552  0003FC  0E05               	movlw	5
  6553  0003FE  6EDF               	movwf	indf2,c
  6554  000400  D067               	goto	L8
  6555  000402                     i2l3276:
  6556                           
  6557                           ;my_i2c.c: 215: msg_ready = 1;
  6558  000402  0100               	movlb	0	; () banked
  6559  000404  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6560  000406  0E01               	movlw	1
  6561  000408  0100               	movlb	0	; () banked
  6562  00040A  0100               	movlb	0	; () banked
  6563  00040C  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6564  00040E  0100               	movlb	0	; () banked
  6565  000410  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6566                           
  6567                           ; BSR set to: 0
  6568  000412  D05E               	goto	L8
  6569  000414                     i2l3280:
  6570                           
  6571                           ; BSR set to: 1
  6572  000414  0100               	movlb	0	; () banked
  6573  000416  0100               	movlb	0	; () banked
  6574  000418  51FA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6575  00041A  B4D8               	btfsc	status,2,c
  6576  00041C  D07A               	goto	i2l258
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;my_i2c.c: 219: ic_ptr->event_count++;
  6580  00041E  0101               	movlb	1	; () banked
  6581  000420  EE20 F00B          	lfsr	2,11
  6582  000424  0101               	movlb	1	; () banked
  6583  000426  5100               	movf	_ic_ptr& (0+255),w,b
  6584  000428  26D9               	addwf	fsr2l,f,c
  6585  00042A  0101               	movlb	1	; () banked
  6586  00042C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6587  00042E  22DA               	addwfc	fsr2h,f,c
  6588  000430  2ADF               	incf	indf2,f,c
  6589                           
  6590                           ; BSR set to: 1
  6591                           ;my_i2c.c: 220: if (SSPSTATbits.D_A == 1) {
  6592  000432  AAC7               	btfss	4039,5,c	;volatile
  6593  000434  D027               	goto	i2l286
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;my_i2c.c: 221: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6597  000436  0101               	movlb	1	; () banked
  6598  000438  EE20 F00A          	lfsr	2,10
  6599  00043C  0101               	movlb	1	; () banked
  6600  00043E  5100               	movf	_ic_ptr& (0+255),w,b
  6601  000440  26D9               	addwf	fsr2l,f,c
  6602  000442  0101               	movlb	1	; () banked
  6603  000444  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6604  000446  22DA               	addwfc	fsr2h,f,c
  6605  000448  50DF               	movf	indf2,w,c
  6606  00044A  0100               	movlb	0	; () banked
  6607  00044C  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6608  00044E  0100               	movlb	0	; () banked
  6609  000450  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6610  000452  0D01               	mullw	1
  6611  000454  50F3               	movf	prodl,w,c
  6612  000456  0101               	movlb	1	; () banked
  6613  000458  0101               	movlb	1	; () banked
  6614  00045A  2500               	addwf	_ic_ptr& (0+255),w,b
  6615  00045C  6ED9               	movwf	fsr2l,c
  6616  00045E  50F4               	movf	prodh,w,c
  6617  000460  0101               	movlb	1	; () banked
  6618  000462  0101               	movlb	1	; () banked
  6619  000464  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6620  000466  6EDA               	movwf	fsr2h,c
  6621  000468  0100               	movlb	0	; () banked
  6622  00046A  C0F7  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;my_i2c.c: 222: ic_ptr->buflen++;
  6626  00046E  0101               	movlb	1	; () banked
  6627  000470  EE20 F00A          	lfsr	2,10
  6628  000474  0101               	movlb	1	; () banked
  6629  000476  5100               	movf	_ic_ptr& (0+255),w,b
  6630  000478  26D9               	addwf	fsr2l,f,c
  6631  00047A  0101               	movlb	1	; () banked
  6632  00047C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6633  00047E  22DA               	addwfc	fsr2h,f,c
  6634  000480  2ADF               	incf	indf2,f,c
  6635                           
  6636                           ;my_i2c.c: 223: } else {
  6637  000482  D047               	goto	i2l258
  6638  000484                     i2l286:
  6639                           
  6640                           ; BSR set to: 1
  6641                           ;my_i2c.c: 224: if (SSPSTATbits.R_W == 1) {
  6642  000484  A4C7               	btfss	4039,2,c	;volatile
  6643  000486  D6B6               	goto	i2l3232
  6644                           
  6645                           ; BSR set to: 1
  6646                           ;my_i2c.c: 225: ic_ptr->status = 0x8;
  6647  000488  0101               	movlb	1	; () banked
  6648  00048A  EE20 F00C          	lfsr	2,12
  6649  00048E  0101               	movlb	1	; () banked
  6650  000490  5100               	movf	_ic_ptr& (0+255),w,b
  6651  000492  26D9               	addwf	fsr2l,f,c
  6652  000494  0101               	movlb	1	; () banked
  6653  000496  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6654  000498  22DA               	addwfc	fsr2h,f,c
  6655  00049A  0E08               	movlw	8
  6656  00049C  6EDF               	movwf	indf2,c
  6657                           
  6658                           ; BSR set to: 1
  6659                           ;my_i2c.c: 226: msg_ready = 1;
  6660  00049E  0100               	movlb	0	; () banked
  6661  0004A0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6662  0004A2  0E01               	movlw	1
  6663  0004A4  0100               	movlb	0	; () banked
  6664  0004A6  0100               	movlb	0	; () banked
  6665  0004A8  6FF9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6666  0004AA  0100               	movlb	0	; () banked
  6667  0004AC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6668  0004AE                     L9:
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;my_i2c.c: 227: msg_to_send = 1;
  6672  0004AE  0100               	movlb	0	; () banked
  6673  0004B0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6674  0004B2  0E01               	movlw	1
  6675  0004B4  0100               	movlb	0	; () banked
  6676  0004B6  0100               	movlb	0	; () banked
  6677  0004B8  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6678  0004BA  0100               	movlb	0	; () banked
  6679  0004BC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;my_i2c.c: 229: data_read = 0;
  6683  0004BE  0100               	movlb	0	; () banked
  6684  0004C0  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6685  0004C2  0E00               	movlw	0
  6686  0004C4  0100               	movlb	0	; () banked
  6687  0004C6  0100               	movlb	0	; () banked
  6688  0004C8  6FFA               	movwf	i2c_int_handler@data_read& (0+255),b
  6689  0004CA                     L6:
  6690  0004CA  0100               	movlb	0	; () banked
  6691  0004CC  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6692                           
  6693                           ;my_i2c.c: 230: } else {
  6694  0004CE  D021               	goto	i2l258
  6695  0004D0                     L8:
  6696                           
  6697                           ;my_i2c.c: 233: ic_ptr->status = 0x5;
  6698  0004D0  0101               	movlb	1	; () banked
  6699  0004D2  EE20 F00C          	lfsr	2,12
  6700  0004D6  0101               	movlb	1	; () banked
  6701  0004D8  5100               	movf	_ic_ptr& (0+255),w,b
  6702  0004DA  26D9               	addwf	fsr2l,f,c
  6703  0004DC  0101               	movlb	1	; () banked
  6704  0004DE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6705  0004E0  22DA               	addwfc	fsr2h,f,c
  6706  0004E2  0E05               	movlw	5
  6707  0004E4  D731               	goto	L5
  6708  0004E6                     i2l3302:
  6709  0004E6  0101               	movlb	1	; () banked
  6710  0004E8  EE20 F00C          	lfsr	2,12
  6711  0004EC  0101               	movlb	1	; () banked
  6712  0004EE  5100               	movf	_ic_ptr& (0+255),w,b
  6713  0004F0  26D9               	addwf	fsr2l,f,c
  6714  0004F2  0101               	movlb	1	; () banked
  6715  0004F4  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6716  0004F6  22DA               	addwfc	fsr2h,f,c
  6717  0004F8  50DF               	movf	indf2,w,c
  6718                           
  6719                           ; Switch size 1, requested type "space"
  6720                           ; Number of cases is 4, Range of values is 5 to 8
  6721                           ; switch strategies available:
  6722                           ; Name         Instructions Cycles
  6723                           ; simple_byte           13     7 (average)
  6724                           ;	Chosen strategy is simple_byte
  6725  0004FA  0A05               	xorlw	5	; case 5
  6726  0004FC  B4D8               	btfsc	status,2,c
  6727  0004FE  D63C               	goto	i2l260
  6728  000500  0A03               	xorlw	3	; case 6
  6729  000502  B4D8               	btfsc	status,2,c
  6730  000504  D65B               	goto	i2l264
  6731  000506  0A01               	xorlw	1	; case 7
  6732  000508  B4D8               	btfsc	status,2,c
  6733  00050A  D720               	goto	i2l278
  6734  00050C  0A0F               	xorlw	15	; case 8
  6735  00050E  B4D8               	btfsc	status,2,c
  6736  000510  D6D1               	goto	i2l3252
  6737  000512                     i2l258:
  6738                           
  6739                           ;my_i2c.c: 240: }
  6740                           ;my_i2c.c: 243: if (data_read || data_written) {
  6741  000512  0100               	movlb	0	; () banked
  6742  000514  0100               	movlb	0	; () banked
  6743  000516  67FA               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6744  000518  D005               	goto	i2l292
  6745                           
  6746                           ; BSR set to: 0
  6747  00051A  0100               	movlb	0	; () banked
  6748  00051C  0100               	movlb	0	; () banked
  6749  00051E  51F5               	movf	i2c_int_handler@data_written& (0+255),w,b
  6750  000520  B4D8               	btfsc	status,2,c
  6751  000522  D002               	goto	i2l3308
  6752  000524                     i2l292:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;my_i2c.c: 248: if (SSPCON1bits.CKP == 0) {
  6756  000524  A8C6               	btfss	4038,4,c	;volatile
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;my_i2c.c: 249: SSPCON1bits.CKP = 1;
  6760  000526  88C6               	bsf	4038,4,c	;volatile
  6761  000528                     i2l3308:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;my_i2c.c: 250: }
  6765                           ;my_i2c.c: 251: }
  6766                           ;my_i2c.c: 254: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6767  000528  0101               	movlb	1	; () banked
  6768  00052A  EE20 F00A          	lfsr	2,10
  6769  00052E  0101               	movlb	1	; () banked
  6770  000530  5100               	movf	_ic_ptr& (0+255),w,b
  6771  000532  26D9               	addwf	fsr2l,f,c
  6772  000534  0101               	movlb	1	; () banked
  6773  000536  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6774  000538  22DA               	addwfc	fsr2h,f,c
  6775  00053A  0E08               	movlw	8
  6776  00053C  64DF               	cpfsgt	indf2,c
  6777  00053E  D024               	goto	i2l3314
  6778                           
  6779                           ; BSR set to: 1
  6780  000540  0100               	movlb	0	; () banked
  6781  000542  0100               	movlb	0	; () banked
  6782  000544  67F9               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6783  000546  D020               	goto	i2l3314
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;my_i2c.c: 255: ic_ptr->status = 0x5;
  6787  000548  0101               	movlb	1	; () banked
  6788  00054A  EE20 F00C          	lfsr	2,12
  6789  00054E  0101               	movlb	1	; () banked
  6790  000550  5100               	movf	_ic_ptr& (0+255),w,b
  6791  000552  26D9               	addwf	fsr2l,f,c
  6792  000554  0101               	movlb	1	; () banked
  6793  000556  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6794  000558  22DA               	addwfc	fsr2h,f,c
  6795  00055A  0E05               	movlw	5
  6796  00055C  6EDF               	movwf	indf2,c
  6797                           
  6798                           ;my_i2c.c: 256: ic_ptr->error_count++;
  6799  00055E  0101               	movlb	1	; () banked
  6800  000560  EE20 F00E          	lfsr	2,14
  6801  000564  0101               	movlb	1	; () banked
  6802  000566  5100               	movf	_ic_ptr& (0+255),w,b
  6803  000568  26D9               	addwf	fsr2l,f,c
  6804  00056A  0101               	movlb	1	; () banked
  6805  00056C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6806  00056E  22DA               	addwfc	fsr2h,f,c
  6807  000570  2ADF               	incf	indf2,f,c
  6808                           
  6809                           ;my_i2c.c: 257: ic_ptr->error_code = 0x7;
  6810  000572  0101               	movlb	1	; () banked
  6811  000574  EE20 F00D          	lfsr	2,13
  6812  000578  0101               	movlb	1	; () banked
  6813  00057A  5100               	movf	_ic_ptr& (0+255),w,b
  6814  00057C  26D9               	addwf	fsr2l,f,c
  6815  00057E  0101               	movlb	1	; () banked
  6816  000580  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6817  000582  22DA               	addwfc	fsr2h,f,c
  6818  000584  0E07               	movlw	7
  6819  000586  6EDF               	movwf	indf2,c
  6820  000588                     i2l3314:
  6821                           
  6822                           ;my_i2c.c: 258: }
  6823                           ;my_i2c.c: 260: if (msg_ready) {
  6824  000588  0100               	movlb	0	; () banked
  6825  00058A  0100               	movlb	0	; () banked
  6826  00058C  51F9               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6827  00058E  B4D8               	btfsc	status,2,c
  6828  000590  D030               	goto	i2l3322
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;my_i2c.c: 261: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6832  000592  0101               	movlb	1	; () banked
  6833  000594  EE20 F00B          	lfsr	2,11
  6834  000598  0101               	movlb	1	; () banked
  6835  00059A  5100               	movf	_ic_ptr& (0+255),w,b
  6836  00059C  26D9               	addwf	fsr2l,f,c
  6837  00059E  0101               	movlb	1	; () banked
  6838  0005A0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6839  0005A2  22DA               	addwfc	fsr2h,f,c
  6840  0005A4  0101               	movlb	1	; () banked
  6841  0005A6  EE10 F00A          	lfsr	1,10
  6842  0005AA  0101               	movlb	1	; () banked
  6843  0005AC  5100               	movf	_ic_ptr& (0+255),w,b
  6844  0005AE  26E1               	addwf	fsr1l,f,c
  6845  0005B0  0101               	movlb	1	; () banked
  6846  0005B2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6847  0005B4  22E2               	addwfc	fsr1h,f,c
  6848  0005B6  50E7               	movf	indf1,w,c
  6849  0005B8  0100               	movlb	0	; () banked
  6850  0005BA  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6851  0005BC  0100               	movlb	0	; () banked
  6852  0005BE  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6853  0005C0  0D01               	mullw	1
  6854  0005C2  50F3               	movf	prodl,w,c
  6855  0005C4  0101               	movlb	1	; () banked
  6856  0005C6  0101               	movlb	1	; () banked
  6857  0005C8  2500               	addwf	_ic_ptr& (0+255),w,b
  6858  0005CA  6EE1               	movwf	fsr1l,c
  6859  0005CC  50F4               	movf	prodh,w,c
  6860  0005CE  0101               	movlb	1	; () banked
  6861  0005D0  0101               	movlb	1	; () banked
  6862  0005D2  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6863  0005D4  6EE2               	movwf	fsr1h,c
  6864  0005D6  CFDF FFE7          	movff	indf2,indf1
  6865                           
  6866                           ; BSR set to: 1
  6867                           ;my_i2c.c: 262: setBrainReqData(ic_ptr->buffer);
  6868  0005DA  0101               	movlb	1	; () banked
  6869  0005DC  C101  F032         	movff	_ic_ptr+1,setBrainReqData@buf+1
  6870  0005E0  0101               	movlb	1	; () banked
  6871  0005E2  C100  F031         	movff	_ic_ptr,setBrainReqData@buf
  6872  0005E6  ECEF  F00C         	call	_setBrainReqData	;wreg free
  6873                           
  6874                           ;my_i2c.c: 265: ic_ptr->buflen = 0;
  6875  0005EA  0101               	movlb	1	; () banked
  6876  0005EC  EE20 F00A          	lfsr	2,10
  6877  0005F0  D04B               	goto	L7
  6878  0005F2                     i2l3322:
  6879  0005F2  0101               	movlb	1	; () banked
  6880  0005F4  EE20 F00E          	lfsr	2,14
  6881  0005F8  0101               	movlb	1	; () banked
  6882  0005FA  5100               	movf	_ic_ptr& (0+255),w,b
  6883  0005FC  26D9               	addwf	fsr2l,f,c
  6884  0005FE  0101               	movlb	1	; () banked
  6885  000600  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6886  000602  22DA               	addwfc	fsr2h,f,c
  6887  000604  50DF               	movf	indf2,w,c
  6888  000606  B4D8               	btfsc	status,2,c
  6889  000608  D047               	goto	i2l3330
  6890                           
  6891                           ; BSR set to: 1
  6892                           ;my_i2c.c: 267: error_buf[0] = ic_ptr->error_count;
  6893  00060A  0101               	movlb	1	; () banked
  6894  00060C  EE20 F00E          	lfsr	2,14
  6895  000610  0101               	movlb	1	; () banked
  6896  000612  5100               	movf	_ic_ptr& (0+255),w,b
  6897  000614  26D9               	addwf	fsr2l,f,c
  6898  000616  0101               	movlb	1	; () banked
  6899  000618  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6900  00061A  22DA               	addwfc	fsr2h,f,c
  6901  00061C  50DF               	movf	indf2,w,c
  6902  00061E  0100               	movlb	0	; () banked
  6903  000620  0100               	movlb	0	; () banked
  6904  000622  6FF2               	movwf	i2c_int_handler@error_buf& (0+255),b
  6905                           
  6906                           ;my_i2c.c: 268: error_buf[1] = ic_ptr->error_code;
  6907  000624  0101               	movlb	1	; () banked
  6908  000626  EE20 F00D          	lfsr	2,13
  6909  00062A  0101               	movlb	1	; () banked
  6910  00062C  5100               	movf	_ic_ptr& (0+255),w,b
  6911  00062E  26D9               	addwf	fsr2l,f,c
  6912  000630  0101               	movlb	1	; () banked
  6913  000632  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6914  000634  22DA               	addwfc	fsr2h,f,c
  6915  000636  50DF               	movf	indf2,w,c
  6916  000638  0100               	movlb	0	; () banked
  6917  00063A  0100               	movlb	0	; () banked
  6918  00063C  6FF3               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6919                           
  6920                           ;my_i2c.c: 269: error_buf[2] = ic_ptr->event_count;
  6921  00063E  0101               	movlb	1	; () banked
  6922  000640  EE20 F00B          	lfsr	2,11
  6923  000644  0101               	movlb	1	; () banked
  6924  000646  5100               	movf	_ic_ptr& (0+255),w,b
  6925  000648  26D9               	addwf	fsr2l,f,c
  6926  00064A  0101               	movlb	1	; () banked
  6927  00064C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6928  00064E  22DA               	addwfc	fsr2h,f,c
  6929  000650  50DF               	movf	indf2,w,c
  6930  000652  0100               	movlb	0	; () banked
  6931  000654  0100               	movlb	0	; () banked
  6932  000656  6FF4               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;my_i2c.c: 270: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6936  000658  0100               	movlb	0	; () banked
  6937  00065A  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6938  00065C  0E29               	movlw	41
  6939  00065E  0100               	movlb	0	; () banked
  6940  000660  0100               	movlb	0	; () banked
  6941  000662  6F85               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6942  000664  0100               	movlb	0	; () banked
  6943  000666  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6944  000668  0100               	movlb	0	; () banked
  6945  00066A  0E00               	movlw	high i2c_int_handler@error_buf
  6946  00066C  0100               	movlb	0	; () banked
  6947  00066E  0100               	movlb	0	; () banked
  6948  000670  6F87               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  6949  000672  0100               	movlb	0	; () banked
  6950  000674  0EF2               	movlw	low i2c_int_handler@error_buf
  6951  000676  0100               	movlb	0	; () banked
  6952  000678  0100               	movlb	0	; () banked
  6953  00067A  6F86               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  6954  00067C  0E03               	movlw	3
  6955  00067E  EC49  F00D         	call	i2_ToMainHigh_sendmsg
  6956                           
  6957                           ;my_i2c.c: 271: ic_ptr->error_count = 0;
  6958  000682  0101               	movlb	1	; () banked
  6959  000684  EE20 F00E          	lfsr	2,14
  6960  000688                     L7:
  6961  000688  0101               	movlb	1	; () banked
  6962  00068A  5100               	movf	_ic_ptr& (0+255),w,b
  6963  00068C  26D9               	addwf	fsr2l,f,c
  6964  00068E  0101               	movlb	1	; () banked
  6965  000690  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  6966  000692  22DA               	addwfc	fsr2h,f,c
  6967  000694  0E00               	movlw	0
  6968  000696  6EDF               	movwf	indf2,c
  6969  000698                     i2l3330:
  6970                           
  6971                           ; BSR set to: 1
  6972                           ;my_i2c.c: 272: }
  6973                           ;my_i2c.c: 273: if (msg_to_send) {
  6974  000698  0100               	movlb	0	; () banked
  6975  00069A  0100               	movlb	0	; () banked
  6976  00069C  51F8               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6977  00069E  B4D8               	btfsc	status,2,c
  6978  0006A0  0012               	return	
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;my_i2c.c: 286: sendRequestedData();
  6982  0006A2  ECC2  F00D         	call	_sendRequestedData	;wreg free
  6983                           
  6984                           ;my_i2c.c: 287: msg_to_send = 0;
  6985  0006A6  0100               	movlb	0	; () banked
  6986  0006A8  6FF1               	movwf	??_i2c_int_handler& (0+255),b
  6987  0006AA  0E00               	movlw	0
  6988  0006AC  0100               	movlb	0	; () banked
  6989  0006AE  0100               	movlb	0	; () banked
  6990  0006B0  6FF8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6991  0006B2  0100               	movlb	0	; () banked
  6992  0006B4  51F1               	movf	??_i2c_int_handler& (0+255),w,b
  6993  0006B6  0012               	return	
  6994  0006B8                     __end_of_i2c_int_handler:
  6995                           	opt stack 0
  6996                           pclatu	equ	0xFFB
  6997                           pclath	equ	0xFFA
  6998                           tblptru	equ	0xFF8
  6999                           tblptrh	equ	0xFF7
  7000                           tblptrl	equ	0xFF6
  7001                           tablat	equ	0xFF5
  7002                           prodh	equ	0xFF4
  7003                           prodl	equ	0xFF3
  7004                           intcon	equ	0xFF2
  7005                           postinc0	equ	0xFEE
  7006                           fsr0h	equ	0xFEA
  7007                           fsr0l	equ	0xFE9
  7008                           wreg	equ	0xFE8
  7009                           indf1	equ	0xFE7
  7010                           postdec1	equ	0xFE5
  7011                           fsr1h	equ	0xFE2
  7012                           fsr1l	equ	0xFE1
  7013                           bsr	equ	0xFE0
  7014                           indf2	equ	0xFDF
  7015                           fsr2h	equ	0xFDA
  7016                           fsr2l	equ	0xFD9
  7017                           status	equ	0xFD8
  7018                           
  7019 ;; *************** function i2_ToMainHigh_sendmsg *****************
  7020 ;; Defined at:
  7021 ;;		line 127 in file "../src/messages.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  length          1    wreg     unsigned char 
  7024 ;;  msgtype         1    5[BANK0 ] unsigned char 
  7025 ;;  data            2    6[BANK0 ] PTR void 
  7026 ;;		 -> ADCBuffer(5), reqADData@buf(10), i2c_int_handler@error_buf(3), 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  length          1    8[BANK0 ] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      char 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7038 ;;      Params:         0       3       0       0       0
  7039 ;;      Locals:         0       1       0       0       0
  7040 ;;      Temps:          0       0       0       0       0
  7041 ;;      Totals:         0       4       0       0       0
  7042 ;;Total ram usage:        4 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    2
  7045 ;; This function calls:
  7046 ;;		i2_send_msg
  7047 ;; This function is called by:
  7048 ;;		_i2c_int_handler
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text41
  7053  001A92                     __ptext41:
  7054                           	opt stack 0
  7055  001A92                     i2_ToMainHigh_sendmsg:
  7056                           	opt stack 17
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;incstack = 0
  7060                           ;i2ToMainHigh_sendmsg@length stored from wreg
  7061  001A92  CFE8 F088          	movff	wreg,i2ToMainHigh_sendmsg@length
  7062                           
  7063                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7064                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  7065  001A96  0101               	movlb	1	; () banked
  7066  001A98  0E01               	movlw	high _ToMainHigh_MQ
  7067  001A9A  6E3A               	movwf	i2send_msg@qptr+1,c
  7068  001A9C  0101               	movlb	1	; () banked
  7069  001A9E  0E02               	movlw	low _ToMainHigh_MQ
  7070  001AA0  6E39               	movwf	i2send_msg@qptr,c
  7071  001AA2  C088  F03B         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  7072  001AA6  C085  F03C         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7073  001AAA  0100               	movlb	0	; () banked
  7074  001AAC  C087  F03E         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7075  001AB0  0100               	movlb	0	; () banked
  7076  001AB2  C086  F03D         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  7077  001AB6  EC8C  F006         	call	i2_send_msg	;wreg free
  7078  001ABA  0012               	return	
  7079  001ABC                     __end_ofi2_ToMainHigh_sendmsg:
  7080                           	opt stack 0
  7081                           pclatu	equ	0xFFB
  7082                           pclath	equ	0xFFA
  7083                           tblptru	equ	0xFF8
  7084                           tblptrh	equ	0xFF7
  7085                           tblptrl	equ	0xFF6
  7086                           tablat	equ	0xFF5
  7087                           prodh	equ	0xFF4
  7088                           prodl	equ	0xFF3
  7089                           intcon	equ	0xFF2
  7090                           postinc0	equ	0xFEE
  7091                           fsr0h	equ	0xFEA
  7092                           fsr0l	equ	0xFE9
  7093                           wreg	equ	0xFE8
  7094                           indf1	equ	0xFE7
  7095                           postdec1	equ	0xFE5
  7096                           fsr1h	equ	0xFE2
  7097                           fsr1l	equ	0xFE1
  7098                           bsr	equ	0xFE0
  7099                           indf2	equ	0xFDF
  7100                           fsr2h	equ	0xFDA
  7101                           fsr2l	equ	0xFD9
  7102                           status	equ	0xFD8
  7103                           
  7104 ;; *************** function i2_send_msg *****************
  7105 ;; Defined at:
  7106 ;;		line 25 in file "../src/messages.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7109 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7110 ;;  length          1   58[COMRAM] unsigned char 
  7111 ;;  msgtype         1   59[COMRAM] unsigned char 
  7112 ;;  data            2   60[COMRAM] PTR void 
  7113 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  7116 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7117 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7118 ;;  send_msg        2    0[BANK0 ] unsigned int 
  7119 ;;  send_msg        1    2[BANK0 ] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      char 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7129 ;;      Params:         6       0       0       0       0
  7130 ;;      Locals:         0       5       0       0       0
  7131 ;;      Temps:          1       0       0       0       0
  7132 ;;      Totals:         7       5       0       0       0
  7133 ;;Total ram usage:       12 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:    1
  7136 ;; This function calls:
  7137 ;;		i2_memcpy
  7138 ;; This function is called by:
  7139 ;;		i2_ToMainHigh_sendmsg
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text42
  7144  000D18                     __ptext42:
  7145                           	opt stack 0
  7146  000D18                     i2_send_msg:
  7147                           	opt stack 17
  7148                           
  7149                           ;messages.c: 26: unsigned char slot;
  7150                           ;messages.c: 28: msg *qmsg;
  7151                           ;messages.c: 29: size_t tlength = length;
  7152                           
  7153                           ;incstack = 0
  7154  000D18  0100               	movlb	0	; () banked
  7155  000D1A  C03B  F080         	movff	i2send_msg@length,i2send_msg@tlength
  7156  000D1E  0100               	movlb	0	; () banked
  7157  000D20  0100               	movlb	0	; () banked
  7158  000D22  6B81               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;messages.c: 39: slot = qptr->cur_write_ind;
  7162  000D24  EE20 F034          	lfsr	2,52
  7163  000D28  5039               	movf	i2send_msg@qptr,w,c
  7164  000D2A  26D9               	addwf	fsr2l,f,c
  7165  000D2C  503A               	movf	i2send_msg@qptr+1,w,c
  7166  000D2E  22DA               	addwfc	fsr2h,f,c
  7167  000D30  50DF               	movf	indf2,w,c
  7168  000D32  0100               	movlb	0	; () banked
  7169  000D34  0100               	movlb	0	; () banked
  7170  000D36  6F82               	movwf	i2send_msg@slot& (0+255),b
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  7174  000D38  0100               	movlb	0	; () banked
  7175  000D3A  0100               	movlb	0	; () banked
  7176  000D3C  5182               	movf	i2send_msg@slot& (0+255),w,b
  7177  000D3E  0D0D               	mullw	13
  7178  000D40  50F3               	movf	prodl,w,c
  7179  000D42  2439               	addwf	i2send_msg@qptr,w,c
  7180  000D44  0100               	movlb	0	; () banked
  7181  000D46  0100               	movlb	0	; () banked
  7182  000D48  6F83               	movwf	i2send_msg@qmsg& (0+255),b
  7183  000D4A  50F4               	movf	prodh,w,c
  7184  000D4C  203A               	addwfc	i2send_msg@qptr+1,w,c
  7185  000D4E  0100               	movlb	0	; () banked
  7186  000D50  6F84               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;messages.c: 42: if (qmsg->full != 0) {
  7190  000D52  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7191  000D56  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7192  000D5A  50DF               	movf	indf2,w,c
  7193  000D5C  B4D8               	btfsc	status,2,c
  7194  000D5E  D002               	goto	i2l3786
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;messages.c: 43: return (-1);
  7198  000D60  0EFF               	movlw	255
  7199  000D62  0012               	return	
  7200  000D64                     i2l3786:
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;messages.c: 44: }
  7204                           ;messages.c: 47: qmsg->length = length;
  7205  000D64  0100               	movlb	0	; () banked
  7206  000D66  EE20 F001          	lfsr	2,1
  7207  000D6A  0100               	movlb	0	; () banked
  7208  000D6C  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  7209  000D6E  26D9               	addwf	fsr2l,f,c
  7210  000D70  0100               	movlb	0	; () banked
  7211  000D72  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7212  000D74  22DA               	addwfc	fsr2h,f,c
  7213  000D76  C03B  FFDF         	movff	i2send_msg@length,indf2
  7214                           
  7215                           ;messages.c: 48: qmsg->msgtype = msgtype;
  7216  000D7A  0100               	movlb	0	; () banked
  7217  000D7C  EE20 F002          	lfsr	2,2
  7218  000D80  0100               	movlb	0	; () banked
  7219  000D82  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  7220  000D84  26D9               	addwf	fsr2l,f,c
  7221  000D86  0100               	movlb	0	; () banked
  7222  000D88  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7223  000D8A  22DA               	addwfc	fsr2h,f,c
  7224  000D8C  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  7228  000D90  0E03               	movlw	3
  7229  000D92  0100               	movlb	0	; () banked
  7230  000D94  0100               	movlb	0	; () banked
  7231  000D96  2583               	addwf	i2send_msg@qmsg& (0+255),w,b
  7232  000D98  6E2F               	movwf	i2memcpy@d1,c
  7233  000D9A  0E00               	movlw	0
  7234  000D9C  0100               	movlb	0	; () banked
  7235  000D9E  0100               	movlb	0	; () banked
  7236  000DA0  2184               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7237  000DA2  6E30               	movwf	i2memcpy@d1+1,c
  7238  000DA4  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7239  000DA8  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  7240  000DAC  C080  F033         	movff	i2send_msg@tlength,i2memcpy@n
  7241  000DB0  C081  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7242  000DB4  EC04  F00C         	call	i2_memcpy	;wreg free
  7243                           
  7244                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7245  000DB8  EE20 F034          	lfsr	2,52
  7246  000DBC  5039               	movf	i2send_msg@qptr,w,c
  7247  000DBE  26D9               	addwf	fsr2l,f,c
  7248  000DC0  503A               	movf	i2send_msg@qptr+1,w,c
  7249  000DC2  22DA               	addwfc	fsr2h,f,c
  7250  000DC4  EE10 F034          	lfsr	1,52
  7251  000DC8  5039               	movf	i2send_msg@qptr,w,c
  7252  000DCA  26E1               	addwf	fsr1l,f,c
  7253  000DCC  503A               	movf	i2send_msg@qptr+1,w,c
  7254  000DCE  22E2               	addwfc	fsr1h,f,c
  7255  000DD0  50E7               	movf	indf1,w,c
  7256  000DD2  6E3F               	movwf	??i2_send_msg& (0+255),c
  7257  000DD4  283F               	incf	??i2_send_msg,w,c
  7258  000DD6  0B03               	andlw	3
  7259  000DD8  6EDF               	movwf	indf2,c
  7260                           
  7261                           ;messages.c: 60: qmsg->full = 1;
  7262  000DDA  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7263  000DDE  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7264  000DE2  0E01               	movlw	1
  7265  000DE4  6EDF               	movwf	indf2,c
  7266                           
  7267                           ;messages.c: 61: return (1);
  7268  000DE6  0E01               	movlw	1
  7269  000DE8  0012               	return	
  7270  000DEA                     __end_ofi2_send_msg:
  7271                           	opt stack 0
  7272                           pclatu	equ	0xFFB
  7273                           pclath	equ	0xFFA
  7274                           tblptru	equ	0xFF8
  7275                           tblptrh	equ	0xFF7
  7276                           tblptrl	equ	0xFF6
  7277                           tablat	equ	0xFF5
  7278                           prodh	equ	0xFF4
  7279                           prodl	equ	0xFF3
  7280                           intcon	equ	0xFF2
  7281                           postinc0	equ	0xFEE
  7282                           fsr0h	equ	0xFEA
  7283                           fsr0l	equ	0xFE9
  7284                           wreg	equ	0xFE8
  7285                           indf1	equ	0xFE7
  7286                           postdec1	equ	0xFE5
  7287                           fsr1h	equ	0xFE2
  7288                           fsr1l	equ	0xFE1
  7289                           bsr	equ	0xFE0
  7290                           indf2	equ	0xFDF
  7291                           fsr2h	equ	0xFDA
  7292                           fsr2l	equ	0xFD9
  7293                           status	equ	0xFD8
  7294                           
  7295 ;; *************** function i2_memcpy *****************
  7296 ;; Defined at:
  7297 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  d1              2   46[COMRAM] PTR void 
  7300 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7301 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7302 ;;		 -> main@msgbuffer(11), 
  7303 ;;  s1              2   48[COMRAM] PTR const void 
  7304 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7305 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7306 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  7307 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7308 ;;  n               2   50[COMRAM] unsigned int 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  7311 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7312 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7313 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  7314 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7315 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  7316 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7317 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7318 ;;		 -> main@msgbuffer(11), 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  2   46[COMRAM] PTR void 
  7321 ;; Registers used:
  7322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7328 ;;      Params:         6       0       0       0       0
  7329 ;;      Locals:         4       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0
  7331 ;;      Totals:        10       0       0       0       0
  7332 ;;Total ram usage:       10 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		i2_send_msg
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text43
  7342  001808                     __ptext43:
  7343                           	opt stack 0
  7344  001808                     i2_memcpy:
  7345                           	opt stack 17
  7346                           
  7347                           ;incstack = 0
  7348  001808  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7349  00180C  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  7350  001810  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7351  001814  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  7352  001818  D00E               	goto	i2l3842
  7353  00181A                     i2l3836:
  7354  00181A  C037  FFD9         	movff	i2memcpy@s,fsr2l
  7355  00181E  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  7356  001822  C035  FFE1         	movff	i2memcpy@d,fsr1l
  7357  001826  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  7358  00182A  CFDF FFE7          	movff	indf2,indf1
  7359  00182E  4A37               	infsnz	i2memcpy@s,f,c
  7360  001830  2A38               	incf	i2memcpy@s+1,f,c
  7361  001832  4A35               	infsnz	i2memcpy@d,f,c
  7362  001834  2A36               	incf	i2memcpy@d+1,f,c
  7363  001836                     i2l3842:
  7364  001836  0633               	decf	i2memcpy@n,f,c
  7365  001838  A0D8               	btfss	status,0,c
  7366  00183A  0634               	decf	i2memcpy@n+1,f,c
  7367  00183C  2833               	incf	i2memcpy@n& (0+255),w,c
  7368  00183E  B4D8               	btfsc	status,2,c
  7369  001840  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  7370  001842  B4D8               	btfsc	status,2,c
  7371                           
  7372                           ;	Return value of i2_memcpy is never used
  7373  001844  0012               	return	
  7374  001846  D7E9               	goto	i2l3836
  7375  001848                     __end_ofi2_memcpy:
  7376                           	opt stack 0
  7377                           pclatu	equ	0xFFB
  7378                           pclath	equ	0xFFA
  7379                           tblptru	equ	0xFF8
  7380                           tblptrh	equ	0xFF7
  7381                           tblptrl	equ	0xFF6
  7382                           tablat	equ	0xFF5
  7383                           prodh	equ	0xFF4
  7384                           prodl	equ	0xFF3
  7385                           intcon	equ	0xFF2
  7386                           postinc0	equ	0xFEE
  7387                           fsr0h	equ	0xFEA
  7388                           fsr0l	equ	0xFE9
  7389                           wreg	equ	0xFE8
  7390                           indf1	equ	0xFE7
  7391                           postdec1	equ	0xFE5
  7392                           fsr1h	equ	0xFE2
  7393                           fsr1l	equ	0xFE1
  7394                           bsr	equ	0xFE0
  7395                           indf2	equ	0xFDF
  7396                           fsr2h	equ	0xFDA
  7397                           fsr2l	equ	0xFD9
  7398                           status	equ	0xFD8
  7399                           
  7400 ;; *************** function _setBrainReqData *****************
  7401 ;; Defined at:
  7402 ;;		line 16 in file "../src/sensorcomm.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  buf             2   48[COMRAM] PTR unsigned char 
  7405 ;;		 -> NULL(0), main@ic(121), 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  tempBrain       2   50[COMRAM] PTR struct .
  7408 ;;		 -> NULL(0), main@ic(121), 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;		None               void
  7411 ;; Registers used:
  7412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7418 ;;      Params:         2       0       0       0       0
  7419 ;;      Locals:         2       0       0       0       0
  7420 ;;      Temps:          0       0       0       0       0
  7421 ;;      Totals:         4       0       0       0       0
  7422 ;;Total ram usage:        4 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    1
  7425 ;; This function calls:
  7426 ;;		_unpackBrainMsg
  7427 ;; This function is called by:
  7428 ;;		_i2c_int_handler
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text44
  7433  0019DE                     __ptext44:
  7434                           	opt stack 0
  7435  0019DE                     _setBrainReqData:
  7436                           	opt stack 18
  7437                           
  7438                           ;sensorcomm.c: 18: BrainMsg* tempBrain = unpackBrainMsg(buf);
  7439                           
  7440                           ;incstack = 0
  7441  0019DE  C032  F030         	movff	setBrainReqData@buf+1,unpackBrainMsg@buf+1
  7442  0019E2  C031  F02F         	movff	setBrainReqData@buf,unpackBrainMsg@buf
  7443  0019E6  ECE9  F00D         	call	_unpackBrainMsg	;wreg free
  7444  0019EA  C02F  F033         	movff	?_unpackBrainMsg,setBrainReqData@tempBrain
  7445  0019EE  C030  F034         	movff	?_unpackBrainMsg+1,setBrainReqData@tempBrain+1
  7446                           
  7447                           ;sensorcomm.c: 21: BrainMsgRecv.flags = tempBrain->flags;
  7448  0019F2  C033  FFD9         	movff	setBrainReqData@tempBrain,fsr2l
  7449  0019F6  C034  FFDA         	movff	setBrainReqData@tempBrain+1,fsr2h
  7450  0019FA  50DF               	movf	indf2,w,c
  7451  0019FC  6E40               	movwf	_BrainMsgRecv,c
  7452                           
  7453                           ;sensorcomm.c: 22: BrainMsgRecv.sensorMask = tempBrain->sensorMask;
  7454  0019FE  EE20 F001          	lfsr	2,1
  7455  001A02  5033               	movf	setBrainReqData@tempBrain,w,c
  7456  001A04  26D9               	addwf	fsr2l,f,c
  7457  001A06  5034               	movf	setBrainReqData@tempBrain+1,w,c
  7458  001A08  22DA               	addwfc	fsr2h,f,c
  7459  001A0A  50DF               	movf	indf2,w,c
  7460  001A0C  6E41               	movwf	_BrainMsgRecv+1,c
  7461  001A0E  0012               	return	
  7462  001A10                     __end_of_setBrainReqData:
  7463                           	opt stack 0
  7464                           pclatu	equ	0xFFB
  7465                           pclath	equ	0xFFA
  7466                           tblptru	equ	0xFF8
  7467                           tblptrh	equ	0xFF7
  7468                           tblptrl	equ	0xFF6
  7469                           tablat	equ	0xFF5
  7470                           prodh	equ	0xFF4
  7471                           prodl	equ	0xFF3
  7472                           intcon	equ	0xFF2
  7473                           postinc0	equ	0xFEE
  7474                           fsr0h	equ	0xFEA
  7475                           fsr0l	equ	0xFE9
  7476                           wreg	equ	0xFE8
  7477                           indf1	equ	0xFE7
  7478                           postdec1	equ	0xFE5
  7479                           fsr1h	equ	0xFE2
  7480                           fsr1l	equ	0xFE1
  7481                           bsr	equ	0xFE0
  7482                           indf2	equ	0xFDF
  7483                           fsr2h	equ	0xFDA
  7484                           fsr2l	equ	0xFD9
  7485                           status	equ	0xFD8
  7486                           
  7487 ;; *************** function _unpackBrainMsg *****************
  7488 ;; Defined at:
  7489 ;;		line 42 in file "../../../../common/communication/brain_rover.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  buf             2   46[COMRAM] PTR unsigned char 
  7492 ;;		 -> NULL(0), main@ic(121), 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2   46[COMRAM] PTR struct .
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7504 ;;      Params:         2       0       0       0       0
  7505 ;;      Locals:         0       0       0       0       0
  7506 ;;      Temps:          0       0       0       0       0
  7507 ;;      Totals:         2       0       0       0       0
  7508 ;;Total ram usage:        2 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_setBrainReqData
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text45
  7518  001BD2                     __ptext45:
  7519                           	opt stack 0
  7520  001BD2                     _unpackBrainMsg:
  7521                           	opt stack 18
  7522                           
  7523                           ;brain_rover.c: 43: return (BrainMsg*) buf;
  7524                           
  7525                           ;incstack = 0
  7526  001BD2  C030  F030         	movff	unpackBrainMsg@buf+1,?_unpackBrainMsg+1
  7527  001BD6  C02F  F02F         	movff	unpackBrainMsg@buf,?_unpackBrainMsg
  7528  001BDA  0012               	return	
  7529  001BDC                     __end_of_unpackBrainMsg:
  7530                           	opt stack 0
  7531                           pclatu	equ	0xFFB
  7532                           pclath	equ	0xFFA
  7533                           tblptru	equ	0xFF8
  7534                           tblptrh	equ	0xFF7
  7535                           tblptrl	equ	0xFF6
  7536                           tablat	equ	0xFF5
  7537                           prodh	equ	0xFF4
  7538                           prodl	equ	0xFF3
  7539                           intcon	equ	0xFF2
  7540                           postinc0	equ	0xFEE
  7541                           fsr0h	equ	0xFEA
  7542                           fsr0l	equ	0xFE9
  7543                           wreg	equ	0xFE8
  7544                           indf1	equ	0xFE7
  7545                           postdec1	equ	0xFE5
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           bsr	equ	0xFE0
  7549                           indf2	equ	0xFDF
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           
  7554 ;; *************** function _sendRequestedData *****************
  7555 ;; Defined at:
  7556 ;;		line 25 in file "../src/sensorcomm.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;		None
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;		None               void
  7563 ;; Registers used:
  7564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7570 ;;      Params:         0       0       0       0       0
  7571 ;;      Locals:         0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0
  7573 ;;      Totals:         0       0       0       0       0
  7574 ;;Total ram usage:        0 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    3
  7577 ;; This function calls:
  7578 ;;		_sendADdata
  7579 ;;		i2_resetADacc
  7580 ;; This function is called by:
  7581 ;;		_i2c_int_handler
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text46
  7586  001B84                     __ptext46:
  7587                           	opt stack 0
  7588  001B84                     _sendRequestedData:
  7589                           	opt stack 16
  7590                           
  7591                           ;sensorcomm.c: 26: if(BrainMsgRecv.flags == 1){
  7592                           
  7593                           ;incstack = 0
  7594  001B84  0440               	decf	_BrainMsgRecv,w,c
  7595  001B86  A4D8               	btfss	status,2,c
  7596  001B88  0012               	return	
  7597                           
  7598                           ;sensorcomm.c: 27: if(BrainMsgRecv.sensorMask == 0){
  7599  001B8A  6641               	tstfsz	_BrainMsgRecv+1,c
  7600  001B8C  0012               	return	
  7601                           
  7602                           ;sensorcomm.c: 28: sendADdata();
  7603  001B8E  EC93  F009         	call	_sendADdata	;wreg free
  7604                           
  7605                           ;sensorcomm.c: 29: resetADacc();
  7606  001B92  EC0F  F00B         	call	i2_resetADacc	;wreg free
  7607  001B96  0012               	return	
  7608  001B98                     __end_of_sendRequestedData:
  7609                           	opt stack 0
  7610                           pclatu	equ	0xFFB
  7611                           pclath	equ	0xFFA
  7612                           tblptru	equ	0xFF8
  7613                           tblptrh	equ	0xFF7
  7614                           tblptrl	equ	0xFF6
  7615                           tablat	equ	0xFF5
  7616                           prodh	equ	0xFF4
  7617                           prodl	equ	0xFF3
  7618                           intcon	equ	0xFF2
  7619                           postinc0	equ	0xFEE
  7620                           fsr0h	equ	0xFEA
  7621                           fsr0l	equ	0xFE9
  7622                           wreg	equ	0xFE8
  7623                           indf1	equ	0xFE7
  7624                           postdec1	equ	0xFE5
  7625                           fsr1h	equ	0xFE2
  7626                           fsr1l	equ	0xFE1
  7627                           bsr	equ	0xFE0
  7628                           indf2	equ	0xFDF
  7629                           fsr2h	equ	0xFDA
  7630                           fsr2l	equ	0xFD9
  7631                           status	equ	0xFD8
  7632                           
  7633 ;; *************** function i2_resetADacc *****************
  7634 ;; Defined at:
  7635 ;;		line 72 in file "../src/sensorcomm.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  resetADacc      2   49[COMRAM] int 
  7640 ;; Return value:  Size  Location     Type
  7641 ;;		None               void
  7642 ;; Registers used:
  7643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7649 ;;      Params:         0       0       0       0       0
  7650 ;;      Locals:         2       0       0       0       0
  7651 ;;      Temps:          3       0       0       0       0
  7652 ;;      Totals:         5       0       0       0       0
  7653 ;;Total ram usage:        5 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_sendRequestedData
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text47
  7663  00161E                     __ptext47:
  7664                           	opt stack 0
  7665  00161E                     i2_resetADacc:
  7666                           	opt stack 18
  7667                           
  7668                           ;sensorcomm.c: 73: int i = 0;
  7669                           
  7670                           ;incstack = 0
  7671  00161E  0E00               	movlw	0
  7672  001620  6E33               	movwf	i2resetADacc@i+1,c
  7673  001622  0E00               	movlw	0
  7674  001624  6E32               	movwf	i2resetADacc@i,c
  7675  001626  D00C               	goto	i2l3820
  7676  001628                     i2l3816:
  7677                           
  7678                           ;sensorcomm.c: 75: ADacc.data[i].data = 0;
  7679  001628  0102               	movlb	2	; () banked
  7680  00162A  0E01               	movlw	low (_ADacc+1)
  7681  00162C  2432               	addwf	i2resetADacc@i,w,c
  7682  00162E  6ED9               	movwf	fsr2l,c
  7683  001630  0102               	movlb	2	; () banked
  7684  001632  0E02               	movlw	high (_ADacc+1)
  7685  001634  2033               	addwfc	i2resetADacc@i+1,w,c
  7686  001636  6EDA               	movwf	fsr2h,c
  7687  001638  0E00               	movlw	0
  7688  00163A  6EDF               	movwf	indf2,c
  7689                           
  7690                           ; BSR set to: 2
  7691  00163C  4A32               	infsnz	i2resetADacc@i,f,c
  7692  00163E  2A33               	incf	i2resetADacc@i+1,f,c
  7693  001640                     i2l3820:
  7694  001640  0102               	movlb	2	; () banked
  7695  001642  0102               	movlb	2	; () banked
  7696  001644  5100               	movf	_ADacc& (0+255),w,b
  7697  001646  6E2F               	movwf	??i2_resetADacc& (0+255),c
  7698  001648  6A30               	clrf	(??i2_resetADacc+1)& (0+255),c
  7699  00164A  5033               	movf	i2resetADacc@i+1,w,c
  7700  00164C  0A80               	xorlw	128
  7701  00164E  6E31               	movwf	(??i2_resetADacc+2)& (0+255),c
  7702  001650  502F               	movf	??i2_resetADacc,w,c
  7703  001652  5C32               	subwf	i2resetADacc@i,w,c
  7704  001654  5030               	movf	??i2_resetADacc+1,w,c
  7705  001656  0A80               	xorlw	128
  7706  001658  5831               	subwfb	(??i2_resetADacc+2)& (0+255),w,c
  7707  00165A  A0D8               	btfss	status,0,c
  7708  00165C  D7E5               	goto	i2l3816
  7709                           
  7710                           ; BSR set to: 2
  7711                           ;sensorcomm.c: 76: }
  7712                           ;sensorcomm.c: 77: ADacc.len = 0;
  7713                           
  7714                           ; BSR set to: 2
  7715  00165E  6E2F               	movwf	??i2_resetADacc& (0+255),c
  7716  001660  0E00               	movlw	0
  7717  001662  0102               	movlb	2	; () banked
  7718  001664  0102               	movlb	2	; () banked
  7719  001666  6F00               	movwf	_ADacc& (0+255),b
  7720  001668  502F               	movf	??i2_resetADacc& (0+255),w,c
  7721                           
  7722                           ; BSR set to: 2
  7723  00166A  0012               	return	
  7724  00166C                     __end_ofi2_resetADacc:
  7725                           	opt stack 0
  7726                           pclatu	equ	0xFFB
  7727                           pclath	equ	0xFFA
  7728                           tblptru	equ	0xFF8
  7729                           tblptrh	equ	0xFF7
  7730                           tblptrl	equ	0xFF6
  7731                           tablat	equ	0xFF5
  7732                           prodh	equ	0xFF4
  7733                           prodl	equ	0xFF3
  7734                           intcon	equ	0xFF2
  7735                           postinc0	equ	0xFEE
  7736                           fsr0h	equ	0xFEA
  7737                           fsr0l	equ	0xFE9
  7738                           wreg	equ	0xFE8
  7739                           indf1	equ	0xFE7
  7740                           postdec1	equ	0xFE5
  7741                           fsr1h	equ	0xFE2
  7742                           fsr1l	equ	0xFE1
  7743                           bsr	equ	0xFE0
  7744                           indf2	equ	0xFDF
  7745                           fsr2h	equ	0xFDA
  7746                           fsr2l	equ	0xFD9
  7747                           status	equ	0xFD8
  7748                           
  7749 ;; *************** function _sendADdata *****************
  7750 ;; Defined at:
  7751 ;;		line 34 in file "../src/sensorcomm.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;		None
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  outBuff       103    8[BANK0 ] unsigned char [103]
  7756 ;;  bytes_packed    2  111[BANK0 ] int 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7766 ;;      Params:         0       0       0       0       0
  7767 ;;      Locals:         0     105       0       0       0
  7768 ;;      Temps:          0       0       0       0       0
  7769 ;;      Totals:         0     105       0       0       0
  7770 ;;Total ram usage:      105 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    2
  7773 ;; This function calls:
  7774 ;;		_packADData
  7775 ;;		i2_start_i2c_slave_reply
  7776 ;; This function is called by:
  7777 ;;		_sendRequestedData
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text48
  7782  001326                     __ptext48:
  7783                           	opt stack 0
  7784  001326                     _sendADdata:
  7785                           	opt stack 16
  7786                           
  7787                           ;sensorcomm.c: 36: char outBuff[103];
  7788                           ;sensorcomm.c: 37: int bytes_packed = packADData( ADacc.data, ADacc.len, outBuff, sizeof
      +                          (outBuff));
  7789                           
  7790                           ; BSR set to: 2
  7791                           ;incstack = 0
  7792  001326  0102               	movlb	2	; () banked
  7793  001328  0E02               	movlw	high (_ADacc+1)
  7794  00132A  0100               	movlb	0	; () banked
  7795  00132C  0100               	movlb	0	; () banked
  7796  00132E  6F81               	movwf	(packADData@data+1)& (0+255),b
  7797  001330  0102               	movlb	2	; () banked
  7798  001332  0E01               	movlw	low (_ADacc+1)
  7799  001334  0100               	movlb	0	; () banked
  7800  001336  0100               	movlb	0	; () banked
  7801  001338  6F80               	movwf	packADData@data& (0+255),b
  7802  00133A  0102               	movlb	2	; () banked
  7803  00133C  0100               	movlb	0	; () banked
  7804  00133E  C200  F082         	movff	_ADacc,packADData@len
  7805  001342  0100               	movlb	0	; () banked
  7806  001344  0100               	movlb	0	; () banked
  7807  001346  6B83               	clrf	(packADData@len+1)& (0+255),b
  7808  001348  0100               	movlb	0	; () banked
  7809  00134A  0E00               	movlw	high sendADdata@outBuff
  7810  00134C  0100               	movlb	0	; () banked
  7811  00134E  0100               	movlb	0	; () banked
  7812  001350  6F85               	movwf	(packADData@out+1)& (0+255),b
  7813  001352  0100               	movlb	0	; () banked
  7814  001354  0E88               	movlw	low sendADdata@outBuff
  7815  001356  0100               	movlb	0	; () banked
  7816  001358  0100               	movlb	0	; () banked
  7817  00135A  6F84               	movwf	packADData@out& (0+255),b
  7818  00135C  0E00               	movlw	0
  7819  00135E  0100               	movlb	0	; () banked
  7820  001360  0100               	movlb	0	; () banked
  7821  001362  6F87               	movwf	(packADData@maxout+1)& (0+255),b
  7822  001364  0E67               	movlw	103
  7823  001366  0100               	movlb	0	; () banked
  7824  001368  6F86               	movwf	packADData@maxout& (0+255),b
  7825  00136A  EC24  F00C         	call	_packADData	;wreg free
  7826  00136E  0100               	movlb	0	; () banked
  7827  001370  C080  F0EF         	movff	?_packADData,sendADdata@bytes_packed
  7828  001374  0100               	movlb	0	; () banked
  7829  001376  C081  F0F0         	movff	?_packADData+1,sendADdata@bytes_packed+1
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;sensorcomm.c: 38: if(bytes_packed == 0){
  7833  00137A  0100               	movlb	0	; () banked
  7834  00137C  0100               	movlb	0	; () banked
  7835  00137E  51F0               	movf	(sendADdata@bytes_packed+1)& (0+255),w,b
  7836  001380  11EF               	iorwf	sendADdata@bytes_packed& (0+255),w,b
  7837  001382  B4D8               	btfsc	status,2,c
  7838  001384  0012               	return	
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;sensorcomm.c: 41: else{
  7842                           ;sensorcomm.c: 44: start_i2c_slave_reply(103, outBuff);
  7843                           
  7844                           ; BSR set to: 0
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;sensorcomm.c: 40: }
  7848  001386  0100               	movlb	0	; () banked
  7849  001388  0E00               	movlw	high sendADdata@outBuff
  7850  00138A  6E30               	movwf	i2start_i2c_slave_reply@msg+1,c
  7851  00138C  0100               	movlb	0	; () banked
  7852  00138E  0E88               	movlw	low sendADdata@outBuff
  7853  001390  6E2F               	movwf	i2start_i2c_slave_reply@msg,c
  7854  001392  0E67               	movlw	103
  7855  001394  EC12  F006         	call	i2_start_i2c_slave_reply
  7856  001398  0012               	return	
  7857  00139A                     __end_of_sendADdata:
  7858                           	opt stack 0
  7859                           pclatu	equ	0xFFB
  7860                           pclath	equ	0xFFA
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           intcon	equ	0xFF2
  7868                           postinc0	equ	0xFEE
  7869                           fsr0h	equ	0xFEA
  7870                           fsr0l	equ	0xFE9
  7871                           wreg	equ	0xFE8
  7872                           indf1	equ	0xFE7
  7873                           postdec1	equ	0xFE5
  7874                           fsr1h	equ	0xFE2
  7875                           fsr1l	equ	0xFE1
  7876                           bsr	equ	0xFE0
  7877                           indf2	equ	0xFDF
  7878                           fsr2h	equ	0xFDA
  7879                           fsr2l	equ	0xFD9
  7880                           status	equ	0xFD8
  7881                           
  7882 ;; *************** function i2_start_i2c_slave_reply *****************
  7883 ;; Defined at:
  7884 ;;		line 60 in file "../src/my_i2c.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  length          1    wreg     unsigned char 
  7887 ;;  msg             2   46[COMRAM] PTR unsigned char 
  7888 ;;		 -> sendADdata@outBuff(103), main@msgbuffer(11), 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  length          1   50[COMRAM] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;		None               void
  7893 ;; Registers used:
  7894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7900 ;;      Params:         2       0       0       0       0
  7901 ;;      Locals:         1       0       0       0       0
  7902 ;;      Temps:          2       0       0       0       0
  7903 ;;      Totals:         5       0       0       0       0
  7904 ;;Total ram usage:        5 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_sendADdata
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text49
  7914  000C24                     __ptext49:
  7915                           	opt stack 0
  7916  000C24                     i2_start_i2c_slave_reply:
  7917                           	opt stack 17
  7918                           
  7919                           ;incstack = 0
  7920                           ;i2start_i2c_slave_reply@length stored from wreg
  7921  000C24  CFE8 F033          	movff	wreg,i2start_i2c_slave_reply@length
  7922                           
  7923                           ;my_i2c.c: 62: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7924  000C28  0101               	movlb	1	; () banked
  7925  000C2A  EE20 F076          	lfsr	2,118
  7926  000C2E  0101               	movlb	1	; () banked
  7927  000C30  5100               	movf	_ic_ptr& (0+255),w,b
  7928  000C32  26D9               	addwf	fsr2l,f,c
  7929  000C34  0101               	movlb	1	; () banked
  7930  000C36  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7931  000C38  22DA               	addwfc	fsr2h,f,c
  7932  000C3A  0E00               	movlw	0
  7933  000C3C  6EDF               	movwf	indf2,c
  7934  000C3E  D03A               	goto	i2l3808
  7935  000C40                     i2l3804:
  7936                           
  7937                           ; BSR set to: 1
  7938                           ;my_i2c.c: 63: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7939  000C40  0101               	movlb	1	; () banked
  7940  000C42  EE20 F076          	lfsr	2,118
  7941  000C46  0101               	movlb	1	; () banked
  7942  000C48  5100               	movf	_ic_ptr& (0+255),w,b
  7943  000C4A  26D9               	addwf	fsr2l,f,c
  7944  000C4C  0101               	movlb	1	; () banked
  7945  000C4E  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7946  000C50  22DA               	addwfc	fsr2h,f,c
  7947  000C52  50DF               	movf	indf2,w,c
  7948  000C54  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7949  000C56  5031               	movf	??i2_start_i2c_slave_reply,w,c
  7950  000C58  0D01               	mullw	1
  7951  000C5A  50F3               	movf	prodl,w,c
  7952  000C5C  242F               	addwf	i2start_i2c_slave_reply@msg,w,c
  7953  000C5E  6ED9               	movwf	fsr2l,c
  7954  000C60  50F4               	movf	prodh,w,c
  7955  000C62  2030               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7956  000C64  6EDA               	movwf	fsr2h,c
  7957  000C66  0101               	movlb	1	; () banked
  7958  000C68  EE10 F076          	lfsr	1,118
  7959  000C6C  0101               	movlb	1	; () banked
  7960  000C6E  5100               	movf	_ic_ptr& (0+255),w,b
  7961  000C70  26E1               	addwf	fsr1l,f,c
  7962  000C72  0101               	movlb	1	; () banked
  7963  000C74  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7964  000C76  22E2               	addwfc	fsr1h,f,c
  7965  000C78  50E7               	movf	indf1,w,c
  7966  000C7A  6E32               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7967  000C7C  5032               	movf	??i2_start_i2c_slave_reply+1,w,c
  7968  000C7E  0D01               	mullw	1
  7969  000C80  0E0F               	movlw	15
  7970  000C82  26F3               	addwf	prodl,f,c
  7971  000C84  0E00               	movlw	0
  7972  000C86  22F4               	addwfc	prodh,f,c
  7973  000C88  50F3               	movf	prodl,w,c
  7974  000C8A  0101               	movlb	1	; () banked
  7975  000C8C  0101               	movlb	1	; () banked
  7976  000C8E  2500               	addwf	_ic_ptr& (0+255),w,b
  7977  000C90  6EE1               	movwf	fsr1l,c
  7978  000C92  50F4               	movf	prodh,w,c
  7979  000C94  0101               	movlb	1	; () banked
  7980  000C96  0101               	movlb	1	; () banked
  7981  000C98  2101               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7982  000C9A  6EE2               	movwf	fsr1h,c
  7983  000C9C  CFDF FFE7          	movff	indf2,indf1
  7984                           
  7985                           ; BSR set to: 1
  7986  000CA0  0101               	movlb	1	; () banked
  7987  000CA2  EE20 F076          	lfsr	2,118
  7988  000CA6  0101               	movlb	1	; () banked
  7989  000CA8  5100               	movf	_ic_ptr& (0+255),w,b
  7990  000CAA  26D9               	addwf	fsr2l,f,c
  7991  000CAC  0101               	movlb	1	; () banked
  7992  000CAE  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  7993  000CB0  22DA               	addwfc	fsr2h,f,c
  7994  000CB2  2ADF               	incf	indf2,f,c
  7995  000CB4                     i2l3808:
  7996                           
  7997                           ; BSR set to: 1
  7998  000CB4  0101               	movlb	1	; () banked
  7999  000CB6  EE20 F076          	lfsr	2,118
  8000  000CBA  0101               	movlb	1	; () banked
  8001  000CBC  5100               	movf	_ic_ptr& (0+255),w,b
  8002  000CBE  26D9               	addwf	fsr2l,f,c
  8003  000CC0  0101               	movlb	1	; () banked
  8004  000CC2  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8005  000CC4  22DA               	addwfc	fsr2h,f,c
  8006  000CC6  50DF               	movf	indf2,w,c
  8007  000CC8  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8008  000CCA  5033               	movf	i2start_i2c_slave_reply@length,w,c
  8009  000CCC  5C31               	subwf	??i2_start_i2c_slave_reply,w,c
  8010  000CCE  A0D8               	btfss	status,0,c
  8011  000CD0  D7B7               	goto	i2l3804
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;my_i2c.c: 64: }
  8015                           ;my_i2c.c: 65: ic_ptr->outbuflen = length;
  8016                           
  8017                           ; BSR set to: 1
  8018  000CD2  0101               	movlb	1	; () banked
  8019  000CD4  EE20 F076          	lfsr	2,118
  8020  000CD8  0101               	movlb	1	; () banked
  8021  000CDA  5100               	movf	_ic_ptr& (0+255),w,b
  8022  000CDC  26D9               	addwf	fsr2l,f,c
  8023  000CDE  0101               	movlb	1	; () banked
  8024  000CE0  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8025  000CE2  22DA               	addwfc	fsr2h,f,c
  8026  000CE4  C033  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  8027                           
  8028                           ;my_i2c.c: 66: ic_ptr->outbufind = 1;
  8029  000CE8  0101               	movlb	1	; () banked
  8030  000CEA  EE20 F077          	lfsr	2,119
  8031  000CEE  0101               	movlb	1	; () banked
  8032  000CF0  5100               	movf	_ic_ptr& (0+255),w,b
  8033  000CF2  26D9               	addwf	fsr2l,f,c
  8034  000CF4  0101               	movlb	1	; () banked
  8035  000CF6  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8036  000CF8  22DA               	addwfc	fsr2h,f,c
  8037  000CFA  0E01               	movlw	1
  8038  000CFC  6EDF               	movwf	indf2,c
  8039                           
  8040                           ;my_i2c.c: 69: SSPBUF = ic_ptr->outbuffer[0];
  8041  000CFE  0101               	movlb	1	; () banked
  8042  000D00  EE20 F00F          	lfsr	2,15
  8043  000D04  0101               	movlb	1	; () banked
  8044  000D06  5100               	movf	_ic_ptr& (0+255),w,b
  8045  000D08  26D9               	addwf	fsr2l,f,c
  8046  000D0A  0101               	movlb	1	; () banked
  8047  000D0C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8048  000D0E  22DA               	addwfc	fsr2h,f,c
  8049  000D10  50DF               	movf	indf2,w,c
  8050  000D12  6EC9               	movwf	4041,c	;volatile
  8051                           
  8052                           ; BSR set to: 1
  8053                           ;my_i2c.c: 72: SSPCON1bits.CKP = 1;
  8054  000D14  88C6               	bsf	4038,4,c	;volatile
  8055                           
  8056                           ; BSR set to: 1
  8057  000D16  0012               	return	
  8058  000D18                     __end_ofi2_start_i2c_slave_reply:
  8059                           	opt stack 0
  8060                           pclatu	equ	0xFFB
  8061                           pclath	equ	0xFFA
  8062                           tblptru	equ	0xFF8
  8063                           tblptrh	equ	0xFF7
  8064                           tblptrl	equ	0xFF6
  8065                           tablat	equ	0xFF5
  8066                           prodh	equ	0xFF4
  8067                           prodl	equ	0xFF3
  8068                           intcon	equ	0xFF2
  8069                           postinc0	equ	0xFEE
  8070                           fsr0h	equ	0xFEA
  8071                           fsr0l	equ	0xFE9
  8072                           wreg	equ	0xFE8
  8073                           indf1	equ	0xFE7
  8074                           postdec1	equ	0xFE5
  8075                           fsr1h	equ	0xFE2
  8076                           fsr1l	equ	0xFE1
  8077                           bsr	equ	0xFE0
  8078                           indf2	equ	0xFDF
  8079                           fsr2h	equ	0xFDA
  8080                           fsr2l	equ	0xFD9
  8081                           status	equ	0xFD8
  8082                           
  8083 ;; *************** function _packADData *****************
  8084 ;; Defined at:
  8085 ;;		line 38 in file "../../../../common/communication/brain_rover.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  data            2    0[BANK0 ] PTR struct .
  8088 ;;		 -> ADacc(101), 
  8089 ;;  len             2    2[BANK0 ] int 
  8090 ;;  out             2    4[BANK0 ] PTR unsigned char 
  8091 ;;		 -> sendADdata@outBuff(103), 
  8092 ;;  maxout          2    6[BANK0 ] int 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  2    0[BANK0 ] int 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8104 ;;      Params:         0       8       0       0       0
  8105 ;;      Locals:         0       0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0
  8107 ;;      Totals:         0       8       0       0       0
  8108 ;;Total ram usage:        8 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    1
  8111 ;; This function calls:
  8112 ;;		_packReturnData
  8113 ;; This function is called by:
  8114 ;;		_sendADdata
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           	psect	text50
  8119  001848                     __ptext50:
  8120                           	opt stack 0
  8121  001848                     _packADData:
  8122                           	opt stack 16
  8123                           
  8124                           ;brain_rover.c: 39: return packReturnData((char*)data, len*sizeof(sensorADData), (RoverM
      +                          sg*)out, maxout, 0);
  8125                           
  8126                           ; BSR set to: 1
  8127                           ;incstack = 0
  8128  001848  0100               	movlb	0	; () banked
  8129  00184A  C081  F030         	movff	packADData@data+1,packReturnData@data+1
  8130  00184E  0100               	movlb	0	; () banked
  8131  001850  C080  F02F         	movff	packADData@data,packReturnData@data
  8132  001854  C082  F031         	movff	packADData@len,packReturnData@payloadLen
  8133  001858  C083  F032         	movff	packADData@len+1,packReturnData@payloadLen+1
  8134  00185C  0100               	movlb	0	; () banked
  8135  00185E  C085  F034         	movff	packADData@out+1,packReturnData@msg+1
  8136  001862  0100               	movlb	0	; () banked
  8137  001864  C084  F033         	movff	packADData@out,packReturnData@msg
  8138  001868  C086  F035         	movff	packADData@maxout,packReturnData@maxout
  8139  00186C  C087  F036         	movff	packADData@maxout+1,packReturnData@maxout+1
  8140  001870  0E00               	movlw	0
  8141  001872  6E38               	movwf	packReturnData@sensorID+1,c
  8142  001874  0E00               	movlw	0
  8143  001876  6E37               	movwf	packReturnData@sensorID,c
  8144  001878  EC06  F008         	call	_packReturnData	;wreg free
  8145  00187C  C02F  F080         	movff	?_packReturnData,?_packADData
  8146  001880  C030  F081         	movff	?_packReturnData+1,?_packADData+1
  8147  001884  0012               	return	
  8148  001886                     __end_of_packADData:
  8149                           	opt stack 0
  8150                           pclatu	equ	0xFFB
  8151                           pclath	equ	0xFFA
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           intcon	equ	0xFF2
  8159                           postinc0	equ	0xFEE
  8160                           fsr0h	equ	0xFEA
  8161                           fsr0l	equ	0xFE9
  8162                           wreg	equ	0xFE8
  8163                           indf1	equ	0xFE7
  8164                           postdec1	equ	0xFE5
  8165                           fsr1h	equ	0xFE2
  8166                           fsr1l	equ	0xFE1
  8167                           bsr	equ	0xFE0
  8168                           indf2	equ	0xFDF
  8169                           fsr2h	equ	0xFDA
  8170                           fsr2l	equ	0xFD9
  8171                           status	equ	0xFD8
  8172                           
  8173 ;; *************** function _packReturnData *****************
  8174 ;; Defined at:
  8175 ;;		line 17 in file "../../../../common/communication/brain_rover.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  data            2   46[COMRAM] PTR unsigned char 
  8178 ;;		 -> ADacc(101), 
  8179 ;;  payloadLen      2   48[COMRAM] int 
  8180 ;;  msg             2   50[COMRAM] PTR struct .
  8181 ;;		 -> sendADdata@outBuff(103), 
  8182 ;;  maxout          2   52[COMRAM] int 
  8183 ;;  sensorID        2   54[COMRAM] int 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  dest            2   61[COMRAM] PTR unsigned char 
  8186 ;;		 -> sendADdata@outBuff.payload(0), sendADdata@outBuff(103), 
  8187 ;;  end             2   59[COMRAM] PTR unsigned char 
  8188 ;;		 -> sendADdata@outBuff.payload(0), sendADdata@outBuff(103), 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  2   46[COMRAM] int 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8198 ;;      Params:        10       0       0       0       0
  8199 ;;      Locals:         4       0       0       0       0
  8200 ;;      Temps:          3       0       0       0       0
  8201 ;;      Totals:        17       0       0       0       0
  8202 ;;Total ram usage:       17 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; This function calls:
  8205 ;;		Nothing
  8206 ;; This function is called by:
  8207 ;;		_packADData
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text51
  8212  00100C                     __ptext51:
  8213                           	opt stack 0
  8214  00100C                     _packReturnData:
  8215                           	opt stack 16
  8216                           
  8217                           ;brain_rover.c: 18: if (payloadLen + 3 >= maxout) {
  8218                           
  8219                           ;incstack = 0
  8220  00100C  0E03               	movlw	3
  8221  00100E  2431               	addwf	packReturnData@payloadLen,w,c
  8222  001010  6E39               	movwf	??_packReturnData& (0+255),c
  8223  001012  0E00               	movlw	0
  8224  001014  2032               	addwfc	packReturnData@payloadLen+1,w,c
  8225  001016  6E3A               	movwf	(??_packReturnData+1)& (0+255),c
  8226  001018  503A               	movf	??_packReturnData+1,w,c
  8227  00101A  0A80               	xorlw	128
  8228  00101C  6E3B               	movwf	(??_packReturnData+2)& (0+255),c
  8229  00101E  5035               	movf	packReturnData@maxout,w,c
  8230  001020  5C39               	subwf	??_packReturnData,w,c
  8231  001022  5036               	movf	packReturnData@maxout+1,w,c
  8232  001024  0A80               	xorlw	128
  8233  001026  583B               	subwfb	(??_packReturnData+2)& (0+255),w,c
  8234  001028  A0D8               	btfss	status,0,c
  8235  00102A  D005               	goto	i2l3682
  8236                           
  8237                           ;brain_rover.c: 19: return 0;
  8238  00102C  0E00               	movlw	0
  8239  00102E  6E30               	movwf	?_packReturnData+1,c
  8240  001030  0E00               	movlw	0
  8241  001032  6E2F               	movwf	?_packReturnData,c
  8242  001034  0012               	return	
  8243  001036                     i2l3682:
  8244                           
  8245                           ;brain_rover.c: 20: }
  8246                           ;brain_rover.c: 22: msg->flags = 1;
  8247  001036  C033  FFD9         	movff	packReturnData@msg,fsr2l
  8248  00103A  C034  FFDA         	movff	packReturnData@msg+1,fsr2h
  8249  00103E  0E01               	movlw	1
  8250  001040  6EDF               	movwf	indf2,c
  8251                           
  8252                           ;brain_rover.c: 23: msg->sensorID = sensorID;
  8253  001042  EE20 F001          	lfsr	2,1
  8254  001046  5033               	movf	packReturnData@msg,w,c
  8255  001048  26D9               	addwf	fsr2l,f,c
  8256  00104A  5034               	movf	packReturnData@msg+1,w,c
  8257  00104C  22DA               	addwfc	fsr2h,f,c
  8258  00104E  C037  FFDF         	movff	packReturnData@sensorID,indf2
  8259                           
  8260                           ;brain_rover.c: 24: msg->payloadLen = payloadLen;
  8261  001052  EE20 F002          	lfsr	2,2
  8262  001056  5033               	movf	packReturnData@msg,w,c
  8263  001058  26D9               	addwf	fsr2l,f,c
  8264  00105A  5034               	movf	packReturnData@msg+1,w,c
  8265  00105C  22DA               	addwfc	fsr2h,f,c
  8266  00105E  C031  FFDF         	movff	packReturnData@payloadLen,indf2
  8267                           
  8268                           ;brain_rover.c: 26: char* dest = msg->payload;
  8269  001062  0E03               	movlw	3
  8270  001064  2433               	addwf	packReturnData@msg,w,c
  8271  001066  6E3E               	movwf	packReturnData@dest,c
  8272  001068  0E00               	movlw	0
  8273  00106A  2034               	addwfc	packReturnData@msg+1,w,c
  8274  00106C  6E3F               	movwf	packReturnData@dest+1,c
  8275                           
  8276                           ;brain_rover.c: 27: char* end = dest + payloadLen;
  8277  00106E  5031               	movf	packReturnData@payloadLen,w,c
  8278  001070  243E               	addwf	packReturnData@dest,w,c
  8279  001072  6E3C               	movwf	packReturnData@end,c
  8280  001074  5032               	movf	packReturnData@payloadLen+1,w,c
  8281  001076  203F               	addwfc	packReturnData@dest+1,w,c
  8282  001078  6E3D               	movwf	packReturnData@end+1,c
  8283                           
  8284                           ;brain_rover.c: 28: while (dest != end) {
  8285  00107A  D00E               	goto	i2l3698
  8286  00107C                     i2l3692:
  8287                           
  8288                           ;brain_rover.c: 29: *dest++ = *data++;
  8289  00107C  C02F  FFD9         	movff	packReturnData@data,fsr2l
  8290  001080  C030  FFDA         	movff	packReturnData@data+1,fsr2h
  8291  001084  C03E  FFE1         	movff	packReturnData@dest,fsr1l
  8292  001088  C03F  FFE2         	movff	packReturnData@dest+1,fsr1h
  8293  00108C  CFDF FFE7          	movff	indf2,indf1
  8294  001090  4A2F               	infsnz	packReturnData@data,f,c
  8295  001092  2A30               	incf	packReturnData@data+1,f,c
  8296  001094  4A3E               	infsnz	packReturnData@dest,f,c
  8297  001096  2A3F               	incf	packReturnData@dest+1,f,c
  8298  001098                     i2l3698:
  8299  001098  503D               	movf	packReturnData@end+1,w,c
  8300  00109A  183F               	xorwf	packReturnData@dest+1,w,c
  8301  00109C  E102               	bnz	i2u252_45
  8302  00109E  503C               	movf	packReturnData@end,w,c
  8303  0010A0  183E               	xorwf	packReturnData@dest,w,c
  8304  0010A2                     i2u252_45:
  8305  0010A2  A4D8               	btfss	status,2,c
  8306  0010A4  D7EB               	goto	i2l3692
  8307                           
  8308                           ;brain_rover.c: 30: }
  8309                           ;brain_rover.c: 31: return payloadLen + 3;
  8310  0010A6  0E03               	movlw	3
  8311  0010A8  2431               	addwf	packReturnData@payloadLen,w,c
  8312  0010AA  6E2F               	movwf	?_packReturnData,c
  8313  0010AC  0E00               	movlw	0
  8314  0010AE  2032               	addwfc	packReturnData@payloadLen+1,w,c
  8315  0010B0  6E30               	movwf	?_packReturnData+1,c
  8316  0010B2  0012               	return	
  8317  0010B4                     __end_of_packReturnData:
  8318                           	opt stack 0
  8319                           pclatu	equ	0xFFB
  8320                           pclath	equ	0xFFA
  8321                           tblptru	equ	0xFF8
  8322                           tblptrh	equ	0xFF7
  8323                           tblptrl	equ	0xFF6
  8324                           tablat	equ	0xFF5
  8325                           prodh	equ	0xFF4
  8326                           prodl	equ	0xFF3
  8327                           intcon	equ	0xFF2
  8328                           postinc0	equ	0xFEE
  8329                           fsr0h	equ	0xFEA
  8330                           fsr0l	equ	0xFE9
  8331                           wreg	equ	0xFE8
  8332                           indf1	equ	0xFE7
  8333                           postdec1	equ	0xFE5
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           bsr	equ	0xFE0
  8337                           indf2	equ	0xFDF
  8338                           fsr2h	equ	0xFDA
  8339                           fsr2l	equ	0xFD9
  8340                           status	equ	0xFD8
  8341                           
  8342 ;; *************** function _handle_start *****************
  8343 ;; Defined at:
  8344 ;;		line 78 in file "../src/my_i2c.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  data_read       1    wreg     unsigned char 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  data_read       1   46[COMRAM] unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;		None               void
  8351 ;; Registers used:
  8352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8358 ;;      Params:         0       0       0       0       0
  8359 ;;      Locals:         1       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0
  8361 ;;      Totals:         1       0       0       0       0
  8362 ;;Total ram usage:        1 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_i2c_int_handler
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text52
  8372  000DEA                     __ptext52:
  8373                           	opt stack 0
  8374  000DEA                     _handle_start:
  8375                           	opt stack 19
  8376                           
  8377                           ;incstack = 0
  8378                           ;handle_start@data_read stored from wreg
  8379  000DEA  CFE8 F02F          	movff	wreg,handle_start@data_read
  8380                           
  8381                           ;my_i2c.c: 79: ic_ptr->event_count = 1;
  8382  000DEE  0101               	movlb	1	; () banked
  8383  000DF0  EE20 F00B          	lfsr	2,11
  8384  000DF4  0101               	movlb	1	; () banked
  8385  000DF6  5100               	movf	_ic_ptr& (0+255),w,b
  8386  000DF8  26D9               	addwf	fsr2l,f,c
  8387  000DFA  0101               	movlb	1	; () banked
  8388  000DFC  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8389  000DFE  22DA               	addwfc	fsr2h,f,c
  8390  000E00  0E01               	movlw	1
  8391  000E02  6EDF               	movwf	indf2,c
  8392                           
  8393                           ;my_i2c.c: 80: ic_ptr->buflen = 0;
  8394  000E04  0101               	movlb	1	; () banked
  8395  000E06  EE20 F00A          	lfsr	2,10
  8396  000E0A  0101               	movlb	1	; () banked
  8397  000E0C  5100               	movf	_ic_ptr& (0+255),w,b
  8398  000E0E  26D9               	addwf	fsr2l,f,c
  8399  000E10  0101               	movlb	1	; () banked
  8400  000E12  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8401  000E14  22DA               	addwfc	fsr2h,f,c
  8402  000E16  0E00               	movlw	0
  8403  000E18  6EDF               	movwf	indf2,c
  8404                           
  8405                           ; BSR set to: 1
  8406                           ;my_i2c.c: 82: if (data_read) {
  8407  000E1A  502F               	movf	handle_start@data_read,w,c
  8408  000E1C  B4D8               	btfsc	status,2,c
  8409  000E1E  D03D               	goto	i2l3636
  8410                           
  8411                           ; BSR set to: 1
  8412                           ;my_i2c.c: 83: if (SSPSTATbits.D_A == 1) {
  8413  000E20  AAC7               	btfss	4039,5,c	;volatile
  8414  000E22  D021               	goto	i2l248
  8415                           
  8416                           ; BSR set to: 1
  8417                           ;my_i2c.c: 86: ic_ptr->status = 0x5;
  8418  000E24  0101               	movlb	1	; () banked
  8419  000E26  EE20 F00C          	lfsr	2,12
  8420  000E2A  0101               	movlb	1	; () banked
  8421  000E2C  5100               	movf	_ic_ptr& (0+255),w,b
  8422  000E2E  26D9               	addwf	fsr2l,f,c
  8423  000E30  0101               	movlb	1	; () banked
  8424  000E32  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8425  000E34  22DA               	addwfc	fsr2h,f,c
  8426  000E36  0E05               	movlw	5
  8427  000E38  6EDF               	movwf	indf2,c
  8428                           
  8429                           ;my_i2c.c: 87: ic_ptr->error_count++;
  8430  000E3A  0101               	movlb	1	; () banked
  8431  000E3C  EE20 F00E          	lfsr	2,14
  8432  000E40  0101               	movlb	1	; () banked
  8433  000E42  5100               	movf	_ic_ptr& (0+255),w,b
  8434  000E44  26D9               	addwf	fsr2l,f,c
  8435  000E46  0101               	movlb	1	; () banked
  8436  000E48  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8437  000E4A  22DA               	addwfc	fsr2h,f,c
  8438  000E4C  2ADF               	incf	indf2,f,c
  8439                           
  8440                           ;my_i2c.c: 88: ic_ptr->error_code = 0x5;
  8441  000E4E  0101               	movlb	1	; () banked
  8442  000E50  EE20 F00D          	lfsr	2,13
  8443  000E54  0101               	movlb	1	; () banked
  8444  000E56  5100               	movf	_ic_ptr& (0+255),w,b
  8445  000E58  26D9               	addwf	fsr2l,f,c
  8446  000E5A  0101               	movlb	1	; () banked
  8447  000E5C  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8448  000E5E  22DA               	addwfc	fsr2h,f,c
  8449  000E60  0E05               	movlw	5
  8450  000E62  6EDF               	movwf	indf2,c
  8451                           
  8452                           ;my_i2c.c: 89: } else {
  8453  000E64  0012               	return	
  8454  000E66                     i2l248:
  8455                           
  8456                           ; BSR set to: 1
  8457                           ;my_i2c.c: 90: if (SSPSTATbits.R_W == 1) {
  8458  000E66  A4C7               	btfss	4039,2,c	;volatile
  8459  000E68  D00C               	goto	i2l3634
  8460                           
  8461                           ; BSR set to: 1
  8462                           ;my_i2c.c: 91: ic_ptr->status = 0x8;
  8463  000E6A  0101               	movlb	1	; () banked
  8464  000E6C  EE20 F00C          	lfsr	2,12
  8465  000E70  0101               	movlb	1	; () banked
  8466  000E72  5100               	movf	_ic_ptr& (0+255),w,b
  8467  000E74  26D9               	addwf	fsr2l,f,c
  8468  000E76  0101               	movlb	1	; () banked
  8469  000E78  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8470  000E7A  22DA               	addwfc	fsr2h,f,c
  8471  000E7C  0E08               	movlw	8
  8472  000E7E  6EDF               	movwf	indf2,c
  8473                           
  8474                           ;my_i2c.c: 92: } else {
  8475  000E80  0012               	return	
  8476  000E82                     i2l3634:
  8477                           
  8478                           ; BSR set to: 1
  8479                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  8480  000E82  0101               	movlb	1	; () banked
  8481  000E84  EE20 F00C          	lfsr	2,12
  8482  000E88  0101               	movlb	1	; () banked
  8483  000E8A  5100               	movf	_ic_ptr& (0+255),w,b
  8484  000E8C  26D9               	addwf	fsr2l,f,c
  8485  000E8E  0101               	movlb	1	; () banked
  8486  000E90  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8487  000E92  22DA               	addwfc	fsr2h,f,c
  8488  000E94  0E07               	movlw	7
  8489  000E96  6EDF               	movwf	indf2,c
  8490  000E98  0012               	return	
  8491  000E9A                     i2l3636:
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;my_i2c.c: 97: ic_ptr->status = 0x6;
  8495  000E9A  0101               	movlb	1	; () banked
  8496  000E9C  EE20 F00C          	lfsr	2,12
  8497  000EA0  0101               	movlb	1	; () banked
  8498  000EA2  5100               	movf	_ic_ptr& (0+255),w,b
  8499  000EA4  26D9               	addwf	fsr2l,f,c
  8500  000EA6  0101               	movlb	1	; () banked
  8501  000EA8  5101               	movf	(_ic_ptr+1)& (0+255),w,b
  8502  000EAA  22DA               	addwfc	fsr2h,f,c
  8503  000EAC  0E06               	movlw	6
  8504  000EAE  6EDF               	movwf	indf2,c
  8505  000EB0  0012               	return	
  8506  000EB2                     __end_of_handle_start:
  8507                           	opt stack 0
  8508                           pclatu	equ	0xFFB
  8509                           pclath	equ	0xFFA
  8510                           tblptru	equ	0xFF8
  8511                           tblptrh	equ	0xFF7
  8512                           tblptrl	equ	0xFF6
  8513                           tablat	equ	0xFF5
  8514                           prodh	equ	0xFF4
  8515                           prodl	equ	0xFF3
  8516                           intcon	equ	0xFF2
  8517                           postinc0	equ	0xFEE
  8518                           fsr0h	equ	0xFEA
  8519                           fsr0l	equ	0xFE9
  8520                           wreg	equ	0xFE8
  8521                           indf1	equ	0xFE7
  8522                           postdec1	equ	0xFE5
  8523                           fsr1h	equ	0xFE2
  8524                           fsr1l	equ	0xFE1
  8525                           bsr	equ	0xFE0
  8526                           indf2	equ	0xFDF
  8527                           fsr2h	equ	0xFDA
  8528                           fsr2l	equ	0xFD9
  8529                           status	equ	0xFD8
  8530                           
  8531 ;; *************** function _SleepIfOkay *****************
  8532 ;; Defined at:
  8533 ;;		line 229 in file "../src/messages.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;		None               void
  8540 ;; Registers used:
  8541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8547 ;;      Params:         0       0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0
  8550 ;;      Totals:         0       0       0       0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    2
  8554 ;; This function calls:
  8555 ;;		_enter_sleep_mode
  8556 ;;		i2_check_msg
  8557 ;;		i2_in_high_int
  8558 ;;		i2_in_low_int
  8559 ;; This function is called by:
  8560 ;;		_InterruptHandlerHigh
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text53
  8565  00166C                     __ptext53:
  8566                           	opt stack 0
  8567  00166C                     _SleepIfOkay:
  8568                           	opt stack 18
  8569                           
  8570                           ;messages.c: 231: if (MQ_Main_Willing_to_block == 0) {
  8571                           
  8572                           ; BSR set to: 1
  8573                           ;incstack = 0
  8574  00166C  6644               	tstfsz	_MQ_Main_Willing_to_block,c
  8575  00166E  D001               	goto	i2l2502
  8576  001670  0012               	return	
  8577  001672                     i2l2502:
  8578                           
  8579                           ;messages.c: 233: }
  8580                           ;messages.c: 236: if (in_low_int()) {
  8581  001672  EC08  F00D         	call	i2_in_low_int	;wreg free
  8582  001676  5032               	movf	?i2_in_low_int+1,w,c
  8583  001678  1031               	iorwf	?i2_in_low_int,w,c
  8584  00167A  A4D8               	btfss	status,2,c
  8585  00167C  0012               	return	
  8586                           
  8587                           ;messages.c: 238: }
  8588                           ;messages.c: 241: if (!in_high_int()) {
  8589                           
  8590                           ;messages.c: 237: return;
  8591  00167E  ECDE  F00D         	call	i2_in_high_int	;wreg free
  8592  001682  5030               	movf	?i2_in_high_int+1,w,c
  8593  001684  102F               	iorwf	?i2_in_high_int,w,c
  8594  001686  B4D8               	btfsc	status,2,c
  8595  001688  0012               	return	
  8596                           
  8597                           ;messages.c: 243: }
  8598                           ;messages.c: 248: if (check_msg(&ToMainHigh_MQ)) {
  8599                           
  8600                           ;messages.c: 242: return;
  8601  00168A  0101               	movlb	1	; () banked
  8602  00168C  0E01               	movlw	high _ToMainHigh_MQ
  8603  00168E  6E30               	movwf	i2check_msg@qptr+1,c
  8604  001690  0101               	movlb	1	; () banked
  8605  001692  0E02               	movlw	low _ToMainHigh_MQ
  8606  001694  6E2F               	movwf	i2check_msg@qptr,c
  8607  001696  EC97  F00D         	call	i2_check_msg	;wreg free
  8608  00169A  0900               	iorlw	0
  8609  00169C  A4D8               	btfss	status,2,c
  8610  00169E  0012               	return	
  8611                           
  8612                           ;messages.c: 250: }
  8613                           ;messages.c: 251: if (check_msg(&ToMainLow_MQ)) {
  8614                           
  8615                           ;messages.c: 249: return;
  8616  0016A0  0102               	movlb	2	; () banked
  8617  0016A2  0E02               	movlw	high _ToMainLow_MQ
  8618  0016A4  6E30               	movwf	i2check_msg@qptr+1,c
  8619  0016A6  0102               	movlb	2	; () banked
  8620  0016A8  0E9B               	movlw	low _ToMainLow_MQ
  8621  0016AA  6E2F               	movwf	i2check_msg@qptr,c
  8622  0016AC  EC97  F00D         	call	i2_check_msg	;wreg free
  8623  0016B0  0900               	iorlw	0
  8624  0016B2  B4D8               	btfsc	status,2,c
  8625                           
  8626                           ;messages.c: 253: }
  8627                           ;messages.c: 254: enter_sleep_mode();
  8628                           
  8629                           ;messages.c: 252: return;
  8630  0016B4  ECF5  F00D         	call	_enter_sleep_mode	;wreg free
  8631  0016B8  0012               	return	
  8632  0016BA                     __end_of_SleepIfOkay:
  8633                           	opt stack 0
  8634                           pclatu	equ	0xFFB
  8635                           pclath	equ	0xFFA
  8636                           tblptru	equ	0xFF8
  8637                           tblptrh	equ	0xFF7
  8638                           tblptrl	equ	0xFF6
  8639                           tablat	equ	0xFF5
  8640                           prodh	equ	0xFF4
  8641                           prodl	equ	0xFF3
  8642                           intcon	equ	0xFF2
  8643                           postinc0	equ	0xFEE
  8644                           fsr0h	equ	0xFEA
  8645                           fsr0l	equ	0xFE9
  8646                           wreg	equ	0xFE8
  8647                           indf1	equ	0xFE7
  8648                           postdec1	equ	0xFE5
  8649                           fsr1h	equ	0xFE2
  8650                           fsr1l	equ	0xFE1
  8651                           bsr	equ	0xFE0
  8652                           indf2	equ	0xFDF
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657 ;; *************** function i2_in_low_int *****************
  8658 ;; Defined at:
  8659 ;;		line 32 in file "../src/interrupts.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  2   48[COMRAM] int 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8673 ;;      Params:         2       0       0       0       0
  8674 ;;      Locals:         0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0
  8676 ;;      Totals:         2       0       0       0       0
  8677 ;;Total ram usage:        2 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    1
  8680 ;; This function calls:
  8681 ;;		i2_in_high_int
  8682 ;; This function is called by:
  8683 ;;		_SleepIfOkay
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text54
  8688  001A10                     __ptext54:
  8689                           	opt stack 0
  8690  001A10                     i2_in_low_int:
  8691                           	opt stack 18
  8692                           
  8693                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  8694                           
  8695                           ;incstack = 0
  8696  001A10  ACF2               	btfss	intcon,6,c	;volatile
  8697  001A12  D005               	goto	i2l2972
  8698                           
  8699                           ;interrupts.c: 34: return (0);
  8700  001A14  0E00               	movlw	0
  8701  001A16  6E32               	movwf	?i2_in_low_int+1,c
  8702  001A18  0E00               	movlw	0
  8703  001A1A  6E31               	movwf	?i2_in_low_int,c
  8704  001A1C  0012               	return	
  8705  001A1E                     i2l2972:
  8706  001A1E  ECDE  F00D         	call	i2_in_high_int	;wreg free
  8707  001A22  5030               	movf	?i2_in_high_int+1,w,c
  8708  001A24  102F               	iorwf	?i2_in_high_int,w,c
  8709  001A26  B4D8               	btfsc	status,2,c
  8710  001A28  D005               	goto	i2l2980
  8711                           
  8712                           ;interrupts.c: 36: return (0);
  8713  001A2A  0E00               	movlw	0
  8714  001A2C  6E32               	movwf	?i2_in_low_int+1,c
  8715  001A2E  0E00               	movlw	0
  8716  001A30  6E31               	movwf	?i2_in_low_int,c
  8717  001A32  0012               	return	
  8718  001A34                     i2l2980:
  8719                           
  8720                           ;interrupts.c: 38: return (1);
  8721  001A34  0E00               	movlw	0
  8722  001A36  6E32               	movwf	?i2_in_low_int+1,c
  8723  001A38  0E01               	movlw	1
  8724  001A3A  6E31               	movwf	?i2_in_low_int,c
  8725  001A3C  0012               	return	
  8726  001A3E                     __end_ofi2_in_low_int:
  8727                           	opt stack 0
  8728                           pclatu	equ	0xFFB
  8729                           pclath	equ	0xFFA
  8730                           tblptru	equ	0xFF8
  8731                           tblptrh	equ	0xFF7
  8732                           tblptrl	equ	0xFF6
  8733                           tablat	equ	0xFF5
  8734                           prodh	equ	0xFF4
  8735                           prodl	equ	0xFF3
  8736                           intcon	equ	0xFF2
  8737                           postinc0	equ	0xFEE
  8738                           fsr0h	equ	0xFEA
  8739                           fsr0l	equ	0xFE9
  8740                           wreg	equ	0xFE8
  8741                           indf1	equ	0xFE7
  8742                           postdec1	equ	0xFE5
  8743                           fsr1h	equ	0xFE2
  8744                           fsr1l	equ	0xFE1
  8745                           bsr	equ	0xFE0
  8746                           indf2	equ	0xFDF
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function i2_in_high_int *****************
  8752 ;; Defined at:
  8753 ;;		line 24 in file "../src/interrupts.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  2   46[COMRAM] int 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8767 ;;      Params:         2       0       0       0       0
  8768 ;;      Locals:         0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0
  8770 ;;      Totals:         2       0       0       0       0
  8771 ;;Total ram usage:        2 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_SleepIfOkay
  8777 ;;		i2_in_low_int
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text55
  8782  001BBC                     __ptext55:
  8783                           	opt stack 0
  8784  001BBC                     i2_in_high_int:
  8785                           	opt stack 18
  8786                           
  8787                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  8788                           
  8789                           ;incstack = 0
  8790  001BBC  0E00               	movlw	0
  8791  001BBE  AEF2               	btfss	intcon,7,c	;volatile
  8792  001BC0  0E01               	movlw	1
  8793  001BC2  6E2F               	movwf	?i2_in_high_int,c
  8794  001BC4  6A30               	clrf	?i2_in_high_int+1,c
  8795  001BC6  0012               	return	
  8796  001BC8                     __end_ofi2_in_high_int:
  8797                           	opt stack 0
  8798                           pclatu	equ	0xFFB
  8799                           pclath	equ	0xFFA
  8800                           tblptru	equ	0xFF8
  8801                           tblptrh	equ	0xFF7
  8802                           tblptrl	equ	0xFF6
  8803                           tablat	equ	0xFF5
  8804                           prodh	equ	0xFF4
  8805                           prodl	equ	0xFF3
  8806                           intcon	equ	0xFF2
  8807                           postinc0	equ	0xFEE
  8808                           fsr0h	equ	0xFEA
  8809                           fsr0l	equ	0xFE9
  8810                           wreg	equ	0xFE8
  8811                           indf1	equ	0xFE7
  8812                           postdec1	equ	0xFE5
  8813                           fsr1h	equ	0xFE2
  8814                           fsr1l	equ	0xFE1
  8815                           bsr	equ	0xFE0
  8816                           indf2	equ	0xFDF
  8817                           fsr2h	equ	0xFDA
  8818                           fsr2l	equ	0xFD9
  8819                           status	equ	0xFD8
  8820                           
  8821 ;; *************** function i2_check_msg *****************
  8822 ;; Defined at:
  8823 ;;		line 223 in file "../src/messages.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8826 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;		None
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  1    wreg      unsigned char 
  8831 ;; Registers used:
  8832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8838 ;;      Params:         2       0       0       0       0
  8839 ;;      Locals:         0       0       0       0       0
  8840 ;;      Temps:          1       0       0       0       0
  8841 ;;      Totals:         3       0       0       0       0
  8842 ;;Total ram usage:        3 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_SleepIfOkay
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text56
  8852  001B2E                     __ptext56:
  8853                           	opt stack 0
  8854  001B2E                     i2_check_msg:
  8855                           	opt stack 19
  8856                           
  8857                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  8858                           
  8859                           ;incstack = 0
  8860  001B2E  EE20 F035          	lfsr	2,53
  8861  001B32  502F               	movf	i2check_msg@qptr,w,c
  8862  001B34  26D9               	addwf	fsr2l,f,c
  8863  001B36  5030               	movf	i2check_msg@qptr+1,w,c
  8864  001B38  22DA               	addwfc	fsr2h,f,c
  8865  001B3A  50DF               	movf	indf2,w,c
  8866  001B3C  6E31               	movwf	??i2_check_msg& (0+255),c
  8867  001B3E  5031               	movf	??i2_check_msg,w,c
  8868  001B40  0D0D               	mullw	13
  8869  001B42  50F3               	movf	prodl,w,c
  8870  001B44  242F               	addwf	i2check_msg@qptr,w,c
  8871  001B46  6ED9               	movwf	fsr2l,c
  8872  001B48  50F4               	movf	prodh,w,c
  8873  001B4A  2030               	addwfc	i2check_msg@qptr+1,w,c
  8874  001B4C  6EDA               	movwf	fsr2h,c
  8875  001B4E  50DF               	movf	indf2,w,c
  8876  001B50  0012               	return	
  8877  001B52                     __end_ofi2_check_msg:
  8878                           	opt stack 0
  8879                           pclatu	equ	0xFFB
  8880                           pclath	equ	0xFFA
  8881                           tblptru	equ	0xFF8
  8882                           tblptrh	equ	0xFF7
  8883                           tblptrl	equ	0xFF6
  8884                           tablat	equ	0xFF5
  8885                           prodh	equ	0xFF4
  8886                           prodl	equ	0xFF3
  8887                           intcon	equ	0xFF2
  8888                           postinc0	equ	0xFEE
  8889                           fsr0h	equ	0xFEA
  8890                           fsr0l	equ	0xFE9
  8891                           wreg	equ	0xFE8
  8892                           indf1	equ	0xFE7
  8893                           postdec1	equ	0xFE5
  8894                           fsr1h	equ	0xFE2
  8895                           fsr1l	equ	0xFE1
  8896                           bsr	equ	0xFE0
  8897                           indf2	equ	0xFDF
  8898                           fsr2h	equ	0xFDA
  8899                           fsr2l	equ	0xFD9
  8900                           status	equ	0xFD8
  8901                           
  8902 ;; *************** function _enter_sleep_mode *****************
  8903 ;; Defined at:
  8904 ;;		line 203 in file "../src/messages.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;		None
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;		None
  8909 ;; Return value:  Size  Location     Type
  8910 ;;		None               void
  8911 ;; Registers used:
  8912 ;;		None
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8918 ;;      Params:         0       0       0       0       0
  8919 ;;      Locals:         0       0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0
  8921 ;;      Totals:         0       0       0       0       0
  8922 ;;Total ram usage:        0 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_SleepIfOkay
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text57
  8932  001BEA                     __ptext57:
  8933                           	opt stack 0
  8934  001BEA                     _enter_sleep_mode:
  8935                           	opt stack 19
  8936                           
  8937                           ;messages.c: 205: OSCCONbits.IDLEN = 1;
  8938                           
  8939                           ;incstack = 0
  8940  001BEA  8ED3               	bsf	4051,7,c	;volatile
  8941  001BEC  0003               	sleep		;# 
  8942  001BEE  0012               	return	
  8943  001BF0                     __end_of_enter_sleep_mode:
  8944                           	opt stack 0
  8945  0000                     pclatu	equ	0xFFB
  8946                           pclath	equ	0xFFA
  8947                           tblptru	equ	0xFF8
  8948                           tblptrh	equ	0xFF7
  8949                           tblptrl	equ	0xFF6
  8950                           tablat	equ	0xFF5
  8951                           prodh	equ	0xFF4
  8952                           prodl	equ	0xFF3
  8953                           intcon	equ	0xFF2
  8954                           postinc0	equ	0xFEE
  8955                           fsr0h	equ	0xFEA
  8956                           fsr0l	equ	0xFE9
  8957                           wreg	equ	0xFE8
  8958                           indf1	equ	0xFE7
  8959                           postdec1	equ	0xFE5
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           bsr	equ	0xFE0
  8963                           indf2	equ	0xFDF
  8964                           fsr2h	equ	0xFDA
  8965                           fsr2l	equ	0xFD9
  8966                           status	equ	0xFD8
  8967                           pclatu	equ	0xFFB
  8968                           pclath	equ	0xFFA
  8969                           tblptru	equ	0xFF8
  8970                           tblptrh	equ	0xFF7
  8971                           tblptrl	equ	0xFF6
  8972                           tablat	equ	0xFF5
  8973                           prodh	equ	0xFF4
  8974                           prodl	equ	0xFF3
  8975                           intcon	equ	0xFF2
  8976                           postinc0	equ	0xFEE
  8977                           fsr0h	equ	0xFEA
  8978                           fsr0l	equ	0xFE9
  8979                           wreg	equ	0xFE8
  8980                           indf1	equ	0xFE7
  8981                           postdec1	equ	0xFE5
  8982                           fsr1h	equ	0xFE2
  8983                           fsr1l	equ	0xFE1
  8984                           bsr	equ	0xFE0
  8985                           indf2	equ	0xFDF
  8986                           fsr2h	equ	0xFDA
  8987                           fsr2l	equ	0xFD9
  8988                           status	equ	0xFD8
  8989                           
  8990                           	psect	rparam
  8991  0000                     pclatu	equ	0xFFB
  8992                           pclath	equ	0xFFA
  8993                           tblptru	equ	0xFF8
  8994                           tblptrh	equ	0xFF7
  8995                           tblptrl	equ	0xFF6
  8996                           tablat	equ	0xFF5
  8997                           prodh	equ	0xFF4
  8998                           prodl	equ	0xFF3
  8999                           intcon	equ	0xFF2
  9000                           postinc0	equ	0xFEE
  9001                           fsr0h	equ	0xFEA
  9002                           fsr0l	equ	0xFE9
  9003                           wreg	equ	0xFE8
  9004                           indf1	equ	0xFE7
  9005                           postdec1	equ	0xFE5
  9006                           fsr1h	equ	0xFE2
  9007                           fsr1l	equ	0xFE1
  9008                           bsr	equ	0xFE0
  9009                           indf2	equ	0xFDF
  9010                           fsr2h	equ	0xFDA
  9011                           fsr2l	equ	0xFD9
  9012                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         332
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      81
    BANK0           128    123     123
    BANK1           256     44     100
    BANK2           256      0     209
    BANK3           256    152     206

Pointer List with Targets:

    S1575$0$0	PTR struct . size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 
		 -> main@msgbuffer(BANK3[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 
		 -> main@msgbuffer(BANK3[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK2[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK3[10]), 
		 -> ToMainLow_MQ.queue.data(BANK2[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK3[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK2[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK3[10]), 
		 -> ToMainLow_MQ.queue.data(BANK2[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK3[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    addADDataPoints@data	PTR struct . size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    addDataPoints@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    setBrainReqData@buf	PTR unsigned char  size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    setBrainReqData@tempBrain	PTR struct . size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    S1575$adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    unpackRoverMsg@handler.adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    unpackBrainMsg@buf	PTR unsigned char  size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    packADData@out	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff(BANK0[103]), 

    packADData@data	PTR struct . size(2) Largest target is 101
		 -> ADacc(BANK2[101]), 

    packReturnData@data	PTR unsigned char  size(2) Largest target is 101
		 -> ADacc(BANK2[101]), 

    packReturnData@end	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff.payload(COMRAM[0]), sendADdata@outBuff(BANK0[103]), 

    packReturnData@dest	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff.payload(COMRAM[0]), sendADdata@outBuff(BANK0[103]), 

    packReturnData@msg	PTR struct . size(2) Largest target is 103
		 -> sendADdata@outBuff(BANK0[103]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 121
		 -> main@ic(BANK3[121]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 103
		 -> sendADdata@outBuff(BANK0[103]), main@msgbuffer(BANK3[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK3[121]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK3[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), i2c_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK3[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK3[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK3[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 
		 -> main@msgbuffer(BANK3[11]), 

    send_msg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK3[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK2[52]), 
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK3[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK2[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    i2_debugNum->i2_resetDBG
    i2_debugNum->i2_setDBG
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _setBrainReqData->_unpackBrainMsg
    _packADData->_packReturnData
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_adc_int_handler
    _adc_int_handler->_ToMainHigh_sendmsg
    _debugNum->_resetDBG
    _debugNum->_setDBG
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    i2_ToMainHigh_sendmsg->i2_send_msg
    _sendRequestedData->_sendADdata
    _sendADdata->_packADData

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _resetAccumulators->_resetADacc
    _init_queues->_init_queue
    _init_adc->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _addDataPoints->_addADDataPoints
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               155   155      0    9228
                                             43 BANK1      1     1      0
                                              0 BANK3    152   152      0
                         _OpenTimer0
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                      _addDataPoints
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_adc
                           _init_i2c
                        _init_queues
                  _resetAccumulators
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     212
                                             14 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _resetAccumulators                                    0     0      0      68
                         _resetADacc
 ---------------------------------------------------------------------------------
 (2) _resetADacc                                           5     5      0      68
                                             14 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             18 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             14 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             2     2      0     371
                                             19 BANK1      2     2      0
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     371
                                             14 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                             20 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             18 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             16 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             14 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _addDataPoints                                        6     0      6     870
                                             22 BANK1      6     0      6
                    _addADDataPoints
 ---------------------------------------------------------------------------------
 (2) _addADDataPoints                                      8     4      4     315
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2515
                                             38 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2515
                                             38 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2268
                                             24 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     531
                                             14 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3081
                                             29 COMRAM    17    17      0
                    _adc_int_handler
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      3     3      0    3081
                                             26 COMRAM     3     3      0
                            _ReadADC
                 _ToMainHigh_sendmsg
                          _addBuffer
                           _debugNum
 ---------------------------------------------------------------------------------
 (7) _debugNum                                             2     0      2     192
                                              1 COMRAM     2     0      2
                           _resetDBG
                             _setDBG
 ---------------------------------------------------------------------------------
 (8) _setDBG                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _resetDBG                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _addBuffer                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ToMainHigh_sendmsg                                   4     1      3    2837
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    2352
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     646
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6631
                                              0 BANK1     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     654
                        _WriteTimer0
                         i2_debugNum
 ---------------------------------------------------------------------------------
 (12) i2_debugNum                                          2     0      2     556
                                             47 COMRAM     2     0      2
                         i2_resetDBG
                           i2_setDBG
 ---------------------------------------------------------------------------------
 (13) i2_setDBG                                            1     1      0      73
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_resetDBG                                          1     1      0      73
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      98
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    5741
                                            113 BANK0     10    10      0
                       _handle_start
                  _sendRequestedData
                    _setBrainReqData
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    2919
                                              5 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2547
                                             56 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _setBrainReqData                                     4     2      2     281
                                             48 COMRAM     4     2      2
                     _unpackBrainMsg
 ---------------------------------------------------------------------------------
 (13) _unpackBrainMsg                                      2     0      2     108
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _sendRequestedData                                   0     0      0    1926
                         _sendADdata
                       i2_resetADacc
 ---------------------------------------------------------------------------------
 (13) i2_resetADacc                                        5     5      0     186
                                             46 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) _sendADdata                                        105   105      0    1740
                                              8 BANK0    105   105      0
                         _packADData
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) i2_start_i2c_slave_reply                             5     3      2     318
                                             46 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) _packADData                                          8     0      8    1294
                                              0 BANK0      8     0      8
                     _packReturnData
 ---------------------------------------------------------------------------------
 (15) _packReturnData                                     17     7     10     862
                                             46 COMRAM    17     7     10
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _addDataPoints
     _addADDataPoints
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_adc
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _resetAccumulators
     _resetADacc
   _start_i2c_slave_reply

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
     _ReadADC
     _ToMainHigh_sendmsg
       _send_msg
         i1_memcpy
     _addBuffer
     _debugNum
       _resetDBG
       _setDBG

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _handle_start
     _sendRequestedData
       _sendADdata
         _packADData
           _packReturnData
         i2_start_i2c_slave_reply
       i2_resetADacc
     _setBrainReqData
       _unpackBrainMsg
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _WriteTimer0
     i2_debugNum
       i2_resetDBG
       i2_setDBG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100     98      CE      10       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      D1       8       81.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     2C      64       6       39.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     7B      7B       4       96.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CF      11        0.0%
DATA                 0      0     2CF      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Feb 11 11:29:19 2014

               packReturnData@end 003C                 packReturnData@msg 0033  
              packReturnData@data 002F                packReturnData@dest 003E  
        _MQ_Main_Willing_to_block 0044                    ?_addDataPoints 014E  
           ?i2_ToMainHigh_sendmsg 0085                       _SSPSTATbits 000FC7  
                              l91 0750         __end_of_ToMainLow_recvmsg 1786  
                              bsr 000FE0                      __CFG_CP0$OFF 000000  
            __end_ofi2_resetADacc 166C                               l550 1134  
                             l571 1A8C                               l572 1A8E  
                             l820 1B72              __size_of_WriteTimer0 0012  
                  _FromMainLow_MQ 0265                               prod 000FF3  
                      i2_debugNum 157C                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 0146  
         __size_of_packReturnData 00A8              packReturnData@maxout 0035  
                            l3162 16F0                              l3154 16CE  
                            l3410 08F4                              l3404 08A2  
                            l3502 11D8                              l3422 0994  
                            l3406 08B4                              l3414 0932  
                            l3176 1734                              l3416 0956  
                            l3514 1230                              l3522 0B32  
                            l3426 09D2                              l3508 1204  
                            l3380 078A                              l3372 0756  
                            l3364 070E                              l3526 0BB6  
                            l3384 07C6                              l3562 14B8  
                            l3722 12C2                              l3394 082C  
                            l3378 077A                              l3556 1494  
                            l3740 0F3A                              l3548 1280  
                            l3388 07EE                              l3734 0EF4  
                            l3726 12E6                              l3398 0868  
                            l3576 0A4C                              l3592 0B12  
        setBrainReqData@tempBrain 0033                              _LATB 000F8A  
                            u2290 088E                              u2667 1B74  
                            i1l44 0066                   _FromMainHigh_MQ 0398  
                   __CFG_FCMEN$ON 000000            ?_block_on_To_msgqueues 0001  
                            _main 06B8                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                       main@msgtype 031B  
                            pclat 000FFA                       i2_check_msg 1B2E  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002F                              start 00AC  
                   __CFG_FOSC2$ON 000000                  ?_adc_int_handler 0001  
                      i2_resetDBG 193A                        i2_send_msg 0D18  
       ToMainHigh_recvmsg@msgtype 015E                   __end_of_ReadADC 1BD2  
                  send_msg@length 000D     i2start_i2c_slave_reply@length 0033  
                 __end_of_OpenADC 1138       __size_of_timer0_int_handler 001C  
                     _Delay1KTCYx 1B6E                  ?_addADDataPoints 0146  
                           ?_main 0001                             _T0CON 000FD5  
                           _ADacc 0200                             i1l370 1894  
                      i1memcpy@d1 0001                             i1l371 1898  
                           i1l380 18CC                             i1l372 189C  
                           i1l381 18D0                             i1l382 18D4  
                           i1l383 18D8                             i1l367 188C  
                           i1l369 1890                             i1l378 18C8  
                           i2l260 0178                             i2l248 0E66  
                           i2l264 01BC                             i2l258 0512  
                           i2l370 190C                             i2l371 1910  
                           i2l292 0524                             i2l380 1944  
                           i2l372 1914                             i2l381 1948  
                           i2l286 0484                             i2l278 034C  
                           i2l382 194C                             i2l383 1950  
                           i2l367 1904                             i2l369 1908  
                           i2l378 1940                        i1memcpy@s1 0003  
                           _RCREG 000FAE                     packADData@len 0082  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                     packADData@out 0084  
                           _TMR1L 000FCE                             _TRISB 000F93  
                      i2memcpy@d1 002F                        i2memcpy@s1 0031  
                    ?_init_queues 0001         __size_of_enter_sleep_mode 0006  
                 __end_of_in_main 1744                             _count 0046  
      ToMainLow_recvmsg@maxlength 0162                             main@j 0317  
         __end_of_setBrainReqData 1A10             addDataPoints@sensorid 014E  
         i2c_configure_slave@addr 0146                    _unpackBrainMsg 1BD2  
                           tablat 000FF5                             status 000FD8  
        i2ToMainHigh_sendmsg@data 0086                  __end_ofi1_memcpy 1808  
               unpackBrainMsg@buf 002F                  __end_ofi2_setDBG 193A  
                __end_ofi2_memcpy 1848                   __initialization 14D0  
                 ??_addDataPoints 0154            ??i2_ToMainHigh_sendmsg 0040  
                    __end_of_main 09E0        __size_of_ToMainLow_recvmsg 0042  
           __size_ofi2_in_low_int 002E            packReturnData@sensorID 0037  
                          ??_main 0163                   send_msg@msgtype 000E  
                   __activetblptr 000002                   send_msg@tlength 0012  
            __end_of_handle_start 0EB2                       ?i2_debugNum 0030  
          __end_of_unpackBrainMsg 1BDC                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          i1l2260 154A                            i1l2264 155A  
                          i1l2256 153A                            i1l2268 156A  
                          i1l1822 18A0                            i1l1828 18DC  
                          i2l3032 1918                            i1l3832 17F6  
                          i1l3826 17DA                            i2l3052 15AC  
                          i2l3044 158C                            i2l2502 1672  
                          i2l3302 04E6                            i2l3214 016E  
                          i2l3038 1954                            i2l3232 01F4  
                          i2l3208 0156                            i2l3056 15BC  
                          i2l3048 159C                            i1l3856 0F9A  
                      _OpenTimer0 1A68                            i2l3330 0698  
                          i2l3322 05F2                            i2l3314 0588  
                          i2l3250 0274                            i2l3234 0220  
                          i2l3308 0528                            i2l3252 02B4  
                          i2l3244 025C                    __CFG_WDTEN$OFF 000000  
                          i2l3280 0414                            i2l3192 117C  
                          i2l3274 03C0                            i2l3186 1172  
                          i2l3276 0402                            i2l3634 0E82  
                          i2l3636 0E9A                            i2l3804 0C40  
                          i2l3820 1640                            i2l3808 0CB4  
                          i2l3816 1628                            i2l3682 1036  
                          i2l3842 1836                            i2l2980 1A34  
                          i2l2972 1A1E                            i2l3692 107C  
                          i2l3836 181A                            i2l3698 1098  
                          i2l3786 0D64       __end_of_i2c_configure_slave 1AE4  
                   ??_SleepIfOkay 0033                    packADData@data 0080  
                          _OSCCON 000FD3                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
                       ??_ReadADC 0003                  __end_of_debugNum 157C  
   __end_of_start_i2c_slave_reply 0C24                         ??_OpenADC 0148  
                     ?i2_resetDBG 0001                      i2_in_low_int 1A10  
                     ?i2_send_msg 0039                    __CFG_XINST$OFF 000000  
           __size_ofi2_resetADacc 004E                   _i2c_int_handler 00B0  
                OpenTimer0@config 0146                            _ic_ptr 0100  
                   main@msgbuffer 030B                  __end_of_init_i2c 1472  
                __end_of_init_adc 19DE                            _setDBG 1886  
                          _memcpy 1472                            clear_0 14D6  
                          clear_1 14E2                            clear_2 14EE  
                          clear_3 14FA                            _uc_ptr 0042  
                          main@ic 031F                  __end_of_recv_msg 0B16  
     start_i2c_slave_reply@length 014A                  __end_of_resetDBG 18FE  
                       ??_in_main 014C                  __end_of_send_msg 100C  
                    __pdataCOMRAM 004D               adc_int_handler@data 001C  
                  _packReturnData 100C           i2c_int_handler@i2c_data 00F7  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 0149  
        ?i2_start_i2c_slave_reply 002F                   ?_unpackBrainMsg 002F  
        ToMainLow_recvmsg@msgtype 015E                 _sendRequestedData 1B84  
                     i2resetDBG@b 002F              __size_of_in_high_int 0012  
              __size_of_addBuffer 0024                  ?_setBrainReqData 0031  
                 __CFG_FOSC$HSPLL 000000                ?_sendRequestedData 0001  
                      __accesstop 0080           __end_of__initialization 1520  
      __end_of_ToMainHigh_recvmsg 17C8        __end_of_ToMainHigh_sendmsg 1B0A  
                    i2_resetADacc 161E                     addBuffer@data 0001  
             ??_sendRequestedData 0040               __end_of_SleepIfOkay 16BA  
             __size_ofi2_debugNum 0052                    __pcstackCOMRAM 0001  
          __size_ofi2_in_high_int 000C                __size_of_check_msg 0036  
                addDataPoints@len 0152                      _BrainMsgRecv 0040  
          __end_of_packReturnData 10B4                         ?i1_memcpy 0001  
   __size_of_InterruptHandlerHigh 11B2       __end_of_InterruptHandlerLow 00AC  
                       ?i2_setDBG 0001                         ?i2_memcpy 002F  
                   _ToMainHigh_MQ 0102         __end_of_sendRequestedData 1B98  
             __size_ofi2_resetDBG 003C                  _enter_sleep_mode 1BEA  
             __size_ofi2_send_msg 00D2                     check_msg@qptr 0146  
         ??_block_on_To_msgqueues 014C              __size_of_init_queues 006E  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
                      __pbssBANK3 0398                       ?_OpenTimer0 0001  
              main@to_send_buffer 0300           __end_of_i2c_int_handler 06B8  
                    ?i2_check_msg 002F                 recv_msg@maxlength 0152  
                 recv_msg@msgtype 0153                   recv_msg@tlength 015A  
           __size_of_handle_start 00C8                 __end_of_addBuffer 1B2E  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0031  
                         ?_setDBG 0001                           ?_memcpy 0146  
                   ??_WriteTimer0 0031                   ?_packReturnData 002F  
 __end_ofi2_start_i2c_slave_reply 0D18                        ??i1_memcpy 0007  
                       ?_debugNum 0002                        ??i2_setDBG 002F  
                      ??i2_memcpy 0035                        _packADData 1848  
      i2start_i2c_slave_reply@msg 002F                       resetADacc@i 0149  
                   i2_in_high_int 1BBC                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 19AC                         ?_init_i2c 0146  
                     _SleepIfOkay 166C                         ?_init_adc 0001  
                       _ADCBuffer 0048                           _ReadADC 1BC8  
                       ?_recv_msg 0150                           _OpenADC 10B4  
                      _in_low_int 16BA                      _handle_start 0DEA  
                       ?_resetDBG 0001                           __Hparam 0000  
                       ?_send_msg 000B                           __Lparam 0000  
      __end_of_timer0_int_handler 1B6E                 _resetAccumulators 1BE4  
                 __CFG_STVREN$OFF 000000                           __pcinit 14D0  
                 __size_of_setDBG 003C                   __size_of_memcpy 005E  
              ?_resetAccumulators 0001          __size_of_adc_int_handler 0050  
                      _init_queue 1238                           __ramtop 0400  
             __size_of_OpenTimer0 002A                           __ptext0 06B8  
                         __ptext1 0B16                           __ptext2 1BE4  
                         __ptext3 12B2                           __ptext4 139A  
                         __ptext5 1238                           __ptext6 1408  
                         __ptext7 19AC                           __ptext8 10B4  
                         __ptext9 1ABC                         _T0CONbits 000FD5  
                         _in_main 1700                        _sendADdata 1326  
          sendADdata@bytes_packed 00EF                      ??i2_debugNum 0032  
                      ??_debugNum 0004                           _sample1 004D  
                         _sample2 004E                           _sample3 004F  
                         _sample4 0050                           _sample5 0051  
             ??_resetAccumulators 014B               __end_of_WriteTimer0 1BBC  
      __size_of_sendRequestedData 0014                    ?i2_in_high_int 002F  
        __size_of_addADDataPoints 00B0                     i2debugNum@num 0030  
                  OpenADC@config2 0146                    __pintcode_body 1138  
            end_of_initialization 1520                           setDBG@b 0001  
                         memcpy@d 014C                           memcpy@n 014A  
                         memcpy@s 014E                        ??_init_i2c 0148  
                      _resetADacc 12B2                        ??_init_adc 014B  
     i2c_int_handler@data_written 00F5                     __Lmediumconst 0000  
                         int_func 1138                 sendADdata@outBuff 0088  
                ?_i2c_int_handler 0001                        ??_recv_msg 0157  
                    ??i2_resetDBG 002F                        ??_resetDBG 0001  
                    ??i2_send_msg 003F                        ??_send_msg 0011  
       __end_of_resetAccumulators 1BEA                         _RCSTAbits 000FAB  
              __end_ofi2_debugNum 15CE                           postdec1 000FE5  
                         postinc0 000FEE         ToMainHigh_sendmsg@msgtype 0017  
           __end_of_addDataPoints 1A68     __size_ofi2_ToMainHigh_sendmsg 002A  
                addADDataPoints@i 014C                  ??_unpackBrainMsg 0031  
                     ?_packADData 0080                         _TRISAbits 000F92  
                       _TRISCbits 000F94                __end_ofi2_resetDBG 1976  
              __end_ofi2_send_msg 0DEA                        main@length 031E  
                     ?_in_low_int 0148                setBrainReqData@buf 0031  
__size_ofi2_start_i2c_slave_reply 00F4             _start_i2c_slave_reply 0B16  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1BF0                _ToMainHigh_recvmsg 1786  
                       i1memcpy@d 0007                _ToMainHigh_sendmsg 1AE4  
                       i1memcpy@n 0005                         i1memcpy@s 0009  
                   __pidataCOMRAM 1BF0                         i2setDBG@b 002F  
                     ?_init_queue 0146                         i2memcpy@d 0035  
                     _WriteTimer0 1BAA                         i2memcpy@n 0033  
                       i2memcpy@s 0037                    __end_of_setDBG 18C2  
                  __end_of_memcpy 14D0                 _enable_interrupts 1BDC  
            __size_of_Delay1KTCYx 0016                       ?_sendADdata 0001  
             ?_ToMainHigh_recvmsg 015E                   ??i2_in_high_int 0031  
        i2c_int_handler@data_read 00FA               ?_ToMainHigh_sendmsg 0017  
              ?_enable_interrupts 0001               start_initialization 14D0  
                   ??_in_high_int 0148                 addDataPoints@data 0150  
               ??_adc_int_handler 001B          packReturnData@payloadLen 0031  
               __size_ofi1_memcpy 0040                 __size_ofi2_setDBG 003C  
               __size_ofi2_memcpy 0040               ??_enable_interrupts 0146  
                    ??_OpenTimer0 0146    __size_of_block_on_To_msgqueues 007E  
   __end_of_block_on_To_msgqueues 1238                       ?_resetADacc 0001  
               ??_addADDataPoints 014A      __end_of_InterruptHandlerHigh 11BA  
                      init_i2c@ic 0146              ??_ToMainHigh_recvmsg 0162  
            ??_ToMainHigh_sendmsg 001A          __size_of_setBrainReqData 0032  
      __size_of_resetAccumulators 0006               __size_of_packADData 003E  
                ??_packReturnData 0039          i2c_int_handler@error_buf 00F2  
                        ??_setDBG 0001         __end_of_enable_interrupts 1BE4  
                        ??_memcpy 014C                __end_of_OpenTimer0 1A92  
                       _addBuffer 1B0A          i2c_int_handler@msg_ready 00F9  
                     __pbssCOMRAM 0040                     ??_init_queues 014A  
                   __pcstackBANK0 0080                     __pcstackBANK1 0138  
                   __pcstackBANK3 0300               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 0146                 __size_of_debugNum 0052  
             __CFG_CCP2MX$DEFAULT 000000                   Delay1KTCYx@unit 0146  
    __size_of_InterruptHandlerLow 0094               __end_of_in_high_int 1BAA  
                    ?_SleepIfOkay 0001             ToMainLow_recvmsg@data 0160  
                    _ToMainLow_MQ 029B               __size_of_init_queue 007A  
                        ?_ReadADC 0001                         _check_msg 1976  
          ?_start_i2c_slave_reply 0146                 __size_of_init_i2c 006A  
               OpenADC@portconfig 0147                          ?_OpenADC 0146  
               __size_of_init_adc 0032               __size_of_sendADdata 0074  
                    recv_msg@data 0155                      recv_msg@qmsg 015C  
                    recv_msg@slot 0159                      recv_msg@qptr 0150  
      i2ToMainHigh_sendmsg@length 0088                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_resetDBG 003C  
               __size_of_send_msg 00AA                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 0160               __size_of_resetADacc 0074  
      i2c_int_handler@msg_to_send 00F8                          ?_in_main 014A  
                      ?_addBuffer 0001                 WriteTimer0@timer0 002F  
              _timer0_int_handler 1B52               ?_timer0_int_handler 0001  
             __end_of_init_queues 1408                     OpenADC@config 014A  
                        _LATBbits 000F8A                   i2check_msg@qptr 002F  
                      ?_check_msg 0146                          _IPR1bits 000F9F  
                        _PIE1bits 000F9D           i2_start_i2c_slave_reply 0C24  
                   ?i2_in_low_int 0031                          i2u252_45 10A2  
                        _PIR1bits 000F9E            ToMainHigh_sendmsg@data 0018  
                        _RCONbits 000FD0                  packADData@maxout 0086  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 0033  
      __size_of_enable_interrupts 0008                 ??_setBrainReqData 0033  
                      _ADCON0bits 000FC2                         main@j_452 0319  
                        i1_memcpy 17C8              _InterruptHandlerHigh 0008  
                    ??_packADData 0040                          i2_setDBG 18FE  
                        i2_memcpy 1808                       _in_high_int 1B98  
                    send_msg@data 000F               _i2c_configure_slave 1ABC  
                    send_msg@qmsg 0015                      send_msg@slot 0014  
                    send_msg@qptr 000B      __end_ofi2_ToMainHigh_sendmsg 1ABC  
                       copy_data0 1514                     ?i2_resetADacc 0001  
                  ??i2_in_low_int 0033                      ??_in_low_int 014A  
                __size_of_ReadADC 000A                          __Hrparam 0000  
                __size_of_OpenADC 0084              ?_i2c_configure_slave 0001  
                        __Lrparam 0000                 ?_enter_sleep_mode 0001  
              __end_of_packADData 1886                   _adc_int_handler 15CE  
        __size_of_i2c_int_handler 0608                ??_enter_sleep_mode 002F  
                    ??_init_queue 0148                      ?_WriteTimer0 002F  
                     ??_addBuffer 0001                      ??_sendADdata 0040  
           ?_InterruptHandlerHigh 0001                  __size_of_in_main 0044  
                        _debugNum 152A                 i2send_msg@msgtype 003C  
                 _addADDataPoints 0EB2       ToMainHigh_recvmsg@maxlength 0162  
               i2send_msg@tlength 0080                       _init_queues 139A  
                     debugNum@num 0002                __end_of_in_low_int 1700  
                        __ptext10 1BDC                          __ptext11 11BA  
                        __ptext20 1786                          __ptext12 1700  
                        __ptext21 09E0                          __ptext13 16BA  
                        __ptext30 1AE4                          __ptext22 1472  
                        __ptext14 1B98                          __ptext31 0F62  
                        __ptext23 1A68                          __ptext15 1976  
                        __ptext40 00B0                          __ptext32 17C8  
                        __ptext16 1B6E                          __ptext41 1A92  
                        __ptext33 1BC8                          __ptext25 15CE  
                        __ptext17 1A3E                          __ptext50 1848  
                        __ptext42 0D18                          __ptext26 152A  
                        __ptext18 0EB2                          __ptext51 100C  
                        __ptext43 1808                          __ptext35 1B52  
                        __ptext27 1886                          __ptext19 1744  
                        __ptext52 0DEA                          __ptext44 19DE  
                        __ptext36 157C                          __ptext28 18C2  
                        __ptext53 166C                          __ptext45 1BD2  
                        __ptext37 18FE                          __ptext29 1B0A  
                        __ptext54 1A10                          __ptext46 1B84  
                        __ptext38 193A                          __ptext55 1BBC  
                        __ptext47 161E                          __ptext39 1BAA  
                        __ptext56 1B2E                          __ptext48 1326  
                        __ptext57 1BEA                          __ptext49 0C24  
                       resetDBG@b 0001            __size_of_addDataPoints 002A  
                  ??i2_resetADacc 002F         ??i2_start_i2c_slave_reply 0031  
                    ??_resetADacc 0146                          _init_i2c 1408  
                        _init_adc 19AC               addADDataPoints@data 0146  
                   __size_of_main 0328                     ??i2_check_msg 0031  
                     ??_check_msg 0148                __end_of_init_queue 12B2  
            __size_of_SleepIfOkay 004E                          _recv_msg 09E0  
                        _resetDBG 18C2             ??_i2c_configure_slave 0146  
                        _send_msg 0F62                __end_of_sendADdata 139A  
                  init_queue@qptr 0146                          _timesreq 0047  
                   ??_Delay1KTCYx 0146               _InterruptHandlerLow 0018  
              __end_of_resetADacc 1326                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                          memcpy@d1 0146  
                        memcpy@s1 0148             __end_ofi2_in_high_int 1BC8  
           main@data_points_count 031C      i2c_int_handler@overrun_error 00F6  
                i2send_msg@length 003B                          intlevel1 0000  
                        intlevel2 0000              ?_InterruptHandlerLow 0001  
         ??_start_i2c_slave_reply 0148           __size_of_unpackBrainMsg 000A  
           _block_on_To_msgqueues 11BA                     ?_handle_start 0001  
              addADDataPoints@len 0148       __size_of_ToMainHigh_recvmsg 0042  
         __end_of_adc_int_handler 161E       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3       i2ToMainHigh_sendmsg@msgtype 0085  
        ToMainHigh_sendmsg@length 001A               __end_ofi2_check_msg 1B52  
            i2_ToMainHigh_sendmsg 1A92                     _addDataPoints 1A3E  
         __end_of_addADDataPoints 0F62            ??_InterruptHandlerHigh 0138  
               _ToMainLow_recvmsg 1744                main@last_reg_recvd 0316  
            __end_ofi2_in_low_int 1A3E                ?_ToMainLow_recvmsg 015E  
             __end_of_Delay1KTCYx 1B84                 ??_i2c_int_handler 00F1  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                   i2resetADacc@i 0032                    i2send_msg@data 003D  
           ??_InterruptHandlerLow 001E               ??_ToMainLow_recvmsg 0162  
                  i2send_msg@qmsg 0083                    i2send_msg@slot 0082  
                  i2send_msg@qptr 0039                    ??_handle_start 002F  
                    _USART_Status 0045                   _setBrainReqData 19DE  
