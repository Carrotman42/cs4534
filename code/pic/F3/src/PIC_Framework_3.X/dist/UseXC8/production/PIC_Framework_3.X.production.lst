

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Feb 19 01:30:56 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  0007B8                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _sample1
    50  0007B8  01                 	db	1
    51                           
    52                           ;initializer for _sample2
    53  0007B9  05                 	db	5
    54                           
    55                           ;initializer for _sample3
    56  0007BA  10                 	db	16
    57                           
    58                           ;initializer for _sample4
    59  0007BB  D8                 	db	216
    60                           
    61                           ;initializer for _sample5
    62  0007BC  FE                 	db	254
    63  0000                     _ADCON0	set	4034
    64  0000                     _ADCON0bits	set	4034
    65  0000                     _ADCON1	set	4033
    66  0000                     _ADCON2	set	4032
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADRESL	set	4035
    69  0000                     _INTCONbits	set	4082
    70  0000                     _IPR1bits	set	3999
    71  0000                     _LATB	set	3978
    72  0000                     _LATBbits	set	3978
    73  0000                     _OSCCON	set	4051
    74  0000                     _OSCCONbits	set	4051
    75  0000                     _OSCTUNEbits	set	3995
    76  0000                     _PIE1bits	set	3997
    77  0000                     _PIR1bits	set	3998
    78  0000                     _RCONbits	set	4048
    79  0000                     _RCREG	set	4014
    80  0000                     _RCSTAbits	set	4011
    81  0000                     _SSPCON1bits	set	4038
    82  0000                     _T0CON	set	4053
    83  0000                     _T0CONbits	set	4053
    84  0000                     _TMR0H	set	4055
    85  0000                     _TMR0L	set	4054
    86  0000                     _TMR1H	set	4047
    87  0000                     _TMR1L	set	4046
    88  0000                     _TRISAbits	set	3986
    89  0000                     _TRISB	set	3987
    90                           
    91                           	psect	nvCOMRAM
    92  000051                     __pnvCOMRAM:
    93                           	opt stack 0
    94  000051                     _ic_ptr:
    95                           	opt stack 0
    96  000051                     	ds	2
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  00042E                     __pcinit:
   102                           	opt stack 0
   103  00042E                     start_initialization:
   104                           	opt stack 0
   105  00042E                     __initialization:
   106                           	opt stack 0
   107                           
   108                           ; Clear objects allocated to BANK1 (108 bytes)
   109  00042E  EE01  F089         	lfsr	0,__pbssBANK1
   110  000432  0E6C               	movlw	108
   111  000434                     clear_0:
   112  000434  6AEE               	clrf	postinc0,c
   113  000436  06E8               	decf	wreg,f,c
   114  000438  E1FD               	bnz	clear_0
   115                           
   116                           ; Clear objects allocated to BANK0 (108 bytes)
   117  00043A  EE00  F080         	lfsr	0,__pbssBANK0
   118  00043E  0E6C               	movlw	108
   119  000440                     clear_1:
   120  000440  6AEE               	clrf	postinc0,c
   121  000442  06E8               	decf	wreg,f,c
   122  000444  E1FD               	bnz	clear_1
   123                           
   124                           ; Clear objects allocated to COMRAM (11 bytes)
   125  000446  EE00  F041         	lfsr	0,__pbssCOMRAM
   126  00044A  0E0B               	movlw	11
   127  00044C                     clear_2:
   128  00044C  6AEE               	clrf	postinc0,c
   129  00044E  06E8               	decf	wreg,f,c
   130  000450  E1FD               	bnz	clear_2
   131                           
   132                           ; Initialize objects allocated to COMRAM (5 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134  000452  0EB8               	movlw	low __pidataCOMRAM
   135  000454  6EF6               	movwf	tblptrl,c
   136  000456  0E07               	movlw	high __pidataCOMRAM
   137  000458  6EF7               	movwf	tblptrh,c
   138  00045A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139  00045C  6EF8               	movwf	tblptru,c
   140  00045E  EE00  F04C         	lfsr	0,__pdataCOMRAM
   141  000462  EE10 F005          	lfsr	1,5
   142  000466                     copy_data0:
   143  000466  0009               	tblrd		*+
   144  000468  CFF5 FFEE          	movff	tablat,postinc0
   145  00046C  50E5               	movf	postdec1,w,c
   146  00046E  50E1               	movf	fsr1l,w,c
   147  000470  E1FA               	bnz	copy_data0
   148  000472                     end_of_initialization:
   149                           	opt stack 0
   150  000472                     __end_of__initialization:
   151                           	opt stack 0
   152  000472  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153  000474  6EF8               	movwf	tblptru,c
   154  000476  0100               	movlb	0
   155  000478  EF40  F001         	goto	_main	;jump to C main() function
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           postinc0	equ	0xFEE
   161                           wreg	equ	0xFE8
   162                           postdec1	equ	0xFE5
   163                           fsr1l	equ	0xFE1
   164                           
   165                           	psect	bssCOMRAM
   166  000041                     __pbssCOMRAM:
   167                           	opt stack 0
   168  000041                     _uc_ptr:
   169                           	opt stack 0
   170  000041                     	ds	2
   171  000043                     _MQ_Main_Willing_to_block:
   172                           	opt stack 0
   173  000043                     	ds	1
   174  000044                     _USART_Status:
   175                           	opt stack 0
   176  000044                     	ds	1
   177  000045                     _count:
   178                           	opt stack 0
   179  000045                     	ds	1
   180  000046                     _timesreq:
   181                           	opt stack 0
   182  000046                     	ds	1
   183  000047                     _ADCBuffer:
   184                           	opt stack 0
   185  000047                     	ds	5
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195                           	psect	dataCOMRAM
   196  00004C                     __pdataCOMRAM:
   197                           	opt stack 0
   198  00004C                     _sample1:
   199                           	opt stack 0
   200  00004C                     	ds	1
   201  00004D                     _sample2:
   202                           	opt stack 0
   203  00004D                     	ds	1
   204  00004E                     _sample3:
   205                           	opt stack 0
   206  00004E                     	ds	1
   207  00004F                     _sample4:
   208                           	opt stack 0
   209  00004F                     	ds	1
   210  000050                     _sample5:
   211                           	opt stack 0
   212  000050                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	bssBANK0
   223  000080                     __pbssBANK0:
   224                           	opt stack 0
   225  000080                     _ToMainHigh_MQ:
   226                           	opt stack 0
   227  000080                     	ds	54
   228  0000B6                     _ToMainLow_MQ:
   229                           	opt stack 0
   230  0000B6                     	ds	54
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	bssBANK1
   241  000189                     __pbssBANK1:
   242                           	opt stack 0
   243  000189                     _FromMainHigh_MQ:
   244                           	opt stack 0
   245  000189                     	ds	54
   246  0001BF                     _FromMainLow_MQ:
   247                           	opt stack 0
   248  0001BF                     	ds	54
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           postdec1	equ	0xFE5
   256                           fsr1l	equ	0xFE1
   257                           
   258                           	psect	cstackBANK1
   259  000100                     __pcstackBANK1:
   260                           	opt stack 0
   261  000100                     main@msgbuffer:
   262                           	opt stack 0
   263                           
   264                           ; 11 bytes @ 0x0
   265  000100                     	ds	11
   266  00010B                     main@data_points_count:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0xB
   270  00010B                     	ds	2
   271  00010D                     main@last_reg_recvd:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0xD
   275  00010D                     	ds	1
   276  00010E                     main@ic:
   277                           	opt stack 0
   278                           
   279                           ; 121 bytes @ 0xE
   280  00010E                     	ds	121
   281  000187                     main@length:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x87
   285  000187                     	ds	1
   286  000188                     main@msgtype:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x88
   290  000188                     	ds	1
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	cstackCOMRAM
   301  000001                     __pcstackCOMRAM:
   302                           	opt stack 0
   303  000001                     ??_InterruptHandlerLow:
   304  000001                     
   305                           ; 0 bytes @ 0x0
   306  000001                     	ds	17
   307  000012                     ?i2_in_high_int:
   308                           	opt stack 0
   309  000012                     i2check_msg@qptr:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x11
   313  000012                     	ds	2
   314  000014                     ??i2_check_msg:
   315  000014                     ?i2_in_low_int:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x13
   319  000014                     	ds	2
   320  000016                     ??_InterruptHandlerHigh:
   321  000016                     
   322                           ; 0 bytes @ 0x15
   323  000016                     	ds	14
   324  000024                     ?_in_high_int:
   325                           	opt stack 0
   326  000024                     ?___aldiv:
   327                           	opt stack 0
   328  000024                     OpenTimer0@config:
   329                           	opt stack 0
   330  000024                     Delay1KTCYx@unit:
   331                           	opt stack 0
   332  000024                     init_queue@qptr:
   333                           	opt stack 0
   334  000024                     check_msg@qptr:
   335                           	opt stack 0
   336  000024                     init_i2c@ic:
   337                           	opt stack 0
   338  000024                     memcpy@d1:
   339                           	opt stack 0
   340  000024                     ___aldiv@dividend:
   341                           	opt stack 0
   342                           
   343                           ; 4 bytes @ 0x23
   344  000024                     	ds	2
   345  000026                     ??_init_queue:
   346  000026                     ??_check_msg:
   347  000026                     ?_in_low_int:
   348                           	opt stack 0
   349  000026                     memcpy@s1:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x25
   353  000026                     	ds	1
   354  000027                     init_queue@i:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x26
   358  000027                     	ds	1
   359  000028                     ??_init_queues:
   360  000028                     ?_in_main:
   361                           	opt stack 0
   362  000028                     memcpy@n:
   363                           	opt stack 0
   364  000028                     ___aldiv@divisor:
   365                           	opt stack 0
   366                           
   367                           ; 4 bytes @ 0x27
   368  000028                     	ds	2
   369  00002A                     ??_block_on_To_msgqueues:
   370  00002A                     memcpy@d:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x29
   374  00002A                     	ds	2
   375  00002C                     ??___aldiv:
   376  00002C                     memcpy@s:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x2B
   380  00002C                     	ds	1
   381  00002D                     ___aldiv@counter:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x2C
   385  00002D                     	ds	1
   386  00002E                     ___aldiv@sign:
   387                           	opt stack 0
   388  00002E                     recv_msg@qptr:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x2D
   392  00002E                     	ds	1
   393  00002F                     ___aldiv@quotient:
   394                           	opt stack 0
   395                           
   396                           ; 4 bytes @ 0x2E
   397  00002F                     	ds	1
   398  000030                     recv_msg@maxlength:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x2F
   402  000030                     	ds	1
   403  000031                     recv_msg@msgtype:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x30
   407  000031                     	ds	2
   408  000033                     ??_i2c_configure_master:
   409  000033                     recv_msg@data:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x32
   413  000033                     	ds	2
   414  000035                     ??_recv_msg:
   415                           
   416                           ; 0 bytes @ 0x34
   417  000035                     	ds	2
   418  000037                     recv_msg@slot:
   419                           	opt stack 0
   420  000037                     i2c_configure_master@fosc:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x36
   424  000037                     	ds	1
   425  000038                     recv_msg@tlength:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x37
   429  000038                     	ds	2
   430  00003A                     recv_msg@qmsg:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x39
   434  00003A                     	ds	2
   435  00003C                     ToMainLow_recvmsg@msgtype:
   436                           	opt stack 0
   437  00003C                     ToMainHigh_recvmsg@msgtype:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x3B
   441  00003C                     	ds	2
   442  00003E                     ToMainLow_recvmsg@data:
   443                           	opt stack 0
   444  00003E                     ToMainHigh_recvmsg@data:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x3D
   448  00003E                     	ds	2
   449  000040                     ToMainLow_recvmsg@maxlength:
   450                           	opt stack 0
   451  000040                     ToMainHigh_recvmsg@maxlength:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x3F
   455  000040                     	ds	1
   456  000041                     tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           ; 0 bytes @ 0x40
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 191 in file "../src/main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  ic            121   14[BANK1 ] struct __i2c_comm
   476 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   477 ;;  to_send_buff   11    0        unsigned char [11]
   478 ;;  data_points_    2   11[BANK1 ] int 
   479 ;;  msgtype         1  136[BANK1 ] unsigned char 
   480 ;;  length          1  135[BANK1 ] char 
   481 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   482 ;; Return value:  Size  Location     Type
   483 ;;		None               void
   484 ;; Registers used:
   485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0     137       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0     137       0       0
   495 ;;Total ram usage:      137 bytes
   496 ;; Hardware stack levels required when called:    9
   497 ;; This function calls:
   498 ;;		_OpenTimer0
   499 ;;		_ToMainHigh_recvmsg
   500 ;;		_ToMainLow_recvmsg
   501 ;;		_block_on_To_msgqueues
   502 ;;		_enable_interrupts
   503 ;;		_i2c_configure_master
   504 ;;		_init_i2c
   505 ;;		_init_queues
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text0
   512  000280                     __ptext0:
   513                           	opt stack 0
   514  000280                     _main:
   515                           	opt stack 22
   516                           
   517                           ;main.c: 193: signed char length;
   518                           ;main.c: 194: unsigned char msgtype;
   519                           ;main.c: 195: unsigned char last_reg_recvd;
   520                           ;main.c: 197: i2c_comm ic;
   521                           ;main.c: 198: unsigned char msgbuffer[10 + 1];
   522                           ;main.c: 199: unsigned char to_send_buffer[10+1];
   523                           ;main.c: 200: int data_points_count = 0;
   524                           
   525                           ;incstack = 0
   526  000280  0E00               	movlw	0
   527  000282  0101               	movlb	1	; () banked
   528  000284  0101               	movlb	1	; () banked
   529  000286  6F0C               	movwf	(main@data_points_count+1)& (0+255),b
   530  000288  0E00               	movlw	0
   531  00028A  0101               	movlb	1	; () banked
   532  00028C  6F0B               	movwf	main@data_points_count& (0+255),b
   533                           
   534                           ;main.c: 212: OSCCON = 0x82;
   535  00028E  0E82               	movlw	130
   536  000290  6ED3               	movwf	4051,c	;volatile
   537                           
   538                           ; BSR set to: 1
   539                           ;main.c: 213: OSCTUNEbits.PLLEN = 0;
   540  000292  9C9B               	bcf	3995,6,c	;volatile
   541                           
   542                           ; BSR set to: 1
   543                           ;main.c: 234: init_i2c(&ic);
   544  000294  0101               	movlb	1	; () banked
   545  000296  0E01               	movlw	high main@ic
   546  000298  6E25               	movwf	init_i2c@ic+1,c
   547  00029A  0101               	movlb	1	; () banked
   548  00029C  0E0E               	movlw	low main@ic
   549  00029E  6E24               	movwf	init_i2c@ic,c
   550  0002A0  ECD8  F002         	call	_init_i2c	;wreg free
   551                           
   552                           ;main.c: 240: init_queues();
   553  0002A4  ECB3  F002         	call	_init_queues	;wreg free
   554                           
   555                           ;main.c: 244: TRISB = 0x0;
   556  0002A8  0E00               	movlw	0
   557  0002AA  6E93               	movwf	3987,c	;volatile
   558                           
   559                           ;main.c: 245: LATB = 0x0;
   560  0002AC  0E00               	movlw	0
   561  0002AE  6E8A               	movwf	3978,c	;volatile
   562                           
   563                           ;main.c: 258: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110001);
   564  0002B0  0E91               	movlw	145
   565  0002B2  ECAF  F003         	call	_OpenTimer0
   566                           
   567                           ;main.c: 278: IPR1bits.SSPIP = 1;
   568  0002B6  869F               	bsf	3999,3,c	;volatile
   569                           
   570                           ;main.c: 294: i2c_configure_master(12000000);
   571  0002B8  0E00               	movlw	0
   572  0002BA  EC65  F002         	call	_i2c_configure_master
   573                           
   574                           ;main.c: 298: PIE1bits.SSPIE = 1;
   575  0002BE  869D               	bsf	3997,3,c	;volatile
   576                           
   577                           ;main.c: 316: enable_interrupts();
   578  0002C0  ECD5  F003         	call	_enable_interrupts	;wreg free
   579  0002C4                     l1759:
   580                           
   581                           ;main.c: 328: block_on_To_msgqueues();
   582  0002C4  ECE9  F001         	call	_block_on_To_msgqueues	;wreg free
   583                           
   584                           ;main.c: 335: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   585  0002C8  0101               	movlb	1	; () banked
   586  0002CA  0E01               	movlw	high main@msgtype
   587  0002CC  6E3D               	movwf	ToMainHigh_recvmsg@msgtype+1,c
   588  0002CE  0101               	movlb	1	; () banked
   589  0002D0  0E88               	movlw	low main@msgtype
   590  0002D2  6E3C               	movwf	ToMainHigh_recvmsg@msgtype,c
   591  0002D4  0101               	movlb	1	; () banked
   592  0002D6  0E01               	movlw	high main@msgbuffer
   593  0002D8  6E3F               	movwf	ToMainHigh_recvmsg@data+1,c
   594  0002DA  0101               	movlb	1	; () banked
   595  0002DC  0E00               	movlw	low main@msgbuffer
   596  0002DE  6E3E               	movwf	ToMainHigh_recvmsg@data,c
   597  0002E0  0E0A               	movlw	10
   598  0002E2  EC76  F003         	call	_ToMainHigh_recvmsg
   599  0002E6  0101               	movlb	1	; () banked
   600  0002E8  0101               	movlb	1	; () banked
   601  0002EA  6F87               	movwf	main@length& (0+255),b
   602                           
   603                           ; BSR set to: 1
   604                           ;main.c: 336: if (length < 0) {
   605  0002EC  0101               	movlb	1	; () banked
   606  0002EE  0101               	movlb	1	; () banked
   607  0002F0  BF87               	btfsc	main@length& (0+255),7,b
   608  0002F2  D013               	goto	l1771
   609  0002F4  D003               	goto	l1769
   610  0002F6                     l80:
   611                           
   612                           ; BSR set to: 1
   613                           ;main.c: 349: case 41:
   614                           ;main.c: 350: {
   615                           ;main.c: 353: last_reg_recvd = msgbuffer[0];
   616  0002F6  C100  F10D         	movff	main@msgbuffer,main@last_reg_recvd
   617                           
   618                           ;main.c: 354: break;
   619  0002FA  D00F               	goto	l1771
   620  0002FC                     l1769:
   621                           
   622                           ; BSR set to: 1
   623  0002FC  0101               	movlb	1	; () banked
   624  0002FE  0101               	movlb	1	; () banked
   625  000300  5188               	movf	main@msgtype& (0+255),w,b
   626                           
   627                           ; Switch size 1, requested type "space"
   628                           ; Number of cases is 5, Range of values is 10 to 50
   629                           ; switch strategies available:
   630                           ; Name         Instructions Cycles
   631                           ; simple_byte           16     9 (average)
   632                           ;	Chosen strategy is simple_byte
   633  000302  0A0A               	xorlw	10	; case 10
   634  000304  B4D8               	btfsc	status,2,c
   635  000306  D009               	goto	l1771
   636  000308  0A22               	xorlw	34	; case 40
   637  00030A  B4D8               	btfsc	status,2,c
   638  00030C  D7F4               	goto	l80
   639  00030E  0A01               	xorlw	1	; case 41
   640  000310  B4D8               	btfsc	status,2,c
   641  000312  D7F1               	goto	l80
   642  000314  0A03               	xorlw	3	; case 42
   643  000316  A4D8               	btfss	status,2,c
   644  000318  0A18               	xorlw	24	; case 50
   645  00031A                     l1771:
   646                           
   647                           ; BSR set to: 1
   648                           ;main.c: 375: }
   649                           ;main.c: 378: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
   650  00031A  0101               	movlb	1	; () banked
   651  00031C  0E01               	movlw	high main@msgtype
   652  00031E  6E3D               	movwf	ToMainLow_recvmsg@msgtype+1,c
   653  000320  0101               	movlb	1	; () banked
   654  000322  0E88               	movlw	low main@msgtype
   655  000324  6E3C               	movwf	ToMainLow_recvmsg@msgtype,c
   656  000326  0101               	movlb	1	; () banked
   657  000328  0E01               	movlw	high main@msgbuffer
   658  00032A  6E3F               	movwf	ToMainLow_recvmsg@data+1,c
   659  00032C  0101               	movlb	1	; () banked
   660  00032E  0E00               	movlw	low main@msgbuffer
   661  000330  6E3E               	movwf	ToMainLow_recvmsg@data,c
   662  000332  0E0A               	movlw	10
   663  000334  EC61  F003         	call	_ToMainLow_recvmsg
   664  000338  0101               	movlb	1	; () banked
   665  00033A  0101               	movlb	1	; () banked
   666  00033C  6F87               	movwf	main@length& (0+255),b
   667                           
   668                           ; BSR set to: 1
   669                           ;main.c: 379: if (length < 0) {
   670  00033E  0101               	movlb	1	; () banked
   671  000340  0101               	movlb	1	; () banked
   672  000342  BF87               	btfsc	main@length& (0+255),7,b
   673  000344  D7BF               	goto	l1759
   674                           
   675                           ; BSR set to: 1
   676                           
   677                           ; BSR set to: 1
   678                           
   679                           ; BSR set to: 1
   680                           ;main.c: 408: };
   681                           ;main.c: 409: };
   682                           
   683                           ; BSR set to: 1
   684                           ;main.c: 405: {
   685                           ;main.c: 407: break;
   686                           
   687                           ;main.c: 392: };
   688                           ;main.c: 404: default:
   689                           
   690                           ; BSR set to: 1
   691                           ;main.c: 387: {
   692                           ;main.c: 391: break;
   693                           
   694                           ;main.c: 386: case 50:
   695                           
   696                           ; BSR set to: 1
   697                           ;main.c: 385: switch (msgtype) {
   698                           
   699                           ; BSR set to: 1
   700                           ;main.c: 383: }
   701                           ;main.c: 384: } else {
   702                           
   703                           ; BSR set to: 1
   704  000346  0101               	movlb	1	; () banked
   705  000348  0101               	movlb	1	; () banked
   706  00034A  5188               	movf	main@msgtype& (0+255),w,b
   707                           
   708                           ; Switch size 1, requested type "space"
   709                           ; Number of cases is 1, Range of values is 50 to 50
   710                           ; switch strategies available:
   711                           ; Name         Instructions Cycles
   712                           ; simple_byte            4     3 (average)
   713                           ;	Chosen strategy is simple_byte
   714  00034C  0A32               	xorlw	50	; case 50
   715  00034E  D7BA               	goto	l1759
   716  000350                     __end_of_main:
   717                           	opt stack 0
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           postdec1	equ	0xFE5
   725                           fsr1l	equ	0xFE1
   726                           status	equ	0xFD8
   727                           
   728 ;; *************** function _init_queues *****************
   729 ;; Defined at:
   730 ;;		line 195 in file "../src/messages.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;		None               void
   737 ;; Registers used:
   738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          1       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    6
   751 ;; This function calls:
   752 ;;		_init_queue
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text1
   759  000566                     __ptext1:
   760                           	opt stack 0
   761  000566                     _init_queues:
   762                           	opt stack 24
   763                           
   764                           ;messages.c: 196: MQ_Main_Willing_to_block = 0;
   765                           
   766                           ; BSR set to: 1
   767                           ;incstack = 0
   768  000566  6E28               	movwf	??_init_queues& (0+255),c
   769  000568  0E00               	movlw	0
   770  00056A  6E43               	movwf	_MQ_Main_Willing_to_block,c
   771  00056C  5028               	movf	??_init_queues& (0+255),w,c
   772                           
   773                           ;messages.c: 197: init_queue(&ToMainLow_MQ);
   774  00056E  0100               	movlb	0	; () banked
   775  000570  0E00               	movlw	high _ToMainLow_MQ
   776  000572  6E25               	movwf	init_queue@qptr+1,c
   777  000574  0100               	movlb	0	; () banked
   778  000576  0EB6               	movlw	low _ToMainLow_MQ
   779  000578  6E24               	movwf	init_queue@qptr,c
   780  00057A  EC3E  F002         	call	_init_queue	;wreg free
   781                           
   782                           ;messages.c: 198: init_queue(&ToMainHigh_MQ);
   783  00057E  0100               	movlb	0	; () banked
   784  000580  0E00               	movlw	high _ToMainHigh_MQ
   785  000582  6E25               	movwf	init_queue@qptr+1,c
   786  000584  0100               	movlb	0	; () banked
   787  000586  0E80               	movlw	low _ToMainHigh_MQ
   788  000588  6E24               	movwf	init_queue@qptr,c
   789  00058A  EC3E  F002         	call	_init_queue	;wreg free
   790                           
   791                           ;messages.c: 199: init_queue(&FromMainLow_MQ);
   792  00058E  0101               	movlb	1	; () banked
   793  000590  0E01               	movlw	high _FromMainLow_MQ
   794  000592  6E25               	movwf	init_queue@qptr+1,c
   795  000594  0101               	movlb	1	; () banked
   796  000596  0EBF               	movlw	low _FromMainLow_MQ
   797  000598  6E24               	movwf	init_queue@qptr,c
   798  00059A  EC3E  F002         	call	_init_queue	;wreg free
   799                           
   800                           ;messages.c: 200: init_queue(&FromMainHigh_MQ);
   801  00059E  0101               	movlb	1	; () banked
   802  0005A0  0E01               	movlw	high _FromMainHigh_MQ
   803  0005A2  6E25               	movwf	init_queue@qptr+1,c
   804  0005A4  0101               	movlb	1	; () banked
   805  0005A6  0E89               	movlw	low _FromMainHigh_MQ
   806  0005A8  6E24               	movwf	init_queue@qptr,c
   807  0005AA  EC3E  F002         	call	_init_queue	;wreg free
   808  0005AE  0012               	return	
   809  0005B0                     __end_of_init_queues:
   810                           	opt stack 0
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           postdec1	equ	0xFE5
   818                           fsr1l	equ	0xFE1
   819                           status	equ	0xFD8
   820                           
   821 ;; *************** function _init_queue *****************
   822 ;; Defined at:
   823 ;;		line 15 in file "../src/messages.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  qptr            2   35[COMRAM] PTR struct __msg_queue
   826 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  i               1   38[COMRAM] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;		None               void
   831 ;; Registers used:
   832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   838 ;;      Params:         2       0       0       0       0
   839 ;;      Locals:         1       0       0       0       0
   840 ;;      Temps:          1       0       0       0       0
   841 ;;      Totals:         4       0       0       0       0
   842 ;;Total ram usage:        4 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    5
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_init_queues
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text2
   853  00047C                     __ptext2:
   854                           	opt stack 0
   855  00047C                     _init_queue:
   856                           	opt stack 24
   857                           
   858                           ;messages.c: 16: unsigned char i;
   859                           ;messages.c: 18: qptr->cur_write_ind = 0;
   860                           
   861                           ;incstack = 0
   862  00047C  EE20 F034          	lfsr	2,52
   863  000480  5024               	movf	init_queue@qptr,w,c
   864  000482  26D9               	addwf	fsr2l,f,c
   865  000484  5025               	movf	init_queue@qptr+1,w,c
   866  000486  22DA               	addwfc	fsr2h,f,c
   867  000488  0E00               	movlw	0
   868  00048A  6EDF               	movwf	indf2,c
   869                           
   870                           ;messages.c: 19: qptr->cur_read_ind = 0;
   871  00048C  EE20 F035          	lfsr	2,53
   872  000490  5024               	movf	init_queue@qptr,w,c
   873  000492  26D9               	addwf	fsr2l,f,c
   874  000494  5025               	movf	init_queue@qptr+1,w,c
   875  000496  22DA               	addwfc	fsr2h,f,c
   876  000498  0E00               	movlw	0
   877  00049A  6EDF               	movwf	indf2,c
   878                           
   879                           ;messages.c: 20: for (i = 0; i < 4; i++) {
   880  00049C  6E26               	movwf	??_init_queue& (0+255),c
   881  00049E  0E00               	movlw	0
   882  0004A0  6E27               	movwf	init_queue@i,c
   883  0004A2  5026               	movf	??_init_queue& (0+255),w,c
   884  0004A4  0E03               	movlw	3
   885  0004A6  6427               	cpfsgt	init_queue@i,c
   886  0004A8  D001               	goto	l1855
   887  0004AA  0012               	return	
   888  0004AC                     l1855:
   889                           
   890                           ;messages.c: 21: qptr->queue[i].full = 0;
   891  0004AC  5027               	movf	init_queue@i,w,c
   892  0004AE  0D0D               	mullw	13
   893  0004B0  50F3               	movf	prodl,w,c
   894  0004B2  2424               	addwf	init_queue@qptr,w,c
   895  0004B4  6ED9               	movwf	fsr2l,c
   896  0004B6  50F4               	movf	prodh,w,c
   897  0004B8  2025               	addwfc	init_queue@qptr+1,w,c
   898  0004BA  6EDA               	movwf	fsr2h,c
   899  0004BC  0E00               	movlw	0
   900  0004BE  6EDF               	movwf	indf2,c
   901  0004C0  2A27               	incf	init_queue@i,f,c
   902  0004C2  0E03               	movlw	3
   903  0004C4  6427               	cpfsgt	init_queue@i,c
   904  0004C6  D7F2               	goto	l1855
   905  0004C8  0012               	return	
   906  0004CA                     __end_of_init_queue:
   907                           	opt stack 0
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           prodh	equ	0xFF4
   913                           prodl	equ	0xFF3
   914                           postinc0	equ	0xFEE
   915                           wreg	equ	0xFE8
   916                           postdec1	equ	0xFE5
   917                           fsr1l	equ	0xFE1
   918                           indf2	equ	0xFDF
   919                           fsr2h	equ	0xFDA
   920                           fsr2l	equ	0xFD9
   921                           status	equ	0xFD8
   922                           
   923 ;; *************** function _init_i2c *****************
   924 ;; Defined at:
   925 ;;		line 23 in file "../src/my_i2c.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  ic              2   35[COMRAM] PTR struct __i2c_comm
   928 ;;		 -> main@ic(121), 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;		None               void
   933 ;; Registers used:
   934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   940 ;;      Params:         2       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0
   943 ;;      Totals:         2       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    5
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text3
   955  0005B0                     __ptext3:
   956                           	opt stack 0
   957  0005B0                     _init_i2c:
   958                           	opt stack 25
   959                           
   960                           ;my_i2c.c: 24: ic_ptr = ic;
   961                           
   962                           ;incstack = 0
   963  0005B0  C025  F052         	movff	init_i2c@ic+1,_ic_ptr+1
   964  0005B4  C024  F051         	movff	init_i2c@ic,_ic_ptr
   965                           
   966                           ;my_i2c.c: 25: ic_ptr->buflen = 0;
   967  0005B8  EE20 F00A          	lfsr	2,10
   968  0005BC  5051               	movf	_ic_ptr,w,c
   969  0005BE  26D9               	addwf	fsr2l,f,c
   970  0005C0  5052               	movf	_ic_ptr+1,w,c
   971  0005C2  22DA               	addwfc	fsr2h,f,c
   972  0005C4  0E00               	movlw	0
   973  0005C6  6EDF               	movwf	indf2,c
   974                           
   975                           ;my_i2c.c: 26: ic_ptr->event_count = 0;
   976  0005C8  EE20 F00B          	lfsr	2,11
   977  0005CC  5051               	movf	_ic_ptr,w,c
   978  0005CE  26D9               	addwf	fsr2l,f,c
   979  0005D0  5052               	movf	_ic_ptr+1,w,c
   980  0005D2  22DA               	addwfc	fsr2h,f,c
   981  0005D4  0E00               	movlw	0
   982  0005D6  6EDF               	movwf	indf2,c
   983                           
   984                           ;my_i2c.c: 27: ic_ptr->status = 0x5;
   985  0005D8  EE20 F00C          	lfsr	2,12
   986  0005DC  5051               	movf	_ic_ptr,w,c
   987  0005DE  26D9               	addwf	fsr2l,f,c
   988  0005E0  5052               	movf	_ic_ptr+1,w,c
   989  0005E2  22DA               	addwfc	fsr2h,f,c
   990  0005E4  0E05               	movlw	5
   991  0005E6  6EDF               	movwf	indf2,c
   992                           
   993                           ;my_i2c.c: 28: ic_ptr->error_count = 0;
   994  0005E8  EE20 F00E          	lfsr	2,14
   995  0005EC  5051               	movf	_ic_ptr,w,c
   996  0005EE  26D9               	addwf	fsr2l,f,c
   997  0005F0  5052               	movf	_ic_ptr+1,w,c
   998  0005F2  22DA               	addwfc	fsr2h,f,c
   999  0005F4  0E00               	movlw	0
  1000  0005F6  6EDF               	movwf	indf2,c
  1001  0005F8  0012               	return	
  1002  0005FA                     __end_of_init_i2c:
  1003                           	opt stack 0
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           prodh	equ	0xFF4
  1009                           prodl	equ	0xFF3
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           indf2	equ	0xFDF
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _i2c_configure_master *****************
  1020 ;; Defined at:
  1021 ;;		line 36 in file "../src/my_i2c.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  fosc            1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  fosc            1   54[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;		None               void
  1028 ;; Registers used:
  1029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         1       0       0       0       0
  1037 ;;      Temps:          4       0       0       0       0
  1038 ;;      Totals:         5       0       0       0       0
  1039 ;;Total ram usage:        5 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    6
  1042 ;; This function calls:
  1043 ;;		___aldiv
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text4
  1050  0004CA                     __ptext4:
  1051                           	opt stack 0
  1052  0004CA                     _i2c_configure_master:
  1053                           	opt stack 24
  1054                           
  1055                           ;incstack = 0
  1056                           ;i2c_configure_master@fosc stored from wreg
  1057  0004CA  CFE8 F037          	movff	wreg,i2c_configure_master@fosc
  1058                           
  1059                           ;my_i2c.c: 37: SSPCON1bits.SSPM = 0x8;
  1060  0004CE  50C6               	movf	4038,w,c	;volatile
  1061  0004D0  0BF0               	andlw	-16
  1062  0004D2  0908               	iorlw	8
  1063  0004D4  6EC6               	movwf	4038,c	;volatile
  1064                           
  1065                           ;my_i2c.c: 38: SSPCON1bits.SSPEN = 0x1;
  1066  0004D6  8AC6               	bsf	4038,5,c	;volatile
  1067                           
  1068                           ;my_i2c.c: 39: ic_ptr->baud_rate = (fosc / (4*100000))-1;
  1069  0004D8  EE20 F078          	lfsr	2,120
  1070  0004DC  5051               	movf	_ic_ptr,w,c
  1071  0004DE  26D9               	addwf	fsr2l,f,c
  1072  0004E0  5052               	movf	_ic_ptr+1,w,c
  1073  0004E2  22DA               	addwfc	fsr2h,f,c
  1074  0004E4  5037               	movf	i2c_configure_master@fosc,w,c
  1075  0004E6  6E24               	movwf	___aldiv@dividend,c
  1076  0004E8  6A25               	clrf	___aldiv@dividend+1,c
  1077  0004EA  6A26               	clrf	___aldiv@dividend+2,c
  1078  0004EC  6A27               	clrf	___aldiv@dividend+3,c
  1079  0004EE  0E80               	movlw	128
  1080  0004F0  6E28               	movwf	___aldiv@divisor,c
  1081  0004F2  0E1A               	movlw	26
  1082  0004F4  6E29               	movwf	___aldiv@divisor+1,c
  1083  0004F6  0E06               	movlw	6
  1084  0004F8  6E2A               	movwf	___aldiv@divisor+2,c
  1085  0004FA  0E00               	movlw	0
  1086  0004FC  6E2B               	movwf	___aldiv@divisor+3,c
  1087  0004FE  EC53  F000         	call	___aldiv	;wreg free
  1088  000502  C024  F033         	movff	?___aldiv,??_i2c_configure_master
  1089  000506  C025  F034         	movff	?___aldiv+1,??_i2c_configure_master+1
  1090  00050A  C026  F035         	movff	?___aldiv+2,??_i2c_configure_master+2
  1091  00050E  C027  F036         	movff	?___aldiv+3,??_i2c_configure_master+3
  1092  000512  0433               	decf	??_i2c_configure_master,w,c
  1093  000514  6EDF               	movwf	indf2,c
  1094  000516  0012               	return	
  1095  000518                     __end_of_i2c_configure_master:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec1	equ	0xFE5
  1106                           fsr1l	equ	0xFE1
  1107                           indf2	equ	0xFDF
  1108                           fsr2h	equ	0xFDA
  1109                           fsr2l	equ	0xFD9
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function ___aldiv *****************
  1113 ;; Defined at:
  1114 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\aldiv.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  dividend        4   35[COMRAM] long 
  1117 ;;  divisor         4   39[COMRAM] long 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  quotient        4   46[COMRAM] long 
  1120 ;;  sign            1   45[COMRAM] unsigned char 
  1121 ;;  counter         1   44[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  4   35[COMRAM] long 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1131 ;;      Params:         8       0       0       0       0
  1132 ;;      Locals:         6       0       0       0       0
  1133 ;;      Temps:          1       0       0       0       0
  1134 ;;      Totals:        15       0       0       0       0
  1135 ;;Total ram usage:       15 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    5
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_i2c_configure_master
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text5
  1146  0000A6                     __ptext5:
  1147                           	opt stack 0
  1148  0000A6                     ___aldiv:
  1149                           	opt stack 24
  1150                           
  1151                           ;incstack = 0
  1152  0000A6  6E2C               	movwf	??___aldiv& (0+255),c
  1153  0000A8  0E00               	movlw	0
  1154  0000AA  6E2E               	movwf	___aldiv@sign,c
  1155  0000AC  502C               	movf	??___aldiv& (0+255),w,c
  1156  0000AE  502B               	movf	___aldiv@divisor+3,w,c
  1157  0000B0  0A80               	xorlw	128
  1158  0000B2  0F80               	addlw	128
  1159  0000B4  E108               	bnz	u815
  1160  0000B6  0E00               	movlw	0
  1161  0000B8  5C2A               	subwf	___aldiv@divisor+2,w,c
  1162  0000BA  E105               	bnz	u815
  1163  0000BC  0E00               	movlw	0
  1164  0000BE  5C29               	subwf	___aldiv@divisor+1,w,c
  1165  0000C0  E102               	bnz	u815
  1166  0000C2  0E00               	movlw	0
  1167  0000C4  5C28               	subwf	___aldiv@divisor,w,c
  1168  0000C6                     u815:
  1169  0000C6  B0D8               	btfsc	status,0,c
  1170  0000C8  D00C               	goto	l2027
  1171  0000CA  1E2B               	comf	___aldiv@divisor+3,f,c
  1172  0000CC  1E2A               	comf	___aldiv@divisor+2,f,c
  1173  0000CE  1E29               	comf	___aldiv@divisor+1,f,c
  1174  0000D0  6C28               	negf	___aldiv@divisor,c
  1175  0000D2  0E00               	movlw	0
  1176  0000D4  2229               	addwfc	___aldiv@divisor+1,f,c
  1177  0000D6  222A               	addwfc	___aldiv@divisor+2,f,c
  1178  0000D8  222B               	addwfc	___aldiv@divisor+3,f,c
  1179  0000DA  6E2C               	movwf	??___aldiv& (0+255),c
  1180  0000DC  0E01               	movlw	1
  1181  0000DE  6E2E               	movwf	___aldiv@sign,c
  1182  0000E0  502C               	movf	??___aldiv& (0+255),w,c
  1183  0000E2                     l2027:
  1184  0000E2  5027               	movf	___aldiv@dividend+3,w,c
  1185  0000E4  0A80               	xorlw	128
  1186  0000E6  0F80               	addlw	128
  1187  0000E8  E108               	bnz	u825
  1188  0000EA  0E00               	movlw	0
  1189  0000EC  5C26               	subwf	___aldiv@dividend+2,w,c
  1190  0000EE  E105               	bnz	u825
  1191  0000F0  0E00               	movlw	0
  1192  0000F2  5C25               	subwf	___aldiv@dividend+1,w,c
  1193  0000F4  E102               	bnz	u825
  1194  0000F6  0E00               	movlw	0
  1195  0000F8  5C24               	subwf	___aldiv@dividend,w,c
  1196  0000FA                     u825:
  1197  0000FA  B0D8               	btfsc	status,0,c
  1198  0000FC  D00A               	goto	l2033
  1199  0000FE  1E27               	comf	___aldiv@dividend+3,f,c
  1200  000100  1E26               	comf	___aldiv@dividend+2,f,c
  1201  000102  1E25               	comf	___aldiv@dividend+1,f,c
  1202  000104  6C24               	negf	___aldiv@dividend,c
  1203  000106  0E00               	movlw	0
  1204  000108  2225               	addwfc	___aldiv@dividend+1,f,c
  1205  00010A  2226               	addwfc	___aldiv@dividend+2,f,c
  1206  00010C  2227               	addwfc	___aldiv@dividend+3,f,c
  1207  00010E  0E01               	movlw	1
  1208  000110  1A2E               	xorwf	___aldiv@sign,f,c
  1209  000112                     l2033:
  1210  000112  0E00               	movlw	0
  1211  000114  6E2F               	movwf	___aldiv@quotient,c
  1212  000116  0E00               	movlw	0
  1213  000118  6E30               	movwf	___aldiv@quotient+1,c
  1214  00011A  0E00               	movlw	0
  1215  00011C  6E31               	movwf	___aldiv@quotient+2,c
  1216  00011E  0E00               	movlw	0
  1217  000120  6E32               	movwf	___aldiv@quotient+3,c
  1218  000122  502B               	movf	___aldiv@divisor+3,w,c
  1219  000124  1028               	iorwf	___aldiv@divisor,w,c
  1220  000126  1029               	iorwf	___aldiv@divisor+1,w,c
  1221  000128  102A               	iorwf	___aldiv@divisor+2,w,c
  1222  00012A  B4D8               	btfsc	status,2,c
  1223  00012C  D02C               	goto	l2055
  1224  00012E  6E2C               	movwf	??___aldiv& (0+255),c
  1225  000130  0E01               	movlw	1
  1226  000132  6E2D               	movwf	___aldiv@counter,c
  1227  000134  502C               	movf	??___aldiv& (0+255),w,c
  1228  000136  D006               	goto	l2041
  1229  000138                     l2039:
  1230  000138  90D8               	bcf	status,0,c
  1231  00013A  3628               	rlcf	___aldiv@divisor,f,c
  1232  00013C  3629               	rlcf	___aldiv@divisor+1,f,c
  1233  00013E  362A               	rlcf	___aldiv@divisor+2,f,c
  1234  000140  362B               	rlcf	___aldiv@divisor+3,f,c
  1235  000142  2A2D               	incf	___aldiv@counter,f,c
  1236  000144                     l2041:
  1237  000144  AE2B               	btfss	___aldiv@divisor+3,7,c
  1238  000146  D7F8               	goto	l2039
  1239  000148                     l2043:
  1240  000148  90D8               	bcf	status,0,c
  1241  00014A  362F               	rlcf	___aldiv@quotient,f,c
  1242  00014C  3630               	rlcf	___aldiv@quotient+1,f,c
  1243  00014E  3631               	rlcf	___aldiv@quotient+2,f,c
  1244  000150  3632               	rlcf	___aldiv@quotient+3,f,c
  1245  000152  5028               	movf	___aldiv@divisor,w,c
  1246  000154  5C24               	subwf	___aldiv@dividend,w,c
  1247  000156  5029               	movf	___aldiv@divisor+1,w,c
  1248  000158  5825               	subwfb	___aldiv@dividend+1,w,c
  1249  00015A  502A               	movf	___aldiv@divisor+2,w,c
  1250  00015C  5826               	subwfb	___aldiv@dividend+2,w,c
  1251  00015E  502B               	movf	___aldiv@divisor+3,w,c
  1252  000160  5827               	subwfb	___aldiv@dividend+3,w,c
  1253  000162  A0D8               	btfss	status,0,c
  1254  000164  D009               	goto	l2051
  1255  000166  5028               	movf	___aldiv@divisor,w,c
  1256  000168  5E24               	subwf	___aldiv@dividend,f,c
  1257  00016A  5029               	movf	___aldiv@divisor+1,w,c
  1258  00016C  5A25               	subwfb	___aldiv@dividend+1,f,c
  1259  00016E  502A               	movf	___aldiv@divisor+2,w,c
  1260  000170  5A26               	subwfb	___aldiv@dividend+2,f,c
  1261  000172  502B               	movf	___aldiv@divisor+3,w,c
  1262  000174  5A27               	subwfb	___aldiv@dividend+3,f,c
  1263  000176  802F               	bsf	___aldiv@quotient,0,c
  1264  000178                     l2051:
  1265  000178  90D8               	bcf	status,0,c
  1266  00017A  322B               	rrcf	___aldiv@divisor+3,f,c
  1267  00017C  322A               	rrcf	___aldiv@divisor+2,f,c
  1268  00017E  3229               	rrcf	___aldiv@divisor+1,f,c
  1269  000180  3228               	rrcf	___aldiv@divisor,f,c
  1270  000182  2E2D               	decfsz	___aldiv@counter,f,c
  1271  000184  D7E1               	goto	l2043
  1272  000186                     l2055:
  1273  000186  502E               	movf	___aldiv@sign,w,c
  1274  000188  B4D8               	btfsc	status,2,c
  1275  00018A  D008               	goto	l2059
  1276  00018C  1E32               	comf	___aldiv@quotient+3,f,c
  1277  00018E  1E31               	comf	___aldiv@quotient+2,f,c
  1278  000190  1E30               	comf	___aldiv@quotient+1,f,c
  1279  000192  6C2F               	negf	___aldiv@quotient,c
  1280  000194  0E00               	movlw	0
  1281  000196  2230               	addwfc	___aldiv@quotient+1,f,c
  1282  000198  2231               	addwfc	___aldiv@quotient+2,f,c
  1283  00019A  2232               	addwfc	___aldiv@quotient+3,f,c
  1284  00019C                     l2059:
  1285  00019C  C02F  F024         	movff	___aldiv@quotient,?___aldiv
  1286  0001A0  C030  F025         	movff	___aldiv@quotient+1,?___aldiv+1
  1287  0001A4  C031  F026         	movff	___aldiv@quotient+2,?___aldiv+2
  1288  0001A8  C032  F027         	movff	___aldiv@quotient+3,?___aldiv+3
  1289  0001AC  0012               	return	
  1290  0001AE                     __end_of___aldiv:
  1291                           	opt stack 0
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           prodh	equ	0xFF4
  1297                           prodl	equ	0xFF3
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           postdec1	equ	0xFE5
  1301                           fsr1l	equ	0xFE1
  1302                           indf2	equ	0xFDF
  1303                           fsr2h	equ	0xFDA
  1304                           fsr2l	equ	0xFD9
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _enable_interrupts *****************
  1308 ;; Defined at:
  1309 ;;		line 16 in file "../src/interrupts.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		None
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1323 ;;      Params:         0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    5
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text6
  1338  0007AA                     __ptext6:
  1339                           	opt stack 0
  1340  0007AA                     _enable_interrupts:
  1341                           	opt stack 25
  1342                           
  1343                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  1344                           
  1345                           ;incstack = 0
  1346  0007AA  8ED0               	bsf	4048,7,c	;volatile
  1347                           
  1348                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  1349  0007AC  8EF2               	bsf	intcon,7,c	;volatile
  1350                           
  1351                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  1352  0007AE  8CF2               	bsf	intcon,6,c	;volatile
  1353  0007B0  0012               	return	
  1354  0007B2                     __end_of_enable_interrupts:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           prodh	equ	0xFF4
  1361                           prodl	equ	0xFF3
  1362                           intcon	equ	0xFF2
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           postdec1	equ	0xFE5
  1366                           fsr1l	equ	0xFE1
  1367                           indf2	equ	0xFDF
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8
  1371                           
  1372 ;; *************** function _block_on_To_msgqueues *****************
  1373 ;; Defined at:
  1374 ;;		line 259 in file "../src/messages.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;		None               void
  1381 ;; Registers used:
  1382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          1       0       0       0       0
  1391 ;;      Totals:         1       0       0       0       0
  1392 ;;Total ram usage:        1 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    8
  1395 ;; This function calls:
  1396 ;;		_Delay1KTCYx
  1397 ;;		_check_msg
  1398 ;;		_in_main
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text7
  1405  0003D2                     __ptext7:
  1406                           	opt stack 0
  1407  0003D2                     _block_on_To_msgqueues:
  1408                           	opt stack 22
  1409                           
  1410                           ;messages.c: 260: if (!in_main()) {
  1411                           
  1412                           ;incstack = 0
  1413  0003D2  EC4B  F003         	call	_in_main	;wreg free
  1414  0003D6  5029               	movf	?_in_main+1,w,c
  1415  0003D8  1028               	iorwf	?_in_main,w,c
  1416  0003DA  B4D8               	btfsc	status,2,c
  1417  0003DC  0012               	return	
  1418                           
  1419                           ;messages.c: 262: }
  1420                           ;messages.c: 264: MQ_Main_Willing_to_block = 1;
  1421                           
  1422                           ;messages.c: 261: return;
  1423  0003DE  6E2A               	movwf	??_block_on_To_msgqueues& (0+255),c
  1424  0003E0  0E01               	movlw	1
  1425  0003E2  6E43               	movwf	_MQ_Main_Willing_to_block,c
  1426  0003E4  502A               	movf	??_block_on_To_msgqueues& (0+255),w,c
  1427  0003E6                     l1825:
  1428                           
  1429                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  1430  0003E6  0100               	movlb	0	; () banked
  1431  0003E8  0E00               	movlw	high _ToMainHigh_MQ
  1432  0003EA  6E25               	movwf	check_msg@qptr+1,c
  1433  0003EC  0100               	movlb	0	; () banked
  1434  0003EE  0E80               	movlw	low _ToMainHigh_MQ
  1435  0003F0  6E24               	movwf	check_msg@qptr,c
  1436  0003F2  EC8B  F003         	call	_check_msg	;wreg free
  1437  0003F6  0900               	iorlw	0
  1438  0003F8  B4D8               	btfsc	status,2,c
  1439  0003FA  D005               	goto	l1831
  1440                           
  1441                           ;messages.c: 267: MQ_Main_Willing_to_block = 0;
  1442  0003FC  6E2A               	movwf	??_block_on_To_msgqueues& (0+255),c
  1443  0003FE  0E00               	movlw	0
  1444  000400  6E43               	movwf	_MQ_Main_Willing_to_block,c
  1445  000402  502A               	movf	??_block_on_To_msgqueues& (0+255),w,c
  1446  000404  0012               	return	
  1447  000406                     l1831:
  1448                           
  1449                           ;messages.c: 272: }
  1450                           ;messages.c: 273: if (check_msg(&ToMainLow_MQ)) {
  1451  000406  0100               	movlb	0	; () banked
  1452  000408  0E00               	movlw	high _ToMainLow_MQ
  1453  00040A  6E25               	movwf	check_msg@qptr+1,c
  1454  00040C  0100               	movlb	0	; () banked
  1455  00040E  0EB6               	movlw	low _ToMainLow_MQ
  1456  000410  6E24               	movwf	check_msg@qptr,c
  1457  000412  EC8B  F003         	call	_check_msg	;wreg free
  1458  000416  0900               	iorlw	0
  1459  000418  B4D8               	btfsc	status,2,c
  1460  00041A  D005               	goto	l1837
  1461                           
  1462                           ;messages.c: 274: MQ_Main_Willing_to_block = 0;
  1463  00041C  6E2A               	movwf	??_block_on_To_msgqueues& (0+255),c
  1464  00041E  0E00               	movlw	0
  1465  000420  6E43               	movwf	_MQ_Main_Willing_to_block,c
  1466  000422  502A               	movf	??_block_on_To_msgqueues& (0+255),w,c
  1467  000424  0012               	return	
  1468  000426                     l1837:
  1469                           
  1470                           ;messages.c: 279: }
  1471                           ;messages.c: 280: Delay1KTCYx(10);
  1472  000426  0E0A               	movlw	10
  1473  000428  ECC0  F003         	call	_Delay1KTCYx
  1474  00042C  D7DC               	goto	l1825
  1475  00042E                     __end_of_block_on_To_msgqueues:
  1476                           	opt stack 0
  1477                           tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           prodh	equ	0xFF4
  1482                           prodl	equ	0xFF3
  1483                           intcon	equ	0xFF2
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           postdec1	equ	0xFE5
  1487                           fsr1l	equ	0xFE1
  1488                           indf2	equ	0xFDF
  1489                           fsr2h	equ	0xFDA
  1490                           fsr2l	equ	0xFD9
  1491                           status	equ	0xFD8
  1492                           
  1493 ;; *************** function _in_main *****************
  1494 ;; Defined at:
  1495 ;;		line 42 in file "../src/interrupts.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2   39[COMRAM] int 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1509 ;;      Params:         2       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         2       0       0       0       0
  1513 ;;Total ram usage:        2 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    7
  1516 ;; This function calls:
  1517 ;;		_in_high_int
  1518 ;;		_in_low_int
  1519 ;; This function is called by:
  1520 ;;		_block_on_To_msgqueues
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text8
  1525  000696                     __ptext8:
  1526                           	opt stack 0
  1527  000696                     _in_main:
  1528                           	opt stack 22
  1529                           
  1530                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  1531                           
  1532                           ;incstack = 0
  1533  000696  EC1D  F003         	call	_in_low_int	;wreg free
  1534  00069A  5027               	movf	?_in_low_int+1,w,c
  1535  00069C  1026               	iorwf	?_in_low_int,w,c
  1536  00069E  A4D8               	btfss	status,2,c
  1537  0006A0  D00B               	goto	l1697
  1538  0006A2  ECC9  F003         	call	_in_high_int	;wreg free
  1539  0006A6  5025               	movf	?_in_high_int+1,w,c
  1540  0006A8  1024               	iorwf	?_in_high_int,w,c
  1541  0006AA  A4D8               	btfss	status,2,c
  1542  0006AC  D005               	goto	l1697
  1543                           
  1544                           ;interrupts.c: 44: return (1);
  1545  0006AE  0E00               	movlw	0
  1546  0006B0  6E29               	movwf	?_in_main+1,c
  1547  0006B2  0E01               	movlw	1
  1548  0006B4  6E28               	movwf	?_in_main,c
  1549  0006B6  0012               	return	
  1550  0006B8                     l1697:
  1551                           
  1552                           ;interrupts.c: 46: return (0);
  1553  0006B8  0E00               	movlw	0
  1554  0006BA  6E29               	movwf	?_in_main+1,c
  1555  0006BC  0E00               	movlw	0
  1556  0006BE  6E28               	movwf	?_in_main,c
  1557  0006C0  0012               	return	
  1558  0006C2                     __end_of_in_main:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           prodh	equ	0xFF4
  1565                           prodl	equ	0xFF3
  1566                           intcon	equ	0xFF2
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           indf2	equ	0xFDF
  1572                           fsr2h	equ	0xFDA
  1573                           fsr2l	equ	0xFD9
  1574                           status	equ	0xFD8
  1575                           
  1576 ;; *************** function _in_low_int *****************
  1577 ;; Defined at:
  1578 ;;		line 32 in file "../src/interrupts.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2   37[COMRAM] int 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1592 ;;      Params:         2       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0
  1595 ;;      Totals:         2       0       0       0       0
  1596 ;;Total ram usage:        2 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    6
  1599 ;; This function calls:
  1600 ;;		_in_high_int
  1601 ;; This function is called by:
  1602 ;;		_in_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text9
  1607  00063A                     __ptext9:
  1608                           	opt stack 0
  1609  00063A                     _in_low_int:
  1610                           	opt stack 22
  1611                           
  1612                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  1613                           
  1614                           ;incstack = 0
  1615  00063A  ACF2               	btfss	intcon,6,c	;volatile
  1616  00063C  D005               	goto	l1675
  1617                           
  1618                           ;interrupts.c: 34: return (0);
  1619  00063E  0E00               	movlw	0
  1620  000640  6E27               	movwf	?_in_low_int+1,c
  1621  000642  0E00               	movlw	0
  1622  000644  6E26               	movwf	?_in_low_int,c
  1623  000646  0012               	return	
  1624  000648                     l1675:
  1625  000648  ECC9  F003         	call	_in_high_int	;wreg free
  1626  00064C  5025               	movf	?_in_high_int+1,w,c
  1627  00064E  1024               	iorwf	?_in_high_int,w,c
  1628  000650  B4D8               	btfsc	status,2,c
  1629  000652  D005               	goto	l1683
  1630                           
  1631                           ;interrupts.c: 36: return (0);
  1632  000654  0E00               	movlw	0
  1633  000656  6E27               	movwf	?_in_low_int+1,c
  1634  000658  0E00               	movlw	0
  1635  00065A  6E26               	movwf	?_in_low_int,c
  1636  00065C  0012               	return	
  1637  00065E                     l1683:
  1638                           
  1639                           ;interrupts.c: 38: return (1);
  1640  00065E  0E00               	movlw	0
  1641  000660  6E27               	movwf	?_in_low_int+1,c
  1642  000662  0E01               	movlw	1
  1643  000664  6E26               	movwf	?_in_low_int,c
  1644  000666  0012               	return	
  1645  000668                     __end_of_in_low_int:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           prodh	equ	0xFF4
  1652                           prodl	equ	0xFF3
  1653                           intcon	equ	0xFF2
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1l	equ	0xFE1
  1658                           indf2	equ	0xFDF
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _in_high_int *****************
  1664 ;; Defined at:
  1665 ;;		line 24 in file "../src/interrupts.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2   35[COMRAM] int 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1679 ;;      Params:         2       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    5
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_in_low_int
  1690 ;;		_in_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text10
  1695  000792                     __ptext10:
  1696                           	opt stack 0
  1697  000792                     _in_high_int:
  1698                           	opt stack 22
  1699                           
  1700                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  1701                           
  1702                           ;incstack = 0
  1703  000792  0E00               	movlw	0
  1704  000794  AEF2               	btfss	intcon,7,c	;volatile
  1705  000796  0E01               	movlw	1
  1706  000798  6E24               	movwf	?_in_high_int,c
  1707  00079A  6A25               	clrf	?_in_high_int+1,c
  1708  00079C  0012               	return	
  1709  00079E                     __end_of_in_high_int:
  1710                           	opt stack 0
  1711                           tblptru	equ	0xFF8
  1712                           tblptrh	equ	0xFF7
  1713                           tblptrl	equ	0xFF6
  1714                           tablat	equ	0xFF5
  1715                           prodh	equ	0xFF4
  1716                           prodl	equ	0xFF3
  1717                           intcon	equ	0xFF2
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           postdec1	equ	0xFE5
  1721                           fsr1l	equ	0xFE1
  1722                           indf2	equ	0xFDF
  1723                           fsr2h	equ	0xFDA
  1724                           fsr2l	equ	0xFD9
  1725                           status	equ	0xFD8
  1726                           
  1727 ;; *************** function _check_msg *****************
  1728 ;; Defined at:
  1729 ;;		line 223 in file "../src/messages.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  qptr            2   35[COMRAM] PTR struct __msg_queue
  1732 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      unsigned char 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1744 ;;      Params:         2       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          1       0       0       0       0
  1747 ;;      Totals:         3       0       0       0       0
  1748 ;;Total ram usage:        3 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    5
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_block_on_To_msgqueues
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text11
  1759  000716                     __ptext11:
  1760                           	opt stack 0
  1761  000716                     _check_msg:
  1762                           	opt stack 24
  1763                           
  1764                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  1765                           
  1766                           ;incstack = 0
  1767  000716  EE20 F035          	lfsr	2,53
  1768  00071A  5024               	movf	check_msg@qptr,w,c
  1769  00071C  26D9               	addwf	fsr2l,f,c
  1770  00071E  5025               	movf	check_msg@qptr+1,w,c
  1771  000720  22DA               	addwfc	fsr2h,f,c
  1772  000722  50DF               	movf	indf2,w,c
  1773  000724  6E26               	movwf	??_check_msg& (0+255),c
  1774  000726  5026               	movf	??_check_msg,w,c
  1775  000728  0D0D               	mullw	13
  1776  00072A  50F3               	movf	prodl,w,c
  1777  00072C  2424               	addwf	check_msg@qptr,w,c
  1778  00072E  6ED9               	movwf	fsr2l,c
  1779  000730  50F4               	movf	prodh,w,c
  1780  000732  2025               	addwfc	check_msg@qptr+1,w,c
  1781  000734  6EDA               	movwf	fsr2h,c
  1782  000736  50DF               	movf	indf2,w,c
  1783  000738  0012               	return	
  1784  00073A                     __end_of_check_msg:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           prodh	equ	0xFF4
  1791                           prodl	equ	0xFF3
  1792                           intcon	equ	0xFF2
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1l	equ	0xFE1
  1797                           indf2	equ	0xFDF
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _Delay1KTCYx *****************
  1803 ;; Defined at:
  1804 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  unit            1    wreg     unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  unit            1   35[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1818 ;;      Params:         0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0
  1821 ;;      Totals:         1       0       0       0       0
  1822 ;;Total ram usage:        1 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    5
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_block_on_To_msgqueues
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text12
  1833  000780                     __ptext12:
  1834                           	opt stack 0
  1835  000780                     _Delay1KTCYx:
  1836                           	opt stack 24
  1837                           
  1838                           ;incstack = 0
  1839                           ;Delay1KTCYx@unit stored from wreg
  1840  000780  CFE8 F024          	movff	wreg,Delay1KTCYx@unit
  1841  000784                     l651:
  1842  000784  0EFA               	movlw	250
  1843  000786                     u897:
  1844  000786  F000               	nop	
  1845  000788  2EE8               	decfsz	wreg,f,c
  1846  00078A  D7FD               	goto	u897
  1847  00078C  2E24               	decfsz	Delay1KTCYx@unit,f,c
  1848  00078E  D7FA               	goto	l651
  1849  000790  0012               	return	
  1850  000792                     __end_of_Delay1KTCYx:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1l	equ	0xFE1
  1863                           indf2	equ	0xFDF
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _ToMainLow_recvmsg *****************
  1869 ;; Defined at:
  1870 ;;		line 113 in file "../src/messages.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  maxlength       1    wreg     unsigned char 
  1873 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  1874 ;;		 -> main@msgtype(1), 
  1875 ;;  data            2   61[COMRAM] PTR void 
  1876 ;;		 -> main@msgbuffer(11), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  maxlength       1   63[COMRAM] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      char 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1888 ;;      Params:         4       0       0       0       0
  1889 ;;      Locals:         1       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0
  1891 ;;      Totals:         5       0       0       0       0
  1892 ;;Total ram usage:        5 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    7
  1895 ;; This function calls:
  1896 ;;		_recv_msg
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text13
  1903  0006C2                     __ptext13:
  1904                           	opt stack 0
  1905  0006C2                     _ToMainLow_recvmsg:
  1906                           	opt stack 23
  1907                           
  1908                           ;incstack = 0
  1909                           ;ToMainLow_recvmsg@maxlength stored from wreg
  1910  0006C2  CFE8 F040          	movff	wreg,ToMainLow_recvmsg@maxlength
  1911                           
  1912                           ;messages.c: 119: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  1913  0006C6  0100               	movlb	0	; () banked
  1914  0006C8  0E00               	movlw	high _ToMainLow_MQ
  1915  0006CA  6E2F               	movwf	recv_msg@qptr+1,c
  1916  0006CC  0100               	movlb	0	; () banked
  1917  0006CE  0EB6               	movlw	low _ToMainLow_MQ
  1918  0006D0  6E2E               	movwf	recv_msg@qptr,c
  1919  0006D2  C040  F030         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  1920  0006D6  C03D  F032         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  1921  0006DA  C03C  F031         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  1922  0006DE  C03F  F034         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  1923  0006E2  C03E  F033         	movff	ToMainLow_recvmsg@data,recv_msg@data
  1924  0006E6  ECD7  F000         	call	_recv_msg	;wreg free
  1925  0006EA  0012               	return	
  1926  0006EC                     __end_of_ToMainLow_recvmsg:
  1927                           	opt stack 0
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           prodh	equ	0xFF4
  1933                           prodl	equ	0xFF3
  1934                           intcon	equ	0xFF2
  1935                           postinc0	equ	0xFEE
  1936                           wreg	equ	0xFE8
  1937                           postdec1	equ	0xFE5
  1938                           fsr1l	equ	0xFE1
  1939                           indf2	equ	0xFDF
  1940                           fsr2h	equ	0xFDA
  1941                           fsr2l	equ	0xFD9
  1942                           status	equ	0xFD8
  1943                           
  1944 ;; *************** function _ToMainHigh_recvmsg *****************
  1945 ;; Defined at:
  1946 ;;		line 136 in file "../src/messages.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  maxlength       1    wreg     unsigned char 
  1949 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  1950 ;;		 -> main@msgtype(1), 
  1951 ;;  data            2   61[COMRAM] PTR void 
  1952 ;;		 -> main@msgbuffer(11), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  maxlength       1   63[COMRAM] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      char 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1964 ;;      Params:         4       0       0       0       0
  1965 ;;      Locals:         1       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0
  1967 ;;      Totals:         5       0       0       0       0
  1968 ;;Total ram usage:        5 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    7
  1971 ;; This function calls:
  1972 ;;		_recv_msg
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text14
  1979  0006EC                     __ptext14:
  1980                           	opt stack 0
  1981  0006EC                     _ToMainHigh_recvmsg:
  1982                           	opt stack 23
  1983                           
  1984                           ;incstack = 0
  1985                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  1986  0006EC  CFE8 F040          	movff	wreg,ToMainHigh_recvmsg@maxlength
  1987                           
  1988                           ;messages.c: 142: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  1989  0006F0  0100               	movlb	0	; () banked
  1990  0006F2  0E00               	movlw	high _ToMainHigh_MQ
  1991  0006F4  6E2F               	movwf	recv_msg@qptr+1,c
  1992  0006F6  0100               	movlb	0	; () banked
  1993  0006F8  0E80               	movlw	low _ToMainHigh_MQ
  1994  0006FA  6E2E               	movwf	recv_msg@qptr,c
  1995  0006FC  C040  F030         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  1996  000700  C03D  F032         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  1997  000704  C03C  F031         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  1998  000708  C03F  F034         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  1999  00070C  C03E  F033         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  2000  000710  ECD7  F000         	call	_recv_msg	;wreg free
  2001  000714  0012               	return	
  2002  000716                     __end_of_ToMainHigh_recvmsg:
  2003                           	opt stack 0
  2004                           tblptru	equ	0xFF8
  2005                           tblptrh	equ	0xFF7
  2006                           tblptrl	equ	0xFF6
  2007                           tablat	equ	0xFF5
  2008                           prodh	equ	0xFF4
  2009                           prodl	equ	0xFF3
  2010                           intcon	equ	0xFF2
  2011                           postinc0	equ	0xFEE
  2012                           wreg	equ	0xFE8
  2013                           postdec1	equ	0xFE5
  2014                           fsr1l	equ	0xFE1
  2015                           indf2	equ	0xFDF
  2016                           fsr2h	equ	0xFDA
  2017                           fsr2l	equ	0xFD9
  2018                           status	equ	0xFD8
  2019                           
  2020 ;; *************** function _recv_msg *****************
  2021 ;; Defined at:
  2022 ;;		line 64 in file "../src/messages.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  qptr            2   45[COMRAM] PTR struct __msg_queue
  2025 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2026 ;;  maxlength       1   47[COMRAM] unsigned char 
  2027 ;;  msgtype         2   48[COMRAM] PTR unsigned char 
  2028 ;;		 -> main@msgtype(1), 
  2029 ;;  data            2   50[COMRAM] PTR void 
  2030 ;;		 -> main@msgbuffer(11), 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  qmsg            2   57[COMRAM] PTR struct __msg
  2033 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2034 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2035 ;;  tlength         2   55[COMRAM] unsigned int 
  2036 ;;  slot            1   54[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      char 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2046 ;;      Params:         7       0       0       0       0
  2047 ;;      Locals:         5       0       0       0       0
  2048 ;;      Temps:          2       0       0       0       0
  2049 ;;      Totals:        14       0       0       0       0
  2050 ;;Total ram usage:       14 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    6
  2053 ;; This function calls:
  2054 ;;		_memcpy
  2055 ;; This function is called by:
  2056 ;;		_ToMainLow_recvmsg
  2057 ;;		_ToMainHigh_recvmsg
  2058 ;;		_FromMainLow_recvmsg
  2059 ;;		_FromMainHigh_recvmsg
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text15
  2064  0001AE                     __ptext15:
  2065                           	opt stack 0
  2066  0001AE                     _recv_msg:
  2067                           	opt stack 23
  2068                           
  2069                           ;messages.c: 65: unsigned char slot;
  2070                           ;messages.c: 69: msg *qmsg;
  2071                           ;messages.c: 70: size_t tlength;
  2072                           ;messages.c: 73: slot = qptr->cur_read_ind;
  2073                           
  2074                           ;incstack = 0
  2075  0001AE  EE20 F035          	lfsr	2,53
  2076  0001B2  502E               	movf	recv_msg@qptr,w,c
  2077  0001B4  26D9               	addwf	fsr2l,f,c
  2078  0001B6  502F               	movf	recv_msg@qptr+1,w,c
  2079  0001B8  22DA               	addwfc	fsr2h,f,c
  2080  0001BA  50DF               	movf	indf2,w,c
  2081  0001BC  6E37               	movwf	recv_msg@slot,c
  2082                           
  2083                           ;messages.c: 74: qmsg = &(qptr->queue[slot]);
  2084  0001BE  5037               	movf	recv_msg@slot,w,c
  2085  0001C0  0D0D               	mullw	13
  2086  0001C2  50F3               	movf	prodl,w,c
  2087  0001C4  242E               	addwf	recv_msg@qptr,w,c
  2088  0001C6  6E3A               	movwf	recv_msg@qmsg,c
  2089  0001C8  50F4               	movf	prodh,w,c
  2090  0001CA  202F               	addwfc	recv_msg@qptr+1,w,c
  2091  0001CC  6E3B               	movwf	recv_msg@qmsg+1,c
  2092                           
  2093                           ;messages.c: 75: if (qmsg->full == 1) {
  2094  0001CE  0E01               	movlw	1
  2095  0001D0  C03A  FFD9         	movff	recv_msg@qmsg,fsr2l
  2096  0001D4  C03B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2097  0001D8  62DF               	cpfseq	indf2,c
  2098  0001DA  D050               	goto	l1923
  2099                           
  2100                           ;messages.c: 77: if (qmsg->length > maxlength) {
  2101  0001DC  EE20 F001          	lfsr	2,1
  2102  0001E0  503A               	movf	recv_msg@qmsg,w,c
  2103  0001E2  26D9               	addwf	fsr2l,f,c
  2104  0001E4  503B               	movf	recv_msg@qmsg+1,w,c
  2105  0001E6  22DA               	addwfc	fsr2h,f,c
  2106  0001E8  50DF               	movf	indf2,w,c
  2107  0001EA  5C30               	subwf	recv_msg@maxlength,w,c
  2108  0001EC  B0D8               	btfsc	status,0,c
  2109  0001EE  D002               	goto	l1907
  2110                           
  2111                           ;messages.c: 78: return (-3);
  2112  0001F0  0EFD               	movlw	253
  2113  0001F2  0012               	return	
  2114  0001F4                     l1907:
  2115                           
  2116                           ;messages.c: 79: }
  2117                           ;messages.c: 81: tlength = qmsg->length;
  2118  0001F4  EE20 F001          	lfsr	2,1
  2119  0001F8  503A               	movf	recv_msg@qmsg,w,c
  2120  0001FA  26D9               	addwf	fsr2l,f,c
  2121  0001FC  503B               	movf	recv_msg@qmsg+1,w,c
  2122  0001FE  22DA               	addwfc	fsr2h,f,c
  2123  000200  50DF               	movf	indf2,w,c
  2124  000202  6E35               	movwf	??_recv_msg& (0+255),c
  2125  000204  5035               	movf	??_recv_msg,w,c
  2126  000206  6E38               	movwf	recv_msg@tlength,c
  2127  000208  6A39               	clrf	recv_msg@tlength+1,c
  2128                           
  2129                           ;messages.c: 82: memcpy(data, qmsg->data, tlength);
  2130  00020A  C034  F025         	movff	recv_msg@data+1,memcpy@d1+1
  2131  00020E  C033  F024         	movff	recv_msg@data,memcpy@d1
  2132  000212  0E03               	movlw	3
  2133  000214  243A               	addwf	recv_msg@qmsg,w,c
  2134  000216  6E35               	movwf	??_recv_msg& (0+255),c
  2135  000218  0E00               	movlw	0
  2136  00021A  203B               	addwfc	recv_msg@qmsg+1,w,c
  2137  00021C  6E36               	movwf	(??_recv_msg+1)& (0+255),c
  2138  00021E  C035  F026         	movff	??_recv_msg,memcpy@s1
  2139  000222  C036  F027         	movff	??_recv_msg+1,memcpy@s1+1
  2140  000226  C038  F028         	movff	recv_msg@tlength,memcpy@n
  2141  00022A  C039  F029         	movff	recv_msg@tlength+1,memcpy@n+1
  2142  00022E  ECFD  F002         	call	_memcpy	;wreg free
  2143                           
  2144                           ;messages.c: 88: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2145  000232  EE20 F035          	lfsr	2,53
  2146  000236  502E               	movf	recv_msg@qptr,w,c
  2147  000238  26D9               	addwf	fsr2l,f,c
  2148  00023A  502F               	movf	recv_msg@qptr+1,w,c
  2149  00023C  22DA               	addwfc	fsr2h,f,c
  2150  00023E  EE10 F035          	lfsr	1,53
  2151  000242  502E               	movf	recv_msg@qptr,w,c
  2152  000244  26E1               	addwf	fsr1l,f,c
  2153  000246  502F               	movf	recv_msg@qptr+1,w,c
  2154  000248  22E2               	addwfc	fsr1h,f,c
  2155  00024A  50E7               	movf	indf1,w,c
  2156  00024C  6E35               	movwf	??_recv_msg& (0+255),c
  2157  00024E  2835               	incf	??_recv_msg,w,c
  2158  000250  0B03               	andlw	3
  2159  000252  6EDF               	movwf	indf2,c
  2160                           
  2161                           ;messages.c: 90: (*msgtype) = qmsg->msgtype;
  2162  000254  EE20 F002          	lfsr	2,2
  2163  000258  503A               	movf	recv_msg@qmsg,w,c
  2164  00025A  26D9               	addwf	fsr2l,f,c
  2165  00025C  503B               	movf	recv_msg@qmsg+1,w,c
  2166  00025E  22DA               	addwfc	fsr2h,f,c
  2167  000260  C031  FFE1         	movff	recv_msg@msgtype,fsr1l
  2168  000264  C032  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2169  000268  CFDF FFE7          	movff	indf2,indf1
  2170                           
  2171                           ;messages.c: 92: qmsg->full = 0;
  2172  00026C  C03A  FFD9         	movff	recv_msg@qmsg,fsr2l
  2173  000270  C03B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2174  000274  0E00               	movlw	0
  2175  000276  6EDF               	movwf	indf2,c
  2176                           
  2177                           ;messages.c: 93: return (tlength);
  2178  000278  5038               	movf	recv_msg@tlength,w,c
  2179  00027A  0012               	return	
  2180  00027C                     l1923:
  2181                           
  2182                           ;messages.c: 95: return (-4);
  2183  00027C  0EFC               	movlw	252
  2184  00027E  0012               	return	
  2185  000280                     __end_of_recv_msg:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           prodh	equ	0xFF4
  2192                           prodl	equ	0xFF3
  2193                           intcon	equ	0xFF2
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           indf1	equ	0xFE7
  2197                           postdec1	equ	0xFE5
  2198                           fsr1h	equ	0xFE2
  2199                           fsr1l	equ	0xFE1
  2200                           indf2	equ	0xFDF
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _memcpy *****************
  2206 ;; Defined at:
  2207 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  d1              2   35[COMRAM] PTR void 
  2210 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2211 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2212 ;;		 -> main@msgbuffer(11), 
  2213 ;;  s1              2   37[COMRAM] PTR const void 
  2214 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2215 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2216 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), FromMainHigh_MQ(54), 
  2217 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2218 ;;  n               2   39[COMRAM] unsigned int 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  s               2   43[COMRAM] PTR const unsigned char 
  2221 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2222 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2223 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), FromMainHigh_MQ(54), 
  2224 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2225 ;;  d               2   41[COMRAM] PTR unsigned char 
  2226 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2227 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2228 ;;		 -> main@msgbuffer(11), 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2   35[COMRAM] PTR void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2238 ;;      Params:         6       0       0       0       0
  2239 ;;      Locals:         4       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0
  2241 ;;      Totals:        10       0       0       0       0
  2242 ;;Total ram usage:       10 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    5
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_recv_msg
  2249 ;;		_send_msg
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text16
  2254  0005FA                     __ptext16:
  2255                           	opt stack 0
  2256  0005FA                     _memcpy:
  2257                           	opt stack 23
  2258                           
  2259                           ;incstack = 0
  2260  0005FA  C027  F02D         	movff	memcpy@s1+1,memcpy@s+1
  2261  0005FE  C026  F02C         	movff	memcpy@s1,memcpy@s
  2262  000602  C025  F02B         	movff	memcpy@d1+1,memcpy@d+1
  2263  000606  C024  F02A         	movff	memcpy@d1,memcpy@d
  2264  00060A  D00E               	goto	l1893
  2265  00060C                     l1887:
  2266  00060C  C02C  FFD9         	movff	memcpy@s,fsr2l
  2267  000610  C02D  FFDA         	movff	memcpy@s+1,fsr2h
  2268  000614  C02A  FFE1         	movff	memcpy@d,fsr1l
  2269  000618  C02B  FFE2         	movff	memcpy@d+1,fsr1h
  2270  00061C  CFDF FFE7          	movff	indf2,indf1
  2271  000620  4A2C               	infsnz	memcpy@s,f,c
  2272  000622  2A2D               	incf	memcpy@s+1,f,c
  2273  000624  4A2A               	infsnz	memcpy@d,f,c
  2274  000626  2A2B               	incf	memcpy@d+1,f,c
  2275  000628                     l1893:
  2276  000628  0628               	decf	memcpy@n,f,c
  2277  00062A  A0D8               	btfss	status,0,c
  2278  00062C  0629               	decf	memcpy@n+1,f,c
  2279  00062E  2828               	incf	memcpy@n& (0+255),w,c
  2280  000630  B4D8               	btfsc	status,2,c
  2281  000632  2829               	incf	(memcpy@n+1)& (0+255),w,c
  2282  000634  B4D8               	btfsc	status,2,c
  2283                           
  2284                           ;	Return value of _memcpy is never used
  2285  000636  0012               	return	
  2286  000638  D7E9               	goto	l1887
  2287  00063A                     __end_of_memcpy:
  2288                           	opt stack 0
  2289                           tblptru	equ	0xFF8
  2290                           tblptrh	equ	0xFF7
  2291                           tblptrl	equ	0xFF6
  2292                           tablat	equ	0xFF5
  2293                           prodh	equ	0xFF4
  2294                           prodl	equ	0xFF3
  2295                           intcon	equ	0xFF2
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           indf1	equ	0xFE7
  2299                           postdec1	equ	0xFE5
  2300                           fsr1h	equ	0xFE2
  2301                           fsr1l	equ	0xFE1
  2302                           indf2	equ	0xFDF
  2303                           fsr2h	equ	0xFDA
  2304                           fsr2l	equ	0xFD9
  2305                           status	equ	0xFD8
  2306                           
  2307 ;; *************** function _OpenTimer0 *****************
  2308 ;; Defined at:
  2309 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  config          1    wreg     unsigned char 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  config          1   35[COMRAM] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;		None               void
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2323 ;;      Params:         0       0       0       0       0
  2324 ;;      Locals:         1       0       0       0       0
  2325 ;;      Temps:          0       0       0       0       0
  2326 ;;      Totals:         1       0       0       0       0
  2327 ;;Total ram usage:        1 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    5
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text17
  2338  00075E                     __ptext17:
  2339                           	opt stack 0
  2340  00075E                     _OpenTimer0:
  2341                           	opt stack 25
  2342                           
  2343                           ;incstack = 0
  2344                           ;OpenTimer0@config stored from wreg
  2345  00075E  CFE8 F024          	movff	wreg,OpenTimer0@config
  2346  000762  5024               	movf	OpenTimer0@config,w,c
  2347  000764  0B7F               	andlw	127
  2348  000766  6ED5               	movwf	4053,c	;volatile
  2349  000768  0E00               	movlw	0
  2350  00076A  6ED7               	movwf	4055,c	;volatile
  2351  00076C  0E00               	movlw	0
  2352  00076E  6ED6               	movwf	4054,c	;volatile
  2353  000770  94F2               	bcf	intcon,2,c	;volatile
  2354  000772  AE24               	btfss	OpenTimer0@config,7,c
  2355  000774  D002               	goto	l409
  2356  000776  8AF2               	bsf	intcon,5,c	;volatile
  2357  000778  D001               	goto	l410
  2358  00077A                     l409:
  2359  00077A  9AF2               	bcf	intcon,5,c	;volatile
  2360  00077C                     l410:
  2361  00077C  8ED5               	bsf	4053,7,c	;volatile
  2362  00077E  0012               	return	
  2363  000780                     __end_of_OpenTimer0:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           indf1	equ	0xFE7
  2375                           postdec1	equ	0xFE5
  2376                           fsr1h	equ	0xFE2
  2377                           fsr1l	equ	0xFE1
  2378                           indf2	equ	0xFDF
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8
  2382                           
  2383 ;; *************** function _InterruptHandlerLow *****************
  2384 ;; Defined at:
  2385 ;;		line 124 in file "../src/interrupts.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;		None               void
  2392 ;; Registers used:
  2393 ;;		None
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2399 ;;      Params:         0       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0
  2401 ;;      Temps:         17       0       0       0       0
  2402 ;;      Totals:        17       0       0       0       0
  2403 ;;Total ram usage:       17 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    4
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		Interrupt level 1
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	intcodelo
  2414  000018                     __pintcodelo:
  2415                           	opt stack 0
  2416  000018                     _InterruptHandlerLow:
  2417                           	opt stack 22
  2418                           
  2419                           ;incstack = 0
  2420  000018  CFD8 F001          	movff	status,??_InterruptHandlerLow
  2421  00001C  CFE8 F002          	movff	wreg,??_InterruptHandlerLow+1
  2422  000020  CFE0 F003          	movff	bsr,??_InterruptHandlerLow+2
  2423  000024  CFFA F004          	movff	pclath,??_InterruptHandlerLow+3
  2424  000028  CFFB F005          	movff	pclatu,??_InterruptHandlerLow+4
  2425  00002C  CFE9 F006          	movff	fsr0l,??_InterruptHandlerLow+5
  2426  000030  CFEA F007          	movff	fsr0h,??_InterruptHandlerLow+6
  2427  000034  CFE1 F008          	movff	fsr1l,??_InterruptHandlerLow+7
  2428  000038  CFE2 F009          	movff	fsr1h,??_InterruptHandlerLow+8
  2429  00003C  CFD9 F00A          	movff	fsr2l,??_InterruptHandlerLow+9
  2430  000040  CFDA F00B          	movff	fsr2h,??_InterruptHandlerLow+10
  2431  000044  CFF3 F00C          	movff	prodl,??_InterruptHandlerLow+11
  2432  000048  CFF4 F00D          	movff	prodh,??_InterruptHandlerLow+12
  2433  00004C  CFF6 F00E          	movff	tblptrl,??_InterruptHandlerLow+13
  2434  000050  CFF7 F00F          	movff	tblptrh,??_InterruptHandlerLow+14
  2435  000054  CFF8 F010          	movff	tblptru,??_InterruptHandlerLow+15
  2436  000058  CFF5 F011          	movff	tablat,??_InterruptHandlerLow+16
  2437  00005C  C011  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  2438  000060  C010  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  2439  000064  C00F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  2440  000068  C00E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  2441  00006C  C00D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  2442  000070  C00C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  2443  000074  C00B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  2444  000078  C00A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  2445  00007C  C009  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  2446  000080  C008  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  2447  000084  C007  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  2448  000088  C006  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  2449  00008C  C005  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  2450  000090  C004  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  2451  000094  C003  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  2452  000098  C002  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  2453  00009C  C001  FFD8         	movff	??_InterruptHandlerLow,status
  2454  0000A0  0010               	retfie	
  2455  0000A2                     __end_of_InterruptHandlerLow:
  2456                           	opt stack 0
  2457                           pclatu	equ	0xFFB
  2458                           pclath	equ	0xFFA
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           intcon	equ	0xFF2
  2466                           postinc0	equ	0xFEE
  2467                           fsr0h	equ	0xFEA
  2468                           fsr0l	equ	0xFE9
  2469                           wreg	equ	0xFE8
  2470                           indf1	equ	0xFE7
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           bsr	equ	0xFE0
  2475                           indf2	equ	0xFDF
  2476                           fsr2h	equ	0xFDA
  2477                           fsr2l	equ	0xFD9
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _InterruptHandlerHigh *****************
  2481 ;; Defined at:
  2482 ;;		line 85 in file "../src/interrupts.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2496 ;;      Params:         0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0
  2498 ;;      Temps:         14       0       0       0       0
  2499 ;;      Totals:        14       0       0       0       0
  2500 ;;Total ram usage:       14 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    3
  2503 ;; This function calls:
  2504 ;;		_SleepIfOkay
  2505 ;;		_i2c_int_handler
  2506 ;;		_timer0_int_handler
  2507 ;; This function is called by:
  2508 ;;		Interrupt level 2
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	intcode
  2513  000008                     __pintcode:
  2514                           	opt stack 0
  2515  000008                     _InterruptHandlerHigh:
  2516                           	opt stack 22
  2517                           
  2518                           ;incstack = 0
  2519  000008  CFFA F016          	movff	pclath,??_InterruptHandlerHigh
  2520  00000C  CFFB F017          	movff	pclatu,??_InterruptHandlerHigh+1
  2521  000010  EFA8  F001         	goto	int_func
  2522                           pclatu	equ	0xFFB
  2523                           pclath	equ	0xFFA
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           prodh	equ	0xFF4
  2529                           prodl	equ	0xFF3
  2530                           intcon	equ	0xFF2
  2531                           postinc0	equ	0xFEE
  2532                           fsr0h	equ	0xFEA
  2533                           fsr0l	equ	0xFE9
  2534                           wreg	equ	0xFE8
  2535                           indf1	equ	0xFE7
  2536                           postdec1	equ	0xFE5
  2537                           fsr1h	equ	0xFE2
  2538                           fsr1l	equ	0xFE1
  2539                           bsr	equ	0xFE0
  2540                           indf2	equ	0xFDF
  2541                           fsr2h	equ	0xFDA
  2542                           fsr2l	equ	0xFD9
  2543                           status	equ	0xFD8
  2544                           
  2545                           	psect	intcode_body
  2546  000350                     __pintcode_body:
  2547                           	opt stack 22
  2548  000350                     int_func:
  2549                           	opt stack 22
  2550  000350  CFE9 F018          	movff	fsr0l,??_InterruptHandlerHigh+2
  2551  000354  CFEA F019          	movff	fsr0h,??_InterruptHandlerHigh+3
  2552  000358  CFE1 F01A          	movff	fsr1l,??_InterruptHandlerHigh+4
  2553  00035C  CFE2 F01B          	movff	fsr1h,??_InterruptHandlerHigh+5
  2554  000360  CFD9 F01C          	movff	fsr2l,??_InterruptHandlerHigh+6
  2555  000364  CFDA F01D          	movff	fsr2h,??_InterruptHandlerHigh+7
  2556  000368  CFF3 F01E          	movff	prodl,??_InterruptHandlerHigh+8
  2557  00036C  CFF4 F01F          	movff	prodh,??_InterruptHandlerHigh+9
  2558  000370  CFF6 F020          	movff	tblptrl,??_InterruptHandlerHigh+10
  2559  000374  CFF7 F021          	movff	tblptrh,??_InterruptHandlerHigh+11
  2560  000378  CFF8 F022          	movff	tblptru,??_InterruptHandlerHigh+12
  2561  00037C  CFF5 F023          	movff	tablat,??_InterruptHandlerHigh+13
  2562                           
  2563                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  2564  000380  A69E               	btfss	3998,3,c	;volatile
  2565  000382  D003               	goto	i2l1707
  2566                           
  2567                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  2568  000384  969E               	bcf	3998,3,c	;volatile
  2569                           
  2570                           ;interrupts.c: 94: i2c_int_handler();
  2571  000386  ECE0  F003         	call	_i2c_int_handler	;wreg free
  2572  00038A                     i2l1707:
  2573                           
  2574                           ;interrupts.c: 95: }
  2575                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  2576  00038A  A4F2               	btfss	intcon,2,c	;volatile
  2577  00038C  D003               	goto	i2l1713
  2578                           
  2579                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  2580  00038E  94F2               	bcf	intcon,2,c	;volatile
  2581                           
  2582                           ;interrupts.c: 101: timer0_int_handler();
  2583  000390  ECDF  F003         	call	_timer0_int_handler	;wreg free
  2584  000394                     i2l1713:
  2585                           
  2586                           ;interrupts.c: 102: }
  2587                           ;interrupts.c: 111: SleepIfOkay();
  2588  000394  EC8C  F002         	call	_SleepIfOkay	;wreg free
  2589  000398  C023  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  2590  00039C  C022  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  2591  0003A0  C021  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  2592  0003A4  C020  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  2593  0003A8  C01F  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  2594  0003AC  C01E  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  2595  0003B0  C01D  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  2596  0003B4  C01C  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  2597  0003B8  C01B  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  2598  0003BC  C01A  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  2599  0003C0  C019  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  2600  0003C4  C018  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  2601  0003C8  C017  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  2602  0003CC  C016  FFFA         	movff	??_InterruptHandlerHigh,pclath
  2603  0003D0  0011               	retfie		f
  2604  0003D2                     __end_of_InterruptHandlerHigh:
  2605                           	opt stack 0
  2606                           pclatu	equ	0xFFB
  2607                           pclath	equ	0xFFA
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           prodh	equ	0xFF4
  2613                           prodl	equ	0xFF3
  2614                           intcon	equ	0xFF2
  2615                           postinc0	equ	0xFEE
  2616                           fsr0h	equ	0xFEA
  2617                           fsr0l	equ	0xFE9
  2618                           wreg	equ	0xFE8
  2619                           indf1	equ	0xFE7
  2620                           postdec1	equ	0xFE5
  2621                           fsr1h	equ	0xFE2
  2622                           fsr1l	equ	0xFE1
  2623                           bsr	equ	0xFE0
  2624                           indf2	equ	0xFDF
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _timer0_int_handler *****************
  2630 ;; Defined at:
  2631 ;;		line 17 in file "../src/user_interrupts.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;		None               void
  2638 ;; Registers used:
  2639 ;;		None
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2645 ;;      Params:         0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0
  2648 ;;      Totals:         0       0       0       0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_InterruptHandlerHigh
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text20
  2659  0007BE                     __ptext20:
  2660                           	opt stack 0
  2661  0007BE                     _timer0_int_handler:
  2662                           	opt stack 24
  2663                           
  2664                           ;incstack = 0
  2665  0007BE  0012               	return	
  2666  0007C0                     __end_of_timer0_int_handler:
  2667                           	opt stack 0
  2668                           pclatu	equ	0xFFB
  2669                           pclath	equ	0xFFA
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           fsr0h	equ	0xFEA
  2679                           fsr0l	equ	0xFE9
  2680                           wreg	equ	0xFE8
  2681                           indf1	equ	0xFE7
  2682                           postdec1	equ	0xFE5
  2683                           fsr1h	equ	0xFE2
  2684                           fsr1l	equ	0xFE1
  2685                           bsr	equ	0xFE0
  2686                           indf2	equ	0xFDF
  2687                           fsr2h	equ	0xFDA
  2688                           fsr2l	equ	0xFD9
  2689                           status	equ	0xFD8
  2690                           
  2691 ;; *************** function _i2c_int_handler *****************
  2692 ;; Defined at:
  2693 ;;		line 78 in file "../src/my_i2c.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;		None               void
  2700 ;; Registers used:
  2701 ;;		None
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2707 ;;      Params:         0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0
  2710 ;;      Totals:         0       0       0       0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_InterruptHandlerHigh
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text21
  2721  0007C0                     __ptext21:
  2722                           	opt stack 0
  2723  0007C0                     _i2c_int_handler:
  2724                           	opt stack 24
  2725                           
  2726                           ;incstack = 0
  2727  0007C0  0012               	return	
  2728  0007C2                     __end_of_i2c_int_handler:
  2729                           	opt stack 0
  2730                           pclatu	equ	0xFFB
  2731                           pclath	equ	0xFFA
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           prodh	equ	0xFF4
  2737                           prodl	equ	0xFF3
  2738                           intcon	equ	0xFF2
  2739                           postinc0	equ	0xFEE
  2740                           fsr0h	equ	0xFEA
  2741                           fsr0l	equ	0xFE9
  2742                           wreg	equ	0xFE8
  2743                           indf1	equ	0xFE7
  2744                           postdec1	equ	0xFE5
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           bsr	equ	0xFE0
  2748                           indf2	equ	0xFDF
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function _SleepIfOkay *****************
  2754 ;; Defined at:
  2755 ;;		line 229 in file "../src/messages.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    2
  2776 ;; This function calls:
  2777 ;;		_enter_sleep_mode
  2778 ;;		i2_check_msg
  2779 ;;		i2_in_high_int
  2780 ;;		i2_in_low_int
  2781 ;; This function is called by:
  2782 ;;		_InterruptHandlerHigh
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text22
  2787  000518                     __ptext22:
  2788                           	opt stack 0
  2789  000518                     _SleepIfOkay:
  2790                           	opt stack 22
  2791                           
  2792                           ;messages.c: 231: if (MQ_Main_Willing_to_block == 0) {
  2793                           
  2794                           ;incstack = 0
  2795  000518  6643               	tstfsz	_MQ_Main_Willing_to_block,c
  2796  00051A  D001               	goto	i2l1719
  2797  00051C  0012               	return	
  2798  00051E                     i2l1719:
  2799                           
  2800                           ;messages.c: 233: }
  2801                           ;messages.c: 236: if (in_low_int()) {
  2802  00051E  EC34  F003         	call	i2_in_low_int	;wreg free
  2803  000522  5015               	movf	?i2_in_low_int+1,w,c
  2804  000524  1014               	iorwf	?i2_in_low_int,w,c
  2805  000526  A4D8               	btfss	status,2,c
  2806  000528  0012               	return	
  2807                           
  2808                           ;messages.c: 238: }
  2809                           ;messages.c: 241: if (!in_high_int()) {
  2810                           
  2811                           ;messages.c: 237: return;
  2812  00052A  ECCF  F003         	call	i2_in_high_int	;wreg free
  2813  00052E  5013               	movf	?i2_in_high_int+1,w,c
  2814  000530  1012               	iorwf	?i2_in_high_int,w,c
  2815  000532  B4D8               	btfsc	status,2,c
  2816  000534  0012               	return	
  2817                           
  2818                           ;messages.c: 243: }
  2819                           ;messages.c: 248: if (check_msg(&ToMainHigh_MQ)) {
  2820                           
  2821                           ;messages.c: 242: return;
  2822  000536  0100               	movlb	0	; () banked
  2823  000538  0E00               	movlw	high _ToMainHigh_MQ
  2824  00053A  6E13               	movwf	i2check_msg@qptr+1,c
  2825  00053C  0100               	movlb	0	; () banked
  2826  00053E  0E80               	movlw	low _ToMainHigh_MQ
  2827  000540  6E12               	movwf	i2check_msg@qptr,c
  2828  000542  EC9D  F003         	call	i2_check_msg	;wreg free
  2829  000546  0900               	iorlw	0
  2830  000548  A4D8               	btfss	status,2,c
  2831  00054A  0012               	return	
  2832                           
  2833                           ;messages.c: 250: }
  2834                           ;messages.c: 251: if (check_msg(&ToMainLow_MQ)) {
  2835                           
  2836                           ;messages.c: 249: return;
  2837  00054C  0100               	movlb	0	; () banked
  2838  00054E  0E00               	movlw	high _ToMainLow_MQ
  2839  000550  6E13               	movwf	i2check_msg@qptr+1,c
  2840  000552  0100               	movlb	0	; () banked
  2841  000554  0EB6               	movlw	low _ToMainLow_MQ
  2842  000556  6E12               	movwf	i2check_msg@qptr,c
  2843  000558  EC9D  F003         	call	i2_check_msg	;wreg free
  2844  00055C  0900               	iorlw	0
  2845  00055E  B4D8               	btfsc	status,2,c
  2846                           
  2847                           ;messages.c: 253: }
  2848                           ;messages.c: 254: enter_sleep_mode();
  2849                           
  2850                           ;messages.c: 252: return;
  2851  000560  ECD9  F003         	call	_enter_sleep_mode	;wreg free
  2852  000564  0012               	return	
  2853  000566                     __end_of_SleepIfOkay:
  2854                           	opt stack 0
  2855                           pclatu	equ	0xFFB
  2856                           pclath	equ	0xFFA
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           prodh	equ	0xFF4
  2862                           prodl	equ	0xFF3
  2863                           intcon	equ	0xFF2
  2864                           postinc0	equ	0xFEE
  2865                           fsr0h	equ	0xFEA
  2866                           fsr0l	equ	0xFE9
  2867                           wreg	equ	0xFE8
  2868                           indf1	equ	0xFE7
  2869                           postdec1	equ	0xFE5
  2870                           fsr1h	equ	0xFE2
  2871                           fsr1l	equ	0xFE1
  2872                           bsr	equ	0xFE0
  2873                           indf2	equ	0xFDF
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function i2_in_low_int *****************
  2879 ;; Defined at:
  2880 ;;		line 32 in file "../src/interrupts.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  2   19[COMRAM] int 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2894 ;;      Params:         2       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0
  2897 ;;      Totals:         2       0       0       0       0
  2898 ;;Total ram usage:        2 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    1
  2901 ;; This function calls:
  2902 ;;		i2_in_high_int
  2903 ;; This function is called by:
  2904 ;;		_SleepIfOkay
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text23
  2909  000668                     __ptext23:
  2910                           	opt stack 0
  2911  000668                     i2_in_low_int:
  2912                           	opt stack 22
  2913                           
  2914                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  2915                           
  2916                           ;incstack = 0
  2917  000668  ACF2               	btfss	intcon,6,c	;volatile
  2918  00066A  D005               	goto	i2l2075
  2919                           
  2920                           ;interrupts.c: 34: return (0);
  2921  00066C  0E00               	movlw	0
  2922  00066E  6E15               	movwf	?i2_in_low_int+1,c
  2923  000670  0E00               	movlw	0
  2924  000672  6E14               	movwf	?i2_in_low_int,c
  2925  000674  0012               	return	
  2926  000676                     i2l2075:
  2927  000676  ECCF  F003         	call	i2_in_high_int	;wreg free
  2928  00067A  5013               	movf	?i2_in_high_int+1,w,c
  2929  00067C  1012               	iorwf	?i2_in_high_int,w,c
  2930  00067E  B4D8               	btfsc	status,2,c
  2931  000680  D005               	goto	i2l2083
  2932                           
  2933                           ;interrupts.c: 36: return (0);
  2934  000682  0E00               	movlw	0
  2935  000684  6E15               	movwf	?i2_in_low_int+1,c
  2936  000686  0E00               	movlw	0
  2937  000688  6E14               	movwf	?i2_in_low_int,c
  2938  00068A  0012               	return	
  2939  00068C                     i2l2083:
  2940                           
  2941                           ;interrupts.c: 38: return (1);
  2942  00068C  0E00               	movlw	0
  2943  00068E  6E15               	movwf	?i2_in_low_int+1,c
  2944  000690  0E01               	movlw	1
  2945  000692  6E14               	movwf	?i2_in_low_int,c
  2946  000694  0012               	return	
  2947  000696                     __end_ofi2_in_low_int:
  2948                           	opt stack 0
  2949                           pclatu	equ	0xFFB
  2950                           pclath	equ	0xFFA
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           fsr0h	equ	0xFEA
  2960                           fsr0l	equ	0xFE9
  2961                           wreg	equ	0xFE8
  2962                           indf1	equ	0xFE7
  2963                           postdec1	equ	0xFE5
  2964                           fsr1h	equ	0xFE2
  2965                           fsr1l	equ	0xFE1
  2966                           bsr	equ	0xFE0
  2967                           indf2	equ	0xFDF
  2968                           fsr2h	equ	0xFDA
  2969                           fsr2l	equ	0xFD9
  2970                           status	equ	0xFD8
  2971                           
  2972 ;; *************** function i2_in_high_int *****************
  2973 ;; Defined at:
  2974 ;;		line 24 in file "../src/interrupts.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  2   17[COMRAM] int 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2988 ;;      Params:         2       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0
  2991 ;;      Totals:         2       0       0       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_SleepIfOkay
  2998 ;;		i2_in_low_int
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text24
  3003  00079E                     __ptext24:
  3004                           	opt stack 0
  3005  00079E                     i2_in_high_int:
  3006                           	opt stack 22
  3007                           
  3008                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3009                           
  3010                           ;incstack = 0
  3011  00079E  0E00               	movlw	0
  3012  0007A0  AEF2               	btfss	intcon,7,c	;volatile
  3013  0007A2  0E01               	movlw	1
  3014  0007A4  6E12               	movwf	?i2_in_high_int,c
  3015  0007A6  6A13               	clrf	?i2_in_high_int+1,c
  3016  0007A8  0012               	return	
  3017  0007AA                     __end_ofi2_in_high_int:
  3018                           	opt stack 0
  3019                           pclatu	equ	0xFFB
  3020                           pclath	equ	0xFFA
  3021                           tblptru	equ	0xFF8
  3022                           tblptrh	equ	0xFF7
  3023                           tblptrl	equ	0xFF6
  3024                           tablat	equ	0xFF5
  3025                           prodh	equ	0xFF4
  3026                           prodl	equ	0xFF3
  3027                           intcon	equ	0xFF2
  3028                           postinc0	equ	0xFEE
  3029                           fsr0h	equ	0xFEA
  3030                           fsr0l	equ	0xFE9
  3031                           wreg	equ	0xFE8
  3032                           indf1	equ	0xFE7
  3033                           postdec1	equ	0xFE5
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           bsr	equ	0xFE0
  3037                           indf2	equ	0xFDF
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function i2_check_msg *****************
  3043 ;; Defined at:
  3044 ;;		line 223 in file "../src/messages.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  qptr            2   17[COMRAM] PTR struct __msg_queue
  3047 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      unsigned char 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3059 ;;      Params:         2       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0
  3061 ;;      Temps:          1       0       0       0       0
  3062 ;;      Totals:         3       0       0       0       0
  3063 ;;Total ram usage:        3 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_SleepIfOkay
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text25
  3073  00073A                     __ptext25:
  3074                           	opt stack 0
  3075  00073A                     i2_check_msg:
  3076                           	opt stack 23
  3077                           
  3078                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  3079                           
  3080                           ;incstack = 0
  3081  00073A  EE20 F035          	lfsr	2,53
  3082  00073E  5012               	movf	i2check_msg@qptr,w,c
  3083  000740  26D9               	addwf	fsr2l,f,c
  3084  000742  5013               	movf	i2check_msg@qptr+1,w,c
  3085  000744  22DA               	addwfc	fsr2h,f,c
  3086  000746  50DF               	movf	indf2,w,c
  3087  000748  6E14               	movwf	??i2_check_msg& (0+255),c
  3088  00074A  5014               	movf	??i2_check_msg,w,c
  3089  00074C  0D0D               	mullw	13
  3090  00074E  50F3               	movf	prodl,w,c
  3091  000750  2412               	addwf	i2check_msg@qptr,w,c
  3092  000752  6ED9               	movwf	fsr2l,c
  3093  000754  50F4               	movf	prodh,w,c
  3094  000756  2013               	addwfc	i2check_msg@qptr+1,w,c
  3095  000758  6EDA               	movwf	fsr2h,c
  3096  00075A  50DF               	movf	indf2,w,c
  3097  00075C  0012               	return	
  3098  00075E                     __end_ofi2_check_msg:
  3099                           	opt stack 0
  3100                           pclatu	equ	0xFFB
  3101                           pclath	equ	0xFFA
  3102                           tblptru	equ	0xFF8
  3103                           tblptrh	equ	0xFF7
  3104                           tblptrl	equ	0xFF6
  3105                           tablat	equ	0xFF5
  3106                           prodh	equ	0xFF4
  3107                           prodl	equ	0xFF3
  3108                           intcon	equ	0xFF2
  3109                           postinc0	equ	0xFEE
  3110                           fsr0h	equ	0xFEA
  3111                           fsr0l	equ	0xFE9
  3112                           wreg	equ	0xFE8
  3113                           indf1	equ	0xFE7
  3114                           postdec1	equ	0xFE5
  3115                           fsr1h	equ	0xFE2
  3116                           fsr1l	equ	0xFE1
  3117                           bsr	equ	0xFE0
  3118                           indf2	equ	0xFDF
  3119                           fsr2h	equ	0xFDA
  3120                           fsr2l	equ	0xFD9
  3121                           status	equ	0xFD8
  3122                           
  3123 ;; *************** function _enter_sleep_mode *****************
  3124 ;; Defined at:
  3125 ;;		line 203 in file "../src/messages.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;		None               void
  3132 ;; Registers used:
  3133 ;;		None
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3139 ;;      Params:         0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0
  3142 ;;      Totals:         0       0       0       0       0
  3143 ;;Total ram usage:        0 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_SleepIfOkay
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text26
  3153  0007B2                     __ptext26:
  3154                           	opt stack 0
  3155  0007B2                     _enter_sleep_mode:
  3156                           	opt stack 23
  3157                           
  3158                           ;messages.c: 205: OSCCONbits.IDLEN = 1;
  3159                           
  3160                           ;incstack = 0
  3161  0007B2  8ED3               	bsf	4051,7,c	;volatile
  3162  0007B4  0003               	sleep		;# 
  3163  0007B6  0012               	return	
  3164  0007B8                     __end_of_enter_sleep_mode:
  3165                           	opt stack 0
  3166  0000                     pclatu	equ	0xFFB
  3167                           pclath	equ	0xFFA
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           intcon	equ	0xFF2
  3175                           postinc0	equ	0xFEE
  3176                           fsr0h	equ	0xFEA
  3177                           fsr0l	equ	0xFE9
  3178                           wreg	equ	0xFE8
  3179                           indf1	equ	0xFE7
  3180                           postdec1	equ	0xFE5
  3181                           fsr1h	equ	0xFE2
  3182                           fsr1l	equ	0xFE1
  3183                           bsr	equ	0xFE0
  3184                           indf2	equ	0xFDF
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           pclatu	equ	0xFFB
  3189                           pclath	equ	0xFFA
  3190                           tblptru	equ	0xFF8
  3191                           tblptrh	equ	0xFF7
  3192                           tblptrl	equ	0xFF6
  3193                           tablat	equ	0xFF5
  3194                           prodh	equ	0xFF4
  3195                           prodl	equ	0xFF3
  3196                           intcon	equ	0xFF2
  3197                           postinc0	equ	0xFEE
  3198                           fsr0h	equ	0xFEA
  3199                           fsr0l	equ	0xFE9
  3200                           wreg	equ	0xFE8
  3201                           indf1	equ	0xFE7
  3202                           postdec1	equ	0xFE5
  3203                           fsr1h	equ	0xFE2
  3204                           fsr1l	equ	0xFE1
  3205                           bsr	equ	0xFE0
  3206                           indf2	equ	0xFDF
  3207                           fsr2h	equ	0xFDA
  3208                           fsr2l	equ	0xFD9
  3209                           status	equ	0xFD8
  3210                           
  3211                           	psect	rparam
  3212  0000                     pclatu	equ	0xFFB
  3213                           pclath	equ	0xFFA
  3214                           tblptru	equ	0xFF8
  3215                           tblptrh	equ	0xFF7
  3216                           tblptrl	equ	0xFF6
  3217                           tablat	equ	0xFF5
  3218                           prodh	equ	0xFF4
  3219                           prodl	equ	0xFF3
  3220                           intcon	equ	0xFF2
  3221                           postinc0	equ	0xFEE
  3222                           fsr0h	equ	0xFEA
  3223                           fsr0l	equ	0xFE9
  3224                           wreg	equ	0xFE8
  3225                           indf1	equ	0xFE7
  3226                           postdec1	equ	0xFE5
  3227                           fsr1h	equ	0xFE2
  3228                           fsr1l	equ	0xFE1
  3229                           bsr	equ	0xFE0
  3230                           indf2	equ	0xFDF
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         227
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      82
    BANK0           128      0     108
    BANK1           256    137     245
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    S976$0$0	PTR struct . size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 

    S976$adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    unpackRoverMsg@handler.adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 0

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 121
		 -> main@ic(BANK1[121]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK1[121]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _init_queues->_init_queue
    _i2c_configure_master->___aldiv
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in COMRAM

    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               148   148      0    5676
                                              0 BANK1    137   137      0
                         _OpenTimer0
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                           _init_i2c
                        _init_queues
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             39 COMRAM     1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             35 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             35 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 5     5      0     450
                                             50 COMRAM     5     5      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                             35 COMRAM    15     7      8
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             41 COMRAM     1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             39 COMRAM     2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             37 COMRAM     2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             35 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             35 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2077
                                             59 COMRAM     5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2077
                                             59 COMRAM     5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1883
                                             45 COMRAM    14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     504
                                             35 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerHigh                                14    14      0     236
                                             21 COMRAM    14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (7) _timer0_int_handler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SleepIfOkay                                          0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (8) i2_in_low_int                                         2     0      2       0
                                             19 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (9) i2_in_high_int                                        2     0      2       0
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i2_check_msg                                          3     1      2     236
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _enter_sleep_mode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
     ___aldiv
   _init_i2c
   _init_queues
     _init_queue

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     89      F5       6       95.7%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      6C       4       84.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      52       1       64.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      11        0.0%
DATA                 0      0     1B3      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Feb 19 01:30:56 2014

      _MQ_Main_Willing_to_block 0043                              l80 02F6       __end_of_ToMainLow_recvmsg 06EC  
                            bsr 000FE0                    __CFG_CP0$OFF 000000                             l410 077C  
                           l409 077A                             l651 0784                             u815 00C6  
                           u825 00FA                             u897 0786                  _FromMainLow_MQ 01BF  
                           wreg 000FE8                    __CFG_IESO$ON 000000                    ?_in_high_int 0024  
                          l2041 0144                            l2033 0112                            l2051 0178  
                          l2043 0148                            l2027 00E2                            l2039 0138  
                          l2055 0186                            l2059 019C                            l1831 0406  
                          l1825 03E6                            l1907 01F4                            l1923 027C  
                          l1683 065E                            l1675 0648                            l1771 031A  
                          l1837 0426                            l1855 04AC                            l1759 02C4  
                          l1697 06B8                            l1769 02FC                            l1893 0628  
                          l1887 060C                            _LATB 000F8A                 _FromMainHigh_MQ 0189  
                 __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001                            _main 0280  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 0188  
                          pclat 000FFA                     i2_check_msg 073A                            prodh 000FF4  
                          prodl 000FF3                            start 00A2                   __CFG_FOSC2$ON 000000  
 __size_of_i2c_configure_master 004E       ToMainHigh_recvmsg@msgtype 003C     __size_of_timer0_int_handler 0002  
                   _Delay1KTCYx 0780                 __end_of___aldiv 01AE                           ?_main 0001  
                         _T0CON 000FD5                           _RCREG 000FAE                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR1L 000FCE  
                         _TRISB 000F93                    ?_init_queues 0001       __size_of_enter_sleep_mode 0006  
               __end_of_in_main 06C2                           _count 0045      ToMainLow_recvmsg@maxlength 0040  
                         tablat 000FF5                           status 000FD8        i2c_configure_master@fosc 0037  
               __initialization 042E                    __end_of_main 0350      __size_of_ToMainLow_recvmsg 002A  
         __size_ofi2_in_low_int 002E                          ??_main 0041                   __activetblptr 000002  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          i2l2083 068C  
                        i2l2075 0676                          i2l1713 0394                      _OpenTimer0 075E  
                        i2l1707 038A                  __CFG_WDTEN$OFF 000000                          i2l1719 051E  
                 ??_SleepIfOkay 0016                          _OSCCON 000FD3                    i2_in_low_int 0668  
                __CFG_XINST$OFF 000000                       ??___aldiv 002C                 _i2c_int_handler 07C0  
              OpenTimer0@config 0024                          _ic_ptr 0051                   main@msgbuffer 0100  
              __end_of_init_i2c 05FA                          _memcpy 05FA                          clear_0 0434  
                        clear_1 0440                          clear_2 044C                          _uc_ptr 0041  
                        main@ic 010E                __end_of_recv_msg 0280                       ??_in_main 002A  
                  __pdataCOMRAM 004C                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     init_queue@i 0027        ToMainLow_recvmsg@msgtype 003C  
          __size_of_in_high_int 000C                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 0472      __end_of_ToMainHigh_recvmsg 0716             __end_of_SleepIfOkay 0566  
                __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C              __size_of_check_msg 0024  
 __size_of_InterruptHandlerHigh 03CA     __end_of_InterruptHandlerLow 00A2                   _ToMainHigh_MQ 0080  
              _enter_sleep_mode 07B2                   check_msg@qptr 0024         ??_block_on_To_msgqueues 002A  
          __size_of_init_queues 004A                      __pbssBANK0 0080                      __pbssBANK1 0189  
                   ?_OpenTimer0 0001                      __pnvCOMRAM 0051         __end_of_i2c_int_handler 07C2  
                  ?i2_check_msg 0012               recv_msg@maxlength 0030                 recv_msg@msgtype 0031  
               recv_msg@tlength 0038                    ?_Delay1KTCYx 0001                         ?_memcpy 0024  
  __end_of_i2c_configure_master 0518                   i2_in_high_int 079E               __end_of_check_msg 073A  
                     ?_init_i2c 0024                     _SleepIfOkay 0518                       _ADCBuffer 0047  
                     ?_recv_msg 002E                      _in_low_int 063A                         __Hparam 0000  
                       __Lparam 0000      __end_of_timer0_int_handler 07C0                         ___aldiv 00A6  
               __CFG_STVREN$OFF 000000                         __pcinit 042E                 __size_of_memcpy 0040  
                    _init_queue 047C                         __ramtop 0400             __size_of_OpenTimer0 0022  
                       __ptext0 0280                         __ptext1 0566                         __ptext2 047C  
                       __ptext3 05B0                         __ptext4 04CA                         __ptext5 00A6  
                       __ptext6 07AA                         __ptext7 03D2                         __ptext8 0696  
                       __ptext9 063A                       _T0CONbits 000FD5                         _in_main 0696  
              ___aldiv@dividend 0024                         _sample1 004C                         _sample2 004D  
                       _sample3 004E                         _sample4 004F                         _sample5 0050  
                ?i2_in_high_int 0012                  __pintcode_body 0350            end_of_initialization 0472  
                       memcpy@d 002A                         memcpy@n 0028                         memcpy@s 002C  
                    ??_init_i2c 0026                   __Lmediumconst 0000                         int_func 0350  
              ?_i2c_int_handler 0001                      ??_recv_msg 0035                       _RCSTAbits 000FAB  
              ___aldiv@quotient 002F                         postdec1 000FE5                         postinc0 000FEE  
                     _TRISAbits 000F92                      main@length 0187                     ?_in_low_int 0026  
          _i2c_configure_master 04CA            __size_ofi2_check_msg 0024        __end_of_enter_sleep_mode 07B8  
            _ToMainHigh_recvmsg 06EC                   __pidataCOMRAM 07B8                     ?_init_queue 0024  
                __end_of_memcpy 063A               _enable_interrupts 07AA            __size_of_Delay1KTCYx 0012  
           ?_ToMainHigh_recvmsg 003C                 ??i2_in_high_int 0014              ?_enable_interrupts 0001  
           start_initialization 042E                   ??_in_high_int 0026             ??_enable_interrupts 0024  
                  ??_OpenTimer0 0024  __size_of_block_on_To_msgqueues 005C   __end_of_block_on_To_msgqueues 042E  
  __end_of_InterruptHandlerHigh 03D2                      init_i2c@ic 0024            ??_ToMainHigh_recvmsg 0040  
         ?_i2c_configure_master 0001       __end_of_enable_interrupts 07B2                        ??_memcpy 002A  
            __end_of_OpenTimer0 0780                     __pbssCOMRAM 0041                   ??_init_queues 0028  
                 __pcstackBANK1 0100             __size_of_in_low_int 002E             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 0024    __size_of_InterruptHandlerLow 008A             __end_of_in_high_int 079E  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 003E                    _ToMainLow_MQ 00B6  
           __size_of_init_queue 004E                       _check_msg 0716               __size_of_init_i2c 004A  
                  recv_msg@data 0033                    recv_msg@qmsg 003A                    recv_msg@slot 0037  
                  recv_msg@qptr 002E               __size_of_recv_msg 00D2                       __pintcode 0008  
                      ?___aldiv 0024                     __pintcodelo 0018          ToMainHigh_recvmsg@data 003E  
                      ?_in_main 0028              _timer0_int_handler 07BE             ?_timer0_int_handler 0001  
           __end_of_init_queues 05B0                 ___aldiv@divisor 0028                 ___aldiv@counter 002D  
                      _LATBbits 000F8A          ??_i2c_configure_master 0033                 i2check_msg@qptr 0012  
                    ?_check_msg 0024                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                 ?i2_in_low_int 0014                        _PIR1bits 000F9E                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000            ??_timer0_int_handler 0012      __size_of_enable_interrupts 0008  
                    _ADCON0bits 000FC2            _InterruptHandlerHigh 0008                     _in_high_int 0792  
                     copy_data0 0466                  ??i2_in_low_int 0016                    ??_in_low_int 0028  
                      __Hrparam 0000                        __Lrparam 0000               ?_enter_sleep_mode 0001  
              __size_of___aldiv 0108        __size_of_i2c_int_handler 0002              ??_enter_sleep_mode 0012  
                  ??_init_queue 0026           ?_InterruptHandlerHigh 0001                __size_of_in_main 002C  
   ToMainHigh_recvmsg@maxlength 0040                     _init_queues 0566              __end_of_in_low_int 0668  
                      __ptext10 0792                        __ptext11 0716                        __ptext20 07BE  
                      __ptext12 0780                        __ptext21 07C0                        __ptext13 06C2  
                      __ptext22 0518                        __ptext14 06EC                        __ptext23 0668  
                      __ptext15 01AE                        __ptext24 079E                        __ptext16 05FA  
                      __ptext25 073A                        __ptext17 075E                        __ptext26 07B2  
                      _init_i2c 05B0                   __size_of_main 00D0                   ??i2_check_msg 0014  
                   ??_check_msg 0026              __end_of_init_queue 04CA            __size_of_SleepIfOkay 004E  
                      _recv_msg 01AE                  init_queue@qptr 0024                        _timesreq 0046  
                 ??_Delay1KTCYx 0024             _InterruptHandlerLow 0018                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2                        memcpy@d1 0024                        memcpy@s1 0026  
         __end_ofi2_in_high_int 07AA           main@data_points_count 010B                        intlevel1 0000  
                      intlevel2 0000            ?_InterruptHandlerLow 0001           _block_on_To_msgqueues 03D2  
   __size_of_ToMainHigh_recvmsg 002A                      _OSCCONbits 000FD3             __end_ofi2_check_msg 075E  
        ??_InterruptHandlerHigh 0016               _ToMainLow_recvmsg 06C2              main@last_reg_recvd 010D  
          __end_ofi2_in_low_int 0696              ?_ToMainLow_recvmsg 003C             __end_of_Delay1KTCYx 0792  
             ??_i2c_int_handler 0012                    ___aldiv@sign 002E                     _SSPCON1bits 000FC6  
         ??_InterruptHandlerLow 0001             ??_ToMainLow_recvmsg 0040                    _USART_Status 0044  
