

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Feb 19 11:22:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  000ED0                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _sample1
    54  000ED0  01                 	db	1
    55                           
    56                           ;initializer for _sample2
    57  000ED1  05                 	db	5
    58                           
    59                           ;initializer for _sample3
    60  000ED2  10                 	db	16
    61                           
    62                           ;initializer for _sample4
    63  000ED3  D8                 	db	216
    64                           
    65                           ;initializer for _sample5
    66  000ED4  FE                 	db	254
    67  0000                     _ADCON0	set	4034
    68  0000                     _ADCON0bits	set	4034
    69  0000                     _ADCON1	set	4033
    70  0000                     _ADCON2	set	4032
    71  0000                     _ADRESH	set	4036
    72  0000                     _ADRESL	set	4035
    73  0000                     _INTCONbits	set	4082
    74  0000                     _IPR1bits	set	3999
    75  0000                     _LATB	set	3978
    76  0000                     _LATBbits	set	3978
    77  0000                     _OSCCON	set	4051
    78  0000                     _OSCCONbits	set	4051
    79  0000                     _OSCTUNEbits	set	3995
    80  0000                     _PIE1bits	set	3997
    81  0000                     _PIR1bits	set	3998
    82  0000                     _RCONbits	set	4048
    83  0000                     _RCREG	set	4014
    84  0000                     _RCSTAbits	set	4011
    85  0000                     _SSPADD	set	4040
    86  0000                     _SSPBUF	set	4041
    87  0000                     _SSPCON1	set	4038
    88  0000                     _SSPCON1bits	set	4038
    89  0000                     _SSPCON2	set	4037
    90  0000                     _SSPCON2bits	set	4037
    91  0000                     _SSPSTAT	set	4039
    92  0000                     _SSPSTATbits	set	4039
    93  0000                     _T0CON	set	4053
    94  0000                     _T0CONbits	set	4053
    95  0000                     _TMR0H	set	4055
    96  0000                     _TMR0L	set	4054
    97  0000                     _TMR1H	set	4047
    98  0000                     _TMR1L	set	4046
    99  0000                     _TRISAbits	set	3986
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISCbits	set	3988
   102                           
   103                           	psect	nvBANK0
   104  0000D3                     __pnvBANK0:
   105                           	opt stack 0
   106  0000D3                     _ic_ptr:
   107                           	opt stack 0
   108  0000D3                     	ds	2
   109                           
   110                           ; #config settings
   111  0000                     
   112                           	psect	cinit
   113  000BC0                     __pcinit:
   114                           	opt stack 0
   115  000BC0                     start_initialization:
   116                           	opt stack 0
   117  000BC0                     __initialization:
   118                           	opt stack 0
   119                           
   120                           ; Clear objects allocated to BANK2 (54 bytes)
   121  000BC0  EE02  F000         	lfsr	0,__pbssBANK2
   122  000BC4  0E36               	movlw	54
   123  000BC6                     clear_0:
   124  000BC6  6AEE               	clrf	postinc0,c
   125  000BC8  06E8               	decf	wreg,f,c
   126  000BCA  E1FD               	bnz	clear_0
   127                           
   128                           ; Clear objects allocated to BANK1 (108 bytes)
   129  000BCC  EE01  F089         	lfsr	0,__pbssBANK1
   130  000BD0  0E6C               	movlw	108
   131  000BD2                     clear_1:
   132  000BD2  6AEE               	clrf	postinc0,c
   133  000BD4  06E8               	decf	wreg,f,c
   134  000BD6  E1FD               	bnz	clear_1
   135                           
   136                           ; Clear objects allocated to BANK0 (54 bytes)
   137  000BD8  EE00  F080         	lfsr	0,__pbssBANK0
   138  000BDC  0E36               	movlw	54
   139  000BDE                     clear_2:
   140  000BDE  6AEE               	clrf	postinc0,c
   141  000BE0  06E8               	decf	wreg,f,c
   142  000BE2  E1FD               	bnz	clear_2
   143                           
   144                           ; Clear objects allocated to COMRAM (11 bytes)
   145  000BE4  EE00  F044         	lfsr	0,__pbssCOMRAM
   146  000BE8  0E0B               	movlw	11
   147  000BEA                     clear_3:
   148  000BEA  6AEE               	clrf	postinc0,c
   149  000BEC  06E8               	decf	wreg,f,c
   150  000BEE  E1FD               	bnz	clear_3
   151                           
   152                           ; Initialize objects allocated to COMRAM (5 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154  000BF0  0ED0               	movlw	low __pidataCOMRAM
   155  000BF2  6EF6               	movwf	tblptrl,c
   156  000BF4  0E0E               	movlw	high __pidataCOMRAM
   157  000BF6  6EF7               	movwf	tblptrh,c
   158  000BF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159  000BFA  6EF8               	movwf	tblptru,c
   160  000BFC  EE00  F04F         	lfsr	0,__pdataCOMRAM
   161  000C00  EE10 F005          	lfsr	1,5
   162  000C04                     copy_data0:
   163  000C04  0009               	tblrd		*+
   164  000C06  CFF5 FFEE          	movff	tablat,postinc0
   165  000C0A  50E5               	movf	postdec1,w,c
   166  000C0C  50E1               	movf	fsr1l,w,c
   167  000C0E  E1FA               	bnz	copy_data0
   168  000C10                     end_of_initialization:
   169                           	opt stack 0
   170  000C10                     __end_of__initialization:
   171                           	opt stack 0
   172  000C10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  000C12  6EF8               	movwf	tblptru,c
   174  000C14  0100               	movlb	0
   175  000C16  EF56  F003         	goto	_main	;jump to C main() function
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           postdec1	equ	0xFE5
   183                           fsr1l	equ	0xFE1
   184                           
   185                           	psect	bssCOMRAM
   186  000044                     __pbssCOMRAM:
   187                           	opt stack 0
   188  000044                     _uc_ptr:
   189                           	opt stack 0
   190  000044                     	ds	2
   191  000046                     _MQ_Main_Willing_to_block:
   192                           	opt stack 0
   193  000046                     	ds	1
   194  000047                     _USART_Status:
   195                           	opt stack 0
   196  000047                     	ds	1
   197  000048                     _count:
   198                           	opt stack 0
   199  000048                     	ds	1
   200  000049                     _timesreq:
   201                           	opt stack 0
   202  000049                     	ds	1
   203  00004A                     _ADCBuffer:
   204                           	opt stack 0
   205  00004A                     	ds	5
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           postdec1	equ	0xFE5
   213                           fsr1l	equ	0xFE1
   214                           
   215                           	psect	dataCOMRAM
   216  00004F                     __pdataCOMRAM:
   217                           	opt stack 0
   218  00004F                     _sample1:
   219                           	opt stack 0
   220  00004F                     	ds	1
   221  000050                     _sample2:
   222                           	opt stack 0
   223  000050                     	ds	1
   224  000051                     _sample3:
   225                           	opt stack 0
   226  000051                     	ds	1
   227  000052                     _sample4:
   228                           	opt stack 0
   229  000052                     	ds	1
   230  000053                     _sample5:
   231                           	opt stack 0
   232  000053                     	ds	1
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           postdec1	equ	0xFE5
   240                           fsr1l	equ	0xFE1
   241                           
   242                           	psect	bssBANK0
   243  000080                     __pbssBANK0:
   244                           	opt stack 0
   245  000080                     _ToMainLow_MQ:
   246                           	opt stack 0
   247  000080                     	ds	54
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           postdec1	equ	0xFE5
   255                           fsr1l	equ	0xFE1
   256                           
   257                           	psect	bssBANK1
   258  000189                     __pbssBANK1:
   259                           	opt stack 0
   260  000189                     _FromMainLow_MQ:
   261                           	opt stack 0
   262  000189                     	ds	54
   263  0001BF                     _ToMainHigh_MQ:
   264                           	opt stack 0
   265  0001BF                     	ds	54
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275                           	psect	bssBANK2
   276  000200                     __pbssBANK2:
   277                           	opt stack 0
   278  000200                     _FromMainHigh_MQ:
   279                           	opt stack 0
   280  000200                     	ds	54
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	cstackBANK1
   291  000100                     __pcstackBANK1:
   292                           	opt stack 0
   293  000100                     main@msgbuffer:
   294                           	opt stack 0
   295                           
   296                           ; 11 bytes @ 0x0
   297  000100                     	ds	11
   298  00010B                     main@data_points_count:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0xB
   302  00010B                     	ds	2
   303  00010D                     main@last_reg_recvd:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0xD
   307  00010D                     	ds	1
   308  00010E                     main@length:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0xE
   312  00010E                     	ds	1
   313  00010F                     main@msgtype:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0xF
   317  00010F                     	ds	1
   318  000110                     main@ic:
   319                           	opt stack 0
   320                           
   321                           ; 121 bytes @ 0x10
   322  000110                     	ds	121
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	cstackBANK0
   333  0000B6                     __pcstackBANK0:
   334                           	opt stack 0
   335  0000B6                     ?_in_high_int:
   336                           	opt stack 0
   337  0000B6                     OpenTimer0@config:
   338                           	opt stack 0
   339  0000B6                     Delay1KTCYx@unit:
   340                           	opt stack 0
   341  0000B6                     init_queue@qptr:
   342                           	opt stack 0
   343  0000B6                     check_msg@qptr:
   344                           	opt stack 0
   345  0000B6                     init_i2c@ic:
   346                           	opt stack 0
   347  0000B6                     memcpy@d1:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x0
   351  0000B6                     	ds	2
   352  0000B8                     ??_init_queue:
   353  0000B8                     ??_check_msg:
   354  0000B8                     ?_in_low_int:
   355                           	opt stack 0
   356  0000B8                     memcpy@s1:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x2
   360  0000B8                     	ds	1
   361  0000B9                     init_queue@i:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x3
   365  0000B9                     	ds	1
   366  0000BA                     ??_init_queues:
   367  0000BA                     ?_in_main:
   368                           	opt stack 0
   369  0000BA                     memcpy@n:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x4
   373  0000BA                     	ds	2
   374  0000BC                     ??_block_on_To_msgqueues:
   375  0000BC                     memcpy@d:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x6
   379  0000BC                     	ds	2
   380  0000BE                     memcpy@s:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x8
   384  0000BE                     	ds	2
   385  0000C0                     recv_msg@qptr:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xA
   389  0000C0                     	ds	2
   390  0000C2                     recv_msg@maxlength:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0xC
   394  0000C2                     	ds	1
   395  0000C3                     recv_msg@msgtype:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0xD
   399  0000C3                     	ds	2
   400  0000C5                     recv_msg@data:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0xF
   404  0000C5                     	ds	2
   405  0000C7                     ??_recv_msg:
   406                           
   407                           ; 0 bytes @ 0x11
   408  0000C7                     	ds	2
   409  0000C9                     recv_msg@slot:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x13
   413  0000C9                     	ds	1
   414  0000CA                     recv_msg@tlength:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x14
   418  0000CA                     	ds	2
   419  0000CC                     recv_msg@qmsg:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x16
   423  0000CC                     	ds	2
   424  0000CE                     ToMainLow_recvmsg@msgtype:
   425                           	opt stack 0
   426  0000CE                     ToMainHigh_recvmsg@msgtype:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x18
   430  0000CE                     	ds	2
   431  0000D0                     ToMainLow_recvmsg@data:
   432                           	opt stack 0
   433  0000D0                     ToMainHigh_recvmsg@data:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x1A
   437  0000D0                     	ds	2
   438  0000D2                     ToMainLow_recvmsg@maxlength:
   439                           	opt stack 0
   440  0000D2                     ToMainHigh_recvmsg@maxlength:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x1C
   444  0000D2                     	ds	1
   445  0000D3                     tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454                           ; 0 bytes @ 0x1D
   455                           
   456                           	psect	cstackCOMRAM
   457  000001                     __pcstackCOMRAM:
   458                           	opt stack 0
   459  000001                     ??_InterruptHandlerLow:
   460  000001                     
   461                           ; 0 bytes @ 0x0
   462  000001                     	ds	17
   463  000012                     ?i2_in_high_int:
   464                           	opt stack 0
   465  000012                     handle_start@data_read:
   466                           	opt stack 0
   467  000012                     i2check_msg@qptr:
   468                           	opt stack 0
   469  000012                     i2memcpy@d1:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x11
   473  000012                     	ds	2
   474  000014                     ??i2_check_msg:
   475  000014                     ?i2_in_low_int:
   476                           	opt stack 0
   477  000014                     i2memcpy@s1:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x13
   481  000014                     	ds	2
   482  000016                     i2memcpy@n:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x15
   486  000016                     	ds	2
   487  000018                     i2memcpy@d:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x17
   491  000018                     	ds	2
   492  00001A                     i2memcpy@s:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x19
   496  00001A                     	ds	2
   497  00001C                     send_msg@qptr:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x1B
   501  00001C                     	ds	2
   502  00001E                     send_msg@length:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1D
   506  00001E                     	ds	1
   507  00001F                     send_msg@msgtype:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1E
   511  00001F                     	ds	1
   512  000020                     send_msg@data:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x1F
   516  000020                     	ds	2
   517  000022                     ??_send_msg:
   518                           
   519                           ; 0 bytes @ 0x21
   520  000022                     	ds	1
   521  000023                     send_msg@tlength:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x22
   525  000023                     	ds	2
   526  000025                     send_msg@slot:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x24
   530  000025                     	ds	1
   531  000026                     send_msg@qmsg:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x25
   535  000026                     	ds	2
   536  000028                     ToMainHigh_sendmsg@msgtype:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x27
   540  000028                     	ds	1
   541  000029                     ToMainHigh_sendmsg@data:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x28
   545  000029                     	ds	2
   546  00002B                     ToMainHigh_sendmsg@length:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x2A
   550  00002B                     	ds	1
   551  00002C                     ??_i2c_int_handler:
   552                           
   553                           ; 0 bytes @ 0x2B
   554  00002C                     	ds	1
   555  00002D                     i2c_int_handler@error_buf:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0x2C
   559  00002D                     	ds	3
   560  000030                     i2c_int_handler@data_written:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x2F
   564  000030                     	ds	1
   565  000031                     i2c_int_handler@overrun_error:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x30
   569  000031                     	ds	1
   570  000032                     i2c_int_handler@i2c_data:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x31
   574  000032                     	ds	1
   575  000033                     i2c_int_handler@msg_to_send:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x32
   579  000033                     	ds	1
   580  000034                     i2c_int_handler@msg_ready:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x33
   584  000034                     	ds	1
   585  000035                     i2c_int_handler@data_read:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x34
   589  000035                     	ds	1
   590  000036                     ??_InterruptHandlerHigh:
   591                           
   592                           ; 0 bytes @ 0x35
   593  000036                     	ds	14
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603 ;;
   604 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   605 ;;
   606 ;; *************** function _main *****************
   607 ;; Defined at:
   608 ;;		line 191 in file "../src/main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  ic            121   16[BANK1 ] struct __i2c_comm
   613 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   614 ;;  to_send_buff   11    0        unsigned char [11]
   615 ;;  data_points_    2   11[BANK1 ] int 
   616 ;;  msgtype         1   15[BANK1 ] unsigned char 
   617 ;;  length          1   14[BANK1 ] char 
   618 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;		None               void
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0     137       0       0
   630 ;;      Temps:          0       0       0       0       0
   631 ;;      Totals:         0       0     137       0       0
   632 ;;Total ram usage:      137 bytes
   633 ;; Hardware stack levels required when called:   10
   634 ;; This function calls:
   635 ;;		_OpenTimer0
   636 ;;		_ToMainHigh_recvmsg
   637 ;;		_ToMainLow_recvmsg
   638 ;;		_block_on_To_msgqueues
   639 ;;		_enable_interrupts
   640 ;;		_init_i2c
   641 ;;		_init_queues
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text0
   648  0006AC                     __ptext0:
   649                           	opt stack 0
   650  0006AC                     _main:
   651                           	opt stack 21
   652                           
   653                           ;main.c: 193: signed char length;
   654                           ;main.c: 194: unsigned char msgtype;
   655                           ;main.c: 195: unsigned char last_reg_recvd;
   656                           ;main.c: 197: i2c_comm ic;
   657                           ;main.c: 198: unsigned char msgbuffer[10 + 1];
   658                           ;main.c: 199: unsigned char to_send_buffer[10+1];
   659                           ;main.c: 200: int data_points_count = 0;
   660                           
   661                           ;incstack = 0
   662  0006AC  0E00               	movlw	0
   663  0006AE  0101               	movlb	1	; () banked
   664  0006B0  0101               	movlb	1	; () banked
   665  0006B2  6F0C               	movwf	(main@data_points_count+1)& (0+255),b
   666  0006B4  0E00               	movlw	0
   667  0006B6  0101               	movlb	1	; () banked
   668  0006B8  6F0B               	movwf	main@data_points_count& (0+255),b
   669                           
   670                           ;main.c: 212: OSCCON = 0x82;
   671  0006BA  0E82               	movlw	130
   672  0006BC  6ED3               	movwf	4051,c	;volatile
   673                           
   674                           ; BSR set to: 1
   675                           ;main.c: 213: OSCTUNEbits.PLLEN = 0;
   676  0006BE  9C9B               	bcf	3995,6,c	;volatile
   677                           
   678                           ; BSR set to: 1
   679                           ;main.c: 234: init_i2c(&ic);
   680  0006C0  0101               	movlb	1	; () banked
   681  0006C2  0E01               	movlw	high main@ic
   682  0006C4  0100               	movlb	0	; () banked
   683  0006C6  0100               	movlb	0	; () banked
   684  0006C8  6FB7               	movwf	(init_i2c@ic+1)& (0+255),b
   685  0006CA  0101               	movlb	1	; () banked
   686  0006CC  0E10               	movlw	low main@ic
   687  0006CE  0100               	movlb	0	; () banked
   688  0006D0  0100               	movlb	0	; () banked
   689  0006D2  6FB6               	movwf	init_i2c@ic& (0+255),b
   690  0006D4  EC7C  F005         	call	_init_i2c	;wreg free
   691                           
   692                           ;main.c: 240: init_queues();
   693  0006D8  EC45  F005         	call	_init_queues	;wreg free
   694                           
   695                           ;main.c: 244: TRISB = 0x0;
   696  0006DC  0E00               	movlw	0
   697  0006DE  6E93               	movwf	3987,c	;volatile
   698                           
   699                           ;main.c: 245: LATB = 0x0;
   700  0006E0  0E00               	movlw	0
   701  0006E2  6E8A               	movwf	3978,c	;volatile
   702                           
   703                           ;main.c: 258: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110001);
   704  0006E4  0E91               	movlw	145
   705  0006E6  EC0D  F007         	call	_OpenTimer0
   706                           
   707                           ;main.c: 278: IPR1bits.SSPIP = 1;
   708  0006EA  869F               	bsf	3999,3,c	;volatile
   709                           
   710                           ;main.c: 298: PIE1bits.SSPIE = 1;
   711  0006EC  869D               	bsf	3997,3,c	;volatile
   712                           
   713                           ;main.c: 316: enable_interrupts();
   714  0006EE  EC61  F007         	call	_enable_interrupts	;wreg free
   715  0006F2                     l2089:
   716                           
   717                           ;main.c: 328: block_on_To_msgqueues();
   718  0006F2  ECC9  F004         	call	_block_on_To_msgqueues	;wreg free
   719                           
   720                           ;main.c: 335: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   721  0006F6  0101               	movlb	1	; () banked
   722  0006F8  0E01               	movlw	high main@msgtype
   723  0006FA  0100               	movlb	0	; () banked
   724  0006FC  0100               	movlb	0	; () banked
   725  0006FE  6FCF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   726  000700  0101               	movlb	1	; () banked
   727  000702  0E0F               	movlw	low main@msgtype
   728  000704  0100               	movlb	0	; () banked
   729  000706  0100               	movlb	0	; () banked
   730  000708  6FCE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   731  00070A  0101               	movlb	1	; () banked
   732  00070C  0E01               	movlw	high main@msgbuffer
   733  00070E  0100               	movlb	0	; () banked
   734  000710  0100               	movlb	0	; () banked
   735  000712  6FD1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   736  000714  0101               	movlb	1	; () banked
   737  000716  0E00               	movlw	low main@msgbuffer
   738  000718  0100               	movlb	0	; () banked
   739  00071A  0100               	movlb	0	; () banked
   740  00071C  6FD0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   741  00071E  0E0A               	movlw	10
   742  000720  EC9A  F006         	call	_ToMainHigh_recvmsg
   743  000724  0101               	movlb	1	; () banked
   744  000726  0101               	movlb	1	; () banked
   745  000728  6F0E               	movwf	main@length& (0+255),b
   746                           
   747                           ; BSR set to: 1
   748                           ;main.c: 336: if (length < 0) {
   749  00072A  0101               	movlb	1	; () banked
   750  00072C  0101               	movlb	1	; () banked
   751  00072E  BF0E               	btfsc	main@length& (0+255),7,b
   752  000730  D013               	goto	l2101
   753  000732  D003               	goto	l2099
   754  000734                     l78:
   755                           
   756                           ; BSR set to: 1
   757                           ;main.c: 349: case 41:
   758                           ;main.c: 350: {
   759                           ;main.c: 353: last_reg_recvd = msgbuffer[0];
   760  000734  C100  F10D         	movff	main@msgbuffer,main@last_reg_recvd
   761                           
   762                           ;main.c: 354: break;
   763  000738  D00F               	goto	l2101
   764  00073A                     l2099:
   765                           
   766                           ; BSR set to: 1
   767  00073A  0101               	movlb	1	; () banked
   768  00073C  0101               	movlb	1	; () banked
   769  00073E  510F               	movf	main@msgtype& (0+255),w,b
   770                           
   771                           ; Switch size 1, requested type "space"
   772                           ; Number of cases is 5, Range of values is 10 to 50
   773                           ; switch strategies available:
   774                           ; Name         Instructions Cycles
   775                           ; simple_byte           16     9 (average)
   776                           ;	Chosen strategy is simple_byte
   777  000740  0A0A               	xorlw	10	; case 10
   778  000742  B4D8               	btfsc	status,2,c
   779  000744  D009               	goto	l2101
   780  000746  0A22               	xorlw	34	; case 40
   781  000748  B4D8               	btfsc	status,2,c
   782  00074A  D7F4               	goto	l78
   783  00074C  0A01               	xorlw	1	; case 41
   784  00074E  B4D8               	btfsc	status,2,c
   785  000750  D7F1               	goto	l78
   786  000752  0A03               	xorlw	3	; case 42
   787  000754  A4D8               	btfss	status,2,c
   788  000756  0A18               	xorlw	24	; case 50
   789  000758                     l2101:
   790                           
   791                           ; BSR set to: 1
   792                           ;main.c: 375: }
   793                           ;main.c: 378: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
   794  000758  0101               	movlb	1	; () banked
   795  00075A  0E01               	movlw	high main@msgtype
   796  00075C  0100               	movlb	0	; () banked
   797  00075E  0100               	movlb	0	; () banked
   798  000760  6FCF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
   799  000762  0101               	movlb	1	; () banked
   800  000764  0E0F               	movlw	low main@msgtype
   801  000766  0100               	movlb	0	; () banked
   802  000768  0100               	movlb	0	; () banked
   803  00076A  6FCE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
   804  00076C  0101               	movlb	1	; () banked
   805  00076E  0E01               	movlw	high main@msgbuffer
   806  000770  0100               	movlb	0	; () banked
   807  000772  0100               	movlb	0	; () banked
   808  000774  6FD1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
   809  000776  0101               	movlb	1	; () banked
   810  000778  0E00               	movlw	low main@msgbuffer
   811  00077A  0100               	movlb	0	; () banked
   812  00077C  0100               	movlb	0	; () banked
   813  00077E  6FD0               	movwf	ToMainLow_recvmsg@data& (0+255),b
   814  000780  0E0A               	movlw	10
   815  000782  EC79  F006         	call	_ToMainLow_recvmsg
   816  000786  0101               	movlb	1	; () banked
   817  000788  0101               	movlb	1	; () banked
   818  00078A  6F0E               	movwf	main@length& (0+255),b
   819                           
   820                           ; BSR set to: 1
   821                           ;main.c: 379: if (length < 0) {
   822  00078C  0101               	movlb	1	; () banked
   823  00078E  0101               	movlb	1	; () banked
   824  000790  BF0E               	btfsc	main@length& (0+255),7,b
   825  000792  D7AF               	goto	l2089
   826                           
   827                           ; BSR set to: 1
   828                           
   829                           ; BSR set to: 1
   830                           
   831                           ; BSR set to: 1
   832                           ;main.c: 408: };
   833                           ;main.c: 409: };
   834                           
   835                           ; BSR set to: 1
   836                           ;main.c: 405: {
   837                           ;main.c: 407: break;
   838                           
   839                           ;main.c: 392: };
   840                           ;main.c: 404: default:
   841                           
   842                           ; BSR set to: 1
   843                           ;main.c: 387: {
   844                           ;main.c: 391: break;
   845                           
   846                           ;main.c: 386: case 50:
   847                           
   848                           ; BSR set to: 1
   849                           ;main.c: 385: switch (msgtype) {
   850                           
   851                           ; BSR set to: 1
   852                           ;main.c: 383: }
   853                           ;main.c: 384: } else {
   854                           
   855                           ; BSR set to: 1
   856  000794  0101               	movlb	1	; () banked
   857  000796  0101               	movlb	1	; () banked
   858  000798  510F               	movf	main@msgtype& (0+255),w,b
   859                           
   860                           ; Switch size 1, requested type "space"
   861                           ; Number of cases is 1, Range of values is 50 to 50
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte            4     3 (average)
   865                           ;	Chosen strategy is simple_byte
   866  00079A  0A32               	xorlw	50	; case 50
   867  00079C  D7AA               	goto	l2089
   868  00079E                     __end_of_main:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           status	equ	0xFD8
   879                           
   880 ;; *************** function _init_queues *****************
   881 ;; Defined at:
   882 ;;		line 195 in file "../src/messages.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;		None               void
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0
   898 ;;      Temps:          0       1       0       0       0
   899 ;;      Totals:         0       1       0       0       0
   900 ;;Total ram usage:        1 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    7
   903 ;; This function calls:
   904 ;;		_init_queue
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text1
   911  000A8A                     __ptext1:
   912                           	opt stack 0
   913  000A8A                     _init_queues:
   914                           	opt stack 23
   915                           
   916                           ;messages.c: 196: MQ_Main_Willing_to_block = 0;
   917                           
   918                           ; BSR set to: 1
   919                           ;incstack = 0
   920  000A8A  0100               	movlb	0	; () banked
   921  000A8C  6FBA               	movwf	??_init_queues& (0+255),b
   922  000A8E  0E00               	movlw	0
   923  000A90  6E46               	movwf	_MQ_Main_Willing_to_block,c
   924  000A92  0100               	movlb	0	; () banked
   925  000A94  51BA               	movf	??_init_queues& (0+255),w,b
   926                           
   927                           ; BSR set to: 0
   928                           ;messages.c: 197: init_queue(&ToMainLow_MQ);
   929  000A96  0100               	movlb	0	; () banked
   930  000A98  0E00               	movlw	high _ToMainLow_MQ
   931  000A9A  0100               	movlb	0	; () banked
   932  000A9C  0100               	movlb	0	; () banked
   933  000A9E  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
   934  000AA0  0100               	movlb	0	; () banked
   935  000AA2  0E80               	movlw	low _ToMainLow_MQ
   936  000AA4  0100               	movlb	0	; () banked
   937  000AA6  0100               	movlb	0	; () banked
   938  000AA8  6FB6               	movwf	init_queue@qptr& (0+255),b
   939  000AAA  EC08  F005         	call	_init_queue	;wreg free
   940                           
   941                           ;messages.c: 198: init_queue(&ToMainHigh_MQ);
   942  000AAE  0101               	movlb	1	; () banked
   943  000AB0  0E01               	movlw	high _ToMainHigh_MQ
   944  000AB2  0100               	movlb	0	; () banked
   945  000AB4  0100               	movlb	0	; () banked
   946  000AB6  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
   947  000AB8  0101               	movlb	1	; () banked
   948  000ABA  0EBF               	movlw	low _ToMainHigh_MQ
   949  000ABC  0100               	movlb	0	; () banked
   950  000ABE  0100               	movlb	0	; () banked
   951  000AC0  6FB6               	movwf	init_queue@qptr& (0+255),b
   952  000AC2  EC08  F005         	call	_init_queue	;wreg free
   953                           
   954                           ;messages.c: 199: init_queue(&FromMainLow_MQ);
   955  000AC6  0101               	movlb	1	; () banked
   956  000AC8  0E01               	movlw	high _FromMainLow_MQ
   957  000ACA  0100               	movlb	0	; () banked
   958  000ACC  0100               	movlb	0	; () banked
   959  000ACE  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
   960  000AD0  0101               	movlb	1	; () banked
   961  000AD2  0E89               	movlw	low _FromMainLow_MQ
   962  000AD4  0100               	movlb	0	; () banked
   963  000AD6  0100               	movlb	0	; () banked
   964  000AD8  6FB6               	movwf	init_queue@qptr& (0+255),b
   965  000ADA  EC08  F005         	call	_init_queue	;wreg free
   966                           
   967                           ;messages.c: 200: init_queue(&FromMainHigh_MQ);
   968  000ADE  0102               	movlb	2	; () banked
   969  000AE0  0E02               	movlw	high _FromMainHigh_MQ
   970  000AE2  0100               	movlb	0	; () banked
   971  000AE4  0100               	movlb	0	; () banked
   972  000AE6  6FB7               	movwf	(init_queue@qptr+1)& (0+255),b
   973  000AE8  0102               	movlb	2	; () banked
   974  000AEA  0E00               	movlw	low _FromMainHigh_MQ
   975  000AEC  0100               	movlb	0	; () banked
   976  000AEE  0100               	movlb	0	; () banked
   977  000AF0  6FB6               	movwf	init_queue@qptr& (0+255),b
   978  000AF2  EC08  F005         	call	_init_queue	;wreg free
   979  000AF6  0012               	return	
   980  000AF8                     __end_of_init_queues:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           postdec1	equ	0xFE5
   989                           fsr1l	equ	0xFE1
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _init_queue *****************
   993 ;; Defined at:
   994 ;;		line 15 in file "../src/messages.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
   997 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  i               1    3[BANK0 ] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;		None               void
  1002 ;; Registers used:
  1003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1009 ;;      Params:         0       2       0       0       0
  1010 ;;      Locals:         0       1       0       0       0
  1011 ;;      Temps:          0       1       0       0       0
  1012 ;;      Totals:         0       4       0       0       0
  1013 ;;Total ram usage:        4 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    6
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_init_queues
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text2
  1024  000A10                     __ptext2:
  1025                           	opt stack 0
  1026  000A10                     _init_queue:
  1027                           	opt stack 23
  1028                           
  1029                           ;messages.c: 16: unsigned char i;
  1030                           ;messages.c: 18: qptr->cur_write_ind = 0;
  1031                           
  1032                           ;incstack = 0
  1033  000A10  0100               	movlb	0	; () banked
  1034  000A12  EE20 F034          	lfsr	2,52
  1035  000A16  0100               	movlb	0	; () banked
  1036  000A18  51B6               	movf	init_queue@qptr& (0+255),w,b
  1037  000A1A  26D9               	addwf	fsr2l,f,c
  1038  000A1C  0100               	movlb	0	; () banked
  1039  000A1E  51B7               	movf	(init_queue@qptr+1)& (0+255),w,b
  1040  000A20  22DA               	addwfc	fsr2h,f,c
  1041  000A22  0E00               	movlw	0
  1042  000A24  6EDF               	movwf	indf2,c
  1043                           
  1044                           ;messages.c: 19: qptr->cur_read_ind = 0;
  1045  000A26  0100               	movlb	0	; () banked
  1046  000A28  EE20 F035          	lfsr	2,53
  1047  000A2C  0100               	movlb	0	; () banked
  1048  000A2E  51B6               	movf	init_queue@qptr& (0+255),w,b
  1049  000A30  26D9               	addwf	fsr2l,f,c
  1050  000A32  0100               	movlb	0	; () banked
  1051  000A34  51B7               	movf	(init_queue@qptr+1)& (0+255),w,b
  1052  000A36  22DA               	addwfc	fsr2h,f,c
  1053  000A38  0E00               	movlw	0
  1054  000A3A  6EDF               	movwf	indf2,c
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;messages.c: 20: for (i = 0; i < 4; i++) {
  1058  000A3C  0100               	movlb	0	; () banked
  1059  000A3E  6FB8               	movwf	??_init_queue& (0+255),b
  1060  000A40  0E00               	movlw	0
  1061  000A42  0100               	movlb	0	; () banked
  1062  000A44  0100               	movlb	0	; () banked
  1063  000A46  6FB9               	movwf	init_queue@i& (0+255),b
  1064  000A48  0100               	movlb	0	; () banked
  1065  000A4A  51B8               	movf	??_init_queue& (0+255),w,b
  1066                           
  1067                           ; BSR set to: 0
  1068  000A4C  0E03               	movlw	3
  1069  000A4E  0100               	movlb	0	; () banked
  1070  000A50  0100               	movlb	0	; () banked
  1071  000A52  65B9               	cpfsgt	init_queue@i& (0+255),b
  1072  000A54  D001               	goto	l2179
  1073  000A56  0012               	return	
  1074  000A58                     l2179:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;messages.c: 21: qptr->queue[i].full = 0;
  1078  000A58  0100               	movlb	0	; () banked
  1079  000A5A  0100               	movlb	0	; () banked
  1080  000A5C  51B9               	movf	init_queue@i& (0+255),w,b
  1081  000A5E  0D0D               	mullw	13
  1082  000A60  50F3               	movf	prodl,w,c
  1083  000A62  0100               	movlb	0	; () banked
  1084  000A64  0100               	movlb	0	; () banked
  1085  000A66  25B6               	addwf	init_queue@qptr& (0+255),w,b
  1086  000A68  6ED9               	movwf	fsr2l,c
  1087  000A6A  50F4               	movf	prodh,w,c
  1088  000A6C  0100               	movlb	0	; () banked
  1089  000A6E  0100               	movlb	0	; () banked
  1090  000A70  21B7               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1091  000A72  6EDA               	movwf	fsr2h,c
  1092  000A74  0E00               	movlw	0
  1093  000A76  6EDF               	movwf	indf2,c
  1094                           
  1095                           ; BSR set to: 0
  1096  000A78  0100               	movlb	0	; () banked
  1097  000A7A  0100               	movlb	0	; () banked
  1098  000A7C  2BB9               	incf	init_queue@i& (0+255),f,b
  1099                           
  1100                           ; BSR set to: 0
  1101  000A7E  0E03               	movlw	3
  1102  000A80  0100               	movlb	0	; () banked
  1103  000A82  0100               	movlb	0	; () banked
  1104  000A84  65B9               	cpfsgt	init_queue@i& (0+255),b
  1105  000A86  D7E8               	goto	l2179
  1106  000A88  0012               	return	
  1107  000A8A                     __end_of_init_queue:
  1108                           	opt stack 0
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           prodh	equ	0xFF4
  1114                           prodl	equ	0xFF3
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           postdec1	equ	0xFE5
  1118                           fsr1l	equ	0xFE1
  1119                           indf2	equ	0xFDF
  1120                           fsr2h	equ	0xFDA
  1121                           fsr2l	equ	0xFD9
  1122                           status	equ	0xFD8
  1123                           
  1124 ;; *************** function _init_i2c *****************
  1125 ;; Defined at:
  1126 ;;		line 23 in file "../src/my_i2c.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  ic              2    0[BANK0 ] PTR struct __i2c_comm
  1129 ;;		 -> main@ic(121), 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;		None               void
  1134 ;; Registers used:
  1135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1141 ;;      Params:         0       2       0       0       0
  1142 ;;      Locals:         0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0
  1144 ;;      Totals:         0       2       0       0       0
  1145 ;;Total ram usage:        2 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    6
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text3
  1156  000AF8                     __ptext3:
  1157                           	opt stack 0
  1158  000AF8                     _init_i2c:
  1159                           	opt stack 24
  1160                           
  1161                           ;my_i2c.c: 24: ic_ptr = ic;
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;incstack = 0
  1165  000AF8  0100               	movlb	0	; () banked
  1166  000AFA  0100               	movlb	0	; () banked
  1167  000AFC  C0B7  F0D4         	movff	init_i2c@ic+1,_ic_ptr+1
  1168  000B00  0100               	movlb	0	; () banked
  1169  000B02  0100               	movlb	0	; () banked
  1170  000B04  C0B6  F0D3         	movff	init_i2c@ic,_ic_ptr
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;my_i2c.c: 25: ic_ptr->buflen = 0;
  1174  000B08  0100               	movlb	0	; () banked
  1175  000B0A  EE20 F00A          	lfsr	2,10
  1176  000B0E  0100               	movlb	0	; () banked
  1177  000B10  51D3               	movf	_ic_ptr& (0+255),w,b
  1178  000B12  26D9               	addwf	fsr2l,f,c
  1179  000B14  0100               	movlb	0	; () banked
  1180  000B16  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1181  000B18  22DA               	addwfc	fsr2h,f,c
  1182  000B1A  0E00               	movlw	0
  1183  000B1C  6EDF               	movwf	indf2,c
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;my_i2c.c: 26: ic_ptr->event_count = 0;
  1187  000B1E  0100               	movlb	0	; () banked
  1188  000B20  EE20 F00B          	lfsr	2,11
  1189  000B24  0100               	movlb	0	; () banked
  1190  000B26  51D3               	movf	_ic_ptr& (0+255),w,b
  1191  000B28  26D9               	addwf	fsr2l,f,c
  1192  000B2A  0100               	movlb	0	; () banked
  1193  000B2C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1194  000B2E  22DA               	addwfc	fsr2h,f,c
  1195  000B30  0E00               	movlw	0
  1196  000B32  6EDF               	movwf	indf2,c
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;my_i2c.c: 27: ic_ptr->status = 0x5;
  1200  000B34  0100               	movlb	0	; () banked
  1201  000B36  EE20 F00C          	lfsr	2,12
  1202  000B3A  0100               	movlb	0	; () banked
  1203  000B3C  51D3               	movf	_ic_ptr& (0+255),w,b
  1204  000B3E  26D9               	addwf	fsr2l,f,c
  1205  000B40  0100               	movlb	0	; () banked
  1206  000B42  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1207  000B44  22DA               	addwfc	fsr2h,f,c
  1208  000B46  0E05               	movlw	5
  1209  000B48  6EDF               	movwf	indf2,c
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;my_i2c.c: 28: ic_ptr->error_count = 0;
  1213  000B4A  0100               	movlb	0	; () banked
  1214  000B4C  EE20 F00E          	lfsr	2,14
  1215  000B50  0100               	movlb	0	; () banked
  1216  000B52  51D3               	movf	_ic_ptr& (0+255),w,b
  1217  000B54  26D9               	addwf	fsr2l,f,c
  1218  000B56  0100               	movlb	0	; () banked
  1219  000B58  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  1220  000B5A  22DA               	addwfc	fsr2h,f,c
  1221  000B5C  0E00               	movlw	0
  1222  000B5E  6EDF               	movwf	indf2,c
  1223                           
  1224                           ; BSR set to: 0
  1225  000B60  0012               	return	
  1226  000B62                     __end_of_init_i2c:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           prodh	equ	0xFF4
  1233                           prodl	equ	0xFF3
  1234                           postinc0	equ	0xFEE
  1235                           wreg	equ	0xFE8
  1236                           postdec1	equ	0xFE5
  1237                           fsr1l	equ	0xFE1
  1238                           indf2	equ	0xFDF
  1239                           fsr2h	equ	0xFDA
  1240                           fsr2l	equ	0xFD9
  1241                           status	equ	0xFD8
  1242                           
  1243 ;; *************** function _enable_interrupts *****************
  1244 ;; Defined at:
  1245 ;;		line 16 in file "../src/interrupts.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;		None               void
  1252 ;; Registers used:
  1253 ;;		None
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1259 ;;      Params:         0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0
  1262 ;;      Totals:         0       0       0       0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    6
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text4
  1274  000EC2                     __ptext4:
  1275                           	opt stack 0
  1276  000EC2                     _enable_interrupts:
  1277                           	opt stack 24
  1278                           
  1279                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;incstack = 0
  1283  000EC2  8ED0               	bsf	4048,7,c	;volatile
  1284                           
  1285                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  1286  000EC4  8EF2               	bsf	intcon,7,c	;volatile
  1287                           
  1288                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  1289  000EC6  8CF2               	bsf	intcon,6,c	;volatile
  1290  000EC8  0012               	return	
  1291  000ECA                     __end_of_enable_interrupts:
  1292                           	opt stack 0
  1293                           tblptru	equ	0xFF8
  1294                           tblptrh	equ	0xFF7
  1295                           tblptrl	equ	0xFF6
  1296                           tablat	equ	0xFF5
  1297                           prodh	equ	0xFF4
  1298                           prodl	equ	0xFF3
  1299                           intcon	equ	0xFF2
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           postdec1	equ	0xFE5
  1303                           fsr1l	equ	0xFE1
  1304                           indf2	equ	0xFDF
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _block_on_To_msgqueues *****************
  1310 ;; Defined at:
  1311 ;;		line 259 in file "../src/messages.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1325 ;;      Params:         0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          0       1       0       0       0
  1328 ;;      Totals:         0       1       0       0       0
  1329 ;;Total ram usage:        1 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    9
  1332 ;; This function calls:
  1333 ;;		_Delay1KTCYx
  1334 ;;		_check_msg
  1335 ;;		_in_main
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text5
  1342  000992                     __ptext5:
  1343                           	opt stack 0
  1344  000992                     _block_on_To_msgqueues:
  1345                           	opt stack 21
  1346                           
  1347                           ;messages.c: 260: if (!in_main()) {
  1348                           
  1349                           ;incstack = 0
  1350  000992  EC57  F006         	call	_in_main	;wreg free
  1351  000996  0100               	movlb	0	; () banked
  1352  000998  0100               	movlb	0	; () banked
  1353  00099A  51BB               	movf	(?_in_main+1)& (0+255),w,b
  1354  00099C  0100               	movlb	0	; () banked
  1355  00099E  11BA               	iorwf	?_in_main& (0+255),w,b
  1356  0009A0  B4D8               	btfsc	status,2,c
  1357  0009A2  0012               	return	
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;messages.c: 262: }
  1361                           ;messages.c: 264: MQ_Main_Willing_to_block = 1;
  1362                           
  1363                           ; BSR set to: 0
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;messages.c: 261: return;
  1367  0009A4  0100               	movlb	0	; () banked
  1368  0009A6  6FBC               	movwf	??_block_on_To_msgqueues& (0+255),b
  1369  0009A8  0E01               	movlw	1
  1370  0009AA  6E46               	movwf	_MQ_Main_Willing_to_block,c
  1371  0009AC  0100               	movlb	0	; () banked
  1372  0009AE  51BC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1373  0009B0                     l2149:
  1374                           
  1375                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  1376  0009B0  0101               	movlb	1	; () banked
  1377  0009B2  0E01               	movlw	high _ToMainHigh_MQ
  1378  0009B4  0100               	movlb	0	; () banked
  1379  0009B6  0100               	movlb	0	; () banked
  1380  0009B8  6FB7               	movwf	(check_msg@qptr+1)& (0+255),b
  1381  0009BA  0101               	movlb	1	; () banked
  1382  0009BC  0EBF               	movlw	low _ToMainHigh_MQ
  1383  0009BE  0100               	movlb	0	; () banked
  1384  0009C0  0100               	movlb	0	; () banked
  1385  0009C2  6FB6               	movwf	check_msg@qptr& (0+255),b
  1386  0009C4  ECDB  F006         	call	_check_msg	;wreg free
  1387  0009C8  0900               	iorlw	0
  1388  0009CA  B4D8               	btfsc	status,2,c
  1389  0009CC  D007               	goto	l2155
  1390                           
  1391                           ;messages.c: 267: MQ_Main_Willing_to_block = 0;
  1392  0009CE  0100               	movlb	0	; () banked
  1393  0009D0  6FBC               	movwf	??_block_on_To_msgqueues& (0+255),b
  1394  0009D2  0E00               	movlw	0
  1395  0009D4  6E46               	movwf	_MQ_Main_Willing_to_block,c
  1396  0009D6  0100               	movlb	0	; () banked
  1397  0009D8  51BC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1398  0009DA  0012               	return	
  1399  0009DC                     l2155:
  1400                           
  1401                           ;messages.c: 272: }
  1402                           ;messages.c: 273: if (check_msg(&ToMainLow_MQ)) {
  1403  0009DC  0100               	movlb	0	; () banked
  1404  0009DE  0E00               	movlw	high _ToMainLow_MQ
  1405  0009E0  0100               	movlb	0	; () banked
  1406  0009E2  0100               	movlb	0	; () banked
  1407  0009E4  6FB7               	movwf	(check_msg@qptr+1)& (0+255),b
  1408  0009E6  0100               	movlb	0	; () banked
  1409  0009E8  0E80               	movlw	low _ToMainLow_MQ
  1410  0009EA  0100               	movlb	0	; () banked
  1411  0009EC  0100               	movlb	0	; () banked
  1412  0009EE  6FB6               	movwf	check_msg@qptr& (0+255),b
  1413  0009F0  ECDB  F006         	call	_check_msg	;wreg free
  1414  0009F4  0900               	iorlw	0
  1415  0009F6  B4D8               	btfsc	status,2,c
  1416  0009F8  D007               	goto	l2161
  1417                           
  1418                           ;messages.c: 274: MQ_Main_Willing_to_block = 0;
  1419  0009FA  0100               	movlb	0	; () banked
  1420  0009FC  6FBC               	movwf	??_block_on_To_msgqueues& (0+255),b
  1421  0009FE  0E00               	movlw	0
  1422  000A00  6E46               	movwf	_MQ_Main_Willing_to_block,c
  1423  000A02  0100               	movlb	0	; () banked
  1424  000A04  51BC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1425  000A06  0012               	return	
  1426  000A08                     l2161:
  1427                           
  1428                           ;messages.c: 279: }
  1429                           ;messages.c: 280: Delay1KTCYx(10);
  1430  000A08  0E0A               	movlw	10
  1431  000A0A  EC47  F007         	call	_Delay1KTCYx
  1432  000A0E  D7D0               	goto	l2149
  1433  000A10                     __end_of_block_on_To_msgqueues:
  1434                           	opt stack 0
  1435                           tblptru	equ	0xFF8
  1436                           tblptrh	equ	0xFF7
  1437                           tblptrl	equ	0xFF6
  1438                           tablat	equ	0xFF5
  1439                           prodh	equ	0xFF4
  1440                           prodl	equ	0xFF3
  1441                           intcon	equ	0xFF2
  1442                           postinc0	equ	0xFEE
  1443                           wreg	equ	0xFE8
  1444                           postdec1	equ	0xFE5
  1445                           fsr1l	equ	0xFE1
  1446                           indf2	equ	0xFDF
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _in_main *****************
  1452 ;; Defined at:
  1453 ;;		line 42 in file "../src/interrupts.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    4[BANK0 ] int 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1467 ;;      Params:         0       2       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0
  1470 ;;      Totals:         0       2       0       0       0
  1471 ;;Total ram usage:        2 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    8
  1474 ;; This function calls:
  1475 ;;		_in_high_int
  1476 ;;		_in_low_int
  1477 ;; This function is called by:
  1478 ;;		_block_on_To_msgqueues
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text6
  1483  000CAE                     __ptext6:
  1484                           	opt stack 0
  1485  000CAE                     _in_main:
  1486                           	opt stack 21
  1487                           
  1488                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  1489                           
  1490                           ;incstack = 0
  1491  000CAE  EC34  F006         	call	_in_low_int	;wreg free
  1492  000CB2  0100               	movlb	0	; () banked
  1493  000CB4  0100               	movlb	0	; () banked
  1494  000CB6  51B9               	movf	(?_in_low_int+1)& (0+255),w,b
  1495  000CB8  0100               	movlb	0	; () banked
  1496  000CBA  11B8               	iorwf	?_in_low_int& (0+255),w,b
  1497  000CBC  A4D8               	btfss	status,2,c
  1498  000CBE  D011               	goto	l1893
  1499                           
  1500                           ; BSR set to: 0
  1501  000CC0  EC52  F007         	call	_in_high_int	;wreg free
  1502  000CC4  0100               	movlb	0	; () banked
  1503  000CC6  0100               	movlb	0	; () banked
  1504  000CC8  51B7               	movf	(?_in_high_int+1)& (0+255),w,b
  1505  000CCA  0100               	movlb	0	; () banked
  1506  000CCC  11B6               	iorwf	?_in_high_int& (0+255),w,b
  1507  000CCE  A4D8               	btfss	status,2,c
  1508  000CD0  D008               	goto	l1893
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;interrupts.c: 44: return (1);
  1512  000CD2  0E00               	movlw	0
  1513  000CD4  0100               	movlb	0	; () banked
  1514  000CD6  0100               	movlb	0	; () banked
  1515  000CD8  6FBB               	movwf	(?_in_main+1)& (0+255),b
  1516  000CDA  0E01               	movlw	1
  1517  000CDC  0100               	movlb	0	; () banked
  1518  000CDE  6FBA               	movwf	?_in_main& (0+255),b
  1519  000CE0  0012               	return	
  1520  000CE2                     l1893:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;interrupts.c: 46: return (0);
  1524  000CE2  0E00               	movlw	0
  1525  000CE4  0100               	movlb	0	; () banked
  1526  000CE6  0100               	movlb	0	; () banked
  1527  000CE8  6FBB               	movwf	(?_in_main+1)& (0+255),b
  1528  000CEA  0E00               	movlw	0
  1529  000CEC  0100               	movlb	0	; () banked
  1530  000CEE  6FBA               	movwf	?_in_main& (0+255),b
  1531  000CF0  0012               	return	
  1532  000CF2                     __end_of_in_main:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           prodh	equ	0xFF4
  1539                           prodl	equ	0xFF3
  1540                           intcon	equ	0xFF2
  1541                           postinc0	equ	0xFEE
  1542                           wreg	equ	0xFE8
  1543                           postdec1	equ	0xFE5
  1544                           fsr1l	equ	0xFE1
  1545                           indf2	equ	0xFDF
  1546                           fsr2h	equ	0xFDA
  1547                           fsr2l	equ	0xFD9
  1548                           status	equ	0xFD8
  1549                           
  1550 ;; *************** function _in_low_int *****************
  1551 ;; Defined at:
  1552 ;;		line 32 in file "../src/interrupts.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2    2[BANK0 ] int 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1566 ;;      Params:         0       2       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         0       2       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    7
  1573 ;; This function calls:
  1574 ;;		_in_high_int
  1575 ;; This function is called by:
  1576 ;;		_in_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text7
  1581  000C68                     __ptext7:
  1582                           	opt stack 0
  1583  000C68                     _in_low_int:
  1584                           	opt stack 21
  1585                           
  1586                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;incstack = 0
  1590  000C68  ACF2               	btfss	intcon,6,c	;volatile
  1591  000C6A  D008               	goto	l1871
  1592                           
  1593                           ;interrupts.c: 34: return (0);
  1594  000C6C  0E00               	movlw	0
  1595  000C6E  0100               	movlb	0	; () banked
  1596  000C70  0100               	movlb	0	; () banked
  1597  000C72  6FB9               	movwf	(?_in_low_int+1)& (0+255),b
  1598  000C74  0E00               	movlw	0
  1599  000C76  0100               	movlb	0	; () banked
  1600  000C78  6FB8               	movwf	?_in_low_int& (0+255),b
  1601  000C7A  0012               	return	
  1602  000C7C                     l1871:
  1603  000C7C  EC52  F007         	call	_in_high_int	;wreg free
  1604  000C80  0100               	movlb	0	; () banked
  1605  000C82  0100               	movlb	0	; () banked
  1606  000C84  51B7               	movf	(?_in_high_int+1)& (0+255),w,b
  1607  000C86  0100               	movlb	0	; () banked
  1608  000C88  11B6               	iorwf	?_in_high_int& (0+255),w,b
  1609  000C8A  B4D8               	btfsc	status,2,c
  1610  000C8C  D008               	goto	l1879
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;interrupts.c: 36: return (0);
  1614  000C8E  0E00               	movlw	0
  1615  000C90  0100               	movlb	0	; () banked
  1616  000C92  0100               	movlb	0	; () banked
  1617  000C94  6FB9               	movwf	(?_in_low_int+1)& (0+255),b
  1618  000C96  0E00               	movlw	0
  1619  000C98  0100               	movlb	0	; () banked
  1620  000C9A  6FB8               	movwf	?_in_low_int& (0+255),b
  1621  000C9C  0012               	return	
  1622  000C9E                     l1879:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;interrupts.c: 38: return (1);
  1626  000C9E  0E00               	movlw	0
  1627  000CA0  0100               	movlb	0	; () banked
  1628  000CA2  0100               	movlb	0	; () banked
  1629  000CA4  6FB9               	movwf	(?_in_low_int+1)& (0+255),b
  1630  000CA6  0E01               	movlw	1
  1631  000CA8  0100               	movlb	0	; () banked
  1632  000CAA  6FB8               	movwf	?_in_low_int& (0+255),b
  1633  000CAC  0012               	return	
  1634  000CAE                     __end_of_in_low_int:
  1635                           	opt stack 0
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           prodh	equ	0xFF4
  1641                           prodl	equ	0xFF3
  1642                           intcon	equ	0xFF2
  1643                           postinc0	equ	0xFEE
  1644                           wreg	equ	0xFE8
  1645                           postdec1	equ	0xFE5
  1646                           fsr1l	equ	0xFE1
  1647                           indf2	equ	0xFDF
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _in_high_int *****************
  1653 ;; Defined at:
  1654 ;;		line 24 in file "../src/interrupts.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2    0[BANK0 ] int 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1668 ;;      Params:         0       2       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         0       2       0       0       0
  1672 ;;Total ram usage:        2 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    6
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_in_low_int
  1679 ;;		_in_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text8
  1684  000EA4                     __ptext8:
  1685                           	opt stack 0
  1686  000EA4                     _in_high_int:
  1687                           	opt stack 21
  1688                           
  1689                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;incstack = 0
  1693  000EA4  0E00               	movlw	0
  1694  000EA6  AEF2               	btfss	intcon,7,c	;volatile
  1695  000EA8  0E01               	movlw	1
  1696  000EAA  0100               	movlb	0	; () banked
  1697  000EAC  0100               	movlb	0	; () banked
  1698  000EAE  6FB6               	movwf	?_in_high_int& (0+255),b
  1699  000EB0  0100               	movlb	0	; () banked
  1700  000EB2  6BB7               	clrf	(?_in_high_int+1)& (0+255),b
  1701  000EB4  0012               	return	
  1702  000EB6                     __end_of_in_high_int:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           prodh	equ	0xFF4
  1709                           prodl	equ	0xFF3
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           indf2	equ	0xFDF
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _check_msg *****************
  1721 ;; Defined at:
  1722 ;;		line 223 in file "../src/messages.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  1725 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      unsigned char 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1737 ;;      Params:         0       2       0       0       0
  1738 ;;      Locals:         0       0       0       0       0
  1739 ;;      Temps:          0       1       0       0       0
  1740 ;;      Totals:         0       3       0       0       0
  1741 ;;Total ram usage:        3 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    6
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_block_on_To_msgqueues
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text9
  1752  000DB6                     __ptext9:
  1753                           	opt stack 0
  1754  000DB6                     _check_msg:
  1755                           	opt stack 23
  1756                           
  1757                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;incstack = 0
  1761  000DB6  0100               	movlb	0	; () banked
  1762  000DB8  EE20 F035          	lfsr	2,53
  1763  000DBC  0100               	movlb	0	; () banked
  1764  000DBE  51B6               	movf	check_msg@qptr& (0+255),w,b
  1765  000DC0  26D9               	addwf	fsr2l,f,c
  1766  000DC2  0100               	movlb	0	; () banked
  1767  000DC4  51B7               	movf	(check_msg@qptr+1)& (0+255),w,b
  1768  000DC6  22DA               	addwfc	fsr2h,f,c
  1769  000DC8  50DF               	movf	indf2,w,c
  1770  000DCA  0100               	movlb	0	; () banked
  1771  000DCC  6FB8               	movwf	??_check_msg& (0+255),b
  1772  000DCE  0100               	movlb	0	; () banked
  1773  000DD0  51B8               	movf	??_check_msg& (0+255),w,b
  1774  000DD2  0D0D               	mullw	13
  1775  000DD4  50F3               	movf	prodl,w,c
  1776  000DD6  0100               	movlb	0	; () banked
  1777  000DD8  0100               	movlb	0	; () banked
  1778  000DDA  25B6               	addwf	check_msg@qptr& (0+255),w,b
  1779  000DDC  6ED9               	movwf	fsr2l,c
  1780  000DDE  50F4               	movf	prodh,w,c
  1781  000DE0  0100               	movlb	0	; () banked
  1782  000DE2  0100               	movlb	0	; () banked
  1783  000DE4  21B7               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  1784  000DE6  6EDA               	movwf	fsr2h,c
  1785  000DE8  50DF               	movf	indf2,w,c
  1786  000DEA  0012               	return	
  1787  000DEC                     __end_of_check_msg:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           prodh	equ	0xFF4
  1794                           prodl	equ	0xFF3
  1795                           intcon	equ	0xFF2
  1796                           postinc0	equ	0xFEE
  1797                           wreg	equ	0xFE8
  1798                           postdec1	equ	0xFE5
  1799                           fsr1l	equ	0xFE1
  1800                           indf2	equ	0xFDF
  1801                           fsr2h	equ	0xFDA
  1802                           fsr2l	equ	0xFD9
  1803                           status	equ	0xFD8
  1804                           
  1805 ;; *************** function _Delay1KTCYx *****************
  1806 ;; Defined at:
  1807 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  unit            1    wreg     unsigned char 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  unit            1    0[BANK0 ] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1821 ;;      Params:         0       0       0       0       0
  1822 ;;      Locals:         0       1       0       0       0
  1823 ;;      Temps:          0       0       0       0       0
  1824 ;;      Totals:         0       1       0       0       0
  1825 ;;Total ram usage:        1 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    6
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_block_on_To_msgqueues
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text10
  1836  000E8E                     __ptext10:
  1837                           	opt stack 0
  1838  000E8E                     _Delay1KTCYx:
  1839                           	opt stack 23
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;incstack = 0
  1843                           ;Delay1KTCYx@unit stored from wreg
  1844  000E8E  CFE8 F0B6          	movff	wreg,Delay1KTCYx@unit
  1845  000E92                     l719:
  1846  000E92  0EFA               	movlw	250
  1847  000E94                     u1407:
  1848  000E94  F000               	nop	
  1849  000E96  2EE8               	decfsz	wreg,f,c
  1850  000E98  D7FD               	goto	u1407
  1851  000E9A  0100               	movlb	0	; () banked
  1852  000E9C  0100               	movlb	0	; () banked
  1853  000E9E  2FB6               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  1854  000EA0  D7F8               	goto	l719
  1855  000EA2  0012               	return	
  1856  000EA4                     __end_of_Delay1KTCYx:
  1857                           	opt stack 0
  1858                           tblptru	equ	0xFF8
  1859                           tblptrh	equ	0xFF7
  1860                           tblptrl	equ	0xFF6
  1861                           tablat	equ	0xFF5
  1862                           prodh	equ	0xFF4
  1863                           prodl	equ	0xFF3
  1864                           intcon	equ	0xFF2
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           postdec1	equ	0xFE5
  1868                           fsr1l	equ	0xFE1
  1869                           indf2	equ	0xFDF
  1870                           fsr2h	equ	0xFDA
  1871                           fsr2l	equ	0xFD9
  1872                           status	equ	0xFD8
  1873                           
  1874 ;; *************** function _ToMainLow_recvmsg *****************
  1875 ;; Defined at:
  1876 ;;		line 113 in file "../src/messages.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  maxlength       1    wreg     unsigned char 
  1879 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  1880 ;;		 -> main@msgtype(1), 
  1881 ;;  data            2   26[BANK0 ] PTR void 
  1882 ;;		 -> main@msgbuffer(11), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  maxlength       1   28[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      char 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1894 ;;      Params:         0       4       0       0       0
  1895 ;;      Locals:         0       1       0       0       0
  1896 ;;      Temps:          0       0       0       0       0
  1897 ;;      Totals:         0       5       0       0       0
  1898 ;;Total ram usage:        5 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    8
  1901 ;; This function calls:
  1902 ;;		_recv_msg
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text11
  1909  000CF2                     __ptext11:
  1910                           	opt stack 0
  1911  000CF2                     _ToMainLow_recvmsg:
  1912                           	opt stack 22
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;incstack = 0
  1916                           ;ToMainLow_recvmsg@maxlength stored from wreg
  1917  000CF2  CFE8 F0D2          	movff	wreg,ToMainLow_recvmsg@maxlength
  1918                           
  1919                           ;messages.c: 119: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  1920  000CF6  0100               	movlb	0	; () banked
  1921  000CF8  0E00               	movlw	high _ToMainLow_MQ
  1922  000CFA  0100               	movlb	0	; () banked
  1923  000CFC  0100               	movlb	0	; () banked
  1924  000CFE  6FC1               	movwf	(recv_msg@qptr+1)& (0+255),b
  1925  000D00  0100               	movlb	0	; () banked
  1926  000D02  0E80               	movlw	low _ToMainLow_MQ
  1927  000D04  0100               	movlb	0	; () banked
  1928  000D06  0100               	movlb	0	; () banked
  1929  000D08  6FC0               	movwf	recv_msg@qptr& (0+255),b
  1930  000D0A  C0D2  F0C2         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  1931  000D0E  0100               	movlb	0	; () banked
  1932  000D10  0100               	movlb	0	; () banked
  1933  000D12  C0CF  F0C4         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  1934  000D16  0100               	movlb	0	; () banked
  1935  000D18  0100               	movlb	0	; () banked
  1936  000D1A  C0CE  F0C3         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  1937  000D1E  0100               	movlb	0	; () banked
  1938  000D20  0100               	movlb	0	; () banked
  1939  000D22  C0D1  F0C6         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  1940  000D26  0100               	movlb	0	; () banked
  1941  000D28  0100               	movlb	0	; () banked
  1942  000D2A  C0D0  F0C5         	movff	ToMainLow_recvmsg@data,recv_msg@data
  1943  000D2E  ECBB  F002         	call	_recv_msg	;wreg free
  1944  000D32  0012               	return	
  1945  000D34                     __end_of_ToMainLow_recvmsg:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           postdec1	equ	0xFE5
  1957                           fsr1l	equ	0xFE1
  1958                           indf2	equ	0xFDF
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _ToMainHigh_recvmsg *****************
  1964 ;; Defined at:
  1965 ;;		line 136 in file "../src/messages.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  maxlength       1    wreg     unsigned char 
  1968 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  1969 ;;		 -> main@msgtype(1), 
  1970 ;;  data            2   26[BANK0 ] PTR void 
  1971 ;;		 -> main@msgbuffer(11), 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  maxlength       1   28[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      char 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1983 ;;      Params:         0       4       0       0       0
  1984 ;;      Locals:         0       1       0       0       0
  1985 ;;      Temps:          0       0       0       0       0
  1986 ;;      Totals:         0       5       0       0       0
  1987 ;;Total ram usage:        5 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    8
  1990 ;; This function calls:
  1991 ;;		_recv_msg
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text12
  1998  000D34                     __ptext12:
  1999                           	opt stack 0
  2000  000D34                     _ToMainHigh_recvmsg:
  2001                           	opt stack 22
  2002                           
  2003                           ;incstack = 0
  2004                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  2005  000D34  CFE8 F0D2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  2006                           
  2007                           ;messages.c: 142: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2008  000D38  0101               	movlb	1	; () banked
  2009  000D3A  0E01               	movlw	high _ToMainHigh_MQ
  2010  000D3C  0100               	movlb	0	; () banked
  2011  000D3E  0100               	movlb	0	; () banked
  2012  000D40  6FC1               	movwf	(recv_msg@qptr+1)& (0+255),b
  2013  000D42  0101               	movlb	1	; () banked
  2014  000D44  0EBF               	movlw	low _ToMainHigh_MQ
  2015  000D46  0100               	movlb	0	; () banked
  2016  000D48  0100               	movlb	0	; () banked
  2017  000D4A  6FC0               	movwf	recv_msg@qptr& (0+255),b
  2018  000D4C  C0D2  F0C2         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  2019  000D50  0100               	movlb	0	; () banked
  2020  000D52  0100               	movlb	0	; () banked
  2021  000D54  C0CF  F0C4         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  2022  000D58  0100               	movlb	0	; () banked
  2023  000D5A  0100               	movlb	0	; () banked
  2024  000D5C  C0CE  F0C3         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  2025  000D60  0100               	movlb	0	; () banked
  2026  000D62  0100               	movlb	0	; () banked
  2027  000D64  C0D1  F0C6         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  2028  000D68  0100               	movlb	0	; () banked
  2029  000D6A  0100               	movlb	0	; () banked
  2030  000D6C  C0D0  F0C5         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  2031  000D70  ECBB  F002         	call	_recv_msg	;wreg free
  2032  000D74  0012               	return	
  2033  000D76                     __end_of_ToMainHigh_recvmsg:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           intcon	equ	0xFF2
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postdec1	equ	0xFE5
  2045                           fsr1l	equ	0xFE1
  2046                           indf2	equ	0xFDF
  2047                           fsr2h	equ	0xFDA
  2048                           fsr2l	equ	0xFD9
  2049                           status	equ	0xFD8
  2050                           
  2051 ;; *************** function _recv_msg *****************
  2052 ;; Defined at:
  2053 ;;		line 64 in file "../src/messages.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  2056 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2057 ;;  maxlength       1   12[BANK0 ] unsigned char 
  2058 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  2059 ;;		 -> main@msgtype(1), 
  2060 ;;  data            2   15[BANK0 ] PTR void 
  2061 ;;		 -> main@msgbuffer(11), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  qmsg            2   22[BANK0 ] PTR struct __msg
  2064 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2065 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2066 ;;  tlength         2   20[BANK0 ] unsigned int 
  2067 ;;  slot            1   19[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      char 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2077 ;;      Params:         0       7       0       0       0
  2078 ;;      Locals:         0       5       0       0       0
  2079 ;;      Temps:          0       2       0       0       0
  2080 ;;      Totals:         0      14       0       0       0
  2081 ;;Total ram usage:       14 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    7
  2084 ;; This function calls:
  2085 ;;		_memcpy
  2086 ;; This function is called by:
  2087 ;;		_ToMainLow_recvmsg
  2088 ;;		_ToMainHigh_recvmsg
  2089 ;;		_FromMainLow_recvmsg
  2090 ;;		_FromMainHigh_recvmsg
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text13
  2095  000576                     __ptext13:
  2096                           	opt stack 0
  2097  000576                     _recv_msg:
  2098                           	opt stack 22
  2099                           
  2100                           ;messages.c: 65: unsigned char slot;
  2101                           ;messages.c: 69: msg *qmsg;
  2102                           ;messages.c: 70: size_t tlength;
  2103                           ;messages.c: 73: slot = qptr->cur_read_ind;
  2104                           
  2105                           ;incstack = 0
  2106  000576  0100               	movlb	0	; () banked
  2107  000578  EE20 F035          	lfsr	2,53
  2108  00057C  0100               	movlb	0	; () banked
  2109  00057E  51C0               	movf	recv_msg@qptr& (0+255),w,b
  2110  000580  26D9               	addwf	fsr2l,f,c
  2111  000582  0100               	movlb	0	; () banked
  2112  000584  51C1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2113  000586  22DA               	addwfc	fsr2h,f,c
  2114  000588  50DF               	movf	indf2,w,c
  2115  00058A  0100               	movlb	0	; () banked
  2116  00058C  0100               	movlb	0	; () banked
  2117  00058E  6FC9               	movwf	recv_msg@slot& (0+255),b
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;messages.c: 74: qmsg = &(qptr->queue[slot]);
  2121  000590  0100               	movlb	0	; () banked
  2122  000592  0100               	movlb	0	; () banked
  2123  000594  51C9               	movf	recv_msg@slot& (0+255),w,b
  2124  000596  0D0D               	mullw	13
  2125  000598  50F3               	movf	prodl,w,c
  2126  00059A  0100               	movlb	0	; () banked
  2127  00059C  0100               	movlb	0	; () banked
  2128  00059E  25C0               	addwf	recv_msg@qptr& (0+255),w,b
  2129  0005A0  0100               	movlb	0	; () banked
  2130  0005A2  0100               	movlb	0	; () banked
  2131  0005A4  6FCC               	movwf	recv_msg@qmsg& (0+255),b
  2132  0005A6  50F4               	movf	prodh,w,c
  2133  0005A8  0100               	movlb	0	; () banked
  2134  0005AA  0100               	movlb	0	; () banked
  2135  0005AC  21C1               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2136  0005AE  0100               	movlb	0	; () banked
  2137  0005B0  6FCD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;messages.c: 75: if (qmsg->full == 1) {
  2141  0005B2  0E01               	movlw	1
  2142  0005B4  C0CC  FFD9         	movff	recv_msg@qmsg,fsr2l
  2143  0005B8  C0CD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2144  0005BC  62DF               	cpfseq	indf2,c
  2145  0005BE  D074               	goto	l2247
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;messages.c: 77: if (qmsg->length > maxlength) {
  2149  0005C0  0100               	movlb	0	; () banked
  2150  0005C2  EE20 F001          	lfsr	2,1
  2151  0005C6  0100               	movlb	0	; () banked
  2152  0005C8  51CC               	movf	recv_msg@qmsg& (0+255),w,b
  2153  0005CA  26D9               	addwf	fsr2l,f,c
  2154  0005CC  0100               	movlb	0	; () banked
  2155  0005CE  51CD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2156  0005D0  22DA               	addwfc	fsr2h,f,c
  2157  0005D2  50DF               	movf	indf2,w,c
  2158  0005D4  0100               	movlb	0	; () banked
  2159  0005D6  0100               	movlb	0	; () banked
  2160  0005D8  5DC2               	subwf	recv_msg@maxlength& (0+255),w,b
  2161  0005DA  B0D8               	btfsc	status,0,c
  2162  0005DC  D002               	goto	l2231
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;messages.c: 78: return (-3);
  2166  0005DE  0EFD               	movlw	253
  2167  0005E0  0012               	return	
  2168  0005E2                     l2231:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;messages.c: 79: }
  2172                           ;messages.c: 81: tlength = qmsg->length;
  2173  0005E2  0100               	movlb	0	; () banked
  2174  0005E4  EE20 F001          	lfsr	2,1
  2175  0005E8  0100               	movlb	0	; () banked
  2176  0005EA  51CC               	movf	recv_msg@qmsg& (0+255),w,b
  2177  0005EC  26D9               	addwf	fsr2l,f,c
  2178  0005EE  0100               	movlb	0	; () banked
  2179  0005F0  51CD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2180  0005F2  22DA               	addwfc	fsr2h,f,c
  2181  0005F4  50DF               	movf	indf2,w,c
  2182  0005F6  0100               	movlb	0	; () banked
  2183  0005F8  6FC7               	movwf	??_recv_msg& (0+255),b
  2184  0005FA  0100               	movlb	0	; () banked
  2185  0005FC  51C7               	movf	??_recv_msg& (0+255),w,b
  2186  0005FE  0100               	movlb	0	; () banked
  2187  000600  0100               	movlb	0	; () banked
  2188  000602  6FCA               	movwf	recv_msg@tlength& (0+255),b
  2189  000604  0100               	movlb	0	; () banked
  2190  000606  6BCB               	clrf	(recv_msg@tlength+1)& (0+255),b
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;messages.c: 82: memcpy(data, qmsg->data, tlength);
  2194  000608  0100               	movlb	0	; () banked
  2195  00060A  0100               	movlb	0	; () banked
  2196  00060C  C0C6  F0B7         	movff	recv_msg@data+1,memcpy@d1+1
  2197  000610  0100               	movlb	0	; () banked
  2198  000612  0100               	movlb	0	; () banked
  2199  000614  C0C5  F0B6         	movff	recv_msg@data,memcpy@d1
  2200  000618  0E03               	movlw	3
  2201  00061A  0100               	movlb	0	; () banked
  2202  00061C  0100               	movlb	0	; () banked
  2203  00061E  25CC               	addwf	recv_msg@qmsg& (0+255),w,b
  2204  000620  0100               	movlb	0	; () banked
  2205  000622  6FC7               	movwf	??_recv_msg& (0+255),b
  2206  000624  0E00               	movlw	0
  2207  000626  0100               	movlb	0	; () banked
  2208  000628  0100               	movlb	0	; () banked
  2209  00062A  21CD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2210  00062C  0100               	movlb	0	; () banked
  2211  00062E  6FC8               	movwf	(??_recv_msg+1)& (0+255),b
  2212  000630  C0C7  F0B8         	movff	??_recv_msg,memcpy@s1
  2213  000634  C0C8  F0B9         	movff	??_recv_msg+1,memcpy@s1+1
  2214  000638  C0CA  F0BA         	movff	recv_msg@tlength,memcpy@n
  2215  00063C  C0CB  F0BB         	movff	recv_msg@tlength+1,memcpy@n+1
  2216  000640  ECB1  F005         	call	_memcpy	;wreg free
  2217                           
  2218                           ;messages.c: 88: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2219  000644  0100               	movlb	0	; () banked
  2220  000646  EE20 F035          	lfsr	2,53
  2221  00064A  0100               	movlb	0	; () banked
  2222  00064C  51C0               	movf	recv_msg@qptr& (0+255),w,b
  2223  00064E  26D9               	addwf	fsr2l,f,c
  2224  000650  0100               	movlb	0	; () banked
  2225  000652  51C1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2226  000654  22DA               	addwfc	fsr2h,f,c
  2227  000656  0100               	movlb	0	; () banked
  2228  000658  EE10 F035          	lfsr	1,53
  2229  00065C  0100               	movlb	0	; () banked
  2230  00065E  51C0               	movf	recv_msg@qptr& (0+255),w,b
  2231  000660  26E1               	addwf	fsr1l,f,c
  2232  000662  0100               	movlb	0	; () banked
  2233  000664  51C1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2234  000666  22E2               	addwfc	fsr1h,f,c
  2235  000668  50E7               	movf	indf1,w,c
  2236  00066A  0100               	movlb	0	; () banked
  2237  00066C  6FC7               	movwf	??_recv_msg& (0+255),b
  2238  00066E  0100               	movlb	0	; () banked
  2239  000670  29C7               	incf	??_recv_msg& (0+255),w,b
  2240  000672  0B03               	andlw	3
  2241  000674  6EDF               	movwf	indf2,c
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;messages.c: 90: (*msgtype) = qmsg->msgtype;
  2245  000676  0100               	movlb	0	; () banked
  2246  000678  EE20 F002          	lfsr	2,2
  2247  00067C  0100               	movlb	0	; () banked
  2248  00067E  51CC               	movf	recv_msg@qmsg& (0+255),w,b
  2249  000680  26D9               	addwf	fsr2l,f,c
  2250  000682  0100               	movlb	0	; () banked
  2251  000684  51CD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2252  000686  22DA               	addwfc	fsr2h,f,c
  2253  000688  C0C3  FFE1         	movff	recv_msg@msgtype,fsr1l
  2254  00068C  C0C4  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2255  000690  CFDF FFE7          	movff	indf2,indf1
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;messages.c: 92: qmsg->full = 0;
  2259  000694  C0CC  FFD9         	movff	recv_msg@qmsg,fsr2l
  2260  000698  C0CD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2261  00069C  0E00               	movlw	0
  2262  00069E  6EDF               	movwf	indf2,c
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;messages.c: 93: return (tlength);
  2266  0006A0  0100               	movlb	0	; () banked
  2267  0006A2  0100               	movlb	0	; () banked
  2268  0006A4  51CA               	movf	recv_msg@tlength& (0+255),w,b
  2269  0006A6  0012               	return	
  2270  0006A8                     l2247:
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;messages.c: 95: return (-4);
  2274  0006A8  0EFC               	movlw	252
  2275  0006AA  0012               	return	
  2276  0006AC                     __end_of_recv_msg:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           prodh	equ	0xFF4
  2283                           prodl	equ	0xFF3
  2284                           intcon	equ	0xFF2
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           indf1	equ	0xFE7
  2288                           postdec1	equ	0xFE5
  2289                           fsr1h	equ	0xFE2
  2290                           fsr1l	equ	0xFE1
  2291                           indf2	equ	0xFDF
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _memcpy *****************
  2297 ;; Defined at:
  2298 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  d1              2    0[BANK0 ] PTR void 
  2301 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2302 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2303 ;;		 -> main@msgbuffer(11), 
  2304 ;;  s1              2    2[BANK0 ] PTR const void 
  2305 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2306 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2307 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  2308 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2309 ;;  n               2    4[BANK0 ] unsigned int 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2312 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2313 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2314 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  2315 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2316 ;;  d               2    6[BANK0 ] PTR unsigned char 
  2317 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2318 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2319 ;;		 -> main@msgbuffer(11), 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  2    0[BANK0 ] PTR void 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2329 ;;      Params:         0       6       0       0       0
  2330 ;;      Locals:         0       4       0       0       0
  2331 ;;      Temps:          0       0       0       0       0
  2332 ;;      Totals:         0      10       0       0       0
  2333 ;;Total ram usage:       10 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    6
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_recv_msg
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text14
  2344  000B62                     __ptext14:
  2345                           	opt stack 0
  2346  000B62                     _memcpy:
  2347                           	opt stack 22
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;incstack = 0
  2351  000B62  0100               	movlb	0	; () banked
  2352  000B64  0100               	movlb	0	; () banked
  2353  000B66  C0B9  F0BF         	movff	memcpy@s1+1,memcpy@s+1
  2354  000B6A  0100               	movlb	0	; () banked
  2355  000B6C  0100               	movlb	0	; () banked
  2356  000B6E  C0B8  F0BE         	movff	memcpy@s1,memcpy@s
  2357  000B72  0100               	movlb	0	; () banked
  2358  000B74  0100               	movlb	0	; () banked
  2359  000B76  C0B7  F0BD         	movff	memcpy@d1+1,memcpy@d+1
  2360  000B7A  0100               	movlb	0	; () banked
  2361  000B7C  0100               	movlb	0	; () banked
  2362  000B7E  C0B6  F0BC         	movff	memcpy@d1,memcpy@d
  2363  000B82  D012               	goto	l2217
  2364  000B84                     l2211:
  2365                           
  2366                           ; BSR set to: 0
  2367  000B84  C0BE  FFD9         	movff	memcpy@s,fsr2l
  2368  000B88  C0BF  FFDA         	movff	memcpy@s+1,fsr2h
  2369  000B8C  C0BC  FFE1         	movff	memcpy@d,fsr1l
  2370  000B90  C0BD  FFE2         	movff	memcpy@d+1,fsr1h
  2371  000B94  CFDF FFE7          	movff	indf2,indf1
  2372                           
  2373                           ; BSR set to: 0
  2374  000B98  0100               	movlb	0	; () banked
  2375  000B9A  0100               	movlb	0	; () banked
  2376  000B9C  4BBE               	infsnz	memcpy@s& (0+255),f,b
  2377  000B9E  2BBF               	incf	(memcpy@s+1)& (0+255),f,b
  2378                           
  2379                           ; BSR set to: 0
  2380  000BA0  0100               	movlb	0	; () banked
  2381  000BA2  0100               	movlb	0	; () banked
  2382  000BA4  4BBC               	infsnz	memcpy@d& (0+255),f,b
  2383  000BA6  2BBD               	incf	(memcpy@d+1)& (0+255),f,b
  2384  000BA8                     l2217:
  2385                           
  2386                           ; BSR set to: 0
  2387  000BA8  0100               	movlb	0	; () banked
  2388  000BAA  0100               	movlb	0	; () banked
  2389  000BAC  07BA               	decf	memcpy@n& (0+255),f,b
  2390  000BAE  A0D8               	btfss	status,0,c
  2391  000BB0  07BB               	decf	(memcpy@n+1)& (0+255),f,b
  2392  000BB2  0100               	movlb	0	; () banked
  2393  000BB4  29BA               	incf	memcpy@n& (0+255),w,b
  2394  000BB6  B4D8               	btfsc	status,2,c
  2395  000BB8  29BB               	incf	(memcpy@n+1)& (0+255),w,b
  2396  000BBA  B4D8               	btfsc	status,2,c
  2397                           
  2398                           ; BSR set to: 0
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;	Return value of _memcpy is never used
  2402  000BBC  0012               	return	
  2403  000BBE  D7E2               	goto	l2211
  2404  000BC0                     __end_of_memcpy:
  2405                           	opt stack 0
  2406                           tblptru	equ	0xFF8
  2407                           tblptrh	equ	0xFF7
  2408                           tblptrl	equ	0xFF6
  2409                           tablat	equ	0xFF5
  2410                           prodh	equ	0xFF4
  2411                           prodl	equ	0xFF3
  2412                           intcon	equ	0xFF2
  2413                           postinc0	equ	0xFEE
  2414                           wreg	equ	0xFE8
  2415                           indf1	equ	0xFE7
  2416                           postdec1	equ	0xFE5
  2417                           fsr1h	equ	0xFE2
  2418                           fsr1l	equ	0xFE1
  2419                           indf2	equ	0xFDF
  2420                           fsr2h	equ	0xFDA
  2421                           fsr2l	equ	0xFD9
  2422                           status	equ	0xFD8
  2423                           
  2424 ;; *************** function _OpenTimer0 *****************
  2425 ;; Defined at:
  2426 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  config          1    wreg     unsigned char 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  config          1    0[BANK0 ] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;		None               void
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2440 ;;      Params:         0       0       0       0       0
  2441 ;;      Locals:         0       1       0       0       0
  2442 ;;      Temps:          0       0       0       0       0
  2443 ;;      Totals:         0       1       0       0       0
  2444 ;;Total ram usage:        1 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    6
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text15
  2455  000E1A                     __ptext15:
  2456                           	opt stack 0
  2457  000E1A                     _OpenTimer0:
  2458                           	opt stack 24
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;incstack = 0
  2462                           ;OpenTimer0@config stored from wreg
  2463  000E1A  CFE8 F0B6          	movff	wreg,OpenTimer0@config
  2464  000E1E  0100               	movlb	0	; () banked
  2465  000E20  0100               	movlb	0	; () banked
  2466  000E22  51B6               	movf	OpenTimer0@config& (0+255),w,b
  2467  000E24  0B7F               	andlw	127
  2468  000E26  6ED5               	movwf	4053,c	;volatile
  2469                           
  2470                           ; BSR set to: 0
  2471  000E28  0E00               	movlw	0
  2472  000E2A  6ED7               	movwf	4055,c	;volatile
  2473                           
  2474                           ; BSR set to: 0
  2475  000E2C  0E00               	movlw	0
  2476  000E2E  6ED6               	movwf	4054,c	;volatile
  2477                           
  2478                           ; BSR set to: 0
  2479  000E30  94F2               	bcf	intcon,2,c	;volatile
  2480                           
  2481                           ; BSR set to: 0
  2482  000E32  0100               	movlb	0	; () banked
  2483  000E34  0100               	movlb	0	; () banked
  2484  000E36  AFB6               	btfss	OpenTimer0@config& (0+255),7,b
  2485  000E38  D002               	goto	l477
  2486                           
  2487                           ; BSR set to: 0
  2488  000E3A  8AF2               	bsf	intcon,5,c	;volatile
  2489  000E3C  D001               	goto	l478
  2490  000E3E                     l477:
  2491                           
  2492                           ; BSR set to: 0
  2493  000E3E  9AF2               	bcf	intcon,5,c	;volatile
  2494  000E40                     l478:
  2495                           
  2496                           ; BSR set to: 0
  2497  000E40  8ED5               	bsf	4053,7,c	;volatile
  2498                           
  2499                           ; BSR set to: 0
  2500  000E42  0012               	return	
  2501  000E44                     __end_of_OpenTimer0:
  2502                           	opt stack 0
  2503                           tblptru	equ	0xFF8
  2504                           tblptrh	equ	0xFF7
  2505                           tblptrl	equ	0xFF6
  2506                           tablat	equ	0xFF5
  2507                           prodh	equ	0xFF4
  2508                           prodl	equ	0xFF3
  2509                           intcon	equ	0xFF2
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           indf1	equ	0xFE7
  2513                           postdec1	equ	0xFE5
  2514                           fsr1h	equ	0xFE2
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           fsr2h	equ	0xFDA
  2518                           fsr2l	equ	0xFD9
  2519                           status	equ	0xFD8
  2520                           
  2521 ;; *************** function _InterruptHandlerLow *****************
  2522 ;; Defined at:
  2523 ;;		line 124 in file "../src/interrupts.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		None
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2537 ;;      Params:         0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0
  2539 ;;      Temps:         17       0       0       0       0
  2540 ;;      Totals:        17       0       0       0       0
  2541 ;;Total ram usage:       17 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    5
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		Interrupt level 1
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	intcodelo
  2552  000018                     __pintcodelo:
  2553                           	opt stack 0
  2554  000018                     _InterruptHandlerLow:
  2555                           	opt stack 21
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;incstack = 0
  2559  000018  CFD8 F001          	movff	status,??_InterruptHandlerLow
  2560  00001C  CFE8 F002          	movff	wreg,??_InterruptHandlerLow+1
  2561  000020  CFE0 F003          	movff	bsr,??_InterruptHandlerLow+2
  2562  000024  CFFA F004          	movff	pclath,??_InterruptHandlerLow+3
  2563  000028  CFFB F005          	movff	pclatu,??_InterruptHandlerLow+4
  2564  00002C  CFE9 F006          	movff	fsr0l,??_InterruptHandlerLow+5
  2565  000030  CFEA F007          	movff	fsr0h,??_InterruptHandlerLow+6
  2566  000034  CFE1 F008          	movff	fsr1l,??_InterruptHandlerLow+7
  2567  000038  CFE2 F009          	movff	fsr1h,??_InterruptHandlerLow+8
  2568  00003C  CFD9 F00A          	movff	fsr2l,??_InterruptHandlerLow+9
  2569  000040  CFDA F00B          	movff	fsr2h,??_InterruptHandlerLow+10
  2570  000044  CFF3 F00C          	movff	prodl,??_InterruptHandlerLow+11
  2571  000048  CFF4 F00D          	movff	prodh,??_InterruptHandlerLow+12
  2572  00004C  CFF6 F00E          	movff	tblptrl,??_InterruptHandlerLow+13
  2573  000050  CFF7 F00F          	movff	tblptrh,??_InterruptHandlerLow+14
  2574  000054  CFF8 F010          	movff	tblptru,??_InterruptHandlerLow+15
  2575  000058  CFF5 F011          	movff	tablat,??_InterruptHandlerLow+16
  2576  00005C  C011  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  2577  000060  C010  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  2578  000064  C00F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  2579  000068  C00E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  2580  00006C  C00D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  2581  000070  C00C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  2582  000074  C00B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  2583  000078  C00A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  2584  00007C  C009  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  2585  000080  C008  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  2586  000084  C007  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  2587  000088  C006  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  2588  00008C  C005  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  2589  000090  C004  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  2590  000094  C003  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  2591  000098  C002  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  2592  00009C  C001  FFD8         	movff	??_InterruptHandlerLow,status
  2593  0000A0  0010               	retfie	
  2594  0000A2                     __end_of_InterruptHandlerLow:
  2595                           	opt stack 0
  2596                           pclatu	equ	0xFFB
  2597                           pclath	equ	0xFFA
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           prodh	equ	0xFF4
  2603                           prodl	equ	0xFF3
  2604                           intcon	equ	0xFF2
  2605                           postinc0	equ	0xFEE
  2606                           fsr0h	equ	0xFEA
  2607                           fsr0l	equ	0xFE9
  2608                           wreg	equ	0xFE8
  2609                           indf1	equ	0xFE7
  2610                           postdec1	equ	0xFE5
  2611                           fsr1h	equ	0xFE2
  2612                           fsr1l	equ	0xFE1
  2613                           bsr	equ	0xFE0
  2614                           indf2	equ	0xFDF
  2615                           fsr2h	equ	0xFDA
  2616                           fsr2l	equ	0xFD9
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _InterruptHandlerHigh *****************
  2620 ;; Defined at:
  2621 ;;		line 85 in file "../src/interrupts.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0
  2637 ;;      Temps:         14       0       0       0       0
  2638 ;;      Totals:        14       0       0       0       0
  2639 ;;Total ram usage:       14 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		_SleepIfOkay
  2644 ;;		_i2c_int_handler
  2645 ;;		_timer0_int_handler
  2646 ;; This function is called by:
  2647 ;;		Interrupt level 2
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	intcode
  2652  000008                     __pintcode:
  2653                           	opt stack 0
  2654  000008                     _InterruptHandlerHigh:
  2655                           	opt stack 21
  2656                           
  2657                           ;incstack = 0
  2658  000008  CFFA F036          	movff	pclath,??_InterruptHandlerHigh
  2659  00000C  CFFB F037          	movff	pclatu,??_InterruptHandlerHigh+1
  2660  000010  EF88  F004         	goto	int_func
  2661                           pclatu	equ	0xFFB
  2662                           pclath	equ	0xFFA
  2663                           tblptru	equ	0xFF8
  2664                           tblptrh	equ	0xFF7
  2665                           tblptrl	equ	0xFF6
  2666                           tablat	equ	0xFF5
  2667                           prodh	equ	0xFF4
  2668                           prodl	equ	0xFF3
  2669                           intcon	equ	0xFF2
  2670                           postinc0	equ	0xFEE
  2671                           fsr0h	equ	0xFEA
  2672                           fsr0l	equ	0xFE9
  2673                           wreg	equ	0xFE8
  2674                           indf1	equ	0xFE7
  2675                           postdec1	equ	0xFE5
  2676                           fsr1h	equ	0xFE2
  2677                           fsr1l	equ	0xFE1
  2678                           bsr	equ	0xFE0
  2679                           indf2	equ	0xFDF
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8
  2683                           
  2684                           	psect	intcode_body
  2685  000910                     __pintcode_body:
  2686                           	opt stack 21
  2687  000910                     int_func:
  2688                           	opt stack 21
  2689  000910  CFE9 F038          	movff	fsr0l,??_InterruptHandlerHigh+2
  2690  000914  CFEA F039          	movff	fsr0h,??_InterruptHandlerHigh+3
  2691  000918  CFE1 F03A          	movff	fsr1l,??_InterruptHandlerHigh+4
  2692  00091C  CFE2 F03B          	movff	fsr1h,??_InterruptHandlerHigh+5
  2693  000920  CFD9 F03C          	movff	fsr2l,??_InterruptHandlerHigh+6
  2694  000924  CFDA F03D          	movff	fsr2h,??_InterruptHandlerHigh+7
  2695  000928  CFF3 F03E          	movff	prodl,??_InterruptHandlerHigh+8
  2696  00092C  CFF4 F03F          	movff	prodh,??_InterruptHandlerHigh+9
  2697  000930  CFF6 F040          	movff	tblptrl,??_InterruptHandlerHigh+10
  2698  000934  CFF7 F041          	movff	tblptrh,??_InterruptHandlerHigh+11
  2699  000938  CFF8 F042          	movff	tblptru,??_InterruptHandlerHigh+12
  2700  00093C  CFF5 F043          	movff	tablat,??_InterruptHandlerHigh+13
  2701                           
  2702                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  2703  000940  A69E               	btfss	3998,3,c	;volatile
  2704  000942  D003               	goto	i2l1903
  2705                           
  2706                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  2707  000944  969E               	bcf	3998,3,c	;volatile
  2708                           
  2709                           ;interrupts.c: 94: i2c_int_handler();
  2710  000946  EC53  F000         	call	_i2c_int_handler	;wreg free
  2711  00094A                     i2l1903:
  2712                           
  2713                           ;interrupts.c: 95: }
  2714                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  2715  00094A  A4F2               	btfss	intcon,2,c	;volatile
  2716  00094C  D003               	goto	i2l1909
  2717                           
  2718                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  2719  00094E  94F2               	bcf	intcon,2,c	;volatile
  2720                           
  2721                           ;interrupts.c: 101: timer0_int_handler();
  2722  000950  EC6B  F007         	call	_timer0_int_handler	;wreg free
  2723  000954                     i2l1909:
  2724                           
  2725                           ;interrupts.c: 102: }
  2726                           ;interrupts.c: 111: SleepIfOkay();
  2727  000954  EC0D  F006         	call	_SleepIfOkay	;wreg free
  2728  000958  C043  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  2729  00095C  C042  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  2730  000960  C041  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  2731  000964  C040  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  2732  000968  C03F  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  2733  00096C  C03E  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  2734  000970  C03D  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  2735  000974  C03C  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  2736  000978  C03B  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  2737  00097C  C03A  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  2738  000980  C039  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  2739  000984  C038  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  2740  000988  C037  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  2741  00098C  C036  FFFA         	movff	??_InterruptHandlerHigh,pclath
  2742  000990  0011               	retfie		f
  2743  000992                     __end_of_InterruptHandlerHigh:
  2744                           	opt stack 0
  2745                           pclatu	equ	0xFFB
  2746                           pclath	equ	0xFFA
  2747                           tblptru	equ	0xFF8
  2748                           tblptrh	equ	0xFF7
  2749                           tblptrl	equ	0xFF6
  2750                           tablat	equ	0xFF5
  2751                           prodh	equ	0xFF4
  2752                           prodl	equ	0xFF3
  2753                           intcon	equ	0xFF2
  2754                           postinc0	equ	0xFEE
  2755                           fsr0h	equ	0xFEA
  2756                           fsr0l	equ	0xFE9
  2757                           wreg	equ	0xFE8
  2758                           indf1	equ	0xFE7
  2759                           postdec1	equ	0xFE5
  2760                           fsr1h	equ	0xFE2
  2761                           fsr1l	equ	0xFE1
  2762                           bsr	equ	0xFE0
  2763                           indf2	equ	0xFDF
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _timer0_int_handler *****************
  2769 ;; Defined at:
  2770 ;;		line 17 in file "../src/user_interrupts.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;		None               void
  2777 ;; Registers used:
  2778 ;;		None
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_InterruptHandlerHigh
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text18
  2798  000ED6                     __ptext18:
  2799                           	opt stack 0
  2800  000ED6                     _timer0_int_handler:
  2801                           	opt stack 24
  2802                           
  2803                           ;incstack = 0
  2804  000ED6  0012               	return	
  2805  000ED8                     __end_of_timer0_int_handler:
  2806                           	opt stack 0
  2807                           pclatu	equ	0xFFB
  2808                           pclath	equ	0xFFA
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           postinc0	equ	0xFEE
  2817                           fsr0h	equ	0xFEA
  2818                           fsr0l	equ	0xFE9
  2819                           wreg	equ	0xFE8
  2820                           indf1	equ	0xFE7
  2821                           postdec1	equ	0xFE5
  2822                           fsr1h	equ	0xFE2
  2823                           fsr1l	equ	0xFE1
  2824                           bsr	equ	0xFE0
  2825                           indf2	equ	0xFDF
  2826                           fsr2h	equ	0xFDA
  2827                           fsr2l	equ	0xFD9
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function _i2c_int_handler *****************
  2831 ;; Defined at:
  2832 ;;		line 131 in file "../src/my_i2c.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  error_buf       3   44[COMRAM] unsigned char [3]
  2837 ;;  data_read       1   52[COMRAM] unsigned char 
  2838 ;;  msg_ready       1   51[COMRAM] unsigned char 
  2839 ;;  msg_to_send     1   50[COMRAM] unsigned char 
  2840 ;;  i2c_data        1   49[COMRAM] unsigned char 
  2841 ;;  overrun_erro    1   48[COMRAM] unsigned char 
  2842 ;;  data_written    1   47[COMRAM] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;		None               void
  2845 ;; Registers used:
  2846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2852 ;;      Params:         0       0       0       0       0
  2853 ;;      Locals:         9       0       0       0       0
  2854 ;;      Temps:          1       0       0       0       0
  2855 ;;      Totals:        10       0       0       0       0
  2856 ;;Total ram usage:       10 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    3
  2859 ;; This function calls:
  2860 ;;		_ToMainHigh_sendmsg
  2861 ;;		_handle_start
  2862 ;; This function is called by:
  2863 ;;		_InterruptHandlerHigh
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text19
  2868  0000A6                     __ptext19:
  2869                           	opt stack 0
  2870  0000A6                     _i2c_int_handler:
  2871                           	opt stack 21
  2872                           
  2873                           ;my_i2c.c: 133: unsigned char i2c_data;
  2874                           ;my_i2c.c: 134: unsigned char data_read = 0;
  2875                           
  2876                           ;incstack = 0
  2877  0000A6  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  2878  0000A8  0E00               	movlw	0
  2879  0000AA  6E35               	movwf	i2c_int_handler@data_read,c
  2880  0000AC  502C               	movf	??_i2c_int_handler& (0+255),w,c
  2881                           
  2882                           ;my_i2c.c: 135: unsigned char data_written = 0;
  2883  0000AE  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  2884  0000B0  0E00               	movlw	0
  2885  0000B2  6E30               	movwf	i2c_int_handler@data_written,c
  2886  0000B4  502C               	movf	??_i2c_int_handler& (0+255),w,c
  2887                           
  2888                           ;my_i2c.c: 136: unsigned char msg_ready = 0;
  2889  0000B6  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  2890  0000B8  0E00               	movlw	0
  2891  0000BA  6E34               	movwf	i2c_int_handler@msg_ready,c
  2892  0000BC  502C               	movf	??_i2c_int_handler& (0+255),w,c
  2893                           
  2894                           ;my_i2c.c: 137: unsigned char msg_to_send = 0;
  2895  0000BE  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  2896  0000C0  0E00               	movlw	0
  2897  0000C2  6E33               	movwf	i2c_int_handler@msg_to_send,c
  2898  0000C4  502C               	movf	??_i2c_int_handler& (0+255),w,c
  2899                           
  2900                           ;my_i2c.c: 138: unsigned char overrun_error = 0;
  2901  0000C6  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  2902  0000C8  0E00               	movlw	0
  2903  0000CA  6E31               	movwf	i2c_int_handler@overrun_error,c
  2904  0000CC  502C               	movf	??_i2c_int_handler& (0+255),w,c
  2905                           
  2906                           ;my_i2c.c: 139: unsigned char error_buf[3];
  2907                           ;my_i2c.c: 142: if (SSPCON1bits.SSPOV == 1) {
  2908  0000CE  ACC6               	btfss	4038,6,c	;volatile
  2909  0000D0  D025               	goto	i2l1925
  2910                           
  2911                           ;my_i2c.c: 143: SSPCON1bits.SSPOV = 0;
  2912  0000D2  9CC6               	bcf	4038,6,c	;volatile
  2913                           
  2914                           ;my_i2c.c: 147: ic_ptr->status = 0x5;
  2915  0000D4  0100               	movlb	0	; () banked
  2916  0000D6  EE20 F00C          	lfsr	2,12
  2917  0000DA  0100               	movlb	0	; () banked
  2918  0000DC  51D3               	movf	_ic_ptr& (0+255),w,b
  2919  0000DE  26D9               	addwf	fsr2l,f,c
  2920  0000E0  0100               	movlb	0	; () banked
  2921  0000E2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2922  0000E4  22DA               	addwfc	fsr2h,f,c
  2923  0000E6  0E05               	movlw	5
  2924  0000E8  6EDF               	movwf	indf2,c
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;my_i2c.c: 148: overrun_error = 1;
  2928  0000EA  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  2929  0000EC  0E01               	movlw	1
  2930  0000EE  6E31               	movwf	i2c_int_handler@overrun_error,c
  2931  0000F0  502C               	movf	??_i2c_int_handler& (0+255),w,c
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;my_i2c.c: 149: ic_ptr->error_count++;
  2935  0000F2  0100               	movlb	0	; () banked
  2936  0000F4  EE20 F00E          	lfsr	2,14
  2937  0000F8  0100               	movlb	0	; () banked
  2938  0000FA  51D3               	movf	_ic_ptr& (0+255),w,b
  2939  0000FC  26D9               	addwf	fsr2l,f,c
  2940  0000FE  0100               	movlb	0	; () banked
  2941  000100  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2942  000102  22DA               	addwfc	fsr2h,f,c
  2943  000104  2ADF               	incf	indf2,f,c
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;my_i2c.c: 150: ic_ptr->error_code = 0x4;
  2947  000106  0100               	movlb	0	; () banked
  2948  000108  EE20 F00D          	lfsr	2,13
  2949  00010C  0100               	movlb	0	; () banked
  2950  00010E  51D3               	movf	_ic_ptr& (0+255),w,b
  2951  000110  26D9               	addwf	fsr2l,f,c
  2952  000112  0100               	movlb	0	; () banked
  2953  000114  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2954  000116  22DA               	addwfc	fsr2h,f,c
  2955  000118  0E04               	movlw	4
  2956  00011A  6EDF               	movwf	indf2,c
  2957  00011C                     i2l1925:
  2958                           
  2959                           ;my_i2c.c: 151: }
  2960                           ;my_i2c.c: 153: if (SSPSTATbits.BF == 1) {
  2961  00011C  A0C7               	btfss	4039,0,c	;volatile
  2962  00011E  D006               	goto	i2l1931
  2963                           
  2964                           ;my_i2c.c: 154: i2c_data = SSPBUF;
  2965  000120  CFC9 F032          	movff	4041,i2c_int_handler@i2c_data	;volatile
  2966                           
  2967                           ;my_i2c.c: 155: data_read = 1;
  2968  000124  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  2969  000126  0E01               	movlw	1
  2970  000128  6E35               	movwf	i2c_int_handler@data_read,c
  2971  00012A  502C               	movf	??_i2c_int_handler& (0+255),w,c
  2972  00012C                     i2l1931:
  2973                           
  2974                           ;my_i2c.c: 156: }
  2975                           ;my_i2c.c: 158: if (!overrun_error) {
  2976  00012C  6631               	tstfsz	i2c_int_handler@overrun_error,c
  2977  00012E  D19C               	goto	i2l223
  2978  000130  D185               	goto	i2l2019
  2979  000132                     i2l225:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;my_i2c.c: 161: {
  2983                           ;my_i2c.c: 163: if (SSPSTATbits.S == 1) {
  2984  000132  A6C7               	btfss	4039,3,c	;volatile
  2985  000134  D199               	goto	i2l223
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;my_i2c.c: 164: handle_start(data_read);
  2989  000136  5035               	movf	i2c_int_handler@data_read,w,c
  2990  000138  ECCF  F003         	call	_handle_start
  2991                           
  2992                           ;my_i2c.c: 166: if (ic_ptr->status == 0x8) {
  2993  00013C  0100               	movlb	0	; () banked
  2994  00013E  EE20 F00C          	lfsr	2,12
  2995  000142  0100               	movlb	0	; () banked
  2996  000144  51D3               	movf	_ic_ptr& (0+255),w,b
  2997  000146  26D9               	addwf	fsr2l,f,c
  2998  000148  0100               	movlb	0	; () banked
  2999  00014A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3000  00014C  22DA               	addwfc	fsr2h,f,c
  3001  00014E  0E08               	movlw	8
  3002  000150  62DF               	cpfseq	indf2,c
  3003  000152  D18A               	goto	i2l223
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;my_i2c.c: 167: data_read = 0;
  3007  000154  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3008  000156  0E00               	movlw	0
  3009  000158  6E35               	movwf	i2c_int_handler@data_read,c
  3010  00015A  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3011                           
  3012                           ;my_i2c.c: 168: msg_to_send = 1;
  3013  00015C  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3014  00015E  0E01               	movlw	1
  3015  000160  6E33               	movwf	i2c_int_handler@msg_to_send,c
  3016  000162  D15F               	goto	L6
  3017  000164                     i2l229:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;my_i2c.c: 174: {
  3021                           ;my_i2c.c: 176: if (SSPSTATbits.P == 1) {
  3022  000164  A8C7               	btfss	4039,4,c	;volatile
  3023  000166  D02A               	goto	i2l1951
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;my_i2c.c: 179: ic_ptr->event_count++;
  3027  000168  0100               	movlb	0	; () banked
  3028  00016A  EE20 F00B          	lfsr	2,11
  3029  00016E  0100               	movlb	0	; () banked
  3030  000170  51D3               	movf	_ic_ptr& (0+255),w,b
  3031  000172  26D9               	addwf	fsr2l,f,c
  3032  000174  0100               	movlb	0	; () banked
  3033  000176  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3034  000178  22DA               	addwfc	fsr2h,f,c
  3035  00017A  2ADF               	incf	indf2,f,c
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;my_i2c.c: 180: if (data_read) {
  3039  00017C  5035               	movf	i2c_int_handler@data_read,w,c
  3040  00017E  B4D8               	btfsc	status,2,c
  3041  000180  D152               	goto	L8
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;my_i2c.c: 181: if (SSPSTATbits.D_A == 0) {
  3045  000182  BAC7               	btfsc	4039,5,c	;volatile
  3046  000184  D005               	goto	i2l1949
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;my_i2c.c: 182: msg_ready = 1;
  3050  000186  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3051  000188  0E01               	movlw	1
  3052  00018A  6E34               	movwf	i2c_int_handler@msg_ready,c
  3053  00018C  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3054                           
  3055                           ;my_i2c.c: 183: } else {
  3056  00018E  D14B               	goto	L8
  3057  000190                     i2l1949:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;my_i2c.c: 184: ic_ptr->error_count++;
  3061  000190  0100               	movlb	0	; () banked
  3062  000192  EE20 F00E          	lfsr	2,14
  3063  000196  0100               	movlb	0	; () banked
  3064  000198  51D3               	movf	_ic_ptr& (0+255),w,b
  3065  00019A  26D9               	addwf	fsr2l,f,c
  3066  00019C  0100               	movlb	0	; () banked
  3067  00019E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3068  0001A0  22DA               	addwfc	fsr2h,f,c
  3069  0001A2  2ADF               	incf	indf2,f,c
  3070                           
  3071                           ;my_i2c.c: 185: ic_ptr->error_code = 0x6;
  3072  0001A4  0100               	movlb	0	; () banked
  3073  0001A6  EE20 F00D          	lfsr	2,13
  3074  0001AA  0100               	movlb	0	; () banked
  3075  0001AC  51D3               	movf	_ic_ptr& (0+255),w,b
  3076  0001AE  26D9               	addwf	fsr2l,f,c
  3077  0001B0  0100               	movlb	0	; () banked
  3078  0001B2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3079  0001B4  22DA               	addwfc	fsr2h,f,c
  3080  0001B6  0E06               	movlw	6
  3081  0001B8  6EDF               	movwf	indf2,c
  3082                           
  3083                           ; BSR set to: 0
  3084  0001BA  D135               	goto	L8
  3085  0001BC                     i2l1951:
  3086                           
  3087                           ; BSR set to: 0
  3088  0001BC  5035               	movf	i2c_int_handler@data_read,w,c
  3089  0001BE  B4D8               	btfsc	status,2,c
  3090  0001C0  D153               	goto	i2l223
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;my_i2c.c: 190: ic_ptr->event_count++;
  3094  0001C2  0100               	movlb	0	; () banked
  3095  0001C4  EE20 F00B          	lfsr	2,11
  3096  0001C8  0100               	movlb	0	; () banked
  3097  0001CA  51D3               	movf	_ic_ptr& (0+255),w,b
  3098  0001CC  26D9               	addwf	fsr2l,f,c
  3099  0001CE  0100               	movlb	0	; () banked
  3100  0001D0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3101  0001D2  22DA               	addwfc	fsr2h,f,c
  3102  0001D4  2ADF               	incf	indf2,f,c
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;my_i2c.c: 191: if (SSPSTATbits.D_A == 0) {
  3106  0001D6  BAC7               	btfsc	4039,5,c	;volatile
  3107  0001D8  D019               	goto	i2l1967
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;my_i2c.c: 192: if (SSPSTATbits.R_W == 0) {
  3111  0001DA  B4C7               	btfsc	4039,2,c	;volatile
  3112  0001DC  D00B               	goto	i2l1961
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;my_i2c.c: 193: ic_ptr->status = 0x7;
  3116  0001DE  0100               	movlb	0	; () banked
  3117  0001E0  EE20 F00C          	lfsr	2,12
  3118  0001E4  0100               	movlb	0	; () banked
  3119  0001E6  51D3               	movf	_ic_ptr& (0+255),w,b
  3120  0001E8  26D9               	addwf	fsr2l,f,c
  3121  0001EA  0100               	movlb	0	; () banked
  3122  0001EC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3123  0001EE  22DA               	addwfc	fsr2h,f,c
  3124  0001F0  0E07               	movlw	7
  3125  0001F2  D06F               	goto	L5
  3126  0001F4                     i2l1961:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;my_i2c.c: 195: ic_ptr->status = 0x8;
  3130  0001F4  0100               	movlb	0	; () banked
  3131  0001F6  EE20 F00C          	lfsr	2,12
  3132  0001FA  0100               	movlb	0	; () banked
  3133  0001FC  51D3               	movf	_ic_ptr& (0+255),w,b
  3134  0001FE  26D9               	addwf	fsr2l,f,c
  3135  000200  0100               	movlb	0	; () banked
  3136  000202  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3137  000204  22DA               	addwfc	fsr2h,f,c
  3138  000206  0E08               	movlw	8
  3139  000208  6EDF               	movwf	indf2,c
  3140  00020A  D104               	goto	L9
  3141  00020C                     i2l1967:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;my_i2c.c: 201: ic_ptr->error_count++;
  3145  00020C  0100               	movlb	0	; () banked
  3146  00020E  EE20 F00E          	lfsr	2,14
  3147  000212  0100               	movlb	0	; () banked
  3148  000214  51D3               	movf	_ic_ptr& (0+255),w,b
  3149  000216  26D9               	addwf	fsr2l,f,c
  3150  000218  0100               	movlb	0	; () banked
  3151  00021A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3152  00021C  22DA               	addwfc	fsr2h,f,c
  3153  00021E  2ADF               	incf	indf2,f,c
  3154                           
  3155                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  3156  000220  0100               	movlb	0	; () banked
  3157  000222  EE20 F00C          	lfsr	2,12
  3158  000226  0100               	movlb	0	; () banked
  3159  000228  51D3               	movf	_ic_ptr& (0+255),w,b
  3160  00022A  26D9               	addwf	fsr2l,f,c
  3161  00022C  0100               	movlb	0	; () banked
  3162  00022E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3163  000230  22DA               	addwfc	fsr2h,f,c
  3164  000232  0E05               	movlw	5
  3165  000234  6EDF               	movwf	indf2,c
  3166                           
  3167                           ;my_i2c.c: 203: ic_ptr->error_code = 0x6;
  3168  000236  0100               	movlb	0	; () banked
  3169  000238  EE20 F00D          	lfsr	2,13
  3170  00023C  0100               	movlb	0	; () banked
  3171  00023E  51D3               	movf	_ic_ptr& (0+255),w,b
  3172  000240  26D9               	addwf	fsr2l,f,c
  3173  000242  0100               	movlb	0	; () banked
  3174  000244  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3175  000246  22DA               	addwfc	fsr2h,f,c
  3176  000248  0E06               	movlw	6
  3177  00024A  D043               	goto	L5
  3178  00024C                     i2l1969:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;my_i2c.c: 209: {
  3182                           ;my_i2c.c: 210: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  3183  00024C  0100               	movlb	0	; () banked
  3184  00024E  EE20 F077          	lfsr	2,119
  3185  000252  0100               	movlb	0	; () banked
  3186  000254  51D3               	movf	_ic_ptr& (0+255),w,b
  3187  000256  26D9               	addwf	fsr2l,f,c
  3188  000258  0100               	movlb	0	; () banked
  3189  00025A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3190  00025C  22DA               	addwfc	fsr2h,f,c
  3191  00025E  50DF               	movf	indf2,w,c
  3192  000260  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3193  000262  0100               	movlb	0	; () banked
  3194  000264  EE20 F076          	lfsr	2,118
  3195  000268  0100               	movlb	0	; () banked
  3196  00026A  51D3               	movf	_ic_ptr& (0+255),w,b
  3197  00026C  26D9               	addwf	fsr2l,f,c
  3198  00026E  0100               	movlb	0	; () banked
  3199  000270  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3200  000272  22DA               	addwfc	fsr2h,f,c
  3201  000274  50DF               	movf	indf2,w,c
  3202  000276  5C2C               	subwf	??_i2c_int_handler,w,c
  3203  000278  B0D8               	btfsc	status,0,c
  3204  00027A  D0D5               	goto	L8
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;my_i2c.c: 213: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  3208  00027C  0100               	movlb	0	; () banked
  3209  00027E  EE20 F077          	lfsr	2,119
  3210  000282  0100               	movlb	0	; () banked
  3211  000284  51D3               	movf	_ic_ptr& (0+255),w,b
  3212  000286  26D9               	addwf	fsr2l,f,c
  3213  000288  0100               	movlb	0	; () banked
  3214  00028A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3215  00028C  22DA               	addwfc	fsr2h,f,c
  3216  00028E  50DF               	movf	indf2,w,c
  3217  000290  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3218  000292  502C               	movf	??_i2c_int_handler,w,c
  3219  000294  0D01               	mullw	1
  3220  000296  0E0F               	movlw	15
  3221  000298  26F3               	addwf	prodl,f,c
  3222  00029A  0E00               	movlw	0
  3223  00029C  22F4               	addwfc	prodh,f,c
  3224  00029E  50F3               	movf	prodl,w,c
  3225  0002A0  0100               	movlb	0	; () banked
  3226  0002A2  0100               	movlb	0	; () banked
  3227  0002A4  25D3               	addwf	_ic_ptr& (0+255),w,b
  3228  0002A6  6ED9               	movwf	fsr2l,c
  3229  0002A8  50F4               	movf	prodh,w,c
  3230  0002AA  0100               	movlb	0	; () banked
  3231  0002AC  0100               	movlb	0	; () banked
  3232  0002AE  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3233  0002B0  6EDA               	movwf	fsr2h,c
  3234  0002B2  50DF               	movf	indf2,w,c
  3235  0002B4  6EC9               	movwf	4041,c	;volatile
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;my_i2c.c: 214: ic_ptr->outbufind++;
  3239  0002B6  0100               	movlb	0	; () banked
  3240  0002B8  EE20 F077          	lfsr	2,119
  3241  0002BC  0100               	movlb	0	; () banked
  3242  0002BE  51D3               	movf	_ic_ptr& (0+255),w,b
  3243  0002C0  26D9               	addwf	fsr2l,f,c
  3244  0002C2  0100               	movlb	0	; () banked
  3245  0002C4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3246  0002C6  22DA               	addwfc	fsr2h,f,c
  3247  0002C8  2ADF               	incf	indf2,f,c
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;my_i2c.c: 215: data_written = 1;
  3251  0002CA  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3252  0002CC  0E01               	movlw	1
  3253  0002CE  6E30               	movwf	i2c_int_handler@data_written,c
  3254  0002D0  D0A8               	goto	L6
  3255  0002D2                     L5:
  3256  0002D2  6EDF               	movwf	indf2,c
  3257  0002D4  D0C9               	goto	i2l223
  3258  0002D6                     i2l243:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;my_i2c.c: 223: {
  3262                           ;my_i2c.c: 225: if (SSPSTATbits.P == 1) {
  3263  0002D6  A8C7               	btfss	4039,4,c	;volatile
  3264  0002D8  D059               	goto	i2l1997
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;my_i2c.c: 227: ic_ptr->event_count++;
  3268  0002DA  0100               	movlb	0	; () banked
  3269  0002DC  EE20 F00B          	lfsr	2,11
  3270  0002E0  0100               	movlb	0	; () banked
  3271  0002E2  51D3               	movf	_ic_ptr& (0+255),w,b
  3272  0002E4  26D9               	addwf	fsr2l,f,c
  3273  0002E6  0100               	movlb	0	; () banked
  3274  0002E8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3275  0002EA  22DA               	addwfc	fsr2h,f,c
  3276  0002EC  2ADF               	incf	indf2,f,c
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;my_i2c.c: 228: if (data_read) {
  3280  0002EE  5035               	movf	i2c_int_handler@data_read,w,c
  3281  0002F0  B4D8               	btfsc	status,2,c
  3282  0002F2  D047               	goto	i2l1993
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;my_i2c.c: 229: if (SSPSTATbits.D_A == 1) {
  3286  0002F4  AAC7               	btfss	4039,5,c	;volatile
  3287  0002F6  D024               	goto	i2l1991
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;my_i2c.c: 230: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  3291  0002F8  0100               	movlb	0	; () banked
  3292  0002FA  EE20 F00A          	lfsr	2,10
  3293  0002FE  0100               	movlb	0	; () banked
  3294  000300  51D3               	movf	_ic_ptr& (0+255),w,b
  3295  000302  26D9               	addwf	fsr2l,f,c
  3296  000304  0100               	movlb	0	; () banked
  3297  000306  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3298  000308  22DA               	addwfc	fsr2h,f,c
  3299  00030A  50DF               	movf	indf2,w,c
  3300  00030C  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3301  00030E  502C               	movf	??_i2c_int_handler,w,c
  3302  000310  0D01               	mullw	1
  3303  000312  50F3               	movf	prodl,w,c
  3304  000314  0100               	movlb	0	; () banked
  3305  000316  0100               	movlb	0	; () banked
  3306  000318  25D3               	addwf	_ic_ptr& (0+255),w,b
  3307  00031A  6ED9               	movwf	fsr2l,c
  3308  00031C  50F4               	movf	prodh,w,c
  3309  00031E  0100               	movlb	0	; () banked
  3310  000320  0100               	movlb	0	; () banked
  3311  000322  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3312  000324  6EDA               	movwf	fsr2h,c
  3313  000326  C032  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;my_i2c.c: 231: ic_ptr->buflen++;
  3317  00032A  0100               	movlb	0	; () banked
  3318  00032C  EE20 F00A          	lfsr	2,10
  3319  000330  0100               	movlb	0	; () banked
  3320  000332  51D3               	movf	_ic_ptr& (0+255),w,b
  3321  000334  26D9               	addwf	fsr2l,f,c
  3322  000336  0100               	movlb	0	; () banked
  3323  000338  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3324  00033A  22DA               	addwfc	fsr2h,f,c
  3325  00033C  2ADF               	incf	indf2,f,c
  3326  00033E  D021               	goto	i2l1993
  3327  000340                     i2l1991:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;my_i2c.c: 234: ic_ptr->error_count++;
  3331  000340  0100               	movlb	0	; () banked
  3332  000342  EE20 F00E          	lfsr	2,14
  3333  000346  0100               	movlb	0	; () banked
  3334  000348  51D3               	movf	_ic_ptr& (0+255),w,b
  3335  00034A  26D9               	addwf	fsr2l,f,c
  3336  00034C  0100               	movlb	0	; () banked
  3337  00034E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3338  000350  22DA               	addwfc	fsr2h,f,c
  3339  000352  2ADF               	incf	indf2,f,c
  3340                           
  3341                           ;my_i2c.c: 235: ic_ptr->error_code = 0x6;
  3342  000354  0100               	movlb	0	; () banked
  3343  000356  EE20 F00D          	lfsr	2,13
  3344  00035A  0100               	movlb	0	; () banked
  3345  00035C  51D3               	movf	_ic_ptr& (0+255),w,b
  3346  00035E  26D9               	addwf	fsr2l,f,c
  3347  000360  0100               	movlb	0	; () banked
  3348  000362  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3349  000364  22DA               	addwfc	fsr2h,f,c
  3350  000366  0E06               	movlw	6
  3351  000368  6EDF               	movwf	indf2,c
  3352                           
  3353                           ;my_i2c.c: 236: ic_ptr->status = 0x5;
  3354  00036A  0100               	movlb	0	; () banked
  3355  00036C  EE20 F00C          	lfsr	2,12
  3356  000370  0100               	movlb	0	; () banked
  3357  000372  51D3               	movf	_ic_ptr& (0+255),w,b
  3358  000374  26D9               	addwf	fsr2l,f,c
  3359  000376  0100               	movlb	0	; () banked
  3360  000378  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3361  00037A  22DA               	addwfc	fsr2h,f,c
  3362  00037C  0E05               	movlw	5
  3363  00037E  6EDF               	movwf	indf2,c
  3364  000380  D052               	goto	L8
  3365  000382                     i2l1993:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;my_i2c.c: 239: msg_ready = 1;
  3369  000382  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3370  000384  0E01               	movlw	1
  3371  000386  6E34               	movwf	i2c_int_handler@msg_ready,c
  3372  000388  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3373                           
  3374                           ; BSR set to: 0
  3375  00038A  D04D               	goto	L8
  3376  00038C                     i2l1997:
  3377                           
  3378                           ; BSR set to: 0
  3379  00038C  5035               	movf	i2c_int_handler@data_read,w,c
  3380  00038E  B4D8               	btfsc	status,2,c
  3381  000390  D06B               	goto	i2l223
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;my_i2c.c: 243: ic_ptr->event_count++;
  3385  000392  0100               	movlb	0	; () banked
  3386  000394  EE20 F00B          	lfsr	2,11
  3387  000398  0100               	movlb	0	; () banked
  3388  00039A  51D3               	movf	_ic_ptr& (0+255),w,b
  3389  00039C  26D9               	addwf	fsr2l,f,c
  3390  00039E  0100               	movlb	0	; () banked
  3391  0003A0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3392  0003A2  22DA               	addwfc	fsr2h,f,c
  3393  0003A4  2ADF               	incf	indf2,f,c
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;my_i2c.c: 244: if (SSPSTATbits.D_A == 1) {
  3397  0003A6  AAC7               	btfss	4039,5,c	;volatile
  3398  0003A8  D024               	goto	i2l251
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;my_i2c.c: 245: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  3402  0003AA  0100               	movlb	0	; () banked
  3403  0003AC  EE20 F00A          	lfsr	2,10
  3404  0003B0  0100               	movlb	0	; () banked
  3405  0003B2  51D3               	movf	_ic_ptr& (0+255),w,b
  3406  0003B4  26D9               	addwf	fsr2l,f,c
  3407  0003B6  0100               	movlb	0	; () banked
  3408  0003B8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3409  0003BA  22DA               	addwfc	fsr2h,f,c
  3410  0003BC  50DF               	movf	indf2,w,c
  3411  0003BE  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3412  0003C0  502C               	movf	??_i2c_int_handler,w,c
  3413  0003C2  0D01               	mullw	1
  3414  0003C4  50F3               	movf	prodl,w,c
  3415  0003C6  0100               	movlb	0	; () banked
  3416  0003C8  0100               	movlb	0	; () banked
  3417  0003CA  25D3               	addwf	_ic_ptr& (0+255),w,b
  3418  0003CC  6ED9               	movwf	fsr2l,c
  3419  0003CE  50F4               	movf	prodh,w,c
  3420  0003D0  0100               	movlb	0	; () banked
  3421  0003D2  0100               	movlb	0	; () banked
  3422  0003D4  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3423  0003D6  6EDA               	movwf	fsr2h,c
  3424  0003D8  C032  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;my_i2c.c: 246: ic_ptr->buflen++;
  3428  0003DC  0100               	movlb	0	; () banked
  3429  0003DE  EE20 F00A          	lfsr	2,10
  3430  0003E2  0100               	movlb	0	; () banked
  3431  0003E4  51D3               	movf	_ic_ptr& (0+255),w,b
  3432  0003E6  26D9               	addwf	fsr2l,f,c
  3433  0003E8  0100               	movlb	0	; () banked
  3434  0003EA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3435  0003EC  22DA               	addwfc	fsr2h,f,c
  3436  0003EE  2ADF               	incf	indf2,f,c
  3437                           
  3438                           ;my_i2c.c: 247: } else {
  3439  0003F0  D03B               	goto	i2l223
  3440  0003F2                     i2l251:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;my_i2c.c: 248: if (SSPSTATbits.R_W == 1) {
  3444  0003F2  A4C7               	btfss	4039,2,c	;volatile
  3445  0003F4  D6CD               	goto	i2l1949
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;my_i2c.c: 249: ic_ptr->status = 0x8;
  3449  0003F6  0100               	movlb	0	; () banked
  3450  0003F8  EE20 F00C          	lfsr	2,12
  3451  0003FC  0100               	movlb	0	; () banked
  3452  0003FE  51D3               	movf	_ic_ptr& (0+255),w,b
  3453  000400  26D9               	addwf	fsr2l,f,c
  3454  000402  0100               	movlb	0	; () banked
  3455  000404  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3456  000406  22DA               	addwfc	fsr2h,f,c
  3457  000408  0E08               	movlw	8
  3458  00040A  6EDF               	movwf	indf2,c
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;my_i2c.c: 250: msg_ready = 1;
  3462  00040C  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3463  00040E  0E01               	movlw	1
  3464  000410  6E34               	movwf	i2c_int_handler@msg_ready,c
  3465  000412  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3466  000414                     L9:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;my_i2c.c: 251: msg_to_send = 1;
  3470  000414  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3471  000416  0E01               	movlw	1
  3472  000418  6E33               	movwf	i2c_int_handler@msg_to_send,c
  3473  00041A  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;my_i2c.c: 253: data_read = 0;
  3477  00041C  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3478  00041E  0E00               	movlw	0
  3479  000420  6E35               	movwf	i2c_int_handler@data_read,c
  3480  000422                     L6:
  3481  000422  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3482                           
  3483                           ;my_i2c.c: 254: } else {
  3484  000424  D021               	goto	i2l223
  3485  000426                     L8:
  3486                           
  3487                           ;my_i2c.c: 257: ic_ptr->status = 0x5;
  3488  000426  0100               	movlb	0	; () banked
  3489  000428  EE20 F00C          	lfsr	2,12
  3490  00042C  0100               	movlb	0	; () banked
  3491  00042E  51D3               	movf	_ic_ptr& (0+255),w,b
  3492  000430  26D9               	addwf	fsr2l,f,c
  3493  000432  0100               	movlb	0	; () banked
  3494  000434  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3495  000436  22DA               	addwfc	fsr2h,f,c
  3496  000438  0E05               	movlw	5
  3497  00043A  D74B               	goto	L5
  3498  00043C                     i2l2019:
  3499  00043C  0100               	movlb	0	; () banked
  3500  00043E  EE20 F00C          	lfsr	2,12
  3501  000442  0100               	movlb	0	; () banked
  3502  000444  51D3               	movf	_ic_ptr& (0+255),w,b
  3503  000446  26D9               	addwf	fsr2l,f,c
  3504  000448  0100               	movlb	0	; () banked
  3505  00044A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3506  00044C  22DA               	addwfc	fsr2h,f,c
  3507  00044E  50DF               	movf	indf2,w,c
  3508                           
  3509                           ; Switch size 1, requested type "space"
  3510                           ; Number of cases is 4, Range of values is 5 to 8
  3511                           ; switch strategies available:
  3512                           ; Name         Instructions Cycles
  3513                           ; simple_byte           13     7 (average)
  3514                           ;	Chosen strategy is simple_byte
  3515  000450  0A05               	xorlw	5	; case 5
  3516  000452  B4D8               	btfsc	status,2,c
  3517  000454  D66E               	goto	i2l225
  3518  000456  0A03               	xorlw	3	; case 6
  3519  000458  B4D8               	btfsc	status,2,c
  3520  00045A  D684               	goto	i2l229
  3521  00045C  0A01               	xorlw	1	; case 7
  3522  00045E  B4D8               	btfsc	status,2,c
  3523  000460  D73A               	goto	i2l243
  3524  000462  0A0F               	xorlw	15	; case 8
  3525  000464  B4D8               	btfsc	status,2,c
  3526  000466  D6F2               	goto	i2l1969
  3527  000468                     i2l223:
  3528                           
  3529                           ;my_i2c.c: 264: }
  3530                           ;my_i2c.c: 267: if (data_read || data_written) {
  3531  000468  6635               	tstfsz	i2c_int_handler@data_read,c
  3532  00046A  D003               	goto	i2l257
  3533  00046C  5030               	movf	i2c_int_handler@data_written,w,c
  3534  00046E  B4D8               	btfsc	status,2,c
  3535  000470  D002               	goto	i2l2025
  3536  000472                     i2l257:
  3537                           
  3538                           ;my_i2c.c: 272: if (SSPCON1bits.CKP == 0) {
  3539  000472  A8C6               	btfss	4038,4,c	;volatile
  3540                           
  3541                           ;my_i2c.c: 273: SSPCON1bits.CKP = 1;
  3542  000474  88C6               	bsf	4038,4,c	;volatile
  3543  000476                     i2l2025:
  3544                           
  3545                           ;my_i2c.c: 274: }
  3546                           ;my_i2c.c: 275: }
  3547                           ;my_i2c.c: 278: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  3548  000476  0100               	movlb	0	; () banked
  3549  000478  EE20 F00A          	lfsr	2,10
  3550  00047C  0100               	movlb	0	; () banked
  3551  00047E  51D3               	movf	_ic_ptr& (0+255),w,b
  3552  000480  26D9               	addwf	fsr2l,f,c
  3553  000482  0100               	movlb	0	; () banked
  3554  000484  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3555  000486  22DA               	addwfc	fsr2h,f,c
  3556  000488  0E08               	movlw	8
  3557  00048A  64DF               	cpfsgt	indf2,c
  3558  00048C  D022               	goto	i2l2031
  3559                           
  3560                           ; BSR set to: 0
  3561  00048E  6634               	tstfsz	i2c_int_handler@msg_ready,c
  3562  000490  D020               	goto	i2l2031
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;my_i2c.c: 279: ic_ptr->status = 0x5;
  3566  000492  0100               	movlb	0	; () banked
  3567  000494  EE20 F00C          	lfsr	2,12
  3568  000498  0100               	movlb	0	; () banked
  3569  00049A  51D3               	movf	_ic_ptr& (0+255),w,b
  3570  00049C  26D9               	addwf	fsr2l,f,c
  3571  00049E  0100               	movlb	0	; () banked
  3572  0004A0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3573  0004A2  22DA               	addwfc	fsr2h,f,c
  3574  0004A4  0E05               	movlw	5
  3575  0004A6  6EDF               	movwf	indf2,c
  3576                           
  3577                           ;my_i2c.c: 280: ic_ptr->error_count++;
  3578  0004A8  0100               	movlb	0	; () banked
  3579  0004AA  EE20 F00E          	lfsr	2,14
  3580  0004AE  0100               	movlb	0	; () banked
  3581  0004B0  51D3               	movf	_ic_ptr& (0+255),w,b
  3582  0004B2  26D9               	addwf	fsr2l,f,c
  3583  0004B4  0100               	movlb	0	; () banked
  3584  0004B6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3585  0004B8  22DA               	addwfc	fsr2h,f,c
  3586  0004BA  2ADF               	incf	indf2,f,c
  3587                           
  3588                           ;my_i2c.c: 281: ic_ptr->error_code = 0x7;
  3589  0004BC  0100               	movlb	0	; () banked
  3590  0004BE  EE20 F00D          	lfsr	2,13
  3591  0004C2  0100               	movlb	0	; () banked
  3592  0004C4  51D3               	movf	_ic_ptr& (0+255),w,b
  3593  0004C6  26D9               	addwf	fsr2l,f,c
  3594  0004C8  0100               	movlb	0	; () banked
  3595  0004CA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3596  0004CC  22DA               	addwfc	fsr2h,f,c
  3597  0004CE  0E07               	movlw	7
  3598  0004D0  6EDF               	movwf	indf2,c
  3599  0004D2                     i2l2031:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;my_i2c.c: 282: }
  3603                           ;my_i2c.c: 284: if (msg_ready) {
  3604  0004D2  5034               	movf	i2c_int_handler@msg_ready,w,c
  3605  0004D4  B4D8               	btfsc	status,2,c
  3606  0004D6  D004               	goto	i2l2035
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;my_i2c.c: 291: ic_ptr->buflen = 0;
  3610  0004D8  0100               	movlb	0	; () banked
  3611  0004DA  EE20 F00A          	lfsr	2,10
  3612  0004DE  D03B               	goto	L7
  3613  0004E0                     i2l2035:
  3614                           
  3615                           ; BSR set to: 0
  3616  0004E0  0100               	movlb	0	; () banked
  3617  0004E2  EE20 F00E          	lfsr	2,14
  3618  0004E6  0100               	movlb	0	; () banked
  3619  0004E8  51D3               	movf	_ic_ptr& (0+255),w,b
  3620  0004EA  26D9               	addwf	fsr2l,f,c
  3621  0004EC  0100               	movlb	0	; () banked
  3622  0004EE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3623  0004F0  22DA               	addwfc	fsr2h,f,c
  3624  0004F2  50DF               	movf	indf2,w,c
  3625  0004F4  B4D8               	btfsc	status,2,c
  3626  0004F6  D037               	goto	i2l2043
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;my_i2c.c: 293: error_buf[0] = ic_ptr->error_count;
  3630  0004F8  0100               	movlb	0	; () banked
  3631  0004FA  EE20 F00E          	lfsr	2,14
  3632  0004FE  0100               	movlb	0	; () banked
  3633  000500  51D3               	movf	_ic_ptr& (0+255),w,b
  3634  000502  26D9               	addwf	fsr2l,f,c
  3635  000504  0100               	movlb	0	; () banked
  3636  000506  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3637  000508  22DA               	addwfc	fsr2h,f,c
  3638  00050A  50DF               	movf	indf2,w,c
  3639  00050C  6E2D               	movwf	i2c_int_handler@error_buf,c
  3640                           
  3641                           ;my_i2c.c: 294: error_buf[1] = ic_ptr->error_code;
  3642  00050E  0100               	movlb	0	; () banked
  3643  000510  EE20 F00D          	lfsr	2,13
  3644  000514  0100               	movlb	0	; () banked
  3645  000516  51D3               	movf	_ic_ptr& (0+255),w,b
  3646  000518  26D9               	addwf	fsr2l,f,c
  3647  00051A  0100               	movlb	0	; () banked
  3648  00051C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3649  00051E  22DA               	addwfc	fsr2h,f,c
  3650  000520  50DF               	movf	indf2,w,c
  3651  000522  6E2E               	movwf	i2c_int_handler@error_buf+1,c
  3652                           
  3653                           ;my_i2c.c: 295: error_buf[2] = ic_ptr->event_count;
  3654  000524  0100               	movlb	0	; () banked
  3655  000526  EE20 F00B          	lfsr	2,11
  3656  00052A  0100               	movlb	0	; () banked
  3657  00052C  51D3               	movf	_ic_ptr& (0+255),w,b
  3658  00052E  26D9               	addwf	fsr2l,f,c
  3659  000530  0100               	movlb	0	; () banked
  3660  000532  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3661  000534  22DA               	addwfc	fsr2h,f,c
  3662  000536  50DF               	movf	indf2,w,c
  3663  000538  6E2F               	movwf	i2c_int_handler@error_buf+2,c
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;my_i2c.c: 296: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  3667  00053A  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3668  00053C  0E29               	movlw	41
  3669  00053E  6E28               	movwf	ToMainHigh_sendmsg@msgtype,c
  3670  000540  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3671  000542  0E00               	movlw	high i2c_int_handler@error_buf
  3672  000544  6E2A               	movwf	ToMainHigh_sendmsg@data+1,c
  3673  000546  0E2D               	movlw	low i2c_int_handler@error_buf
  3674  000548  6E29               	movwf	ToMainHigh_sendmsg@data,c
  3675  00054A  0E03               	movlw	3
  3676  00054C  EC22  F007         	call	_ToMainHigh_sendmsg
  3677                           
  3678                           ;my_i2c.c: 297: ic_ptr->error_count = 0;
  3679  000550  0100               	movlb	0	; () banked
  3680  000552  EE20 F00E          	lfsr	2,14
  3681  000556                     L7:
  3682  000556  0100               	movlb	0	; () banked
  3683  000558  51D3               	movf	_ic_ptr& (0+255),w,b
  3684  00055A  26D9               	addwf	fsr2l,f,c
  3685  00055C  0100               	movlb	0	; () banked
  3686  00055E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3687  000560  22DA               	addwfc	fsr2h,f,c
  3688  000562  0E00               	movlw	0
  3689  000564  6EDF               	movwf	indf2,c
  3690  000566                     i2l2043:
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;my_i2c.c: 298: }
  3694                           ;my_i2c.c: 299: if (msg_to_send) {
  3695  000566  5033               	movf	i2c_int_handler@msg_to_send,w,c
  3696  000568  B4D8               	btfsc	status,2,c
  3697  00056A  0012               	return	
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;my_i2c.c: 303: msg_to_send = 0;
  3701  00056C  6E2C               	movwf	??_i2c_int_handler& (0+255),c
  3702  00056E  0E00               	movlw	0
  3703  000570  6E33               	movwf	i2c_int_handler@msg_to_send,c
  3704  000572  502C               	movf	??_i2c_int_handler& (0+255),w,c
  3705  000574  0012               	return	
  3706  000576                     __end_of_i2c_int_handler:
  3707                           	opt stack 0
  3708                           pclatu	equ	0xFFB
  3709                           pclath	equ	0xFFA
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           postinc0	equ	0xFEE
  3718                           fsr0h	equ	0xFEA
  3719                           fsr0l	equ	0xFE9
  3720                           wreg	equ	0xFE8
  3721                           indf1	equ	0xFE7
  3722                           postdec1	equ	0xFE5
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           bsr	equ	0xFE0
  3726                           indf2	equ	0xFDF
  3727                           fsr2h	equ	0xFDA
  3728                           fsr2l	equ	0xFD9
  3729                           status	equ	0xFD8
  3730                           
  3731 ;; *************** function _handle_start *****************
  3732 ;; Defined at:
  3733 ;;		line 102 in file "../src/my_i2c.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  data_read       1    wreg     unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  data_read       1   17[COMRAM] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3747 ;;      Params:         0       0       0       0       0
  3748 ;;      Locals:         1       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         1       0       0       0       0
  3751 ;;Total ram usage:        1 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_i2c_int_handler
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text20
  3761  00079E                     __ptext20:
  3762                           	opt stack 0
  3763  00079E                     _handle_start:
  3764                           	opt stack 23
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;incstack = 0
  3768                           ;handle_start@data_read stored from wreg
  3769  00079E  CFE8 F012          	movff	wreg,handle_start@data_read
  3770                           
  3771                           ;my_i2c.c: 103: ic_ptr->event_count = 1;
  3772  0007A2  0100               	movlb	0	; () banked
  3773  0007A4  EE20 F00B          	lfsr	2,11
  3774  0007A8  0100               	movlb	0	; () banked
  3775  0007AA  51D3               	movf	_ic_ptr& (0+255),w,b
  3776  0007AC  26D9               	addwf	fsr2l,f,c
  3777  0007AE  0100               	movlb	0	; () banked
  3778  0007B0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3779  0007B2  22DA               	addwfc	fsr2h,f,c
  3780  0007B4  0E01               	movlw	1
  3781  0007B6  6EDF               	movwf	indf2,c
  3782                           
  3783                           ;my_i2c.c: 104: ic_ptr->buflen = 0;
  3784  0007B8  0100               	movlb	0	; () banked
  3785  0007BA  EE20 F00A          	lfsr	2,10
  3786  0007BE  0100               	movlb	0	; () banked
  3787  0007C0  51D3               	movf	_ic_ptr& (0+255),w,b
  3788  0007C2  26D9               	addwf	fsr2l,f,c
  3789  0007C4  0100               	movlb	0	; () banked
  3790  0007C6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3791  0007C8  22DA               	addwfc	fsr2h,f,c
  3792  0007CA  0E00               	movlw	0
  3793  0007CC  6EDF               	movwf	indf2,c
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;my_i2c.c: 106: if (data_read) {
  3797  0007CE  5012               	movf	handle_start@data_read,w,c
  3798  0007D0  B4D8               	btfsc	status,2,c
  3799  0007D2  D03D               	goto	i2l2309
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;my_i2c.c: 107: if (SSPSTATbits.D_A == 1) {
  3803  0007D4  AAC7               	btfss	4039,5,c	;volatile
  3804  0007D6  D021               	goto	i2l213
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;my_i2c.c: 110: ic_ptr->status = 0x5;
  3808  0007D8  0100               	movlb	0	; () banked
  3809  0007DA  EE20 F00C          	lfsr	2,12
  3810  0007DE  0100               	movlb	0	; () banked
  3811  0007E0  51D3               	movf	_ic_ptr& (0+255),w,b
  3812  0007E2  26D9               	addwf	fsr2l,f,c
  3813  0007E4  0100               	movlb	0	; () banked
  3814  0007E6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3815  0007E8  22DA               	addwfc	fsr2h,f,c
  3816  0007EA  0E05               	movlw	5
  3817  0007EC  6EDF               	movwf	indf2,c
  3818                           
  3819                           ;my_i2c.c: 111: ic_ptr->error_count++;
  3820  0007EE  0100               	movlb	0	; () banked
  3821  0007F0  EE20 F00E          	lfsr	2,14
  3822  0007F4  0100               	movlb	0	; () banked
  3823  0007F6  51D3               	movf	_ic_ptr& (0+255),w,b
  3824  0007F8  26D9               	addwf	fsr2l,f,c
  3825  0007FA  0100               	movlb	0	; () banked
  3826  0007FC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3827  0007FE  22DA               	addwfc	fsr2h,f,c
  3828  000800  2ADF               	incf	indf2,f,c
  3829                           
  3830                           ;my_i2c.c: 112: ic_ptr->error_code = 0x5;
  3831  000802  0100               	movlb	0	; () banked
  3832  000804  EE20 F00D          	lfsr	2,13
  3833  000808  0100               	movlb	0	; () banked
  3834  00080A  51D3               	movf	_ic_ptr& (0+255),w,b
  3835  00080C  26D9               	addwf	fsr2l,f,c
  3836  00080E  0100               	movlb	0	; () banked
  3837  000810  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3838  000812  22DA               	addwfc	fsr2h,f,c
  3839  000814  0E05               	movlw	5
  3840  000816  6EDF               	movwf	indf2,c
  3841                           
  3842                           ;my_i2c.c: 113: } else {
  3843  000818  0012               	return	
  3844  00081A                     i2l213:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;my_i2c.c: 114: if (SSPSTATbits.R_W == 1) {
  3848  00081A  A4C7               	btfss	4039,2,c	;volatile
  3849  00081C  D00C               	goto	i2l2307
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;my_i2c.c: 115: ic_ptr->status = 0x8;
  3853  00081E  0100               	movlb	0	; () banked
  3854  000820  EE20 F00C          	lfsr	2,12
  3855  000824  0100               	movlb	0	; () banked
  3856  000826  51D3               	movf	_ic_ptr& (0+255),w,b
  3857  000828  26D9               	addwf	fsr2l,f,c
  3858  00082A  0100               	movlb	0	; () banked
  3859  00082C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3860  00082E  22DA               	addwfc	fsr2h,f,c
  3861  000830  0E08               	movlw	8
  3862  000832  6EDF               	movwf	indf2,c
  3863                           
  3864                           ;my_i2c.c: 116: } else {
  3865  000834  0012               	return	
  3866  000836                     i2l2307:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;my_i2c.c: 117: ic_ptr->status = 0x7;
  3870  000836  0100               	movlb	0	; () banked
  3871  000838  EE20 F00C          	lfsr	2,12
  3872  00083C  0100               	movlb	0	; () banked
  3873  00083E  51D3               	movf	_ic_ptr& (0+255),w,b
  3874  000840  26D9               	addwf	fsr2l,f,c
  3875  000842  0100               	movlb	0	; () banked
  3876  000844  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3877  000846  22DA               	addwfc	fsr2h,f,c
  3878  000848  0E07               	movlw	7
  3879  00084A  6EDF               	movwf	indf2,c
  3880  00084C  0012               	return	
  3881  00084E                     i2l2309:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;my_i2c.c: 121: ic_ptr->status = 0x6;
  3885  00084E  0100               	movlb	0	; () banked
  3886  000850  EE20 F00C          	lfsr	2,12
  3887  000854  0100               	movlb	0	; () banked
  3888  000856  51D3               	movf	_ic_ptr& (0+255),w,b
  3889  000858  26D9               	addwf	fsr2l,f,c
  3890  00085A  0100               	movlb	0	; () banked
  3891  00085C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3892  00085E  22DA               	addwfc	fsr2h,f,c
  3893  000860  0E06               	movlw	6
  3894  000862  6EDF               	movwf	indf2,c
  3895  000864  0012               	return	
  3896  000866                     __end_of_handle_start:
  3897                           	opt stack 0
  3898                           pclatu	equ	0xFFB
  3899                           pclath	equ	0xFFA
  3900                           tblptru	equ	0xFF8
  3901                           tblptrh	equ	0xFF7
  3902                           tblptrl	equ	0xFF6
  3903                           tablat	equ	0xFF5
  3904                           prodh	equ	0xFF4
  3905                           prodl	equ	0xFF3
  3906                           intcon	equ	0xFF2
  3907                           postinc0	equ	0xFEE
  3908                           fsr0h	equ	0xFEA
  3909                           fsr0l	equ	0xFE9
  3910                           wreg	equ	0xFE8
  3911                           indf1	equ	0xFE7
  3912                           postdec1	equ	0xFE5
  3913                           fsr1h	equ	0xFE2
  3914                           fsr1l	equ	0xFE1
  3915                           bsr	equ	0xFE0
  3916                           indf2	equ	0xFDF
  3917                           fsr2h	equ	0xFDA
  3918                           fsr2l	equ	0xFD9
  3919                           status	equ	0xFD8
  3920                           
  3921 ;; *************** function _ToMainHigh_sendmsg *****************
  3922 ;; Defined at:
  3923 ;;		line 127 in file "../src/messages.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  length          1    wreg     unsigned char 
  3926 ;;  msgtype         1   39[COMRAM] unsigned char 
  3927 ;;  data            2   40[COMRAM] PTR void 
  3928 ;;		 -> ADCBuffer(5), reqADData@buf(10), i2c_int_handler@error_buf(3), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  length          1   42[COMRAM] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      char 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3940 ;;      Params:         3       0       0       0       0
  3941 ;;      Locals:         1       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0
  3943 ;;      Totals:         4       0       0       0       0
  3944 ;;Total ram usage:        4 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    2
  3947 ;; This function calls:
  3948 ;;		_send_msg
  3949 ;; This function is called by:
  3950 ;;		_i2c_int_handler
  3951 ;;		_reqADData
  3952 ;;		_adc_int_handler
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text21
  3957  000E44                     __ptext21:
  3958                           	opt stack 0
  3959  000E44                     _ToMainHigh_sendmsg:
  3960                           	opt stack 21
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;incstack = 0
  3964                           ;ToMainHigh_sendmsg@length stored from wreg
  3965  000E44  CFE8 F02B          	movff	wreg,ToMainHigh_sendmsg@length
  3966                           
  3967                           ;messages.c: 133: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  3968                           ;	Return value of _ToMainHigh_sendmsg is never used
  3969  000E48  0101               	movlb	1	; () banked
  3970  000E4A  0E01               	movlw	high _ToMainHigh_MQ
  3971  000E4C  6E1D               	movwf	send_msg@qptr+1,c
  3972  000E4E  0101               	movlb	1	; () banked
  3973  000E50  0EBF               	movlw	low _ToMainHigh_MQ
  3974  000E52  6E1C               	movwf	send_msg@qptr,c
  3975  000E54  C02B  F01E         	movff	ToMainHigh_sendmsg@length,send_msg@length
  3976  000E58  C028  F01F         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  3977  000E5C  C02A  F021         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  3978  000E60  C029  F020         	movff	ToMainHigh_sendmsg@data,send_msg@data
  3979  000E64  EC33  F004         	call	_send_msg	;wreg free
  3980  000E68  0012               	return	
  3981  000E6A                     __end_of_ToMainHigh_sendmsg:
  3982                           	opt stack 0
  3983                           pclatu	equ	0xFFB
  3984                           pclath	equ	0xFFA
  3985                           tblptru	equ	0xFF8
  3986                           tblptrh	equ	0xFF7
  3987                           tblptrl	equ	0xFF6
  3988                           tablat	equ	0xFF5
  3989                           prodh	equ	0xFF4
  3990                           prodl	equ	0xFF3
  3991                           intcon	equ	0xFF2
  3992                           postinc0	equ	0xFEE
  3993                           fsr0h	equ	0xFEA
  3994                           fsr0l	equ	0xFE9
  3995                           wreg	equ	0xFE8
  3996                           indf1	equ	0xFE7
  3997                           postdec1	equ	0xFE5
  3998                           fsr1h	equ	0xFE2
  3999                           fsr1l	equ	0xFE1
  4000                           bsr	equ	0xFE0
  4001                           indf2	equ	0xFDF
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _send_msg *****************
  4007 ;; Defined at:
  4008 ;;		line 25 in file "../src/messages.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  qptr            2   27[COMRAM] PTR struct __msg_queue
  4011 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4012 ;;  length          1   29[COMRAM] unsigned char 
  4013 ;;  msgtype         1   30[COMRAM] unsigned char 
  4014 ;;  data            2   31[COMRAM] PTR void 
  4015 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  qmsg            2   37[COMRAM] PTR struct __msg
  4018 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4019 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4020 ;;  tlength         2   34[COMRAM] unsigned int 
  4021 ;;  slot            1   36[COMRAM] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      char 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4031 ;;      Params:         6       0       0       0       0
  4032 ;;      Locals:         5       0       0       0       0
  4033 ;;      Temps:          1       0       0       0       0
  4034 ;;      Totals:        12       0       0       0       0
  4035 ;;Total ram usage:       12 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    1
  4038 ;; This function calls:
  4039 ;;		i2_memcpy
  4040 ;; This function is called by:
  4041 ;;		_ToMainHigh_sendmsg
  4042 ;;		_ToMainLow_sendmsg
  4043 ;;		_FromMainLow_sendmsg
  4044 ;;		_FromMainHigh_sendmsg
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text22
  4049  000866                     __ptext22:
  4050                           	opt stack 0
  4051  000866                     _send_msg:
  4052                           	opt stack 21
  4053                           
  4054                           ;messages.c: 26: unsigned char slot;
  4055                           ;messages.c: 28: msg *qmsg;
  4056                           ;messages.c: 29: size_t tlength = length;
  4057                           
  4058                           ;incstack = 0
  4059  000866  C01E  F023         	movff	send_msg@length,send_msg@tlength
  4060  00086A  6A24               	clrf	send_msg@tlength+1,c
  4061                           
  4062                           ;messages.c: 39: slot = qptr->cur_write_ind;
  4063  00086C  EE20 F034          	lfsr	2,52
  4064  000870  501C               	movf	send_msg@qptr,w,c
  4065  000872  26D9               	addwf	fsr2l,f,c
  4066  000874  501D               	movf	send_msg@qptr+1,w,c
  4067  000876  22DA               	addwfc	fsr2h,f,c
  4068  000878  50DF               	movf	indf2,w,c
  4069  00087A  6E25               	movwf	send_msg@slot,c
  4070                           
  4071                           ;messages.c: 40: qmsg = &(qptr->queue[slot]);
  4072  00087C  5025               	movf	send_msg@slot,w,c
  4073  00087E  0D0D               	mullw	13
  4074  000880  50F3               	movf	prodl,w,c
  4075  000882  241C               	addwf	send_msg@qptr,w,c
  4076  000884  6E26               	movwf	send_msg@qmsg,c
  4077  000886  50F4               	movf	prodh,w,c
  4078  000888  201D               	addwfc	send_msg@qptr+1,w,c
  4079  00088A  6E27               	movwf	send_msg@qmsg+1,c
  4080                           
  4081                           ;messages.c: 42: if (qmsg->full != 0) {
  4082  00088C  C026  FFD9         	movff	send_msg@qmsg,fsr2l
  4083  000890  C027  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4084  000894  50DF               	movf	indf2,w,c
  4085  000896  B4D8               	btfsc	status,2,c
  4086  000898  D002               	goto	i2l2197
  4087                           
  4088                           ;messages.c: 43: return (-1);
  4089  00089A  0EFF               	movlw	255
  4090  00089C  0012               	return	
  4091  00089E                     i2l2197:
  4092                           
  4093                           ;messages.c: 44: }
  4094                           ;messages.c: 47: qmsg->length = length;
  4095  00089E  EE20 F001          	lfsr	2,1
  4096  0008A2  5026               	movf	send_msg@qmsg,w,c
  4097  0008A4  26D9               	addwf	fsr2l,f,c
  4098  0008A6  5027               	movf	send_msg@qmsg+1,w,c
  4099  0008A8  22DA               	addwfc	fsr2h,f,c
  4100  0008AA  C01E  FFDF         	movff	send_msg@length,indf2
  4101                           
  4102                           ;messages.c: 48: qmsg->msgtype = msgtype;
  4103  0008AE  EE20 F002          	lfsr	2,2
  4104  0008B2  5026               	movf	send_msg@qmsg,w,c
  4105  0008B4  26D9               	addwf	fsr2l,f,c
  4106  0008B6  5027               	movf	send_msg@qmsg+1,w,c
  4107  0008B8  22DA               	addwfc	fsr2h,f,c
  4108  0008BA  C01F  FFDF         	movff	send_msg@msgtype,indf2
  4109                           
  4110                           ;messages.c: 56: memcpy(qmsg->data, data, tlength);
  4111  0008BE  0E03               	movlw	3
  4112  0008C0  2426               	addwf	send_msg@qmsg,w,c
  4113  0008C2  6E12               	movwf	i2memcpy@d1,c
  4114  0008C4  0E00               	movlw	0
  4115  0008C6  2027               	addwfc	send_msg@qmsg+1,w,c
  4116  0008C8  6E13               	movwf	i2memcpy@d1+1,c
  4117  0008CA  C021  F015         	movff	send_msg@data+1,i2memcpy@s1+1
  4118  0008CE  C020  F014         	movff	send_msg@data,i2memcpy@s1
  4119  0008D2  C023  F016         	movff	send_msg@tlength,i2memcpy@n
  4120  0008D6  C024  F017         	movff	send_msg@tlength+1,i2memcpy@n+1
  4121  0008DA  ECBB  F006         	call	i2_memcpy	;wreg free
  4122                           
  4123                           ;messages.c: 57: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4124  0008DE  EE20 F034          	lfsr	2,52
  4125  0008E2  501C               	movf	send_msg@qptr,w,c
  4126  0008E4  26D9               	addwf	fsr2l,f,c
  4127  0008E6  501D               	movf	send_msg@qptr+1,w,c
  4128  0008E8  22DA               	addwfc	fsr2h,f,c
  4129  0008EA  EE10 F034          	lfsr	1,52
  4130  0008EE  501C               	movf	send_msg@qptr,w,c
  4131  0008F0  26E1               	addwf	fsr1l,f,c
  4132  0008F2  501D               	movf	send_msg@qptr+1,w,c
  4133  0008F4  22E2               	addwfc	fsr1h,f,c
  4134  0008F6  50E7               	movf	indf1,w,c
  4135  0008F8  6E22               	movwf	??_send_msg& (0+255),c
  4136  0008FA  2822               	incf	??_send_msg,w,c
  4137  0008FC  0B03               	andlw	3
  4138  0008FE  6EDF               	movwf	indf2,c
  4139                           
  4140                           ;messages.c: 60: qmsg->full = 1;
  4141  000900  C026  FFD9         	movff	send_msg@qmsg,fsr2l
  4142  000904  C027  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4143  000908  0E01               	movlw	1
  4144  00090A  6EDF               	movwf	indf2,c
  4145                           
  4146                           ;messages.c: 61: return (1);
  4147  00090C  0E01               	movlw	1
  4148  00090E  0012               	return	
  4149  000910                     __end_of_send_msg:
  4150                           	opt stack 0
  4151                           pclatu	equ	0xFFB
  4152                           pclath	equ	0xFFA
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           prodh	equ	0xFF4
  4158                           prodl	equ	0xFF3
  4159                           intcon	equ	0xFF2
  4160                           postinc0	equ	0xFEE
  4161                           fsr0h	equ	0xFEA
  4162                           fsr0l	equ	0xFE9
  4163                           wreg	equ	0xFE8
  4164                           indf1	equ	0xFE7
  4165                           postdec1	equ	0xFE5
  4166                           fsr1h	equ	0xFE2
  4167                           fsr1l	equ	0xFE1
  4168                           bsr	equ	0xFE0
  4169                           indf2	equ	0xFDF
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function i2_memcpy *****************
  4175 ;; Defined at:
  4176 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  d1              2   17[COMRAM] PTR void 
  4179 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4180 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4181 ;;		 -> main@msgbuffer(11), 
  4182 ;;  s1              2   19[COMRAM] PTR const void 
  4183 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4184 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4185 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4186 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4187 ;;  n               2   21[COMRAM] unsigned int 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  memcpy          2   25[COMRAM] PTR const unsigned char 
  4190 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4191 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4192 ;;		 -> ADCBuffer(5), reqADData@buf(10), NULL(0), i2c_int_handler@error_buf(3), 
  4193 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4194 ;;  memcpy          2   23[COMRAM] PTR unsigned char 
  4195 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4196 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4197 ;;		 -> main@msgbuffer(11), 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2   17[COMRAM] PTR void 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4207 ;;      Params:         6       0       0       0       0
  4208 ;;      Locals:         4       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0
  4210 ;;      Totals:        10       0       0       0       0
  4211 ;;Total ram usage:       10 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_send_msg
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text23
  4221  000D76                     __ptext23:
  4222                           	opt stack 0
  4223  000D76                     i2_memcpy:
  4224                           	opt stack 21
  4225                           
  4226                           ;incstack = 0
  4227  000D76  C015  F01B         	movff	i2memcpy@s1+1,i2memcpy@s+1
  4228  000D7A  C014  F01A         	movff	i2memcpy@s1,i2memcpy@s
  4229  000D7E  C013  F019         	movff	i2memcpy@d1+1,i2memcpy@d+1
  4230  000D82  C012  F018         	movff	i2memcpy@d1,i2memcpy@d
  4231  000D86  D00E               	goto	i2l2405
  4232  000D88                     i2l2399:
  4233  000D88  C01A  FFD9         	movff	i2memcpy@s,fsr2l
  4234  000D8C  C01B  FFDA         	movff	i2memcpy@s+1,fsr2h
  4235  000D90  C018  FFE1         	movff	i2memcpy@d,fsr1l
  4236  000D94  C019  FFE2         	movff	i2memcpy@d+1,fsr1h
  4237  000D98  CFDF FFE7          	movff	indf2,indf1
  4238  000D9C  4A1A               	infsnz	i2memcpy@s,f,c
  4239  000D9E  2A1B               	incf	i2memcpy@s+1,f,c
  4240  000DA0  4A18               	infsnz	i2memcpy@d,f,c
  4241  000DA2  2A19               	incf	i2memcpy@d+1,f,c
  4242  000DA4                     i2l2405:
  4243  000DA4  0616               	decf	i2memcpy@n,f,c
  4244  000DA6  A0D8               	btfss	status,0,c
  4245  000DA8  0617               	decf	i2memcpy@n+1,f,c
  4246  000DAA  2816               	incf	i2memcpy@n& (0+255),w,c
  4247  000DAC  B4D8               	btfsc	status,2,c
  4248  000DAE  2817               	incf	(i2memcpy@n+1)& (0+255),w,c
  4249  000DB0  B4D8               	btfsc	status,2,c
  4250                           
  4251                           ;	Return value of i2_memcpy is never used
  4252  000DB2  0012               	return	
  4253  000DB4  D7E9               	goto	i2l2399
  4254  000DB6                     __end_ofi2_memcpy:
  4255                           	opt stack 0
  4256                           pclatu	equ	0xFFB
  4257                           pclath	equ	0xFFA
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           prodh	equ	0xFF4
  4263                           prodl	equ	0xFF3
  4264                           intcon	equ	0xFF2
  4265                           postinc0	equ	0xFEE
  4266                           fsr0h	equ	0xFEA
  4267                           fsr0l	equ	0xFE9
  4268                           wreg	equ	0xFE8
  4269                           indf1	equ	0xFE7
  4270                           postdec1	equ	0xFE5
  4271                           fsr1h	equ	0xFE2
  4272                           fsr1l	equ	0xFE1
  4273                           bsr	equ	0xFE0
  4274                           indf2	equ	0xFDF
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279 ;; *************** function _SleepIfOkay *****************
  4280 ;; Defined at:
  4281 ;;		line 229 in file "../src/messages.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;		None               void
  4288 ;; Registers used:
  4289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4295 ;;      Params:         0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    2
  4302 ;; This function calls:
  4303 ;;		_enter_sleep_mode
  4304 ;;		i2_check_msg
  4305 ;;		i2_in_high_int
  4306 ;;		i2_in_low_int
  4307 ;; This function is called by:
  4308 ;;		_InterruptHandlerHigh
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text24
  4313  000C1A                     __ptext24:
  4314                           	opt stack 0
  4315  000C1A                     _SleepIfOkay:
  4316                           	opt stack 22
  4317                           
  4318                           ;messages.c: 231: if (MQ_Main_Willing_to_block == 0) {
  4319                           
  4320                           ;incstack = 0
  4321  000C1A  6646               	tstfsz	_MQ_Main_Willing_to_block,c
  4322  000C1C  D001               	goto	i2l2051
  4323  000C1E  0012               	return	
  4324  000C20                     i2l2051:
  4325                           
  4326                           ;messages.c: 233: }
  4327                           ;messages.c: 236: if (in_low_int()) {
  4328  000C20  ECF6  F006         	call	i2_in_low_int	;wreg free
  4329  000C24  5015               	movf	?i2_in_low_int+1,w,c
  4330  000C26  1014               	iorwf	?i2_in_low_int,w,c
  4331  000C28  A4D8               	btfss	status,2,c
  4332  000C2A  0012               	return	
  4333                           
  4334                           ;messages.c: 238: }
  4335                           ;messages.c: 241: if (!in_high_int()) {
  4336                           
  4337                           ;messages.c: 237: return;
  4338  000C2C  EC5B  F007         	call	i2_in_high_int	;wreg free
  4339  000C30  5013               	movf	?i2_in_high_int+1,w,c
  4340  000C32  1012               	iorwf	?i2_in_high_int,w,c
  4341  000C34  B4D8               	btfsc	status,2,c
  4342  000C36  0012               	return	
  4343                           
  4344                           ;messages.c: 243: }
  4345                           ;messages.c: 248: if (check_msg(&ToMainHigh_MQ)) {
  4346                           
  4347                           ;messages.c: 242: return;
  4348  000C38  0101               	movlb	1	; () banked
  4349  000C3A  0E01               	movlw	high _ToMainHigh_MQ
  4350  000C3C  6E13               	movwf	i2check_msg@qptr+1,c
  4351  000C3E  0101               	movlb	1	; () banked
  4352  000C40  0EBF               	movlw	low _ToMainHigh_MQ
  4353  000C42  6E12               	movwf	i2check_msg@qptr,c
  4354  000C44  EC35  F007         	call	i2_check_msg	;wreg free
  4355  000C48  0900               	iorlw	0
  4356  000C4A  A4D8               	btfss	status,2,c
  4357  000C4C  0012               	return	
  4358                           
  4359                           ;messages.c: 250: }
  4360                           ;messages.c: 251: if (check_msg(&ToMainLow_MQ)) {
  4361                           
  4362                           ;messages.c: 249: return;
  4363  000C4E  0100               	movlb	0	; () banked
  4364  000C50  0E00               	movlw	high _ToMainLow_MQ
  4365  000C52  6E13               	movwf	i2check_msg@qptr+1,c
  4366  000C54  0100               	movlb	0	; () banked
  4367  000C56  0E80               	movlw	low _ToMainLow_MQ
  4368  000C58  6E12               	movwf	i2check_msg@qptr,c
  4369  000C5A  EC35  F007         	call	i2_check_msg	;wreg free
  4370  000C5E  0900               	iorlw	0
  4371  000C60  B4D8               	btfsc	status,2,c
  4372                           
  4373                           ;messages.c: 253: }
  4374                           ;messages.c: 254: enter_sleep_mode();
  4375                           
  4376                           ;messages.c: 252: return;
  4377  000C62  EC65  F007         	call	_enter_sleep_mode	;wreg free
  4378  000C66  0012               	return	
  4379  000C68                     __end_of_SleepIfOkay:
  4380                           	opt stack 0
  4381                           pclatu	equ	0xFFB
  4382                           pclath	equ	0xFFA
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           prodh	equ	0xFF4
  4388                           prodl	equ	0xFF3
  4389                           intcon	equ	0xFF2
  4390                           postinc0	equ	0xFEE
  4391                           fsr0h	equ	0xFEA
  4392                           fsr0l	equ	0xFE9
  4393                           wreg	equ	0xFE8
  4394                           indf1	equ	0xFE7
  4395                           postdec1	equ	0xFE5
  4396                           fsr1h	equ	0xFE2
  4397                           fsr1l	equ	0xFE1
  4398                           bsr	equ	0xFE0
  4399                           indf2	equ	0xFDF
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function i2_in_low_int *****************
  4405 ;; Defined at:
  4406 ;;		line 32 in file "../src/interrupts.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  2   19[COMRAM] int 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4420 ;;      Params:         2       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0
  4423 ;;      Totals:         2       0       0       0       0
  4424 ;;Total ram usage:        2 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    1
  4427 ;; This function calls:
  4428 ;;		i2_in_high_int
  4429 ;; This function is called by:
  4430 ;;		_SleepIfOkay
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text25
  4435  000DEC                     __ptext25:
  4436                           	opt stack 0
  4437  000DEC                     i2_in_low_int:
  4438                           	opt stack 22
  4439                           
  4440                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  4441                           
  4442                           ;incstack = 0
  4443  000DEC  ACF2               	btfss	intcon,6,c	;volatile
  4444  000DEE  D005               	goto	i2l2381
  4445                           
  4446                           ;interrupts.c: 34: return (0);
  4447  000DF0  0E00               	movlw	0
  4448  000DF2  6E15               	movwf	?i2_in_low_int+1,c
  4449  000DF4  0E00               	movlw	0
  4450  000DF6  6E14               	movwf	?i2_in_low_int,c
  4451  000DF8  0012               	return	
  4452  000DFA                     i2l2381:
  4453  000DFA  EC5B  F007         	call	i2_in_high_int	;wreg free
  4454  000DFE  5013               	movf	?i2_in_high_int+1,w,c
  4455  000E00  1012               	iorwf	?i2_in_high_int,w,c
  4456  000E02  B4D8               	btfsc	status,2,c
  4457  000E04  D005               	goto	i2l2389
  4458                           
  4459                           ;interrupts.c: 36: return (0);
  4460  000E06  0E00               	movlw	0
  4461  000E08  6E15               	movwf	?i2_in_low_int+1,c
  4462  000E0A  0E00               	movlw	0
  4463  000E0C  6E14               	movwf	?i2_in_low_int,c
  4464  000E0E  0012               	return	
  4465  000E10                     i2l2389:
  4466                           
  4467                           ;interrupts.c: 38: return (1);
  4468  000E10  0E00               	movlw	0
  4469  000E12  6E15               	movwf	?i2_in_low_int+1,c
  4470  000E14  0E01               	movlw	1
  4471  000E16  6E14               	movwf	?i2_in_low_int,c
  4472  000E18  0012               	return	
  4473  000E1A                     __end_ofi2_in_low_int:
  4474                           	opt stack 0
  4475                           pclatu	equ	0xFFB
  4476                           pclath	equ	0xFFA
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           intcon	equ	0xFF2
  4484                           postinc0	equ	0xFEE
  4485                           fsr0h	equ	0xFEA
  4486                           fsr0l	equ	0xFE9
  4487                           wreg	equ	0xFE8
  4488                           indf1	equ	0xFE7
  4489                           postdec1	equ	0xFE5
  4490                           fsr1h	equ	0xFE2
  4491                           fsr1l	equ	0xFE1
  4492                           bsr	equ	0xFE0
  4493                           indf2	equ	0xFDF
  4494                           fsr2h	equ	0xFDA
  4495                           fsr2l	equ	0xFD9
  4496                           status	equ	0xFD8
  4497                           
  4498 ;; *************** function i2_in_high_int *****************
  4499 ;; Defined at:
  4500 ;;		line 24 in file "../src/interrupts.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;		None
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2   17[COMRAM] int 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4514 ;;      Params:         2       0       0       0       0
  4515 ;;      Locals:         0       0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0
  4517 ;;      Totals:         2       0       0       0       0
  4518 ;;Total ram usage:        2 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_SleepIfOkay
  4524 ;;		i2_in_low_int
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text26
  4529  000EB6                     __ptext26:
  4530                           	opt stack 0
  4531  000EB6                     i2_in_high_int:
  4532                           	opt stack 22
  4533                           
  4534                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  4535                           
  4536                           ;incstack = 0
  4537  000EB6  0E00               	movlw	0
  4538  000EB8  AEF2               	btfss	intcon,7,c	;volatile
  4539  000EBA  0E01               	movlw	1
  4540  000EBC  6E12               	movwf	?i2_in_high_int,c
  4541  000EBE  6A13               	clrf	?i2_in_high_int+1,c
  4542  000EC0  0012               	return	
  4543  000EC2                     __end_ofi2_in_high_int:
  4544                           	opt stack 0
  4545                           pclatu	equ	0xFFB
  4546                           pclath	equ	0xFFA
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           intcon	equ	0xFF2
  4554                           postinc0	equ	0xFEE
  4555                           fsr0h	equ	0xFEA
  4556                           fsr0l	equ	0xFE9
  4557                           wreg	equ	0xFE8
  4558                           indf1	equ	0xFE7
  4559                           postdec1	equ	0xFE5
  4560                           fsr1h	equ	0xFE2
  4561                           fsr1l	equ	0xFE1
  4562                           bsr	equ	0xFE0
  4563                           indf2	equ	0xFDF
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function i2_check_msg *****************
  4569 ;; Defined at:
  4570 ;;		line 223 in file "../src/messages.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  qptr            2   17[COMRAM] PTR struct __msg_queue
  4573 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4585 ;;      Params:         2       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0
  4587 ;;      Temps:          1       0       0       0       0
  4588 ;;      Totals:         3       0       0       0       0
  4589 ;;Total ram usage:        3 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_SleepIfOkay
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text27
  4599  000E6A                     __ptext27:
  4600                           	opt stack 0
  4601  000E6A                     i2_check_msg:
  4602                           	opt stack 23
  4603                           
  4604                           ;messages.c: 224: return (qptr->queue[qptr->cur_read_ind].full);
  4605                           
  4606                           ;incstack = 0
  4607  000E6A  EE20 F035          	lfsr	2,53
  4608  000E6E  5012               	movf	i2check_msg@qptr,w,c
  4609  000E70  26D9               	addwf	fsr2l,f,c
  4610  000E72  5013               	movf	i2check_msg@qptr+1,w,c
  4611  000E74  22DA               	addwfc	fsr2h,f,c
  4612  000E76  50DF               	movf	indf2,w,c
  4613  000E78  6E14               	movwf	??i2_check_msg& (0+255),c
  4614  000E7A  5014               	movf	??i2_check_msg,w,c
  4615  000E7C  0D0D               	mullw	13
  4616  000E7E  50F3               	movf	prodl,w,c
  4617  000E80  2412               	addwf	i2check_msg@qptr,w,c
  4618  000E82  6ED9               	movwf	fsr2l,c
  4619  000E84  50F4               	movf	prodh,w,c
  4620  000E86  2013               	addwfc	i2check_msg@qptr+1,w,c
  4621  000E88  6EDA               	movwf	fsr2h,c
  4622  000E8A  50DF               	movf	indf2,w,c
  4623  000E8C  0012               	return	
  4624  000E8E                     __end_ofi2_check_msg:
  4625                           	opt stack 0
  4626                           pclatu	equ	0xFFB
  4627                           pclath	equ	0xFFA
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           postinc0	equ	0xFEE
  4636                           fsr0h	equ	0xFEA
  4637                           fsr0l	equ	0xFE9
  4638                           wreg	equ	0xFE8
  4639                           indf1	equ	0xFE7
  4640                           postdec1	equ	0xFE5
  4641                           fsr1h	equ	0xFE2
  4642                           fsr1l	equ	0xFE1
  4643                           bsr	equ	0xFE0
  4644                           indf2	equ	0xFDF
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _enter_sleep_mode *****************
  4650 ;; Defined at:
  4651 ;;		line 203 in file "../src/messages.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;		None               void
  4658 ;; Registers used:
  4659 ;;		None
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4665 ;;      Params:         0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0
  4668 ;;      Totals:         0       0       0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_SleepIfOkay
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text28
  4679  000ECA                     __ptext28:
  4680                           	opt stack 0
  4681  000ECA                     _enter_sleep_mode:
  4682                           	opt stack 23
  4683                           
  4684                           ;messages.c: 205: OSCCONbits.IDLEN = 1;
  4685                           
  4686                           ;incstack = 0
  4687  000ECA  8ED3               	bsf	4051,7,c	;volatile
  4688  000ECC  0003               	sleep		;# 
  4689  000ECE  0012               	return	
  4690  000ED0                     __end_of_enter_sleep_mode:
  4691                           	opt stack 0
  4692  0000                     pclatu	equ	0xFFB
  4693                           pclath	equ	0xFFA
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           prodh	equ	0xFF4
  4699                           prodl	equ	0xFF3
  4700                           intcon	equ	0xFF2
  4701                           postinc0	equ	0xFEE
  4702                           fsr0h	equ	0xFEA
  4703                           fsr0l	equ	0xFE9
  4704                           wreg	equ	0xFE8
  4705                           indf1	equ	0xFE7
  4706                           postdec1	equ	0xFE5
  4707                           fsr1h	equ	0xFE2
  4708                           fsr1l	equ	0xFE1
  4709                           bsr	equ	0xFE0
  4710                           indf2	equ	0xFDF
  4711                           fsr2h	equ	0xFDA
  4712                           fsr2l	equ	0xFD9
  4713                           status	equ	0xFD8
  4714                           pclatu	equ	0xFFB
  4715                           pclath	equ	0xFFA
  4716                           tblptru	equ	0xFF8
  4717                           tblptrh	equ	0xFF7
  4718                           tblptrl	equ	0xFF6
  4719                           tablat	equ	0xFF5
  4720                           prodh	equ	0xFF4
  4721                           prodl	equ	0xFF3
  4722                           intcon	equ	0xFF2
  4723                           postinc0	equ	0xFEE
  4724                           fsr0h	equ	0xFEA
  4725                           fsr0l	equ	0xFE9
  4726                           wreg	equ	0xFE8
  4727                           indf1	equ	0xFE7
  4728                           postdec1	equ	0xFE5
  4729                           fsr1h	equ	0xFE2
  4730                           fsr1l	equ	0xFE1
  4731                           bsr	equ	0xFE0
  4732                           indf2	equ	0xFDF
  4733                           fsr2h	equ	0xFDA
  4734                           fsr2l	equ	0xFD9
  4735                           status	equ	0xFD8
  4736                           
  4737                           	psect	rparam
  4738  0000                     pclatu	equ	0xFFB
  4739                           pclath	equ	0xFFA
  4740                           tblptru	equ	0xFF8
  4741                           tblptrh	equ	0xFF7
  4742                           tblptrl	equ	0xFF6
  4743                           tablat	equ	0xFF5
  4744                           prodh	equ	0xFF4
  4745                           prodl	equ	0xFF3
  4746                           intcon	equ	0xFF2
  4747                           postinc0	equ	0xFEE
  4748                           fsr0h	equ	0xFEA
  4749                           fsr0l	equ	0xFE9
  4750                           wreg	equ	0xFE8
  4751                           indf1	equ	0xFE7
  4752                           postdec1	equ	0xFE5
  4753                           fsr1h	equ	0xFE2
  4754                           fsr1l	equ	0xFE1
  4755                           bsr	equ	0xFE0
  4756                           indf2	equ	0xFDF
  4757                           fsr2h	equ	0xFDA
  4758                           fsr2l	equ	0xFD9
  4759                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         227
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67      83
    BANK0           128     29      85
    BANK1           256    137     245
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    S1424$0$0	PTR struct . size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    S1424$adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    unpackRoverMsg@handler.adFunc	PTR FTN(PTR struct .,int ,)int  size(2) Largest target is 0

    sp__unpackBrainMsg	PTR struct . size(2) Largest target is 0

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 121
		 -> main@ic(BANK1[121]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 121
		 -> NULL(NULL[0]), main@ic(BANK1[121]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), i2c_int_handler@error_buf(COMRAM[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 10
		 -> ADCBuffer(COMRAM[5]), reqADData@buf(COMRAM[10]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               148   148      0    5182
                                              0 BANK1    137   137      0
                         _OpenTimer0
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                           _init_i2c
                        _init_queues
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                              4 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                              6 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1999
                                             24 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1999
                                             24 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1805
                                             10 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     426
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerHigh                                14    14      0    2975
                                             53 COMRAM    14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (7) _timer0_int_handler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c_int_handler                                     10    10      0    2739
                                             43 COMRAM    10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (8) _handle_start                                         1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ToMainHigh_sendmsg                                   4     1      3    2337
                                             39 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (9) _send_msg                                            12     6      6    1887
                                             27 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (10) i2_memcpy                                           10     4      6     530
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _SleepIfOkay                                          0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (8) i2_in_low_int                                         2     0      2       0
                                             19 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (9) i2_in_high_int                                        2     0      2       0
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i2_check_msg                                          3     1      2     236
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _enter_sleep_mode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _init_i2c
   _init_queues
     _init_queue

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       _send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     89      F5       6       95.7%
BITBANK0            80      0       0       3        0.0%
BANK0               80     1D      55       4       66.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D3      11        0.0%
DATA                 0      0     1D3      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Feb 19 11:22:15 2014

      _MQ_Main_Willing_to_block 0046                     _SSPSTATbits 000FC7                              l78 0734  
     __end_of_ToMainLow_recvmsg 0D34                              bsr 000FE0                    __CFG_CP0$OFF 000000  
                           l477 0E3E                             l478 0E40                             l719 0E92  
                _FromMainLow_MQ 0189                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00B6                            l2101 0758                            l2211 0B84  
                          l2231 05E2                            l2217 0BA8                            l2161 0A08  
                          l2155 09DC                            l2149 09B0                            l2247 06A8  
                          l2089 06F2                            l2179 0A58                            l2099 073A  
                          l1871 0C7C                            l1893 0CE2                            l1879 0C9E  
                          _LATB 000F8A                            u1407 0E94                 _FromMainHigh_MQ 0200  
                 __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001                            _main 06AC  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 010F  
                          pclat 000FFA                     i2_check_msg 0E6A                            prodh 000FF4  
                          prodl 000FF3           handle_start@data_read 0012                            start 00A2  
                 __CFG_FOSC2$ON 000000       ToMainHigh_recvmsg@msgtype 00CE                  send_msg@length 001E  
   __size_of_timer0_int_handler 0002                     _Delay1KTCYx 0E8E                           ?_main 0001  
                         _T0CON 000FD5                           i2l213 081A                           i2l223 0468  
                         i2l225 0132                           i2l251 03F2                           i2l243 02D6  
                         i2l229 0164                           i2l257 0472                           _RCREG 000FAE  
                         _TMR0H 000FD7                           _TMR1H 000FCF                           _TMR0L 000FD6  
                         _TMR1L 000FCE                           _TRISB 000F93                      i2memcpy@d1 0012  
                    i2memcpy@s1 0014                    ?_init_queues 0001       __size_of_enter_sleep_mode 0006  
               __end_of_in_main 0CF2                           _count 0048      ToMainLow_recvmsg@maxlength 00D2  
                         tablat 000FF5                           status 000FD8                __end_ofi2_memcpy 0DB6  
               __initialization 0BC0                    __end_of_main 079E      __size_of_ToMainLow_recvmsg 0042  
         __size_ofi2_in_low_int 002E                          ??_main 00D3                 send_msg@msgtype 001F  
                 __activetblptr 000002                 send_msg@tlength 0023            __end_of_handle_start 0866  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          i2l2031 04D2  
                        i2l2025 0476                          i2l2051 0C20                          i2l2043 0566  
                        i2l2035 04E0                          i2l2019 043C                          i2l2307 0836  
                        i2l2405 0DA4                          i2l2309 084E                      _OpenTimer0 0E1A  
                        i2l2381 0DFA                          i2l2197 089E                  __CFG_WDTEN$OFF 000000  
                        i2l1903 094A                          i2l1931 012C                          i2l2389 0E10  
                        i2l1925 011C                          i2l1909 0954                          i2l2399 0D88  
                        i2l1951 01BC                          i2l1961 01F4                          i2l1949 0190  
                        i2l1991 0340                          i2l1967 020C                          i2l1993 0382  
                        i2l1969 024C                          i2l1997 038C                   ??_SleepIfOkay 0016  
                        _OSCCON 000FD3                          _SSPADD 000FC8                          _SSPBUF 000FC9  
                  i2_in_low_int 0DEC                  __CFG_XINST$OFF 000000                 _i2c_int_handler 00A6  
              OpenTimer0@config 00B6                          _ic_ptr 00D3                   main@msgbuffer 0100  
              __end_of_init_i2c 0B62                          _memcpy 0B62                          clear_0 0BC6  
                        clear_1 0BD2                          clear_2 0BDE                          clear_3 0BEA  
                        _uc_ptr 0044                          main@ic 0110                __end_of_recv_msg 06AC  
                     ??_in_main 00BC                __end_of_send_msg 0910                    __pdataCOMRAM 004F  
       i2c_int_handler@i2c_data 0032                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     init_queue@i 00B9        ToMainLow_recvmsg@msgtype 00CE  
          __size_of_in_high_int 0012                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 0C10      __end_of_ToMainHigh_recvmsg 0D76      __end_of_ToMainHigh_sendmsg 0E6A  
           __end_of_SleepIfOkay 0C68                  __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C  
            __size_of_check_msg 0036   __size_of_InterruptHandlerHigh 098A     __end_of_InterruptHandlerLow 00A2  
                     ?i2_memcpy 0012                   _ToMainHigh_MQ 01BF                _enter_sleep_mode 0ECA  
                 check_msg@qptr 00B6         ??_block_on_To_msgqueues 00BC            __size_of_init_queues 006E  
                    __pbssBANK0 0080                      __pbssBANK1 0189                      __pbssBANK2 0200  
                   ?_OpenTimer0 0001         __end_of_i2c_int_handler 0576                    ?i2_check_msg 0012  
             recv_msg@maxlength 00C2                 recv_msg@msgtype 00C3                 recv_msg@tlength 00CA  
         __size_of_handle_start 00C8                    ?_Delay1KTCYx 0001                         ?_memcpy 00B6  
                    ??i2_memcpy 0018                   i2_in_high_int 0EB6                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7               __end_of_check_msg 0DEC  
                     ?_init_i2c 00B6                     _SleepIfOkay 0C1A                       _ADCBuffer 004A  
                     ?_recv_msg 00C0                      _in_low_int 0C68                    _handle_start 079E  
                       __Hparam 0000                       ?_send_msg 001C                         __Lparam 0000  
    __end_of_timer0_int_handler 0ED8                 __CFG_STVREN$OFF 000000                         __pcinit 0BC0  
               __size_of_memcpy 005E                      _init_queue 0A10                         __ramtop 0400  
           __size_of_OpenTimer0 002A                         __ptext0 06AC                         __ptext1 0A8A  
                       __ptext2 0A10                         __ptext3 0AF8                         __ptext4 0EC2  
                       __ptext5 0992                         __ptext6 0CAE                         __ptext7 0C68  
                       __ptext8 0EA4                         __ptext9 0DB6                       _T0CONbits 000FD5  
                       _in_main 0CAE                         _sample1 004F                         _sample2 0050  
                       _sample3 0051                         _sample4 0052                         _sample5 0053  
                ?i2_in_high_int 0012                  __pintcode_body 0910            end_of_initialization 0C10  
                       memcpy@d 00BC                         memcpy@n 00BA                         memcpy@s 00BE  
                    ??_init_i2c 00B8     i2c_int_handler@data_written 0030                   __Lmediumconst 0000  
                       int_func 0910                ?_i2c_int_handler 0001                      ??_recv_msg 00C7  
                    ??_send_msg 0022                       _RCSTAbits 000FAB                         postdec1 000FE5  
                       postinc0 000FEE       ToMainHigh_sendmsg@msgtype 0028                       _TRISAbits 000F92  
                     _TRISCbits 000F94                      main@length 010E                     ?_in_low_int 00B8  
          __size_ofi2_check_msg 0024        __end_of_enter_sleep_mode 0ED0              _ToMainHigh_recvmsg 0D34  
            _ToMainHigh_sendmsg 0E44                   __pidataCOMRAM 0ED0                     ?_init_queue 00B6  
                     i2memcpy@d 0018                       i2memcpy@n 0016                       i2memcpy@s 001A  
                __end_of_memcpy 0BC0               _enable_interrupts 0EC2            __size_of_Delay1KTCYx 0016  
           ?_ToMainHigh_recvmsg 00CE                 ??i2_in_high_int 0014        i2c_int_handler@data_read 0035  
           ?_ToMainHigh_sendmsg 0028              ?_enable_interrupts 0001             start_initialization 0BC0  
                 ??_in_high_int 00B8               __size_ofi2_memcpy 0040             ??_enable_interrupts 00B6  
                  ??_OpenTimer0 00B6  __size_of_block_on_To_msgqueues 007E   __end_of_block_on_To_msgqueues 0A10  
  __end_of_InterruptHandlerHigh 0992                      init_i2c@ic 00B6            ??_ToMainHigh_recvmsg 00D2  
          ??_ToMainHigh_sendmsg 002B        i2c_int_handler@error_buf 002D       __end_of_enable_interrupts 0ECA  
                      ??_memcpy 00BC              __end_of_OpenTimer0 0E44        i2c_int_handler@msg_ready 0034  
                   __pbssCOMRAM 0044                   ??_init_queues 00BA                   __pcstackBANK0 00B6  
                 __pcstackBANK1 0100             __size_of_in_low_int 0046             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 00B6    __size_of_InterruptHandlerLow 008A             __end_of_in_high_int 0EB6  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 00D0                    _ToMainLow_MQ 0080  
           __size_of_init_queue 007A                       _check_msg 0DB6                       __pnvBANK0 00D3  
             __size_of_init_i2c 006A                    recv_msg@data 00C5                    recv_msg@qmsg 00CC  
                  recv_msg@slot 00C9                    recv_msg@qptr 00C0               __size_of_recv_msg 0136  
                     __pintcode 0008               __size_of_send_msg 00AA                     __pintcodelo 0018  
        ToMainHigh_recvmsg@data 00D0      i2c_int_handler@msg_to_send 0033                        ?_in_main 00BA  
            _timer0_int_handler 0ED6             ?_timer0_int_handler 0001             __end_of_init_queues 0AF8  
                      _LATBbits 000F8A                 i2check_msg@qptr 0012                      ?_check_msg 00B6  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                   ?i2_in_low_int 0014  
                      _PIR1bits 000F9E          ToMainHigh_sendmsg@data 0029                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000            ??_timer0_int_handler 0012      __size_of_enable_interrupts 0008  
                    _ADCON0bits 000FC2            _InterruptHandlerHigh 0008                        i2_memcpy 0D76  
                   _in_high_int 0EA4                    send_msg@data 0020                    send_msg@qmsg 0026  
                  send_msg@slot 0025                    send_msg@qptr 001C                       copy_data0 0C04  
                ??i2_in_low_int 0016                    ??_in_low_int 00BA                        __Hrparam 0000  
                      __Lrparam 0000               ?_enter_sleep_mode 0001        __size_of_i2c_int_handler 04D0  
            ??_enter_sleep_mode 0012                    ??_init_queue 00B8           ?_InterruptHandlerHigh 0001  
              __size_of_in_main 0044     ToMainHigh_recvmsg@maxlength 00D2                     _init_queues 0A8A  
            __end_of_in_low_int 0CAE                        __ptext10 0E8E                        __ptext11 0CF2  
                      __ptext20 079E                        __ptext12 0D34                        __ptext21 0E44  
                      __ptext13 0576                        __ptext22 0866                        __ptext14 0B62  
                      __ptext23 0D76                        __ptext15 0E1A                        __ptext24 0C1A  
                      __ptext25 0DEC                        __ptext26 0EB6                        __ptext18 0ED6  
                      __ptext27 0E6A                        __ptext19 00A6                        __ptext28 0ECA  
                      _init_i2c 0AF8                   __size_of_main 00F2                   ??i2_check_msg 0014  
                   ??_check_msg 00B8              __end_of_init_queue 0A8A            __size_of_SleepIfOkay 004E  
                      _recv_msg 0576                        _send_msg 0866                  init_queue@qptr 00B6  
                      _timesreq 0049                   ??_Delay1KTCYx 00B6             _InterruptHandlerLow 0018  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                        memcpy@d1 00B6  
                      memcpy@s1 00B8           __end_ofi2_in_high_int 0EC2           main@data_points_count 010B  
  i2c_int_handler@overrun_error 0031                        intlevel1 0000                        intlevel2 0000  
          ?_InterruptHandlerLow 0001           _block_on_To_msgqueues 0992                   ?_handle_start 0001  
   __size_of_ToMainHigh_recvmsg 0042     __size_of_ToMainHigh_sendmsg 0026                      _OSCCONbits 000FD3  
      ToMainHigh_sendmsg@length 002B             __end_ofi2_check_msg 0E8E          ??_InterruptHandlerHigh 0036  
             _ToMainLow_recvmsg 0CF2              main@last_reg_recvd 010D            __end_ofi2_in_low_int 0E1A  
            ?_ToMainLow_recvmsg 00CE             __end_of_Delay1KTCYx 0EA4               ??_i2c_int_handler 002C  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5           ??_InterruptHandlerLow 0001  
           ??_ToMainLow_recvmsg 00D2                  ??_handle_start 0012                    _USART_Status 0047  
