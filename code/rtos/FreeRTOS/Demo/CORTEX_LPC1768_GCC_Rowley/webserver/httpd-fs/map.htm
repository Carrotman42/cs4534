<head>
<script>
function doAjaxGet(url, callback){
	var ajaxRequest;  // The variable that makes Ajax possible!
	
	try{
		// Opera 8.0+, Firefox, Safari
		ajaxRequest = new XMLHttpRequest();
	} catch (e){
		// Internet Explorer Browsers
		try{
			ajaxRequest = new ActiveXObject("Msxml2.XMLHTTP");
		} catch (e) {
			try{
				ajaxRequest = new ActiveXObject("Microsoft.XMLHTTP");
			} catch (e){
				// Something went wrong
				alert("Your browser broke!");
				return false;
			}
		}
	}
	ajaxRequest.responseType = 'arraybuffer';
	// Create a function that will receive data sent from the server
	ajaxRequest.onreadystatechange = function(){
		if(ajaxRequest.readyState == 4){
			callback(new Uint8Array(ajaxRequest.response));
			//document.getElementById(resultDiv).innerHTML = ajaxRequest.responseText;
		}
	}
	ajaxRequest.open("GET", url, true);
	ajaxRequest.send(null); 
}

var Width = 70;
var tab = [];

function tableCreate(){
	var body=document.getElementById('maparea');
	var tbl=document.createElement('table');
	tbl.setAttribute('border','0');
	tbl.setAttribute('cellspacing','0');
	var tbdy=document.createElement('tbody');
	for(var i=0;i<Width;i++){
		 var tr=document.createElement('tr');
		 var rr = [];
		 tab[i] = rr;
		 for(var j=0;j<Width;j++){
			  var td=document.createElement('td');
			  td.style.width = 2;
			  td.style.height = 4;
			  tr.appendChild(td)
			  rr[j] = td;
		 }
		 tbdy.appendChild(tr);
	}
	tbl.appendChild(tbdy);
	body.appendChild(tbl)
			  //i==1&&j==1?td.setAttribute('rowSpan','2'):null;
}

function tableUpdate(data) {
	var n = 4, val = 0;
	var cur = 0;
	for (var i=0; i<Width; i++) {
		for (var j=0;j<Width; j++) {
			if (n == 4) {
				val = data[cur];
				cur++;
				n = 0;
			}
			
			var ch;
			switch ((val >> (n*2)) & 3) {
				case 0: ch = "#FFFFFF"; break;
				case 1: ch = "#CCCCCC"; break;
				case 2: ch = "#000000"; break;
				case 3: ch = "#FF0000"; break;
			}
			tab[j][i].style.background = ch;
			n++
		}
	}
	// Rover pos
	tab[data[cur+1]][data[cur]].style.background = "#0000FF";
	
	// Lap timing
	var to = "(X, Y) = (" + data[cur] + ", " + data[cur+1] + ")<br>"
	var lap1 = data[cur+2];
	if (lap1 > 0) {
		to += "Lap 1: " + lap1 + "<br>";
	}
	var lap2 = data[cur+3];
	if (lap2 > 0) {
		to += "Lap 2: " + lap2 + "<br>";
	}
	document.getElementById('info').innerHTML = to;
	
	// Get to start of debug messages
	cur += 6;
	var len = (data[cur-2] << 8) | data[cur-1];
	var msgs = "";
	for (var i = 0; i < len; i++, cur+=2) {
		var param = data[cur+1];
		switch (data[cur]) {
			case 1:
				msgs += "<br>Initialized in mode " + param;
				break;
			case 2:
				switch (param) {
					case 0: param = "FORWARD"; break;
					case 1: param = "LEFT"; break;
					case 2: param = "RIGHT"; break;
					case 3: param = "STOP"; break;
				}
				msgs += "<br>Command sent: " + param;
				break;
			case 3:
				msgs += "<br>Debug messages overrun " + param + " time";
				if (param != 1) param += "s";
				break;
			case 4:
				if (param == 0xFF) {
					msgs += "<br>Race finished, good job!";
				} else {
					msgs += "<br>Now on lap " + param;
				}
				break;
			case 5:
				msgs += "<br>Error: " + param;
				break;
			case 6:
				msgs += "<br>Changed to state " + param;
				break;
			case 7:
				msgs += "<br>New Event: " + param;
				break;
			case 8:
				msgs += "<br>Invalid event for current state (state=" + param + ")";
				break;
			default:
				msgs += "<br>Unknown debug message. ID=" + data[cur] + ", param=" + param;
				break;
		}
	}
	document.getElementById('dbg').innerHTML = msgs;
}
</script>
<style>
*{font-family:"Lucida Console", Monaco, monospace;}
</style>
</head>
<body>
<div>
	<input type=button onclick="doAjaxGet('/reset.shtml', checkReset)">Reset</input>
	<input type=button onclick="doAjaxGet('/start.shtml', checkStart)">Start</input>
	<div id="controlFo"></div>
</div>
<div id="info"></div>
<div id="maparea"></div>
<input type=checkbox onclick="tog(this.checked, 'dbg');">Show debug info</input>
<div id="dbg" style="display: none"></div>
<script>
tableCreate();
doAjaxGet("/map.bin",tableUpdate);
setInterval(function(){doAjaxGet("/map.bin",tableUpdate)}, 100);

function tog(val, dest) {
	document.getElementById(dest).style.display = val ? "block" : "none";
}

function checkReset(ret) {
	document.getElementById("controlFo").innerHTML = (ret[0] == 'o') ? "Reset!" : "Error resetting: " + ret;
}
function checkStart(ret) {
	document.getElementById("controlFo").innerHTML = (ret[0] == 'o') ? "Started!" : "Error starting: " + ret;
}
</script>
</body>

